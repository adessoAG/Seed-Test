var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AccountManagementComponent.html",[0,0.185,1,0.703]],["body/components/AccountManagementComponent.html",[0,0.235,1,0.809,2,0.706,3,0.088,4,0.076,5,1.217,6,0.458,7,0.458,8,0.458,9,0.063,10,5.361,11,4.737,12,1.402,13,1.236,14,2.703,15,1.749,16,3.187,17,2.297,18,4.151,19,4.336,20,4.774,21,4.151,22,2.703,23,0.751,24,1.216,25,0.336,26,1.348,27,1.649,28,2.297,29,0.847,30,3.434,31,0.847,32,2.703,33,0.088,34,0.363,35,1.373,36,1.535,37,3.056,38,2.325,39,3.434,40,3.513,41,3.147,42,0.587,43,3.971,44,3.971,45,3.971,46,3.896,47,3.375,48,3.971,49,2.03,50,2.703,51,2.703,52,0.656,53,0.621,54,1.118,55,2.703,56,0.809,57,0.024,58,0.721,59,0.356,60,0.493,61,4.383,62,2.918,63,1.954,64,2.918,65,3.434,66,3.434,67,1.649,68,4.708,69,4.001,70,2.689,71,3.742,72,1.392,73,1.167,74,1.492,75,1.649,76,2.703,77,1.649,78,3.971,79,2.115,80,1.649,81,1.649,82,3.971,83,2.259,84,2.297,85,1.67,86,2.297,87,3.896,88,1.649,89,1.406,90,3.896,91,2.03,92,2.298,93,1.649,94,2.703,95,1.538,96,0.746,97,2.703,98,2.03,99,2.703,100,1.08,101,1.649,102,2.703,103,0.809,104,2.703,105,1.649,106,2.03,107,2.703,108,2.703,109,1.649,110,1.649,111,1.649,112,0.918,113,1.239,114,2.703,115,1.649,116,2.579,117,2.703,118,1.649,119,0.419,120,0.257,121,0.517,122,2.297,123,0.706,124,0.869,125,1.239,126,0.088,127,0.205,128,2.493,129,0.584,130,1.649,131,1.117,132,1.649,133,1.649,134,1.402,135,1.649,136,1.402,137,2.03,138,2.703,139,3.434,140,1.402,141,1.649,142,1.649,143,1.649,144,1.649,145,1.649,146,1.649,147,1.649,148,1.649,149,2.918,150,2.703,151,2.325,152,1.649,153,2.703,154,1.649,155,2.703,156,1.649,157,1.649,158,1.649,159,1.83,160,1.649,161,1.239,162,0.584,163,1.649,164,1.649,165,1.649,166,0.706,167,1.239,168,2.03,169,1.239,170,1.239,171,1.239,172,2.03,173,1.239,174,1.239,175,1.239,176,1.239,177,1.239,178,1.117,179,2.297,180,2.703,181,2.703,182,3.535,183,2.703,184,2.703,185,1.649,186,2.703,187,1.83,188,1.649,189,2.03,190,1.649,191,1.773,192,1.236,193,2.032,194,2.966,195,1.402,196,1.593,197,1.236,198,1.699,199,1.236,200,2.092,201,2.373,202,1.239,203,2.48,204,1.307,205,1.885,206,1.649,207,2.703,208,2.307,209,1.402,210,1.875,211,2.325,212,1.954,213,1.538,214,1.649,215,1.572,216,1.946,217,2.148,218,1.649,219,3.207,220,2.733,221,3.416,222,1.469,223,2.307,224,2.543,225,2.298,226,3.145,227,2.127,228,2.309,229,1.649,230,3.291,231,1.649,232,1.239,233,1.649,234,1.649,235,1.424,236,1.649,237,1.649,238,2.259,239,1.649,240,1.239,241,1.649,242,1.83,243,1.649,244,2.03,245,1.019,246,2.014,247,1.683,248,1.649,249,1.83,250,2.03,251,2.03,252,2.703,253,1.324,254,1.649,255,2.703,256,1.649,257,1.117,258,1.424,259,2.122,260,1.402,261,2.297,262,1.758,263,1.019,264,1.683,265,2.325,266,1.239,267,1.538,268,1.324,269,1.402,270,1.402,271,0.808,272,1.402,273,1.551,274,2.03,275,2.122,276,1.402,277,1.538,278,1.67,279,0.938,280,0.938,281,1.649,282,1.649,283,1.649,284,1.649,285,0.938,286,1.649,287,1.402,288,0.938,289,1.239,290,1.402,291,1.402,292,1.117,293,1.117,294,1.117,295,1.117,296,1.649,297,2.297,298,1.117,299,1.239,300,1.236,301,1.402,302,1.649,303,1.649,304,1.239,305,1.402,306,0.754,307,0.754,308,0.754,309,0.406,310,0.751,311,0.706,312,0.222,313,0.458,314,1.649,315,1.649,316,1.649,317,0.458,318,0.358,319,0.458,320,0.336,321,0.431,322,0.625,323,0.751,324,0.358,325,0.751,326,0.706,327,0.751,328,0.336,329,0.458,330,0.358,331,0.336,332,0.458,333,0.336,334,0.458,335,0.336,336,0.458,337,0.458,338,0.336,339,0.458,340,0.336,341,0.458,342,0.336,343,0.458,344,0.358,345,0.458,346,0.336,347,0.358,348,0.381,349,0.336,350,0.751,351,0.358,352,0.431,353,0.458,354,0.381,355,0.336,356,0.458,357,0.336,358,0.315,359,0.336,360,0.458,361,0.336,362,0.458,363,0.336,364,0.458,365,0.336,366,0.458,367,0.336,368,0.431,369,0.458,370,0.005,371,0.009,372,0.005]],["title/components/AppComponent.html",[0,0.185,318,0.749]],["body/components/AppComponent.html",[0,0.192,1,0.357,2,0.742,3,0.094,4,0.164,5,1.524,6,0.487,7,0.487,8,0.487,9,0.067,15,1.076,16,1.923,18,2.132,23,0.789,24,1.267,25,0.357,26,1.36,27,1.668,29,0.89,31,0.89,33,0.152,34,0.381,35,1.418,36,1.524,37,1.616,40,3.063,41,3.15,42,0.617,49,2.132,52,0.335,53,0.66,54,1.15,56,0.73,57,0.024,58,0.65,59,0.382,60,0.445,63,1.616,71,2.787,72,1.112,73,1.108,74,1.345,79,1.005,91,2.132,92,2.072,95,2.037,96,0.381,98,1.316,100,1.253,103,0.357,112,0.405,119,0.394,120,0.273,121,0.549,123,0.75,124,0.923,126,0.094,127,0.218,129,0.62,136,1.489,137,3.397,149,1.489,151,1.923,162,1.457,166,1.532,167,1.316,168,2.132,169,1.316,170,1.316,171,1.316,172,2.132,173,1.316,174,1.316,175,1.316,176,1.316,177,1.316,178,1.186,179,2.413,182,2.132,191,2.124,192,2.332,193,1.665,194,2.961,196,2.359,197,1.299,198,2.558,199,1.637,200,2.383,201,0.801,203,1.496,204,1.524,205,2.169,210,1.532,213,0.997,215,1.819,216,1.754,217,1.754,219,1.755,220,0.923,222,0.75,223,2.763,224,2.881,225,2.709,226,0.997,227,1.215,228,2.687,235,1.496,238,2.755,246,2.273,247,2.373,251,1.316,253,2.217,257,1.923,258,2.798,262,1.436,263,1.755,264,2.881,265,3.453,266,2.132,267,2.755,268,2.017,271,2.217,273,0.62,274,2.132,275,2.993,278,1.755,279,1.616,280,1.616,288,2.037,298,2.424,299,1.316,300,1.637,306,0.801,307,0.801,308,0.801,309,0.431,310,0.789,311,0.742,312,0.235,313,0.487,317,0.487,318,0.894,319,0.487,320,0.357,321,0.458,322,0.657,323,0.789,324,0.381,325,0.789,326,0.742,327,0.789,328,0.357,329,0.487,330,0.381,331,0.357,332,0.487,333,0.357,334,0.487,335,0.357,336,0.487,337,0.487,338,0.357,339,0.487,340,0.357,341,0.487,342,0.357,343,0.487,344,0.381,345,0.487,346,0.357,347,0.381,348,0.405,349,0.357,350,0.789,351,0.381,352,0.458,353,0.487,354,0.405,355,0.357,356,0.487,357,0.357,358,0.335,359,0.357,360,0.487,361,0.357,362,0.487,363,0.357,364,0.487,365,0.357,366,0.487,367,0.357,368,0.458,369,0.487,370,0.006,371,0.009,372,0.006,373,1.489,374,2.413,375,3.58,376,2.84,377,2.213,378,3.58,379,3.043,380,3.58,381,3.58,382,3.58,383,3.58,384,2.213,385,2.84,386,3.499,387,4.843,388,4.117,389,4.117,390,2.84,391,2.84,392,1.753,393,1.496,394,1.753,395,1.753,396,1.753,397,1.753,398,1.753,399,1.753,400,2.84,401,1.753,402,1.753,403,1.753,404,1.753,405,1.753,406,1.753,407,1.457,408,1.192,409,0.994,410,1.613,411,1.753,412,1.753,413,2.84,414,2.84,415,1.753,416,1.753,417,1.753,418,1.489,419,1.753,420,1.489,421,1.753,422,1.753,423,1.753,424,3.58,425,3.58,426,1.753,427,4.116,428,2.413,429,2.84,430,2.84,431,1.753,432,1.753,433,1.489,434,1.753,435,1.753,436,1.489,437,1.316,438,1.489,439,1.489,440,3.58,441,3.58,442,1.753,443,1.753,444,1.753,445,1.753,446,1.753,447,1.215,448,1.753,449,1.753,450,1.753,451,1.753,452,1.186,453,2.84,454,3.397,455,2.84,456,2.132,457,1.755,458,3.499,459,2.84,460,2.84,461,3.58,462,2.689,463,2.84,464,2.84,465,1.923,466,2.413,467,2.84,468,2.84,469,2.84,470,2.84,471,2.413,472,2.84,473,2.84,474,2.132,475,2.132,476,1.753,477,3.637,478,1.754,479,4.524,480,1.753,481,1.753,482,1.753,483,1.489,484,1.753,485,2.603,486,2.84,487,3.043,488,4.524,489,4.524,490,2.132,491,2.84,492,3.499,493,1.496,494,1.753,495,2.544,496,4.117,497,3.58,498,4.524,499,1.186,500,3.58,501,1.753,502,1.753,503,1.489,504,3.58,505,3.58,506,1.753,507,1.753,508,2.84,509,1.753,510,1.489,511,3.58,512,3.092,513,1.753,514,1.753,515,2.132,516,1.753,517,1.753,518,2.342,519,2.132,520,2.413,521,1.753,522,1.083,523,3.58,524,1.753,525,1.753,526,1.316,527,5.1,528,1.489,529,1.755,530,1.489,531,3.989,532,1.753,533,1.489,534,1.489,535,1.753,536,1.753,537,1.316,538,1.923,539,1.753,540,1.753,541,1.753,542,1.753,543,1.753,544,1.489,545,1.753,546,1.753,547,1.753,548,1.616,549,1.316]],["title/modules/AppModule.html",[550,2.589,551,2.334]],["body/modules/AppModule.html",[1,1.209,3,0.156,4,0.134,9,0.112,11,2.19,15,0.762,21,2.19,36,1.648,57,0.024,63,1.659,72,0.717,96,0.633,103,0.594,112,1.372,119,0.691,120,0.454,121,0.914,123,1.248,125,2.19,126,0.156,127,0.362,309,0.717,318,1.437,320,1.209,321,0.762,322,1.243,324,1.289,326,1.097,328,1.209,330,1.289,331,0.594,333,1.209,335,1.209,338,1.209,340,1.299,342,1.209,344,1.289,346,1.209,347,1.359,348,1.372,349,0.594,351,1.289,352,0.762,354,1.372,355,1.209,357,1.209,359,1.209,361,1.209,363,1.209,365,1.209,367,1.209,370,0.01,371,0.014,372,0.01,550,2.19,551,4.935,552,2.19,553,1.974,554,4.178,555,3.64,556,3.692,557,2.478,558,2.478,559,2.478,560,2.478,561,2.478,562,3.566,563,1.536,564,2.916,565,4.197,566,4.197,567,4.916,568,4.197,569,3.566,570,1.659,571,4.197,572,2.916,573,1.802,574,2.916,575,2.916,576,2.478,577,4.197,578,4.197,579,4.197,580,2.478,581,2.19,582,2.916,583,2.478,584,2.916,585,4.916,586,4.197,587,1.429,588,2.594,589,2.916,590,4.197,591,2.916,592,4.197,593,2.916,594,2.19,595,2.916,596,2.478,597,2.478,598,3.566,599,3.566,600,2.916,601,2.916,602,4.197,603,2.916,604,2.916,605,4.197,606,1.536,607,2.19,608,2.916,609,2.916,610,2.19,611,2.916,612,4.197,613,2.387,614,2.19,615,2.19,616,2.916,617,4.197,618,2.916,619,2.916,620,2.916,621,2.916,622,2.916,623,2.916,624,2.916,625,1.802,626,4.197,627,2.916,628,2.916,629,2.478,630,2.19,631,2.19,632,4.197,633,2.19,634,2.916,635,2.841,636,2.841,637,2.916,638,2.916,639,2.19,640,2.916,641,2.916,642,2.916,643,2.916,644,2.916,645,2.478,646,2.916,647,3.151,648,2.916,649,2.478,650,1.429,651,2.916,652,2.916]],["title/classes/AppPage.html",[127,0.428,653,2.589]],["body/classes/AppPage.html",[3,0.281,4,0.24,9,0.201,33,0.281,42,1.338,54,1.102,57,0.024,73,1.338,119,0.501,126,0.281,127,0.65,311,1.369,370,0.017,371,0.02,372,0.017,374,4.451,447,2.637,570,2.98,653,4.627,654,5.238,655,4.451,656,6.759,657,6.759,658,5.238,659,5.238,660,4.451,661,5.238,662,5.238,663,5.238]],["title/guards/AuthGuard.html",[588,2.131,664,2.334]],["body/guards/AuthGuard.html",[3,0.25,4,0.214,9,0.179,13,2.136,23,1.297,33,0.25,36,1.913,41,3.666,42,1.249,52,1.191,53,1.759,54,1.028,56,0.952,57,0.024,58,0.627,59,0.288,60,0.58,73,1.249,79,2.407,119,0.596,120,0.727,121,1.464,123,1.999,126,0.25,127,0.58,128,3.272,370,0.015,371,0.019,372,0.015,407,2.302,410,1.556,433,3.97,447,2.461,452,3.163,588,3.555,650,2.289,664,3.894,665,4.672,666,3.97,667,3.894,668,6.801,669,5.779,670,4.672,671,4.672,672,5.752,673,3.894,674,3.163,675,2.461]],["title/interfaces/Background.html",[204,0.957,676,0.659]],["body/interfaces/Background.html",[3,0.279,4,0.239,9,0.199,33,0.279,34,0.824,57,0.023,58,0.906,59,0.402,60,0.837,100,1.418,119,0.498,126,0.279,204,1.704,370,0.017,371,0.02,372,0.017,407,2.311,676,0.994,677,1.959,678,4.421,679,4.565,680,4.565,681,4.657]],["title/interfaces/Block.html",[271,1.689,676,0.659]],["body/interfaces/Block.html",[3,0.262,4,0.31,9,0.187,33,0.262,34,0.794,57,0.024,58,0.887,59,0.428,60,0.89,95,3.757,100,1.556,119,0.467,126,0.262,271,2.896,370,0.016,371,0.019,372,0.016,676,0.933,677,1.839,680,4.471,682,4.15,683,3.236,684,6.604,685,6.604,686,4.179]],["title/components/ConfirmResetPasswordComponent.html",[0,0.185,320,0.703]],["body/components/ConfirmResetPasswordComponent.html",[0,0.3,1,0.57,2,1.064,3,0.15,4,0.128,5,1.464,6,0.776,7,0.776,8,0.776,9,0.107,13,2.195,15,1.064,25,0.57,26,1.436,27,1.797,29,1.275,31,1.275,33,0.15,34,0.547,35,1.275,36,1.779,37,1.59,38,2.755,41,3.259,42,0.884,52,0.917,53,1.053,54,1.002,56,0.829,57,0.024,58,0.752,59,0.345,60,0.505,62,4.079,63,2.73,72,0.687,73,0.607,74,0.776,79,1.441,89,2.19,96,0.607,100,1.145,103,0.57,112,0.646,119,0.504,120,0.435,121,0.876,123,1.196,126,0.15,127,0.347,128,2.999,129,0.989,191,1.808,192,1.861,193,1.504,194,2.76,196,1.121,197,1.278,198,1.196,199,1.278,200,2.528,201,1.278,203,1.472,204,1.333,205,1.598,208,1.37,210,2.397,212,2.999,215,1.676,216,2.352,217,2.352,220,1.472,221,1.727,223,1.994,224,1.994,225,2.054,228,2.777,235,1.472,242,1.892,245,2.515,246,1.196,247,1.37,253,1.994,262,2.481,277,1.59,285,1.59,309,0.687,310,1.13,311,1.064,312,0.375,313,0.776,317,0.776,318,0.607,319,0.776,320,1.074,321,1.716,322,1.635,323,1.13,324,0.607,325,1.13,326,1.064,327,1.13,328,0.57,329,0.776,330,0.607,331,0.57,332,0.776,333,0.57,334,0.776,335,0.57,336,0.776,337,0.776,338,0.57,339,0.776,340,0.57,341,0.776,342,0.57,343,0.776,344,0.607,345,0.776,346,0.57,347,0.607,348,0.646,349,0.57,350,1.13,351,0.607,352,0.73,353,0.776,354,0.646,355,0.57,356,0.776,357,0.57,358,0.534,359,0.57,360,0.776,361,0.57,362,0.776,363,0.57,364,0.776,365,0.57,366,0.776,367,0.57,368,0.73,369,0.776,370,0.009,371,0.013,372,0.009,377,1.727,409,1.13,452,1.892,478,1.37,485,1.37,493,1.472,587,1.37,606,2.528,633,4.391,675,2.144,687,4.97,688,2.099,689,4.07,690,3.65,691,4.079,692,3.459,693,4.799,694,4.07,695,3.959,696,3.959,697,4.07,698,4.07,699,3.569,700,2.795,701,3.459,702,3.793,703,2.795,704,2.795,705,2.755,706,2.375,707,4.07,708,2.795,709,2.795,710,2.795,711,3.056,712,3.056,713,3.056,714,3.056,715,3.249,716,2.099,717,2.755,718,2.375,719,1.727,720,1.59,721,1.37,722,2.375,723,2.375,724,2.375,725,2.375,726,2.375,727,2.375,728,1.892,729,3.459,730,2.375,731,1.892,732,2.099,733,2.375,734,3.459]],["title/components/DeleteScenarioToast.html",[0,0.185,324,0.749]],["body/components/DeleteScenarioToast.html",[0,0.302,1,0.575,2,1.072,3,0.151,4,0.13,5,1.139,6,1.471,7,0.784,8,0.784,9,0.108,15,1.072,25,0.575,26,1.437,27,1.783,33,0.151,34,0.551,35,1.839,36,1.784,42,0.89,52,0.922,54,1.049,56,0.836,57,0.024,58,0.756,59,0.361,60,0.509,70,2.776,72,0.694,73,0.613,74,0.784,85,1.745,96,0.613,100,0.89,103,0.575,112,0.653,119,0.507,120,0.44,121,0.885,126,0.151,127,0.351,131,3.586,191,1.063,193,1.66,204,1.681,205,1.873,210,1.208,215,1.471,222,2.267,227,2.267,240,2.12,263,2.983,264,1.384,273,1,279,1.606,280,2.332,288,1.606,309,0.694,310,1.139,311,1.072,312,0.379,313,0.784,317,0.784,318,0.613,319,0.784,320,0.575,321,0.738,322,0.948,323,1.139,324,1.15,325,1.562,326,1.621,327,1.139,328,0.575,329,0.784,330,0.613,331,0.575,332,0.784,333,0.575,334,0.784,335,0.575,336,0.784,337,0.784,338,0.575,339,0.784,340,0.575,341,0.784,342,0.575,343,0.784,344,0.613,345,0.784,346,0.575,347,0.613,348,0.653,349,0.575,350,1.139,351,0.613,352,0.738,353,0.784,354,0.653,355,0.575,356,0.784,357,0.575,358,0.539,359,0.575,360,0.784,361,0.575,362,0.784,363,0.575,364,0.784,365,0.575,366,0.784,367,0.575,368,0.738,369,0.784,370,0.009,371,0.013,372,0.009,384,2.983,408,1.365,409,1.139,410,1.365,465,1.912,495,1.745,515,3.625,518,3.529,529,1.745,538,1.912,548,3.597,549,4.407,563,2.16,613,1.606,625,1.745,720,1.606,721,2.596,735,5.146,736,2.12,737,3.079,738,3.484,739,4.102,740,3.268,741,4.828,742,4.828,743,3.625,744,5.869,745,5.869,746,3.625,747,5.529,748,4.1,749,2.4,750,4.407,751,4.1,752,4.1,753,2.824,754,2.4,755,4.1,756,2.824,757,2.824,758,2.4,759,4.102,760,2.12,761,2.4,762,2.12,763,1.606,764,2.4,765,3.079,766,2.4,767,2.4,768,2.4,769,2.4,770,2.4,771,3.484,772,2.4,773,2.4,774,2.4,775,2.4,776,2.4,777,2.4,778,5.146,779,2.4,780,3.484,781,3.484,782,3.484,783,3.484,784,2.4,785,2.4,786,2.4,787,2.4,788,2.12,789,2.4,790,2.12,791,2.4,792,1.912,793,2.4,794,2.12,795,2.4,796,2.824,797,2.4,798,2.824,799,2.4]],["title/directives/EditModeDirective.html",[312,0.463,361,0.703]],["body/directives/EditModeDirective.html",[3,0.265,4,0.227,9,0.19,13,2.262,25,1.008,26,1.214,33,0.265,34,0.8,35,1.866,52,1.221,54,1.065,56,1.008,57,0.024,58,0.664,59,0.367,60,0.614,106,4.472,119,0.473,120,0.77,126,0.265,127,0.614,128,2.814,129,1.751,312,0.891,331,1.214,358,0.945,361,1.214,370,0.016,371,0.02,372,0.016,800,4.799,801,3.714,802,5.061,803,4.472,804,3.388,805,5.061,806,5.767,807,4.204,808,5.767,809,4.947,810,4.947]],["title/components/EditableComponent.html",[0,0.185,328,0.703]],["body/components/EditableComponent.html",[0,0.273,1,0.633,2,1.147,3,0.166,4,0.142,5,0.862,6,0.862,7,0.862,8,0.862,9,0.119,15,1.147,23,1.219,24,1.802,25,0.633,26,1.449,27,1.806,29,1.375,31,1.375,33,0.166,34,0.589,42,0.953,52,0.593,54,1.215,56,0.633,57,0.024,58,0.743,59,0.359,60,0.385,72,0.763,73,1.267,74,1.621,89,1.802,96,0.674,103,0.633,106,3.822,112,0.718,113,3.295,119,0.58,120,0.483,126,0.166,127,0.385,162,1.958,166,1.328,215,1.536,309,0.763,310,1.219,311,1.525,312,0.417,313,0.862,317,0.862,318,0.674,319,0.862,320,0.633,321,0.811,322,1.014,323,1.219,324,0.674,325,1.219,326,1.147,327,1.219,328,1.127,329,0.862,330,0.674,331,0.633,332,0.862,333,0.633,334,0.862,335,0.633,336,0.862,337,0.862,338,0.633,339,0.862,340,0.633,341,0.862,342,0.633,343,0.862,344,0.674,345,0.862,346,0.633,347,0.674,348,0.718,349,0.633,350,1.219,351,0.674,352,0.811,353,0.862,354,0.718,355,0.633,356,0.862,357,0.633,358,0.593,359,0.633,360,0.862,361,1.127,362,0.862,363,0.633,364,0.862,365,0.633,366,0.862,367,1.127,368,0.811,369,0.862,370,0.01,371,0.014,372,0.01,408,1.695,409,1.413,410,1.034,447,1.878,597,2.638,598,3.729,599,2.638,613,1.766,674,2.102,675,3.281,763,2.496,803,3.822,805,5.149,811,2.638,812,5.09,813,3.729,814,5.09,815,4.388,816,5.09,817,5.09,818,5.532,819,5.532,820,5.532,821,5.532,822,2.971,823,5.09,824,3.295,825,5.09,826,2.638,827,4.701,828,4.388,829,3.446,830,3.105,831,3.105,832,3.105,833,3.105,834,3.105,835,3.105,836,5.09,837,3.105,838,4.388,839,3.105,840,4.388,841,3.105,842,6.059,843,4.388,844,3.105,845,3.105,846,3.105,847,3.105,848,3.105,849,3.105,850,2.971,851,3.105,852,2.638,853,4.388,854,3.729,855,3.105,856,2.638,857,3.105,858,2.638,859,2.638,860,3.105,861,3.105,862,3.105,863,5.09,864,3.105,865,3.105,866,3.105,867,4.388,868,3.105,869,3.105,870,3.105,871,3.105,872,3.105,873,3.105,874,3.105,875,3.105,876,3.105,877,3.105,878,3.105,879,3.105,880,3.105,881,3.105]],["title/directives/EditableOnEnterDirective.html",[312,0.463,359,0.703]],["body/directives/EditableOnEnterDirective.html",[3,0.269,4,0.23,9,0.192,25,1.021,26,1.223,33,0.269,52,0.957,54,1.073,56,1.021,57,0.024,58,0.673,59,0.309,60,0.622,119,0.574,120,0.78,126,0.269,127,0.622,159,3.393,312,0.863,328,1.358,331,1.021,358,0.957,359,1.223,370,0.016,371,0.02,372,0.016,596,4.259,674,3.393,800,4.826,802,4.259,804,2.851,813,5.462,882,4.259,883,6.003,884,6.003,885,6.427,886,5.012,887,5.012,888,5.012,889,5.012,890,4.259,891,5.012,892,5.012,893,5.012]],["title/components/ExampleTableComponent.html",[0,0.185,330,0.749]],["body/components/ExampleTableComponent.html",[0,0.288,1,0.515,2,0.987,3,0.135,4,0.116,5,0.702,6,0.702,7,0.702,8,0.702,9,0.097,13,2.296,15,0.987,16,3.957,23,1.049,24,1.602,25,0.515,26,1.422,27,1.773,29,1.184,31,1.184,33,0.288,34,0.507,42,0.82,52,0.483,54,1.183,56,1.023,57,0.024,58,0.825,59,0.37,60,0.623,72,0.621,73,1.305,74,1.623,89,1.902,96,0.549,100,1.225,103,0.515,112,0.584,119,0.433,120,0.393,126,0.135,127,0.314,131,3.638,159,1.71,161,2.837,162,0.894,166,1.081,193,0.792,199,1.728,201,2.458,205,0.841,215,1.394,219,2.796,222,1.081,226,1.437,246,1.936,249,1.71,262,1.013,273,0.894,292,1.71,293,1.71,294,1.71,295,1.71,309,0.621,310,1.049,311,0.987,312,0.339,313,0.702,317,0.702,318,0.549,319,0.702,320,0.515,321,0.66,322,0.873,323,1.049,324,0.549,325,1.049,326,0.987,327,1.049,328,0.515,329,0.702,330,1.09,331,1.349,332,0.702,333,0.515,334,0.702,335,0.515,336,0.702,337,0.702,338,0.515,339,0.702,340,0.515,341,0.702,342,0.515,343,0.702,344,0.549,345,0.702,346,0.515,347,0.549,348,0.584,349,1.338,350,1.049,351,0.549,352,0.66,353,0.702,354,0.584,355,0.515,356,0.702,357,0.515,358,0.483,359,0.515,360,0.702,361,0.515,362,0.702,363,0.515,364,0.702,365,0.515,366,0.702,367,0.515,368,0.66,369,0.702,370,0.008,371,0.012,372,0.008,407,1.777,408,1.507,409,1.566,410,1.672,447,1.081,518,1.437,522,1.561,544,2.147,587,1.238,594,5.005,667,3.063,679,2.557,719,3.797,728,2.557,788,3.397,804,3.908,822,2.557,824,2.837,829,3.399,850,2.557,890,3.845,894,5.664,895,2.147,896,4.524,897,3.778,898,4.524,899,4.524,900,3.063,901,3.778,902,3.778,903,4.524,904,5.021,905,5.021,906,3.778,907,4.524,908,3.21,909,5.021,910,4.524,911,3.778,912,5.374,913,2.527,914,3.778,915,3.778,916,3.778,917,2.527,918,5.374,919,2.527,920,2.527,921,5.021,922,3.77,923,2.527,924,2.971,925,3.778,926,2.527,927,1.897,928,4.524,929,2.527,930,4.524,931,2.527,932,2.527,933,3.778,934,2.527,935,2.527,936,3.21,937,2.527,938,2.527,939,5.021,940,2.527,941,2.527,942,3.778,943,2.527,944,3.778,945,2.527,946,3.778,947,2.527,948,3.778,949,2.527,950,2.837,951,1.897,952,2.837,953,2.527,954,1.897,955,2.527,956,2.527,957,2.527,958,2.527,959,2.527,960,2.527,961,2.527,962,3.778,963,2.527,964,2.527,965,3.778,966,2.147,967,2.527,968,2.527,969,2.527,970,2.527,971,2.147]],["title/components/FeedbackComponent.html",[0,0.185,333,0.703]],["body/components/FeedbackComponent.html",[0,0.344,1,0.834,2,1.382,3,0.219,4,0.188,5,1.136,6,1.136,7,1.136,8,1.136,9,0.157,13,1.871,15,1.382,23,1.469,24,2.075,25,0.834,26,1.479,27,1.874,29,1.658,31,1.658,52,0.781,57,0.024,58,0.787,72,1.006,79,1.872,96,0.888,103,0.834,112,0.946,119,0.391,120,0.637,126,0.219,127,0.508,161,3.972,162,1.448,193,1.282,196,1.641,198,1.75,215,1.721,271,2.005,309,1.006,310,1.469,311,1.382,312,0.549,313,1.136,317,1.136,318,0.888,319,1.136,320,0.834,321,1.069,322,1.223,323,1.469,324,0.888,325,1.469,326,1.382,327,1.469,328,0.834,329,1.136,330,0.888,331,0.834,332,1.136,333,1.263,334,1.136,335,0.834,336,1.136,337,1.136,338,0.834,339,1.136,340,0.834,341,1.136,342,0.834,343,1.136,344,0.888,345,1.136,346,0.834,347,0.888,348,0.946,349,0.834,350,1.469,351,0.888,352,1.069,353,1.136,354,0.946,355,0.834,356,1.136,357,0.834,358,0.781,359,0.834,360,1.136,361,0.834,362,1.136,363,0.834,364,1.136,365,0.834,366,1.136,367,0.834,368,1.069,369,1.136,370,0.013,371,0.017,372,0.013,456,4.654,548,2.327,972,3.476,973,5.862,974,5.29,975,5.29,976,5.29,977,3.476]],["title/directives/FocusableDirective.html",[312,0.463,363,0.703]],["body/directives/FocusableDirective.html",[3,0.265,4,0.227,9,0.189,13,2.258,23,1.652,25,1.006,26,1.213,33,0.265,42,1.292,52,1.22,54,1.064,56,1.006,57,0.024,58,0.663,59,0.304,60,0.613,73,1.072,74,1.371,119,0.473,120,0.769,126,0.265,127,0.613,128,2.809,312,0.89,358,0.943,363,1.213,370,0.016,371,0.02,372,0.016,674,3.343,763,3.633,804,3.385,826,4.197,827,5.633,922,4.468,978,4.197,979,6.629,980,5.427,981,5.633,982,4.939,983,4.939,984,4.939]],["title/components/ParentComponent.html",[0,0.185,338,0.703]],["body/components/ParentComponent.html",[0,0.267,1,0.607,2,1.114,3,0.16,4,0.228,5,1.709,6,0.827,7,0.827,8,0.827,9,0.114,15,1.114,23,1.183,24,1.761,25,0.607,26,1.444,27,1.811,29,1.335,31,1.335,33,0.16,34,0.572,35,1.335,36,1.779,42,0.925,52,0.569,53,1.122,54,1.188,56,1.107,57,0.024,58,0.826,59,0.387,60,0.674,72,0.733,73,1.248,74,1.595,92,1.823,95,1.695,96,1.456,100,1.081,103,0.607,112,0.689,119,0.55,120,0.464,121,0.934,124,1.57,126,0.16,127,0.37,129,1.055,162,1.922,191,1.605,192,1.949,193,0.934,194,3.065,196,1.71,197,1.949,198,2.129,199,1.949,200,1.57,201,1.362,202,2.237,204,0.827,205,0.992,208,1.46,215,1.595,225,1.275,227,1.275,258,1.57,262,1.195,267,1.695,268,1.46,273,1.055,300,1.362,306,1.362,307,1.362,308,1.362,309,0.733,310,1.183,311,1.114,312,0.4,313,0.827,317,0.827,318,0.647,319,0.827,320,0.607,321,0.779,322,0.985,323,1.183,324,0.647,325,1.183,326,1.114,327,1.183,328,0.607,329,0.827,330,0.647,331,0.607,332,0.827,333,0.607,334,0.827,335,0.607,336,0.827,337,0.827,338,1.107,339,0.827,340,0.607,341,0.827,342,0.607,343,0.827,344,0.647,345,0.827,346,0.607,347,0.647,348,0.689,349,1.306,350,1.183,351,0.647,352,1.419,353,0.827,354,0.689,355,0.607,356,0.827,357,0.607,358,0.569,359,0.607,360,0.827,361,0.607,362,0.827,363,0.607,364,0.827,365,0.607,366,0.827,367,0.607,368,0.779,369,0.827,370,0.01,371,0.014,372,0.01,393,1.57,408,0.992,409,1.382,410,1.419,420,2.532,477,2.237,478,2.088,485,2.088,683,2.088,900,3.368,951,2.237,954,2.237,985,2.532,986,4.228,987,4.976,988,4.262,989,4.228,990,3.368,991,4.228,992,4.615,993,3.622,994,3.622,995,3.622,996,4.262,997,2.979,998,2.979,999,3.622,1000,2.979,1001,2.017,1002,3.622,1003,2.979,1004,3.622,1005,2.979,1006,2.979,1007,2.979,1008,2.979,1009,2.979,1010,2.979,1011,2.017,1012,2.979,1013,3.622,1014,2.979,1015,2.979,1016,2.979,1017,2.979,1018,2.532,1019,2.237,1020,2.532,1021,2.237,1022,2.532,1023,2.532,1024,2.532,1025,2.237,1026,2.237,1027,3.2,1028,2.979,1029,4.976,1030,2.979,1031,2.532,1032,2.532,1033,4.615,1034,5.079,1035,2.237]],["title/directives/PasswordConfirmedValidatorDirective.html",[312,0.463,365,0.703]],["body/directives/PasswordConfirmedValidatorDirective.html",[3,0.246,4,0.211,9,0.176,23,1.581,25,0.936,26,1.16,33,0.246,42,1.236,54,0.821,56,0.936,57,0.024,58,0.617,59,0.283,60,0.57,73,0.998,119,0.545,120,0.715,126,0.305,127,0.57,166,2.647,312,0.764,358,0.877,365,1.318,370,0.015,371,0.019,372,0.015,447,2.436,556,4.275,587,2.251,647,4.275,649,4.838,650,3.031,690,3.406,731,3.854,950,4.275,1036,4.275,1037,3.449,1038,6.186,1039,6.186,1040,5.693,1041,5.693,1042,5.693,1043,5.693,1044,6.466,1045,4.594,1046,4.275,1047,5.495,1048,4.838,1049,4.838,1050,3.449,1051,3.904,1052,3.449,1053,4.275,1054,3.904,1055,3.904,1056,3.904,1057,3.904,1058,3.904,1059,4.594]],["title/components/RegistrationComponent.html",[0,0.185,340,0.703]],["body/components/RegistrationComponent.html",[0,0.265,1,0.599,2,1.104,3,0.158,4,0.135,5,1.653,6,0.817,7,0.817,8,0.817,9,0.113,15,1.104,23,1.173,24,1.749,25,0.599,26,1.442,27,1.809,29,1.323,31,1.323,33,0.158,34,0.567,35,1.323,36,1.774,37,2.811,41,3.23,42,0.917,52,0.562,53,1.108,54,1.064,56,0.861,57,0.024,58,0.768,59,0.352,60,0.524,72,0.723,73,0.917,74,0.817,79,1.749,83,2.402,96,0.639,100,0.917,103,0.599,112,0.68,116,2.209,119,0.547,120,0.458,121,0.922,122,2.5,123,1.259,126,0.158,127,0.365,129,1.041,151,1.991,162,1.911,178,1.991,191,1.861,193,0.922,194,3.001,196,1.694,197,1.931,198,1.259,199,1.345,201,1.345,204,1.372,205,1.798,210,2.446,212,3.071,213,1.673,215,1.702,216,2.069,217,2.069,220,1.55,221,1.818,222,1.259,223,2.069,224,2.069,225,1.807,228,2.844,242,1.991,245,1.818,246,1.259,247,1.441,253,2.069,262,2.562,273,1.495,277,1.673,285,1.673,300,1.345,306,1.345,307,1.345,308,1.345,309,0.723,310,1.173,311,1.104,312,0.395,313,0.817,317,0.817,318,0.639,319,0.817,320,0.599,321,1.291,322,0.976,323,1.173,324,0.639,325,1.173,326,1.104,327,1.173,328,0.599,329,0.817,330,0.639,331,0.599,332,0.817,333,0.599,334,0.817,335,0.599,336,0.817,337,0.817,338,0.599,339,0.817,340,1.1,341,0.817,342,0.599,343,0.817,344,0.639,345,0.817,346,0.599,347,0.639,348,0.68,349,0.599,350,1.173,351,0.639,352,0.769,353,0.817,354,0.68,355,0.599,356,0.817,357,0.599,358,0.562,359,0.599,360,0.817,361,0.599,362,0.817,363,0.599,364,0.817,365,0.599,366,0.817,367,0.599,368,0.769,369,0.817,370,0.01,371,0.014,372,0.01,377,3.789,408,0.979,409,0.817,437,3.171,478,2.069,485,1.441,493,1.55,587,1.441,606,2.603,613,1.673,625,3.337,675,2.225,690,3.135,699,3.655,702,2.859,711,3.171,712,3.171,713,3.171,714,2.209,715,3.655,717,1.991,718,2.5,719,1.818,720,1.673,721,1.441,722,2.5,723,2.5,724,2.5,725,2.5,726,2.5,727,2.5,728,1.991,729,3.589,730,2.5,731,1.991,732,2.209,733,2.5,734,3.589,750,4.054,1050,3.171,1060,2.5,1061,5.058,1062,4.94,1063,4.223,1064,4.198,1065,4.223,1066,4.223,1067,2.942,1068,4.223,1069,2.942,1070,2.942,1071,1.991,1072,2.942,1073,2.5,1074,2.5,1075,2.5,1076,2.5,1077,2.5,1078,2.942,1079,2.5,1080,2.942,1081,2.942,1082,2.942,1083,2.942,1084,2.942,1085,2.942,1086,2.942,1087,3.589,1088,3.589,1089,3.589,1090,3.171,1091,2.5,1092,2.5]],["title/interfaces/Report.html",[103,0.703,676,0.659]],["body/interfaces/Report.html",[3,0.259,4,0.221,9,0.185,33,0.259,34,0.788,57,0.024,59,0.437,60,0.851,100,1.489,103,1.196,126,0.259,370,0.016,371,0.019,372,0.016,407,2.426,676,0.922,677,1.818,683,3.224,803,4.94,924,3.331,1093,4.103,1094,6.579,1095,6.579,1096,5.591,1097,5.591,1098,5.591,1099,6.579,1100,5.591,1101,6.579]],["title/components/ReportComponent.html",[0,0.185,342,0.703]],["body/components/ReportComponent.html",[0,0.295,1,0.735,2,1.272,3,0.193,4,0.165,5,1.002,6,1.002,7,1.002,8,1.002,9,0.138,15,1.272,23,1.352,24,1.951,25,0.735,26,1.467,27,1.851,29,1.526,31,1.526,33,0.193,34,0.654,35,1.93,36,1.856,42,1.057,52,0.689,53,1.359,54,1.135,56,0.992,57,0.024,58,0.827,59,0.379,60,0.604,72,0.887,73,1.057,74,1.352,96,0.784,100,1.197,103,1.123,112,0.834,119,0.527,120,0.562,121,1.131,123,1.544,126,0.193,127,0.448,129,1.277,162,2.088,166,1.544,215,1.638,309,0.887,310,1.352,311,1.272,312,0.485,313,1.002,317,1.002,318,0.784,319,1.002,320,0.735,321,0.943,322,1.125,323,1.352,324,0.784,325,1.352,326,1.272,327,1.352,328,0.735,329,1.002,330,0.784,331,0.735,332,1.002,333,0.735,334,1.002,335,0.735,336,1.002,337,1.002,338,0.735,339,1.002,340,0.735,341,1.002,342,1.202,343,1.002,344,0.784,345,1.002,346,0.735,347,0.784,348,0.834,349,0.735,350,1.352,351,0.784,352,0.943,353,1.002,354,0.834,355,0.735,356,1.002,357,0.735,358,0.689,359,0.735,360,1.002,361,0.735,362,1.002,363,0.735,364,1.002,365,0.735,366,1.002,367,0.735,368,0.943,369,1.002,370,0.012,371,0.016,372,0.012,393,1.901,407,1.723,408,1.201,409,1.002,410,1.621,650,1.768,695,4.625,696,4.625,977,3.066,1097,3.066,1102,3.066,1103,5.51,1104,4.868,1105,5.51,1106,4.868,1107,4.868,1108,4.868,1109,3.608,1110,3.608,1111,4.868,1112,3.608,1113,3.608,1114,3.608,1115,3.608,1116,4.868,1117,3.608,1118,4.868,1119,3.608,1120,3.608,1121,3.608]],["title/interfaces/ReportContainer.html",[676,0.659,1122,2.334]],["body/interfaces/ReportContainer.html",[3,0.285,4,0.244,9,0.204,33,0.285,34,0.835,57,0.023,59,0.383,103,1.451,119,0.509,126,0.285,370,0.017,371,0.02,372,0.017,676,1.016,677,2.004,1122,4.21,1123,4.522,1124,6.793,1125,6.793]],["title/components/ReportHistoryComponent.html",[0,0.185,344,0.749]],["body/components/ReportHistoryComponent.html",[0,0.228,1,0.466,2,0.915,3,0.123,4,0.105,5,0.635,6,0.635,7,0.635,8,0.635,9,0.088,15,0.915,23,0.973,24,1.507,25,0.466,26,1.407,27,1.747,29,1.097,31,1.097,33,0.123,34,0.47,35,1.097,36,1.659,42,0.761,52,0.437,53,0.861,54,1.171,56,1.188,57,0.024,58,0.833,59,0.359,60,0.723,70,3.23,72,0.562,73,1.324,74,1.428,89,1.921,96,1.347,100,0.496,103,1.41,112,0.528,119,0.492,120,0.356,121,0.716,126,0.123,127,0.284,129,0.809,162,1.689,191,1.603,192,1.602,193,1.872,196,1.405,203,2.243,204,1.325,205,1.713,208,1.12,210,2.322,211,3.23,212,2.714,213,2.422,215,1.618,216,1.12,217,1.12,222,2.042,223,1.12,224,2.086,225,1.821,226,1.301,227,1.821,228,2.243,235,1.845,238,1.992,246,1.499,247,1.716,253,1.12,258,1.204,259,1.413,262,1.405,264,2.338,265,2.882,267,1.992,268,1.716,273,0.809,275,1.413,276,1.943,277,1.992,278,1.413,279,1.301,280,1.301,304,1.717,305,1.943,309,0.562,310,0.973,311,0.915,312,0.307,313,0.635,317,0.635,318,0.496,319,0.635,320,0.466,321,0.597,322,0.81,323,0.973,324,0.496,325,0.973,326,0.915,327,0.973,328,0.466,329,0.635,330,0.496,331,0.466,332,0.635,333,0.466,334,0.635,335,0.466,336,0.635,337,0.635,338,0.466,339,0.635,340,0.466,341,0.635,342,0.466,343,0.635,344,1.036,345,0.635,346,0.466,347,0.496,348,0.528,349,1.106,350,0.973,351,0.496,352,0.597,353,0.635,354,0.528,355,0.466,356,0.635,357,0.466,358,0.437,359,0.466,360,0.635,361,0.466,362,0.635,363,0.466,364,0.635,365,0.466,366,0.635,367,0.466,368,0.597,369,0.635,370,0.008,371,0.012,372,0.008,393,1.845,408,1.166,409,0.973,410,0.761,447,2.322,499,1.548,526,1.717,639,4.956,650,1.12,679,3.23,721,1.12,728,2.371,740,1.548,822,2.371,824,2.63,829,3.23,850,2.371,908,2.976,952,1.717,990,2.882,1011,1.548,1021,3.197,1027,2.63,1053,3.863,1098,2.976,1122,2.882,1126,5.609,1127,1.943,1128,3.502,1129,4.257,1130,3.502,1131,6.201,1132,3.502,1133,4.771,1134,4.771,1135,3.502,1136,3.502,1137,3.502,1138,3.502,1139,4.771,1140,4.257,1141,3.502,1142,3.502,1143,3.502,1144,2.286,1145,2.286,1146,2.286,1147,2.286,1148,3.502,1149,2.286,1150,1.943,1151,3.502,1152,2.286,1153,3.502,1154,2.286,1155,2.286,1156,3.502,1157,2.286,1158,3.502,1159,2.286,1160,2.286,1161,2.286,1162,2.286,1163,2.286,1164,2.286,1165,2.286,1166,2.286,1167,2.286,1168,4.257,1169,2.286,1170,2.286,1171,2.286,1172,2.286,1173,2.286,1174,2.286,1175,1.943,1176,2.286,1177,2.286,1178,2.286,1179,2.976,1180,2.286,1181,3.502,1182,2.286,1183,2.286,1184,4.257,1185,4.257,1186,2.286,1187,4.257,1188,3.502,1189,2.286,1190,2.286,1191,2.286,1192,3.502,1193,3.502,1194,2.286,1195,2.286,1196,4.257,1197,3.502,1198,2.286,1199,2.286,1200,3.502,1201,2.976,1202,3.502,1203,3.502,1204,3.502,1205,2.63,1206,3.502,1207,3.502,1208,3.502,1209,3.502,1210,3.502,1211,4.771,1212,4.771,1213,2.976,1214,3.502,1215,2.286,1216,2.286,1217,1.943,1218,2.286,1219,1.943,1220,2.286,1221,2.286,1222,2.286,1223,3.502,1224,2.286,1225,2.286,1226,2.286,1227,2.286,1228,2.286,1229,2.286,1230,2.286]],["title/interfaces/RepositoryContainer.html",[92,1.475,676,0.659]],["body/interfaces/RepositoryContainer.html",[3,0.278,4,0.315,9,0.199,33,0.278,34,0.823,57,0.023,59,0.415,60,0.837,92,2.623,100,1.514,126,0.278,370,0.017,371,0.02,372,0.017,407,2.309,409,1.872,676,0.992,677,1.956,683,3.302,1231,4.413,1232,6.74]],["title/components/ResetPasswordComponent.html",[0,0.185,346,0.703]],["body/components/ResetPasswordComponent.html",[0,0.246,1,0.526,2,1.003,3,0.138,4,0.118,5,1.578,6,0.717,7,0.717,8,0.717,9,0.099,15,1.722,25,0.526,26,1.425,27,1.778,29,1.203,31,1.203,33,0.138,34,0.515,35,1.203,36,1.716,40,3.102,41,3.1,42,0.833,47,4.311,52,0.493,53,0.972,54,1.104,56,0.782,57,0.024,58,0.728,59,0.38,60,0.476,72,0.634,73,0.833,74,1.066,79,1.622,83,2.606,89,2.012,92,1.96,96,0.56,100,0.833,103,0.526,112,0.597,119,0.519,120,0.402,121,0.809,123,1.104,124,1.359,126,0.138,127,0.32,129,0.913,191,2.042,192,2.095,193,1.436,194,3.037,196,1.539,197,1.755,198,1.642,199,1.18,200,2.673,201,1.755,203,1.359,204,1.409,205,1.689,208,1.264,210,1.96,215,1.679,216,1.88,217,1.88,219,2.372,220,3.1,221,3.512,222,1.642,223,2.245,224,1.88,225,1.96,227,1.104,230,1.938,235,1.359,244,1.938,245,2.372,246,2.32,247,1.88,249,1.747,250,1.938,253,2.245,257,1.747,258,1.359,259,1.595,262,2.28,264,1.264,273,1.358,277,2.606,285,1.468,292,1.747,293,1.747,294,1.747,295,1.747,298,1.747,300,1.18,306,1.18,307,1.18,308,1.18,309,0.634,310,1.066,311,1.003,312,0.347,313,0.717,317,0.717,318,0.56,319,0.717,320,0.526,321,1.197,322,1.586,323,1.066,324,0.56,325,1.066,326,1.003,327,1.066,328,0.526,329,0.717,330,0.56,331,0.526,332,0.717,333,0.526,334,0.717,335,0.526,336,0.717,337,0.717,338,0.526,339,0.717,340,0.526,341,0.717,342,0.526,343,0.717,344,0.56,345,0.717,346,1.034,347,0.56,348,0.597,349,0.526,350,1.066,351,0.56,352,0.674,353,0.717,354,0.597,355,0.526,356,0.717,357,0.526,358,0.493,359,0.526,360,0.717,361,0.526,362,0.717,363,0.526,364,0.717,365,0.526,366,0.717,367,0.526,368,0.674,369,0.717,370,0.008,371,0.013,372,0.008,377,2.831,407,1.358,408,1.278,409,1.066,410,1.278,452,1.747,478,1.88,485,1.88,487,2.193,493,1.359,503,2.193,512,1.938,518,1.468,519,1.938,587,1.264,631,4.722,675,1.359,688,1.938,690,3.566,691,3.893,692,3.261,699,3.435,702,2.598,711,3.809,712,3.809,713,2.882,714,1.938,715,3.435,716,1.938,717,2.598,719,1.595,720,1.468,721,1.264,1001,3.435,1061,2.193,1071,1.747,1090,2.882,1233,5.344,1234,3.893,1235,3.893,1236,3.838,1237,3.838,1238,2.58,1239,3.838,1240,2.58,1241,2.58,1242,2.58,1243,2.58,1244,2.58,1245,2.58,1246,2.58,1247,2.58,1248,2.58,1249,2.58,1250,3.261,1251,2.58,1252,2.58,1253,3.809,1254,3.261,1255,3.838,1256,3.261,1257,4.311,1258,3.838,1259,3.261,1260,3.838,1261,3.838,1262,4.581,1263,3.261,1264,3.838,1265,3.838,1266,3.838,1267,4.311,1268,2.58,1269,2.58,1270,2.58,1271,2.193,1272,2.193,1273,2.193,1274,2.58,1275,2.58,1276,2.58,1277,2.58]],["title/components/RunTestToast.html",[0,0.185,347,0.749]],["body/components/RunTestToast.html",[0,0.3,1,0.566,2,1.059,3,0.149,4,0.127,5,1.125,6,1.46,7,0.771,8,0.771,9,0.106,15,1.059,25,0.566,26,1.435,27,1.778,33,0.149,34,0.544,35,1.828,36,1.777,42,0.88,52,0.913,54,1.077,56,0.974,57,0.024,58,0.784,59,0.371,60,0.594,72,1.374,73,0.88,74,1.125,85,1.716,96,0.603,100,0.88,103,0.566,112,0.642,119,0.503,120,0.432,121,0.87,126,0.149,127,0.345,131,4.18,191,1.046,193,1.647,204,1.46,205,1.861,210,1.188,215,1.46,222,2.249,227,2.249,240,2.085,263,2.955,264,1.361,273,0.983,279,1.58,280,2.304,288,1.58,309,0.683,310,1.125,311,1.059,312,0.373,313,0.771,317,0.771,318,0.603,319,0.771,320,0.566,321,0.726,322,0.936,323,1.125,324,0.603,325,1.552,326,1.574,327,1.125,328,0.566,329,0.771,330,0.603,331,0.566,332,0.771,333,0.566,334,0.771,335,0.566,336,0.771,337,0.771,338,0.566,339,0.771,340,0.566,341,0.771,342,0.566,343,0.771,344,0.603,345,0.771,346,0.566,347,1.141,348,0.642,349,0.566,350,1.125,351,0.603,352,0.726,353,0.771,354,0.642,355,0.566,356,0.771,357,0.566,358,0.53,359,0.566,360,0.771,361,0.566,362,0.771,363,0.566,364,0.771,365,0.566,366,0.771,367,0.566,368,0.726,369,0.771,370,0.009,371,0.013,372,0.009,384,2.955,408,1.349,409,1.125,410,1.349,465,1.88,495,1.716,515,3.591,518,3.513,529,1.716,538,1.88,548,3.582,549,4.381,563,2.134,613,1.58,625,1.716,720,1.58,721,2.575,736,2.085,737,3.042,738,3.442,739,4.064,740,3.237,743,3.591,746,3.591,747,5.51,749,2.36,750,4.381,754,2.36,758,2.36,759,4.064,760,2.085,761,2.36,762,2.085,763,1.58,764,2.36,765,3.042,766,2.36,767,2.36,768,2.36,769,2.36,770,2.36,771,3.442,772,2.36,773,2.36,774,2.36,775,2.36,776,2.36,777,2.36,778,5.12,779,2.36,780,3.442,781,3.442,782,3.442,783,3.442,784,2.36,785,2.36,786,2.36,787,2.36,788,2.085,789,2.36,790,2.085,791,2.36,792,1.88,793,2.36,794,2.085,795,2.36,797,3.442,799,3.442,1278,5.247,1279,5.835,1280,5.835,1281,4.051,1282,4.051,1283,4.051,1284,4.051,1285,4.051,1286,2.777,1287,2.777,1288,4.196,1289,3.442,1290,2.777,1291,2.777,1292,2.777,1293,2.777,1294,2.777,1295,2.777]],["title/interfaces/Scenario.html",[349,0.703,676,0.659]],["body/interfaces/Scenario.html",[3,0.254,4,0.217,9,0.181,33,0.254,34,0.778,57,0.024,58,0.877,59,0.433,60,0.878,100,1.526,119,0.453,126,0.254,349,1.181,370,0.016,371,0.019,372,0.016,407,2.488,570,3.716,676,0.904,677,1.781,679,4.422,680,4.422,686,4.142,924,3.593,1296,4.02,1297,6.532,1298,6.532,1299,5.551,1300,6.532,1301,6.532]],["title/interfaces/StepDefinition.html",[676,0.659,686,2.131]],["body/interfaces/StepDefinition.html",[3,0.28,4,0.24,9,0.2,33,0.28,34,0.827,57,0.024,59,0.416,119,0.5,126,0.28,331,1.377,370,0.017,371,0.02,372,0.017,676,0.999,677,1.969,686,3.804,1302,4.443,1303,5.74,1304,4.914]],["title/interfaces/StepDefinitionBackground.html",[676,0.659,681,2.334]],["body/interfaces/StepDefinitionBackground.html",[3,0.296,4,0.253,9,0.212,33,0.296,34,0.854,57,0.023,59,0.34,126,0.296,370,0.018,371,0.021,372,0.018,676,1.055,677,2.081,681,4.303,1305,4.695]],["title/interfaces/StepType.html",[676,0.659,1304,2.334]],["body/interfaces/StepType.html",[3,0.248,4,0.212,9,0.177,33,0.248,34,0.767,38,4.387,57,0.024,59,0.442,60,0.875,100,1.578,126,0.248,370,0.015,371,0.019,372,0.015,407,2.478,676,0.883,677,1.741,683,3.175,924,3.268,966,5.507,1304,4.592,1306,3.928,1307,6.48,1308,6.48,1309,6.48,1310,6.48,1311,6.48,1312,6.48]],["title/components/StoriesBarComponent.html",[0,0.185,351,0.749]],["body/components/StoriesBarComponent.html",[0,0.207,1,0.401,2,0.814,3,0.105,4,0.09,5,1.483,6,0.546,7,0.546,8,0.546,9,0.075,15,0.814,19,1.331,23,0.864,24,1.368,25,0.401,26,1.381,27,1.704,29,0.976,31,0.976,33,0.167,34,0.418,35,0.976,36,1.584,42,0.676,52,0.375,53,0.74,54,1.157,56,0.977,57,0.024,58,0.744,59,0.379,60,0.595,69,4.539,72,0.483,73,1.16,74,1.331,79,1.102,87,2.338,89,1.556,92,0.841,96,1.406,100,0.839,103,0.401,112,1.235,113,1.476,116,1.476,119,0.511,120,0.306,121,0.616,124,1.035,125,1.476,126,0.105,127,0.244,129,0.696,162,1.556,166,0.841,191,2.148,192,0.899,193,1.211,194,2.726,196,2.045,197,0.899,198,0.841,199,0.899,204,1.655,205,2.12,208,2.155,210,0.841,211,2.108,212,1.118,213,2.199,215,1.538,216,0.963,217,0.963,220,1.035,222,0.841,223,1.894,224,1.525,225,0.841,226,2.501,227,1.654,228,2.316,238,2.501,246,1.654,247,2.155,253,2.348,257,1.331,258,1.035,259,2.389,262,0.788,264,1.525,268,2.348,271,1.894,273,1.556,275,1.215,278,1.924,279,1.771,280,1.118,285,3.245,288,1.771,289,1.476,297,1.67,300,1.424,304,1.476,306,0.899,307,0.899,308,0.899,309,0.483,310,0.864,311,0.814,312,0.264,313,0.546,317,0.546,318,0.427,319,0.546,320,0.401,321,0.514,322,0.72,323,0.864,324,0.427,325,0.864,326,0.814,327,0.864,328,0.401,329,0.546,330,0.427,331,0.401,332,0.546,333,0.401,334,0.546,335,0.401,336,0.546,337,0.546,338,0.401,339,0.546,340,0.401,341,0.546,342,0.401,343,0.546,344,0.427,345,0.546,346,0.401,347,0.427,348,0.454,349,1.215,350,0.864,351,0.955,352,1.629,353,0.546,354,0.454,355,0.401,356,0.546,357,0.401,358,0.375,359,0.401,360,0.546,361,0.401,362,0.546,363,0.401,364,0.546,365,0.401,366,0.546,367,0.401,368,0.514,369,0.546,370,0.01,371,0.01,372,0.006,384,1.924,393,1.64,407,1.102,408,1.287,409,1.073,410,1.287,427,1.67,447,2.181,454,2.903,457,1.215,466,2.646,478,1.525,485,1.894,490,1.476,493,1.64,495,1.924,499,1.331,512,1.476,520,1.67,522,1.924,529,1.215,530,1.67,533,1.67,534,1.67,537,1.476,538,2.108,548,1.118,555,1.331,581,4.895,606,1.035,607,1.476,650,1.894,675,2.316,721,0.963,740,1.331,746,1.476,765,1.476,822,2.108,829,3.616,850,2.617,900,2.617,951,1.476,954,1.476,990,2.617,1011,1.331,1019,1.476,1024,1.67,1026,2.903,1027,1.476,1092,1.67,1100,1.67,1175,1.67,1205,2.338,1213,2.646,1217,2.646,1219,2.646,1313,5.54,1314,1.67,1315,3.113,1316,3.866,1317,3.113,1318,3.866,1319,3.866,1320,4.397,1321,3.113,1322,4.397,1323,4.397,1324,3.113,1325,3.113,1326,3.866,1327,3.866,1328,3.866,1329,4.397,1330,3.113,1331,1.965,1332,1.965,1333,3.113,1334,1.965,1335,4.792,1336,1.965,1337,1.965,1338,3.113,1339,1.965,1340,1.965,1341,3.113,1342,1.965,1343,3.113,1344,1.965,1345,1.965,1346,1.965,1347,1.965,1348,1.965,1349,3.113,1350,1.965,1351,1.965,1352,1.965,1353,1.965,1354,1.965,1355,1.965,1356,1.965,1357,1.965,1358,1.965,1359,1.965,1360,1.965,1361,1.965,1362,3.113,1363,1.965,1364,1.965,1365,1.965,1366,1.965,1367,1.965,1368,3.113,1369,1.965,1370,1.965,1371,1.965,1372,1.965,1373,1.965,1374,1.965,1375,1.965,1376,1.965,1377,1.965,1378,1.965,1379,1.965,1380,3.113,1381,1.965,1382,1.965,1383,1.965,1384,1.965,1385,1.965,1386,1.965,1387,1.965,1388,3.113,1389,1.965,1390,1.965,1391,3.113,1392,3.113,1393,3.113,1394,3.113,1395,3.113,1396,3.113,1397,3.113,1398,3.113,1399,3.113,1400,3.113,1401,3.113,1402,3.113,1403,2.646,1404,2.646,1405,3.113,1406,3.113,1407,3.113,1408,3.113,1409,3.113,1410,4.792,1411,4.397,1412,1.965,1413,1.965,1414,1.965,1415,3.113,1416,3.113,1417,1.965,1418,1.965,1419,3.113,1420,1.67,1421,3.113,1422,1.965,1423,1.965,1424,1.965,1425,1.965,1426,1.67,1427,1.965,1428,1.965,1429,1.965,1430,1.965,1431,1.965,1432,1.965,1433,1.965,1434,1.965,1435,1.965,1436,1.965,1437,3.113,1438,1.965,1439,1.965,1440,5.704,1441,1.965,1442,3.113,1443,4.397,1444,4.397,1445,3.113,1446,1.965,1447,1.965]],["title/interfaces/Story.html",[96,0.749,676,0.659]],["body/interfaces/Story.html",[3,0.247,4,0.211,9,0.176,33,0.247,34,0.765,57,0.024,59,0.438,60,0.707,96,1.237,100,1.57,119,0.545,126,0.247,204,1.943,349,1.355,370,0.015,371,0.019,372,0.015,384,3.998,407,2.191,676,0.879,677,1.733,683,3.17,760,4.858,924,3.261,1299,5.498,1403,5.498,1426,5.498,1448,3.91,1449,6.47,1450,6.47,1451,6.47,1452,6.47,1453,6.47]],["title/components/TermsComponent.html",[0,0.185,355,0.703]],["body/components/TermsComponent.html",[0,0.177,1,0.317,2,0.673,3,0.083,4,0.071,5,0.432,6,0.432,7,0.432,8,0.432,9,0.06,15,1.001,16,4.418,17,4.307,23,0.715,24,1.167,25,0.317,26,1.336,27,1.629,28,2.189,29,0.807,31,0.807,33,0.083,37,2.18,42,0.559,52,0.63,54,0.46,57,0.022,58,0.706,59,0.236,63,2.603,70,1.743,71,4.318,72,1.578,73,0.338,74,0.432,79,0.912,83,1.465,84,2.189,85,3.348,89,0.912,96,0.338,103,0.317,112,0.36,119,0.149,120,0.242,126,0.083,127,0.193,162,1.356,187,1.743,193,0.487,195,2.189,203,0.819,205,0.518,215,1.064,235,1.357,238,3.747,246,0.665,268,1.878,273,0.912,292,1.053,293,1.053,294,1.053,295,1.053,300,0.711,306,0.711,307,0.711,308,0.711,309,0.382,310,0.715,311,0.673,312,0.209,313,0.432,317,0.432,318,0.338,319,0.432,320,0.317,321,0.406,322,0.595,323,0.715,324,0.338,325,0.715,326,0.673,327,0.715,328,0.317,329,0.432,330,0.338,331,0.317,332,0.432,333,0.317,334,0.432,335,0.317,336,0.432,337,0.432,338,0.317,339,0.432,340,0.317,341,0.432,342,0.317,343,0.432,344,0.338,345,0.432,346,0.317,347,0.338,348,0.36,349,0.317,350,0.715,351,0.338,352,0.406,353,0.432,354,0.36,355,0.781,356,0.432,357,0.317,358,0.297,359,0.317,360,0.432,361,0.317,362,0.432,363,0.317,364,0.432,365,0.317,366,0.432,367,0.317,368,0.406,369,0.432,370,0.005,371,0.008,372,0.005,457,1.592,462,2.877,471,4.826,474,3.806,475,5.283,493,1.357,528,2.189,531,1.934,563,1.357,570,2.883,614,1.934,647,4.264,701,3.256,705,4.318,743,1.934,790,1.934,792,3.098,924,2.411,927,2.877,936,2.189,1035,1.168,1046,1.934,1071,2.594,1087,3.889,1089,2.189,1090,3.806,1096,3.256,1150,2.189,1179,2.189,1201,2.189,1250,4.307,1259,3.256,1263,3.256,1404,2.189,1454,1.322,1455,3.296,1456,2.575,1457,1.555,1458,1.555,1459,6.586,1460,6.285,1461,2.575,1462,2.575,1463,2.575,1464,5.068,1465,2.575,1466,2.575,1467,5.418,1468,2.575,1469,2.575,1470,2.575,1471,5.679,1472,2.575,1473,3.806,1474,3.832,1475,2.575,1476,1.934,1477,2.575,1478,5.679,1479,2.575,1480,3.832,1481,2.575,1482,4.998,1483,2.575,1484,2.575,1485,5.418,1486,5.068,1487,2.575,1488,2.575,1489,2.575,1490,3.832,1491,2.575,1492,2.575,1493,6.526,1494,3.832,1495,2.575,1496,2.575,1497,2.575,1498,2.575,1499,3.832,1500,5.068,1501,4.576,1502,2.575,1503,2.575,1504,2.575,1505,2.575,1506,2.575,1507,2.575,1508,2.575,1509,2.575,1510,2.575,1511,5.068,1512,2.575,1513,3.832,1514,2.575,1515,2.575,1516,2.575,1517,2.575,1518,2.575,1519,3.832,1520,2.575,1521,2.575,1522,2.575,1523,3.832,1524,4.576,1525,2.575,1526,2.575,1527,2.575,1528,2.575,1529,2.575,1530,3.832,1531,2.575,1532,2.575,1533,4.307,1534,2.575,1535,2.575,1536,2.575,1537,3.832,1538,5.068,1539,3.832,1540,2.575,1541,3.832,1542,2.575,1543,3.832,1544,4.576,1545,2.575,1546,3.832,1547,2.575,1548,2.575,1549,2.575,1550,2.575,1551,2.575,1552,3.832,1553,2.575,1554,2.575,1555,2.575,1556,2.575,1557,3.832,1558,2.575,1559,2.575,1560,2.575,1561,2.575,1562,2.575,1563,2.575,1564,4.576,1565,2.575,1566,2.575,1567,2.575,1568,2.189,1569,3.832,1570,6.043,1571,5.068,1572,3.832,1573,3.832,1574,2.575,1575,2.575,1576,2.575,1577,2.575,1578,2.575,1579,2.575,1580,2.575,1581,2.575,1582,2.575,1583,2.575,1584,5.068,1585,4.576,1586,3.832,1587,2.575,1588,5.068,1589,5.068,1590,4.576,1591,3.832,1592,2.575,1593,3.832,1594,2.575,1595,4.576,1596,2.575,1597,2.575,1598,2.189,1599,2.575,1600,2.189,1601,2.575,1602,2.575,1603,2.575,1604,2.575,1605,2.189,1606,2.575,1607,3.832,1608,2.575,1609,3.832,1610,1.555,1611,2.575,1612,2.575,1613,2.575,1614,3.832,1615,2.575,1616,2.575,1617,2.575,1618,5.418,1619,2.575,1620,2.575,1621,2.575,1622,3.832,1623,2.575,1624,3.832,1625,5.679,1626,3.832,1627,2.575,1628,3.832,1629,5.418,1630,2.575,1631,3.296,1632,2.575,1633,2.575,1634,2.575,1635,2.575,1636,2.575,1637,3.889,1638,3.832,1639,3.832,1640,3.832,1641,2.575,1642,4.576,1643,2.575,1644,2.575,1645,2.575,1646,2.575,1647,2.575,1648,2.575,1649,2.575,1650,2.575,1651,2.575,1652,3.832,1653,2.575,1654,2.575,1655,2.575,1656,2.575,1657,2.575,1658,5.068,1659,3.832,1660,5.068,1661,2.575,1662,2.575,1663,3.832,1664,2.575,1665,1.555,1666,2.575,1667,2.575,1668,3.832,1669,3.832,1670,2.575,1671,2.575,1672,2.575,1673,2.575,1674,2.575,1675,2.575,1676,2.575,1677,2.575,1678,2.575,1679,2.575,1680,2.575,1681,2.575,1682,2.575,1683,2.575,1684,2.575,1685,2.575,1686,2.575,1687,2.575,1688,2.575,1689,2.575,1690,2.575,1691,1.555,1692,1.555,1693,3.296,1694,1.555]],["title/components/TestAccountComponent.html",[0,0.185,357,0.703]],["body/components/TestAccountComponent.html",[0,0.29,1,0.6,2,1.104,3,0.158,4,0.194,5,1.742,6,0.818,7,0.818,8,0.818,9,0.113,15,1.412,23,1.174,24,1.75,25,0.6,26,1.443,27,1.809,29,1.324,31,1.324,33,0.158,34,0.568,35,1.693,36,1.841,42,0.918,52,0.562,53,1.109,54,1.213,56,1.101,57,0.024,58,0.824,59,0.393,60,0.671,72,1.215,73,1.332,74,1.703,85,1.82,92,1.808,95,1.675,96,1.362,103,0.6,112,0.681,119,0.547,120,0.458,121,0.923,124,1.551,126,0.158,127,0.366,129,1.042,162,2.171,191,1.592,192,1.933,193,0.923,194,3.059,196,1.695,197,1.933,198,2.115,199,1.933,200,1.551,201,1.347,202,2.211,204,0.818,205,0.98,208,1.443,215,1.588,225,1.26,227,1.26,258,1.551,262,1.181,267,1.675,268,1.443,273,1.042,300,1.347,306,1.347,307,1.347,308,1.347,309,0.724,310,1.174,311,1.104,312,0.395,313,0.818,317,0.818,318,0.639,319,0.818,320,0.6,321,0.77,322,0.977,323,1.174,324,0.639,325,1.174,326,1.104,327,1.174,328,0.6,329,0.818,330,0.639,331,0.6,332,0.818,333,0.6,334,0.818,335,0.6,336,0.818,337,0.818,338,1.383,339,0.818,340,0.6,341,0.818,342,0.6,343,0.818,344,0.639,345,0.818,346,0.6,347,0.639,348,0.681,349,1.166,350,1.174,351,0.639,352,1.292,353,0.818,354,0.681,355,0.6,356,0.818,357,1.101,358,0.562,359,0.6,360,0.818,361,0.6,362,0.818,363,0.6,364,0.818,365,0.6,366,0.818,367,0.6,368,0.77,369,0.818,370,0.01,371,0.014,372,0.01,393,1.551,408,0.98,409,1.174,410,0.98,477,2.211,478,2.071,485,2.071,583,2.502,615,4.295,737,3.173,900,2.861,986,2.502,989,3.591,990,2.861,991,3.591,992,5.211,993,3.591,994,3.591,995,3.591,999,2.502,1001,1.993,1002,2.502,1004,2.502,1011,1.993,1013,2.502,1021,2.211,1022,2.502,1023,2.502,1025,2.211,1026,2.211,1031,2.502,1032,2.502,1033,4.59,1034,5.059,1035,2.211,1253,2.211,1695,4.861,1696,2.502,1697,4.943,1698,4.226,1699,2.945,1700,2.945,1701,2.945,1702,6.563,1703,2.945,1704,2.945,1705,2.945,1706,2.945,1707,2.945,1708,2.945,1709,2.945,1710,2.945,1711,2.945,1712,2.945,1713,2.945,1714,2.945,1715,2.945,1716,2.945,1717,2.502]],["title/interceptors/TimeoutInterceptor.html",[636,2.334,1718,2.93]],["body/interceptors/TimeoutInterceptor.html",[3,0.252,4,0.215,9,0.18,23,1.303,33,0.252,42,1.253,52,0.897,54,1.031,56,1.176,57,0.024,58,0.775,59,0.355,60,0.716,73,1.019,89,1.661,119,0.623,120,0.731,126,0.309,127,0.583,166,2.672,370,0.015,371,0.019,372,0.015,447,2.008,580,3.989,635,3.178,636,3.905,645,4.902,673,3.905,705,3.178,794,3.524,852,3.989,856,3.989,924,3.29,927,3.524,1271,3.989,1719,4.694,1720,4.69,1721,3.524,1722,5.769,1723,4.694,1724,4.694,1725,5.769,1726,5.769,1727,6.515,1728,6.246,1729,6.515,1730,4.694,1731,6.246,1732,4.694,1733,4.694,1734,4.694,1735,5.769,1736,4.694,1737,3.989,1738,4.694,1739,4.694,1740,4.694,1741,4.694,1742,4.694,1743,4.694,1744,4.694]],["title/interfaces/User.html",[79,1.22,676,0.659]],["body/interfaces/User.html",[3,0.268,4,0.229,9,0.191,19,4.505,20,4.997,33,0.268,34,0.805,37,3.786,57,0.024,59,0.436,79,2.121,100,1.56,126,0.268,370,0.016,371,0.02,372,0.016,379,4.245,676,0.954,677,1.881,683,3.261,690,3.585,763,2.842,1745,4.245,1746,6.654,1747,4.996,1748,4.996,1749,4.996]],["title/directives/ViewModeDirective.html",[312,0.463,367,0.703]],["body/directives/ViewModeDirective.html",[3,0.265,4,0.227,9,0.19,13,2.262,25,1.008,26,1.214,33,0.265,34,0.8,35,1.866,52,1.221,54,1.065,56,1.008,57,0.024,58,0.664,59,0.367,60,0.614,119,0.473,120,0.77,126,0.265,127,0.614,128,2.814,129,1.751,312,0.891,331,1.214,358,0.945,367,1.214,368,1.557,370,0.016,371,0.02,372,0.016,801,3.714,804,3.773,806,5.767,807,4.204,808,5.767,922,4.472,1750,5.431,1751,5.956,1752,4.947,1753,4.947]],["title/coverage.html",[1754,4.011]],["body/coverage.html",[0,0.38,1,0.717,9,0.135,10,2.991,11,2.643,12,2.991,36,0.977,57,0.024,59,0.217,79,1.246,89,1.246,92,1.506,96,0.764,103,0.717,112,0.814,127,0.437,204,0.977,271,1.725,312,0.82,318,0.764,320,0.717,322,1.107,324,0.764,328,0.717,330,0.764,333,0.717,335,0.717,338,0.717,340,0.717,342,0.717,344,0.764,346,0.717,347,0.764,348,0.814,349,0.717,351,0.764,354,0.814,355,0.717,357,0.717,359,0.717,361,0.717,363,0.717,365,0.717,367,0.717,370,0.012,371,0.016,372,0.012,373,2.991,522,3.774,548,4.137,573,2.175,576,2.991,581,2.643,588,2.175,594,2.643,610,3.595,615,2.643,631,2.643,633,2.643,635,2.383,636,2.383,639,2.643,653,2.643,655,2.991,664,2.383,666,2.991,673,2.383,676,1.297,678,2.991,681,2.383,682,2.991,686,2.175,687,2.991,688,3.595,735,2.991,736,3.595,800,3.595,801,3.595,804,2.002,811,2.991,882,2.991,894,2.991,895,2.991,972,2.991,978,2.991,985,2.991,1036,3.595,1037,3.595,1052,2.643,1060,2.991,1093,2.991,1102,2.991,1122,2.383,1123,2.991,1126,2.991,1127,2.991,1231,2.991,1233,2.991,1278,2.991,1296,2.991,1302,2.991,1304,2.383,1305,2.991,1306,2.991,1313,2.991,1314,2.991,1448,2.991,1454,2.991,1476,2.643,1695,2.991,1696,2.991,1718,2.991,1720,3.595,1721,3.595,1745,2.991,1750,2.991,1754,2.991,1755,3.52,1756,3.52,1757,3.52,1758,6.107,1759,3.52,1760,3.52,1761,6.56,1762,6.446,1763,3.52,1764,3.52,1765,3.52,1766,3.52,1767,4.788,1768,5.441,1769,5.441,1770,5.441,1771,4.788,1772,4.788,1773,5.441,1774,3.52,1775,3.52,1776,2.991,1777,3.52,1778,3.52,1779,3.52,1780,3.52,1781,3.52,1782,4.788,1783,4.788,1784,3.52,1785,3.52,1786,4.788,1787,2.991,1788,3.52,1789,4.624,1790,3.52,1791,3.52,1792,4.069,1793,3.52,1794,2.991,1795,2.991,1796,4.069,1797,2.991,1798,4.069,1799,2.991,1800,3.52]],["title/dependencies.html",[553,2.81,1801,2.872]],["body/dependencies.html",[9,0.182,57,0.024,63,2.699,120,0.739,123,2.03,370,0.016,371,0.019,372,0.016,409,1.318,553,3.212,555,3.212,569,4.935,570,3.304,587,2.325,606,2.5,607,3.563,613,3.57,614,3.563,625,2.932,629,4.032,630,3.563,705,3.212,762,3.563,854,4.032,858,4.032,859,4.032,952,3.563,1802,6.979,1803,4.745,1804,4.745,1805,4.745,1806,4.745,1807,4.745,1808,4.745,1809,4.745,1810,4.032,1811,4.745,1812,4.745,1813,4.745,1814,4.745,1815,4.745,1816,4.745,1817,4.745,1818,4.745,1819,4.745,1820,4.745,1821,4.745,1822,4.745,1823,4.745,1824,4.745,1825,4.745,1826,4.745,1827,4.745,1828,4.745,1829,4.745,1830,4.745,1831,4.745,1832,4.745,1833,5.807,1834,4.745,1835,4.745,1836,4.745,1837,4.745,1838,4.745,1839,4.745,1840,4.745,1841,4.745,1842,4.745,1843,4.745]],["title/index.html",[33,0.154,1844,2.872,1845,2.872]],["body/index.html",[0,0.34,4,0.223,27,1.268,57,0.019,58,0.652,72,1.193,89,1.717,90,4.42,159,3.284,187,3.985,189,4.42,370,0.016,371,0.019,372,0.016,454,3.643,457,3.916,474,3.643,490,4.948,563,2.556,606,3.658,660,4.123,667,3.284,1288,5.069,1473,4.758,1533,4.123,1600,4.123,1810,5.385,1846,4.852,1847,4.852,1848,6.337,1849,4.852,1850,4.852,1851,4.852,1852,4.852,1853,4.852,1854,4.852,1855,4.852,1856,4.852,1857,4.852,1858,6.337,1859,4.852,1860,6.75,1861,4.852,1862,4.852,1863,4.852,1864,4.852,1865,4.852,1866,4.852,1867,4.123,1868,5.886,1869,5.886,1870,6.589,1871,5.886,1872,4.852,1873,4.852,1874,4.123,1875,4.852,1876,4.852]],["title/modules.html",[552,3.544]],["body/modules.html",[57,0.021,370,0.018,371,0.021,372,0.018,551,3.81,552,4.226,570,3.201,1877,5.627,1878,5.627,1879,5.627]],["title/overview.html",[1880,4.011]],["body/overview.html",[1,1.202,2,1.084,36,1.638,57,0.024,112,1.364,127,0.515,222,2.666,232,3.114,309,1.02,318,1.457,320,1.202,322,0.959,324,1.281,328,1.202,330,1.281,333,1.202,335,1.202,338,1.202,340,1.27,342,1.202,344,1.281,346,1.202,347,1.281,348,1.364,351,1.281,354,1.364,355,1.202,357,1.202,358,0.792,359,1.202,361,1.202,363,1.202,365,1.202,367,1.202,370,0.014,371,0.018,372,0.014,550,4.007,551,4.995,553,2.807,554,3.524,555,2.807,556,3.114,557,3.524,558,3.524,559,3.524,560,3.524,561,3.524,562,4.535,563,2.185,664,2.807,673,2.807,677,1.562,1880,3.524,1881,4.147,1882,4.147]],["title/miscellaneous/variables.html",[1883,2.441,1884,3.527]],["body/miscellaneous/variables.html",[0,0.371,1,0.849,33,0.223,46,3.127,57,0.024,59,0.407,83,2.369,89,1.474,134,3.539,166,2.289,204,1.156,320,0.849,333,0.849,335,0.849,338,0.849,340,0.849,342,0.849,346,0.849,355,0.849,357,0.849,370,0.014,371,0.018,372,0.014,408,2.237,409,1.865,410,1.387,447,1.782,456,3.127,462,3.127,573,3.307,588,2.573,610,3.127,635,3.622,650,2.897,669,3.539,680,2.819,690,3.287,731,3.622,950,3.127,1036,3.127,1037,4.018,1046,3.127,1047,3.539,1048,3.539,1049,4.547,1050,3.127,1051,3.539,1052,4.018,1053,4.018,1054,3.539,1055,3.539,1056,3.539,1057,3.539,1058,3.539,1071,3.622,1476,4.018,1717,3.539,1720,3.127,1721,4.018,1737,3.539,1787,3.539,1789,4.547,1792,3.539,1794,4.547,1795,3.539,1796,5.302,1797,3.539,1798,3.539,1799,4.547,1867,4.547,1883,3.539,1884,3.539,1885,5.351,1886,4.164,1887,4.164,1888,4.164,1889,4.164,1890,4.164,1891,4.164,1892,4.164,1893,4.164,1894,6.93,1895,4.164,1896,4.164,1897,4.164]],["title/components/LoginComponent.html",[0,0.185,335,0.703]],["body/components/LoginComponent.html",[0,0.211,1,0.278,2,0.603,3,0.124,4,0.138,5,0.979,6,0.379,7,0.379,8,0.379,9,0.052,13,1.371,15,1.527,18,1.733,19,3.836,20,2.648,21,3.215,23,0.641,24,1.061,25,0.278,26,1.308,27,1.582,29,0.723,31,0.723,33,0.124,34,0.31,35,1.236,36,1.387,38,2.03,40,3.899,41,2.721,42,0.501,46,4.63,49,1.733,52,0.261,53,0.514,54,1.164,56,0.804,57,0.024,58,0.731,59,0.383,60,0.49,64,1.961,71,3.687,72,1.416,73,1.122,74,1.387,79,1.061,83,2.436,86,1.961,87,3.879,89,1.516,90,3.6,91,1.733,92,2.051,95,2.436,96,0.856,98,1.024,100,0.93,103,0.278,112,0.315,119,0.377,120,0.212,121,0.427,123,0.584,124,0.719,126,0.073,127,0.169,129,0.483,137,1.024,140,1.159,151,2.03,162,1.249,166,1.509,167,1.024,168,1.733,169,1.024,170,1.024,171,1.024,172,1.733,173,2.252,174,1.733,175,1.024,176,1.024,177,1.024,178,2.03,182,2.252,187,3.246,189,1.733,191,1.945,192,1.055,193,2.057,194,2.883,196,1.415,197,0.624,198,2.274,200,1.216,201,1.958,203,0.719,204,1.545,205,1.994,208,2.235,209,3.352,210,1.951,211,1.562,212,2.006,213,2.244,215,1.663,216,1.469,217,2.098,219,2.818,220,2.256,221,3.366,223,2.531,224,2.669,225,2.465,226,2.594,227,1.283,228,2.078,230,3.215,232,1.024,235,1.58,238,2.727,242,0.923,244,1.733,245,0.843,246,1.832,247,1.728,249,0.923,250,1.024,251,2.648,253,2.349,259,0.843,260,1.961,261,3.638,262,2.072,263,0.843,264,1.469,265,2.03,266,1.024,267,1.313,268,1.131,269,1.159,270,1.159,271,0.668,272,1.159,273,1.768,274,1.733,275,2.818,277,0.776,278,0.843,285,0.776,287,1.159,288,1.313,289,1.733,290,1.159,291,2.548,298,0.923,299,1.024,300,1.055,301,1.159,306,1.055,307,1.055,308,0.624,309,0.335,310,0.641,311,0.603,312,0.183,313,0.379,317,0.379,318,0.296,319,0.379,320,0.278,321,0.356,322,0.533,323,0.641,324,0.296,325,0.641,326,0.603,327,0.641,328,0.278,329,0.379,330,0.296,331,0.278,332,0.379,333,0.278,334,0.379,335,0.719,336,0.379,337,0.379,338,0.278,339,0.379,340,0.278,341,0.379,342,0.278,343,0.379,344,0.296,345,0.379,346,0.278,347,0.296,348,0.315,349,0.611,350,0.641,351,0.296,352,0.356,353,0.379,354,0.315,355,0.278,356,0.379,357,0.278,358,0.261,359,0.278,360,0.379,361,0.278,362,0.379,363,0.278,364,0.379,365,0.278,366,0.379,367,0.278,368,0.356,369,0.379,370,0.004,371,0.008,372,0.004,377,2.963,386,2.997,393,1.216,407,0.817,408,1.887,409,1.623,410,1.426,418,2.548,428,1.961,436,1.159,437,3.424,438,1.159,439,2.997,457,2.18,458,1.961,465,2.388,475,1.733,478,0.668,483,1.159,485,2.098,492,1.159,493,1.216,495,1.853,499,2.388,510,1.159,518,1.313,519,1.024,522,1.426,526,1.024,529,1.426,531,1.024,537,1.024,563,1.216,587,0.668,606,0.719,630,1.733,650,1.933,667,1.562,675,2.078,683,1.131,690,1.216,695,2.252,696,2.648,699,2.388,702,1.562,706,1.159,715,2.899,716,1.024,717,2.03,719,0.843,720,0.776,721,0.668,732,1.024,763,0.776,792,2.388,971,2.548,980,2.548,981,2.997,1001,1.562,1018,1.159,1019,1.024,1020,1.159,1025,1.733,1064,3.638,1073,1.159,1074,1.159,1075,1.159,1076,1.159,1077,1.159,1079,1.159,1088,1.961,1091,1.961,1205,1.733,1234,2.548,1235,2.548,1253,1.733,1254,1.961,1256,1.961,1257,1.961,1267,3.638,1272,1.159,1273,1.159,1288,2.648,1289,1.961,1303,1.961,1420,1.159,1473,1.733,1482,1.961,1568,1.961,1598,1.961,1605,1.961,1637,1.961,1776,1.159,1874,1.961,1898,2.307,1899,2.999,1900,2.307,1901,2.999,1902,2.999,1903,2.999,1904,2.999,1905,2.999,1906,2.999,1907,2.999,1908,2.999,1909,2.999,1910,2.999,1911,2.999,1912,2.999,1913,2.999,1914,2.999,1915,2.307,1916,3.527,1917,3.527,1918,2.999,1919,3.527,1920,2.307,1921,1.364,1922,1.364,1923,2.307,1924,1.364,1925,1.364,1926,2.307,1927,1.364,1928,2.307,1929,1.364,1930,1.364,1931,1.364,1932,1.364,1933,1.364,1934,1.364,1935,2.307,1936,1.364,1937,1.364,1938,1.364,1939,1.364,1940,2.307,1941,2.307,1942,1.364,1943,2.307,1944,2.307,1945,1.364,1946,2.307,1947,2.307,1948,1.364,1949,2.307,1950,2.307,1951,1.364,1952,2.307,1953,2.307,1954,1.364,1955,2.307,1956,2.307,1957,1.364,1958,2.307,1959,2.307,1960,1.364,1961,2.307,1962,2.307,1963,1.364,1964,2.307,1965,2.307,1966,1.364,1967,2.307,1968,2.307,1969,1.364,1970,2.307,1971,2.307,1972,1.364,1973,2.307,1974,2.307,1975,1.364,1976,1.364,1977,1.364,1978,2.307,1979,2.307,1980,1.364,1981,1.364,1982,1.364,1983,1.364,1984,1.364,1985,1.364,1986,1.364,1987,1.364,1988,1.364,1989,1.364,1990,1.364,1991,1.364,1992,1.364,1993,1.364,1994,1.364,1995,1.364,1996,1.364,1997,1.364,1998,1.364,1999,2.307,2000,1.364,2001,1.364,2002,4.56,2003,1.364,2004,1.364,2005,1.364,2006,1.364,2007,1.364,2008,1.364,2009,3.527,2010,1.364,2011,1.364,2012,1.364,2013,1.364,2014,1.364,2015,1.364,2016,1.364,2017,1.364,2018,1.364,2019,1.364,2020,2.307,2021,1.364,2022,1.364,2023,1.364,2024,2.307,2025,2.307,2026,2.307,2027,2.307,2028,2.307,2029,2.307,2030,3.527,2031,2.307,2032,3.527,2033,2.307,2034,2.307,2035,2.307,2036,2.307,2037,2.307,2038,2.307,2039,2.307,2040,2.307,2041,2.307,2042,2.307,2043,2.307,2044,2.307,2045,1.364,2046,2.307,2047,2.307,2048,2.307,2049,3.527,2050,2.307,2051,2.307,2052,2.307,2053,1.364,2054,1.364,2055,1.364,2056,1.364,2057,1.364,2058,1.364,2059,1.364,2060,1.364,2061,1.364,2062,1.364,2063,1.364,2064,1.364,2065,2.307,2066,1.364,2067,1.364,2068,1.364,2069,1.364,2070,1.364,2071,1.364,2072,1.364]],["title/routes.html",[573,2.917]],["body/routes.html",[57,0.021,370,0.019,371,0.021,372,0.019,573,3.51]]],"invertedIndex":[["",{"_index":57,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interfaces/Background.html":{},"interfaces/Block.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"interfaces/ReportContainer.html":{},"components/ReportHistoryComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"interfaces/StepType.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"interfaces/User.html":{},"directives/ViewModeDirective.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"components/LoginComponent.html":{},"routes.html":{}}}],["0",{"_index":548,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteScenarioToast.html":{},"components/FeedbackComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"coverage.html":{}}}],["0.11.3",{"_index":1843,"title":{},"body":{"dependencies.html":{}}}],["0.1s",{"_index":1435,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["0.25px",{"_index":2063,"title":{},"body":{"components/LoginComponent.html":{}}}],["0.2s",{"_index":289,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/StoriesBarComponent.html":{},"components/LoginComponent.html":{}}}],["0.3s",{"_index":511,"title":{},"body":{"components/AppComponent.html":{}}}],["0.5em",{"_index":1423,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["0.63",{"_index":256,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["0.7.1",{"_index":1809,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1762,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1783,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1781,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1784,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1773,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1786,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1791,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1771,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":1765,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1758,"title":{},"body":{"coverage.html":{}}}],["0/33",{"_index":1777,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1780,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1782,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1785,"title":{},"body":{"coverage.html":{}}}],["0/61",{"_index":1779,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1768,"title":{},"body":{"coverage.html":{}}}],["0/72",{"_index":1760,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1767,"title":{},"body":{"coverage.html":{}}}],["0/80",{"_index":1790,"title":{},"body":{"coverage.html":{}}}],["0/89",{"_index":1793,"title":{},"body":{"coverage.html":{}}}],["0099cc",{"_index":2057,"title":{},"body":{"components/LoginComponent.html":{}}}],["0px",{"_index":192,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/ParentComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["1",{"_index":222,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/DeleteScenarioToast.html":{},"components/ExampleTableComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"overview.html":{}}}],["1.3.2",{"_index":455,"title":{},"body":{"components/AppComponent.html":{}}}],["1.8.2",{"_index":1811,"title":{},"body":{"dependencies.html":{}}}],["1.don't",{"_index":1251,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["1.don\\'t",{"_index":1275,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["1/1",{"_index":1772,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":2046,"title":{},"body":{"components/LoginComponent.html":{}}}],["10.1.1",{"_index":1830,"title":{},"body":{"dependencies.html":{}}}],["10.2.3",{"_index":1802,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":522,"title":{},"body":{"components/AppComponent.html":{},"components/ExampleTableComponent.html":{},"components/StoriesBarComponent.html":{},"coverage.html":{},"components/LoginComponent.html":{}}}],["100px",{"_index":209,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{}}}],["100vh",{"_index":484,"title":{},"body":{"components/AppComponent.html":{}}}],["109",{"_index":1419,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["10pt",{"_index":1273,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["10px",{"_index":227,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/DeleteScenarioToast.html":{},"components/ParentComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["11",{"_index":1882,"title":{},"body":{"overview.html":{}}}],["120000",{"_index":652,"title":{},"body":{"modules/AppModule.html":{}}}],["12px",{"_index":492,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["13",{"_index":1679,"title":{},"body":{"components/TermsComponent.html":{}}}],["13.1.0",{"_index":1832,"title":{},"body":{"dependencies.html":{}}}],["13px",{"_index":510,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["14px",{"_index":541,"title":{},"body":{"components/AppComponent.html":{}}}],["15/15",{"_index":1774,"title":{},"body":{"coverage.html":{}}}],["150px",{"_index":2072,"title":{},"body":{"components/LoginComponent.html":{}}}],["153",{"_index":255,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["15px",{"_index":278,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{},"components/LoginComponent.html":{}}}],["16/19",{"_index":1764,"title":{},"body":{"coverage.html":{}}}],["1600px",{"_index":2070,"title":{},"body":{"components/LoginComponent.html":{}}}],["16px",{"_index":523,"title":{},"body":{"components/AppComponent.html":{}}}],["17px",{"_index":274,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["180px",{"_index":2071,"title":{},"body":{"components/LoginComponent.html":{}}}],["18px",{"_index":301,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{}}}],["1fr",{"_index":200,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/ParentComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["1px",{"_index":211,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{},"components/LoginComponent.html":{}}}],["2",{"_index":220,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/LoginComponent.html":{}}}],["2.0.1",{"_index":1822,"title":{},"body":{"dependencies.html":{}}}],["2.0.8",{"_index":1824,"title":{},"body":{"dependencies.html":{}}}],["2.6.1",{"_index":1835,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":1816,"title":{},"body":{"dependencies.html":{}}}],["2.88.2",{"_index":1838,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":1770,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1881,"title":{},"body":{"overview.html":{}}}],["20px",{"_index":203,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TermsComponent.html":{},"components/LoginComponent.html":{}}}],["212529",{"_index":1691,"title":{},"body":{"components/TermsComponent.html":{}}}],["224",{"_index":2049,"title":{},"body":{"components/LoginComponent.html":{}}}],["22pt",{"_index":248,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["22px",{"_index":1225,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["247",{"_index":2065,"title":{},"body":{"components/LoginComponent.html":{}}}],["24px",{"_index":1412,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["255",{"_index":207,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["25px",{"_index":242,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{},"components/LoginComponent.html":{}}}],["2em",{"_index":1421,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["2px",{"_index":740,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/ReportHistoryComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{}}}],["3",{"_index":221,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["3.0.1",{"_index":1827,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":1839,"title":{},"body":{"dependencies.html":{}}}],["3.5.1",{"_index":1829,"title":{},"body":{"dependencies.html":{}}}],["3.5.9",{"_index":1841,"title":{},"body":{"dependencies.html":{}}}],["3.7.0",{"_index":1814,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1775,"title":{},"body":{"coverage.html":{}}}],["3000",{"_index":646,"title":{},"body":{"modules/AppModule.html":{}}}],["300px",{"_index":767,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["30deg",{"_index":784,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["30em",{"_index":1422,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["30px",{"_index":259,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/LoginComponent.html":{}}}],["340px",{"_index":2055,"title":{},"body":{"components/LoginComponent.html":{}}}],["350px",{"_index":1269,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["388196",{"_index":739,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["3fr",{"_index":486,"title":{},"body":{"components/AppComponent.html":{}}}],["3px",{"_index":721,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/LoginComponent.html":{}}}],["4",{"_index":230,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ResetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["4.14.1",{"_index":1837,"title":{},"body":{"dependencies.html":{}}}],["4.16.4",{"_index":1820,"title":{},"body":{"dependencies.html":{}}}],["400px",{"_index":2047,"title":{},"body":{"components/LoginComponent.html":{}}}],["40px",{"_index":251,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["4px",{"_index":494,"title":{},"body":{"components/AppComponent.html":{}}}],["5",{"_index":232,"title":{},"body":{"components/AccountManagementComponent.html":{},"overview.html":{},"components/LoginComponent.html":{}}}],["5.4.0",{"_index":1831,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":2023,"title":{},"body":{"components/LoginComponent.html":{}}}],["500px",{"_index":1091,"title":{},"body":{"components/RegistrationComponent.html":{},"components/LoginComponent.html":{}}}],["50px",{"_index":277,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["51px",{"_index":516,"title":{},"body":{"components/AppComponent.html":{}}}],["53d35a",{"_index":724,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{}}}],["56595e",{"_index":1441,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["5deg",{"_index":786,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["5px",{"_index":262,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/ExampleTableComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["6",{"_index":233,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["6.2.4",{"_index":1849,"title":{},"body":{"index.html":{}}}],["6/6",{"_index":1766,"title":{},"body":{"coverage.html":{}}}],["600px",{"_index":308,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["60px",{"_index":297,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/StoriesBarComponent.html":{}}}],["66",{"_index":1769,"title":{},"body":{"coverage.html":{}}}],["6px",{"_index":766,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["7.2.16",{"_index":1806,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":540,"title":{},"body":{"components/AppComponent.html":{}}}],["70px",{"_index":2052,"title":{},"body":{"components/LoginComponent.html":{}}}],["7px",{"_index":1414,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["8",{"_index":711,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["8.0.0",{"_index":1808,"title":{},"body":{"dependencies.html":{}}}],["8.2.0",{"_index":1818,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":1429,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["80px",{"_index":717,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["830px",{"_index":2050,"title":{},"body":{"components/LoginComponent.html":{}}}],["84",{"_index":1763,"title":{},"body":{"coverage.html":{}}}],["850px",{"_index":2053,"title":{},"body":{"components/LoginComponent.html":{}}}],["88px",{"_index":2056,"title":{},"body":{"components/LoginComponent.html":{}}}],["8px",{"_index":535,"title":{},"body":{"components/AppComponent.html":{}}}],["90",{"_index":296,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["92",{"_index":734,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{}}}],["94",{"_index":1035,"title":{},"body":{"components/ParentComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["999",{"_index":213,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{},"components/LoginComponent.html":{}}}],["_id",{"_index":683,"title":{},"body":{"interfaces/Block.html":{},"components/ParentComponent.html":{},"interfaces/Report.html":{},"interfaces/RepositoryContainer.html":{},"interfaces/StepType.html":{},"interfaces/Story.html":{},"interfaces/User.html":{},"components/LoginComponent.html":{}}}],["a.notpassed",{"_index":1218,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["a.passed",{"_index":1216,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["a.repolink",{"_index":287,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{}}}],["a.repolink:hover",{"_index":290,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{}}}],["a.reporttime",{"_index":1176,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["a.storylistlink",{"_index":1428,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["a.storylistlink:hover",{"_index":1433,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["a:hover",{"_index":515,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["absolute",{"_index":1420,"title":{},"body":{"components/StoriesBarComponent.html":{},"components/LoginComponent.html":{}}}],["abstractcontrol",{"_index":1044,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{}}}],["access",{"_index":1607,"title":{},"body":{"components/TermsComponent.html":{}}}],["accessed",{"_index":1577,"title":{},"body":{"components/TermsComponent.html":{}}}],["accessible",{"_index":1461,"title":{},"body":{"components/TermsComponent.html":{}}}],["accessors",{"_index":824,"title":{},"body":{"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/ReportHistoryComponent.html":{}}}],["accesstoken",{"_index":1923,"title":{},"body":{"components/LoginComponent.html":{}}}],["accordion",{"_index":1440,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["account",{"_index":15,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["account.component",{"_index":616,"title":{},"body":{"modules/AppModule.html":{}}}],["account.component.ts",{"_index":1696,"title":{},"body":{"components/TestAccountComponent.html":{},"coverage.html":{}}}],["account.component.ts:14",{"_index":1699,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["account.component.ts:16",{"_index":1708,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["account.component.ts:21",{"_index":1701,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["account.component.ts:24",{"_index":1700,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["account/test",{"_index":615,"title":{},"body":{"modules/AppModule.html":{},"components/TestAccountComponent.html":{},"coverage.html":{}}}],["accountmanagement",{"_index":134,"title":{},"body":{"components/AccountManagementComponent.html":{},"miscellaneous/variables.html":{}}}],["accountmanagementcomponent",{"_index":1,"title":{"components/AccountManagementComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{},"components/LoginComponent.html":{}}}],["accountname",{"_index":1749,"title":{},"body":{"interfaces/User.html":{}}}],["actionbutton",{"_index":1223,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["activate",{"_index":802,"title":{},"body":{"directives/EditModeDirective.html":{},"directives/EditableOnEnterDirective.html":{}}}],["activatedroute",{"_index":696,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/ReportComponent.html":{},"components/LoginComponent.html":{}}}],["active",{"_index":240,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["activities",{"_index":1481,"title":{},"body":{"components/TermsComponent.html":{}}}],["activity",{"_index":1676,"title":{},"body":{"components/TermsComponent.html":{}}}],["actual_component",{"_index":369,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["ad",{"_index":1590,"title":{},"body":{"components/TermsComponent.html":{}}}],["add",{"_index":2038,"title":{},"body":{"components/LoginComponent.html":{}}}],["added",{"_index":916,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["adding",{"_index":1667,"title":{},"body":{"components/TermsComponent.html":{}}}],["additional",{"_index":1474,"title":{},"body":{"components/TermsComponent.html":{}}}],["address",{"_index":1090,"title":{},"body":{"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TermsComponent.html":{}}}],["addresses",{"_index":1547,"title":{},"body":{"components/TermsComponent.html":{}}}],["adesso",{"_index":507,"title":{},"body":{"components/AppComponent.html":{}}}],["adessocucumber/cucumber",{"_index":2007,"title":{},"body":{"components/LoginComponent.html":{}}}],["adessologo",{"_index":497,"title":{},"body":{"components/AppComponent.html":{}}}],["administering",{"_index":1561,"title":{},"body":{"components/TermsComponent.html":{}}}],["advertisements",{"_index":1596,"title":{},"body":{"components/TermsComponent.html":{}}}],["advertisers",{"_index":1609,"title":{},"body":{"components/TermsComponent.html":{}}}],["advertising",{"_index":1584,"title":{},"body":{"components/TermsComponent.html":{}}}],["advising",{"_index":1613,"title":{},"body":{"components/TermsComponent.html":{}}}],["afterviewinit",{"_index":980,"title":{},"body":{"directives/FocusableDirective.html":{},"components/LoginComponent.html":{}}}],["age",{"_index":1678,"title":{},"body":{"components/TermsComponent.html":{}}}],["agent",{"_index":1992,"title":{},"body":{"components/LoginComponent.html":{}}}],["agree",{"_index":1492,"title":{},"body":{"components/TermsComponent.html":{}}}],["align",{"_index":224,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/LoginComponent.html":{}}}],["already",{"_index":1255,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["analytics",{"_index":1542,"title":{},"body":{"components/TermsComponent.html":{}}}],["analyze",{"_index":1516,"title":{},"body":{"components/TermsComponent.html":{}}}],["analyzing",{"_index":1559,"title":{},"body":{"components/TermsComponent.html":{}}}],["and/or",{"_index":1485,"title":{},"body":{"components/TermsComponent.html":{}}}],["angular",{"_index":1810,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":762,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{},"dependencies.html":{}}}],["angular/cdk/drag",{"_index":603,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/common",{"_index":1803,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":580,"title":{},"body":{"modules/AppModule.html":{},"interceptors/TimeoutInterceptor.html":{}}}],["angular/compiler",{"_index":1804,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":120,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"directives/ViewModeDirective.html":{},"dependencies.html":{},"components/LoginComponent.html":{}}}],["angular/forms",{"_index":587,"title":{},"body":{"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/ExampleTableComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"dependencies.html":{},"components/LoginComponent.html":{}}}],["angular/http",{"_index":1805,"title":{},"body":{"dependencies.html":{}}}],["angular/material/list",{"_index":593,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/progress",{"_index":618,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/table",{"_index":591,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":569,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":123,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ResetPasswordComponent.html":{},"dependencies.html":{},"components/LoginComponent.html":{}}}],["animate",{"_index":758,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["animate('400ms",{"_index":780,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["animations",{"_index":775,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["another",{"_index":1663,"title":{},"body":{"components/TermsComponent.html":{}}}],["aot",{"_index":793,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["api",{"_index":62,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ConfirmResetPasswordComponent.html":{}}}],["apiservice",{"_index":36,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{},"components/LoginComponent.html":{}}}],["app",{"_index":27,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"index.html":{},"components/LoginComponent.html":{}}}],["app.component",{"_index":575,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":375,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":376,"title":{},"body":{"components/AppComponent.html":{}}}],["app/routes/routes",{"_index":574,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent",{"_index":318,"title":{"components/AppComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{},"components/LoginComponent.html":{}}}],["appear",{"_index":1598,"title":{},"body":{"components/TermsComponent.html":{},"components/LoginComponent.html":{}}}],["applicable",{"_index":1487,"title":{},"body":{"components/TermsComponent.html":{}}}],["application",{"_index":467,"title":{},"body":{"components/AppComponent.html":{}}}],["applies",{"_index":1479,"title":{},"body":{"components/TermsComponent.html":{}}}],["apply",{"_index":1611,"title":{},"body":{"components/TermsComponent.html":{}}}],["appmodule",{"_index":551,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":653,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["apppasswordconfirmed",{"_index":1041,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{}}}],["apppasswordconfirmed]'},{'name",{"_index":366,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["area",{"_index":485,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["areas",{"_index":478,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["arialabelledby",{"_index":1364,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["array.from(seen",{"_index":963,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["artifacts",{"_index":1861,"title":{},"body":{"index.html":{}}}],["ask",{"_index":1499,"title":{},"body":{"components/TermsComponent.html":{}}}],["asked",{"_index":1494,"title":{},"body":{"components/TermsComponent.html":{}}}],["assets//slide0.png",{"_index":1941,"title":{},"body":{"components/LoginComponent.html":{}}}],["assets//slide01.png",{"_index":1944,"title":{},"body":{"components/LoginComponent.html":{}}}],["assets//slide02.png",{"_index":1947,"title":{},"body":{"components/LoginComponent.html":{}}}],["assets//slide03.png",{"_index":1950,"title":{},"body":{"components/LoginComponent.html":{}}}],["assets//slide04.png",{"_index":1953,"title":{},"body":{"components/LoginComponent.html":{}}}],["assets//slide05.png",{"_index":1956,"title":{},"body":{"components/LoginComponent.html":{}}}],["assets//slide06.png",{"_index":1959,"title":{},"body":{"components/LoginComponent.html":{}}}],["assets//slide07.png",{"_index":1962,"title":{},"body":{"components/LoginComponent.html":{}}}],["assets//slide08.png",{"_index":1965,"title":{},"body":{"components/LoginComponent.html":{}}}],["assets//slide09.png",{"_index":1968,"title":{},"body":{"components/LoginComponent.html":{}}}],["assets//slide10.png",{"_index":1971,"title":{},"body":{"components/LoginComponent.html":{}}}],["assets//slide11.png",{"_index":1974,"title":{},"body":{"components/LoginComponent.html":{}}}],["assignee",{"_index":1449,"title":{},"body":{"interfaces/Story.html":{}}}],["assignee_avatar_url",{"_index":1450,"title":{},"body":{"interfaces/Story.html":{}}}],["async",{"_index":1064,"title":{},"body":{"components/RegistrationComponent.html":{},"components/LoginComponent.html":{}}}],["attachments",{"_index":1504,"title":{},"body":{"components/TermsComponent.html":{}}}],["authguard",{"_index":588,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auto",{"_index":198,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["automated",{"_index":1264,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["automatically",{"_index":1600,"title":{},"body":{"components/TermsComponent.html":{},"index.html":{}}}],["avatar",{"_index":1427,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["await",{"_index":1077,"title":{},"body":{"components/RegistrationComponent.html":{},"components/LoginComponent.html":{}}}],["aware",{"_index":1645,"title":{},"body":{"components/TermsComponent.html":{}}}],["b",{"_index":1175,"title":{},"body":{"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{}}}],["b.issue_number",{"_index":1383,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["b.reporttime",{"_index":1177,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["backbutton",{"_index":276,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ReportHistoryComponent.html":{}}}],["backbutton:focus",{"_index":281,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["backdrop",{"_index":1377,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["backface",{"_index":772,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["background",{"_index":204,"title":{"interfaces/Background.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"interfaces/Background.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"components/LoginComponent.html":{}}}],["backimage",{"_index":284,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["bar",{"_index":1315,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar'},{'name",{"_index":353,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["bar.component",{"_index":582,"title":{},"body":{"modules/AppModule.html":{}}}],["bar.component.css",{"_index":1316,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar.component.html",{"_index":1317,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar.component.ts",{"_index":1314,"title":{},"body":{"components/StoriesBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:100",{"_index":1340,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar.component.ts:16",{"_index":1346,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar.component.ts:17",{"_index":1352,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar.component.ts:18",{"_index":1351,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar.component.ts:19",{"_index":1350,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar.component.ts:20",{"_index":1348,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar.component.ts:21",{"_index":1347,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar.component.ts:24",{"_index":1332,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar.component.ts:26",{"_index":1331,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar.component.ts:28",{"_index":1330,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar.component.ts:30",{"_index":1345,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar.component.ts:47",{"_index":1339,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar.component.ts:55",{"_index":1334,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar.component.ts:66",{"_index":1337,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar.component.ts:76",{"_index":1336,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar.component.ts:86",{"_index":1342,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar.component.ts:91",{"_index":1344,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar/stories",{"_index":581,"title":{},"body":{"modules/AppModule.html":{},"components/StoriesBarComponent.html":{},"coverage.html":{}}}],["based",{"_index":1582,"title":{},"body":{"components/TermsComponent.html":{}}}],["basic",{"_index":1365,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["beacons",{"_index":1572,"title":{},"body":{"components/TermsComponent.html":{}}}],["believe",{"_index":1652,"title":{},"body":{"components/TermsComponent.html":{}}}],["below",{"_index":480,"title":{},"body":{"components/AppComponent.html":{}}}],["best",{"_index":1686,"title":{},"body":{"components/TermsComponent.html":{}}}],["between",{"_index":305,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ReportHistoryComponent.html":{}}}],["black",{"_index":263,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{},"components/LoginComponent.html":{}}}],["block",{"_index":271,"title":{"interfaces/Block.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"interfaces/Block.html":{},"components/FeedbackComponent.html":{},"components/StoriesBarComponent.html":{},"coverage.html":{},"components/LoginComponent.html":{}}}],["blue",{"_index":217,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/LoginComponent.html":{}}}],["body",{"_index":1426,"title":{},"body":{"components/StoriesBarComponent.html":{},"interfaces/Story.html":{}}}],["bold",{"_index":250,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ResetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["boolean",{"_index":407,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/Background.html":{},"components/ExampleTableComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"interfaces/StepType.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/LoginComponent.html":{}}}],["bootstrap",{"_index":555,"title":{},"body":{"modules/AppModule.html":{},"components/StoriesBarComponent.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":607,"title":{},"body":{"modules/AppModule.html":{},"components/StoriesBarComponent.html":{},"dependencies.html":{}}}],["border",{"_index":210,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/LoginComponent.html":{}}}],["bottom",{"_index":208,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/ParentComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["box",{"_index":533,"title":{},"body":{"components/AppComponent.html":{},"components/StoriesBarComponent.html":{}}}],["browse",{"_index":1879,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":570,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"interfaces/Scenario.html":{},"components/TermsComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get",{"_index":661,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":627,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":626,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":568,"title":{},"body":{"modules/AppModule.html":{}}}],["browsers",{"_index":1622,"title":{},"body":{"components/TermsComponent.html":{}}}],["btn",{"_index":770,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["build",{"_index":1860,"title":{},"body":{"index.html":{}}}],["business",{"_index":1629,"title":{},"body":{"components/TermsComponent.html":{}}}],["button",{"_index":1262,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["button!register",{"_index":1277,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["california",{"_index":1627,"title":{},"body":{"components/TermsComponent.html":{}}}],["campaigns",{"_index":1604,"title":{},"body":{"components/TermsComponent.html":{}}}],["can't",{"_index":1249,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["can\\'t",{"_index":1274,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["canactivate",{"_index":669,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["cancel",{"_index":755,"title":{},"body":{"components/DeleteScenarioToast.html":{}}}],["cancelstring",{"_index":745,"title":{},"body":{"components/DeleteScenarioToast.html":{}}}],["canedit",{"_index":1232,"title":{},"body":{"interfaces/RepositoryContainer.html":{}}}],["card",{"_index":286,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["carousel",{"_index":630,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"components/LoginComponent.html":{}}}],["catch(error",{"_index":448,"title":{},"body":{"components/AppComponent.html":{}}}],["categories",{"_index":1633,"title":{},"body":{"components/TermsComponent.html":{}}}],["ccpa",{"_index":1624,"title":{},"body":{"components/TermsComponent.html":{}}}],["cdr",{"_index":1918,"title":{},"body":{"components/LoginComponent.html":{}}}],["cell",{"_index":922,"title":{},"body":{"components/ExampleTableComponent.html":{},"directives/FocusableDirective.html":{},"directives/ViewModeDirective.html":{}}}],["center",{"_index":225,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["certain",{"_index":1618,"title":{},"body":{"components/TermsComponent.html":{}}}],["change",{"_index":159,"title":{},"body":{"components/AccountManagementComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"index.html":{}}}],["changed",{"_index":921,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["changedetectorref",{"_index":1919,"title":{},"body":{"components/LoginComponent.html":{}}}],["changeeditor",{"_index":1140,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["changes",{"_index":66,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["channels",{"_index":1489,"title":{},"body":{"components/TermsComponent.html":{}}}],["characters",{"_index":712,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["charcoal",{"_index":1227,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["charge",{"_index":1648,"title":{},"body":{"components/TermsComponent.html":{}}}],["check",{"_index":667,"title":{},"body":{"guards/AuthGuard.html":{},"components/ExampleTableComponent.html":{},"index.html":{},"components/LoginComponent.html":{}}}],["checked",{"_index":1307,"title":{},"body":{"interfaces/StepType.html":{}}}],["checkexample",{"_index":901,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["checkexample(event",{"_index":917,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["checkrowindex",{"_index":910,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["checks",{"_index":672,"title":{},"body":{"guards/AuthGuard.html":{}}}],["child",{"_index":1681,"title":{},"body":{"components/TermsComponent.html":{}}}],["children",{"_index":1668,"title":{},"body":{"components/TermsComponent.html":{}}}],["children's",{"_index":1665,"title":{},"body":{"components/TermsComponent.html":{}}}],["children\\'s",{"_index":1694,"title":{},"body":{"components/TermsComponent.html":{}}}],["choose",{"_index":1259,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/TermsComponent.html":{}}}],["circle",{"_index":2068,"title":{},"body":{"components/LoginComponent.html":{}}}],["class",{"_index":127,"title":{"classes/AppPage.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"directives/ViewModeDirective.html":{},"coverage.html":{},"overview.html":{},"components/LoginComponent.html":{}}}],["classes",{"_index":654,"title":{},"body":{"classes/AppPage.html":{}}}],["clear",{"_index":1497,"title":{},"body":{"components/TermsComponent.html":{}}}],["cli",{"_index":1848,"title":{},"body":{"index.html":{}}}],["click",{"_index":2043,"title":{},"body":{"components/LoginComponent.html":{}}}],["click').pipe",{"_index":872,"title":{},"body":{"components/EditableComponent.html":{}}}],["clicking",{"_index":1376,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["clickling",{"_index":2042,"title":{},"body":{"components/LoginComponent.html":{}}}],["clickoutside",{"_index":870,"title":{},"body":{"components/EditableComponent.html":{}}}],["clicks",{"_index":1554,"title":{},"body":{"components/TermsComponent.html":{}}}],["client",{"_index":1898,"title":{},"body":{"components/LoginComponent.html":{}}}],["close",{"_index":746,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{}}}],["closed",{"_index":1369,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["closeresult",{"_index":1318,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["cluster_appmodule",{"_index":558,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":559,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":561,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":560,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1856,"title":{},"body":{"index.html":{}}}],["collect",{"_index":1486,"title":{},"body":{"components/TermsComponent.html":{}}}],["collected",{"_index":1471,"title":{},"body":{"components/TermsComponent.html":{}}}],["collects",{"_index":1630,"title":{},"body":{"components/TermsComponent.html":{}}}],["color",{"_index":205,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/ExampleTableComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["color:rgb(224",{"_index":2048,"title":{},"body":{"components/LoginComponent.html":{}}}],["color:var",{"_index":245,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["column",{"_index":201,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/ExampleTableComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["columnindex",{"_index":937,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["columns",{"_index":199,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/ExampleTableComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["comment",{"_index":1297,"title":{},"body":{"interfaces/Scenario.html":{}}}],["communicate",{"_index":1522,"title":{},"body":{"components/TermsComponent.html":{}}}],["companies",{"_index":1540,"title":{},"body":{"components/TermsComponent.html":{}}}],["company",{"_index":1505,"title":{},"body":{"components/TermsComponent.html":{}}}],["complete",{"_index":1654,"title":{},"body":{"components/TermsComponent.html":{}}}],["component",{"_index":0,"title":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"components/LoginComponent.html":{}}}],["component]'},{'name",{"_index":327,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["component_template",{"_index":313,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"overview.html":{},"components/LoginComponent.html":{}}}],["conditions",{"_index":1658,"title":{},"body":{"components/TermsComponent.html":{}}}],["confirm",{"_index":321,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["confirmed",{"_index":1051,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{},"miscellaneous/variables.html":{}}}],["confirmed.directive",{"_index":623,"title":{},"body":{"modules/AppModule.html":{}}}],["confirmed.directive.ts",{"_index":1037,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirmed.directive.ts:18",{"_index":1045,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{}}}],["confirmpassword",{"_index":731,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"miscellaneous/variables.html":{}}}],["confirmpassword.value",{"_index":1057,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{},"miscellaneous/variables.html":{}}}],["confirmreset",{"_index":694,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{}}}],["confirmreset(form",{"_index":698,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{}}}],["confirmresetpasswordcomponent",{"_index":320,"title":{"components/ConfirmResetPasswordComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{},"components/LoginComponent.html":{}}}],["connect",{"_index":2031,"title":{},"body":{"components/LoginComponent.html":{}}}],["connected",{"_index":1258,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["connection",{"_index":61,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["consciously",{"_index":1395,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["consent",{"_index":1490,"title":{},"body":{"components/TermsComponent.html":{}}}],["console.log('delete",{"_index":796,"title":{},"body":{"components/DeleteScenarioToast.html":{}}}],["console.log('get",{"_index":432,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('navigate",{"_index":1248,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["console.log('on",{"_index":1015,"title":{},"body":{"components/ParentComponent.html":{}}}],["console.log('report",{"_index":1183,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["console.log('repositories",{"_index":435,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('resp",{"_index":1170,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["console.log('run",{"_index":1292,"title":{},"body":{"components/RunTestToast.html":{}}}],["console.log('save",{"_index":1294,"title":{},"body":{"components/RunTestToast.html":{}}}],["console.log('select",{"_index":1028,"title":{},"body":{"components/ParentComponent.html":{}}}],["console.log('seteditor",{"_index":1030,"title":{},"body":{"components/ParentComponent.html":{}}}],["console.log('stories",{"_index":1024,"title":{},"body":{"components/ParentComponent.html":{},"components/StoriesBarComponent.html":{}}}],["console.log('test",{"_index":1247,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["console.log(resp",{"_index":1025,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["console.log(this.jirakeys",{"_index":446,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(user",{"_index":148,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["const",{"_index":166,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/ReportComponent.html":{},"components/StoriesBarComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{},"components/LoginComponent.html":{}}}],["constructor",{"_index":52,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"directives/ViewModeDirective.html":{},"components/LoginComponent.html":{}}}],["constructor(@inject(default_timeout",{"_index":1738,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["constructor(apiservice",{"_index":53,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["constructor(defaulttimeout",{"_index":1723,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["constructor(editable",{"_index":886,"title":{},"body":{"directives/EditableOnEnterDirective.html":{}}}],["constructor(host",{"_index":826,"title":{},"body":{"components/EditableComponent.html":{},"directives/FocusableDirective.html":{}}}],["constructor(private",{"_index":674,"title":{},"body":{"guards/AuthGuard.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"directives/FocusableDirective.html":{}}}],["constructor(public",{"_index":129,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"directives/EditModeDirective.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{},"directives/ViewModeDirective.html":{},"components/LoginComponent.html":{}}}],["constructor(toastrservice",{"_index":749,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["constructor(tpl",{"_index":807,"title":{},"body":{"directives/EditModeDirective.html":{},"directives/ViewModeDirective.html":{}}}],["consult",{"_index":1586,"title":{},"body":{"components/TermsComponent.html":{}}}],["consumer",{"_index":1635,"title":{},"body":{"components/TermsComponent.html":{}}}],["consumer's",{"_index":1631,"title":{},"body":{"components/TermsComponent.html":{}}}],["consumer\\'s",{"_index":1693,"title":{},"body":{"components/TermsComponent.html":{}}}],["consumers",{"_index":1628,"title":{},"body":{"components/TermsComponent.html":{}}}],["contact",{"_index":1478,"title":{},"body":{"components/TermsComponent.html":{}}}],["container",{"_index":195,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/TermsComponent.html":{}}}],["contains",{"_index":1469,"title":{},"body":{"components/TermsComponent.html":{}}}],["content",{"_index":268,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ParentComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["contentchild",{"_index":849,"title":{},"body":{"components/EditableComponent.html":{}}}],["contentchild(editmodedirective",{"_index":840,"title":{},"body":{"components/EditableComponent.html":{}}}],["contentchild(viewmodedirective",{"_index":843,"title":{},"body":{"components/EditableComponent.html":{}}}],["contents",{"_index":1503,"title":{},"body":{"components/TermsComponent.html":{}}}],["context",{"_index":1799,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["continue",{"_index":2034,"title":{},"body":{"components/LoginComponent.html":{}}}],["control",{"_index":1046,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{},"components/TermsComponent.html":{},"miscellaneous/variables.html":{}}}],["control.get('confirmpassword",{"_index":1055,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{},"miscellaneous/variables.html":{}}}],["control.get('password",{"_index":1054,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{},"miscellaneous/variables.html":{}}}],["controls",{"_index":719,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/ExampleTableComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["cookie",{"_index":614,"title":{},"body":{"modules/AppModule.html":{},"components/TermsComponent.html":{},"dependencies.html":{}}}],["cookies",{"_index":1570,"title":{},"body":{"components/TermsComponent.html":{}}}],["cookieservice",{"_index":612,"title":{},"body":{"modules/AppModule.html":{}}}],["copies",{"_index":1647,"title":{},"body":{"components/TermsComponent.html":{}}}],["core",{"_index":1812,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":1651,"title":{},"body":{"components/TermsComponent.html":{}}}],["cors",{"_index":1815,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":1754,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":87,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/StoriesBarComponent.html":{},"components/LoginComponent.html":{}}}],["created",{"_index":1568,"title":{},"body":{"components/TermsComponent.html":{},"components/LoginComponent.html":{}}}],["createnewstorydiv",{"_index":1424,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["cross",{"_index":726,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{}}}],["cucumber",{"_index":413,"title":{},"body":{"components/AppComponent.html":{}}}],["cucumberfrontend",{"_index":1846,"title":{},"body":{"index.html":{}}}],["currently",{"_index":1202,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["currentview",{"_index":825,"title":{},"body":{"components/EditableComponent.html":{}}}],["cursor",{"_index":279,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/DeleteScenarioToast.html":{},"components/ReportHistoryComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{}}}],["custom",{"_index":21,"title":{},"body":{"components/AccountManagementComponent.html":{},"modules/AppModule.html":{},"components/LoginComponent.html":{}}}],["custom.repositorycontainer._id).subscribe(respp",{"_index":1360,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["custom.repositorycontainer.value",{"_index":1359,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["custom.story.description",{"_index":1358,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["custom_elements_schema",{"_index":567,"title":{},"body":{"modules/AppModule.html":{}}}],["customer",{"_index":1525,"title":{},"body":{"components/TermsComponent.html":{}}}],["customizing",{"_index":1581,"title":{},"body":{"components/TermsComponent.html":{}}}],["customrepocontainer",{"_index":303,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["d15553",{"_index":729,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{}}}],["daisy",{"_index":1379,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["daisyautologout",{"_index":1298,"title":{},"body":{"interfaces/Scenario.html":{}}}],["daisyversion",{"_index":1319,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["dark",{"_index":257,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{}}}],["darkred",{"_index":742,"title":{},"body":{"components/DeleteScenarioToast.html":{}}}],["data",{"_index":16,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ExampleTableComponent.html":{},"components/TermsComponent.html":{}}}],["date",{"_index":1179,"title":{},"body":{"components/ReportHistoryComponent.html":{},"components/TermsComponent.html":{}}}],["date(time).tolocaledatestring(\"de",{"_index":1180,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["date(time).tolocaletimestring(\"de",{"_index":1182,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["db",{"_index":1320,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["dblclick').pipe",{"_index":866,"title":{},"body":{"components/EditableComponent.html":{}}}],["deactivated",{"_index":966,"title":{},"body":{"components/ExampleTableComponent.html":{},"interfaces/StepType.html":{}}}],["declarations",{"_index":554,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decoration",{"_index":487,"title":{},"body":{"components/AppComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["decorators",{"_index":113,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/EditableComponent.html":{},"components/StoriesBarComponent.html":{}}}],["deep",{"_index":2067,"title":{},"body":{"components/LoginComponent.html":{}}}],["def",{"_index":1415,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["def:hover",{"_index":1417,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["default",{"_index":408,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{},"miscellaneous/variables.html":{},"components/LoginComponent.html":{}}}],["default_timeout",{"_index":635,"title":{},"body":{"modules/AppModule.html":{},"interceptors/TimeoutInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaulttimeout",{"_index":1725,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["defined",{"_index":54,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"directives/FocusableDirective.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"directives/ViewModeDirective.html":{},"components/LoginComponent.html":{}}}],["delete",{"_index":70,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/DeleteScenarioToast.html":{},"components/ReportHistoryComponent.html":{},"components/TermsComponent.html":{}}}],["deleteaccount",{"_index":43,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["deletebutton",{"_index":741,"title":{},"body":{"components/DeleteScenarioToast.html":{}}}],["deletereport",{"_index":1132,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["deletereport(report",{"_index":1143,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["deletereport(report._id",{"_index":1186,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["deletescenario",{"_index":634,"title":{},"body":{"modules/AppModule.html":{}}}],["deletescenariotoast",{"_index":324,"title":{"components/DeleteScenarioToast.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{},"components/LoginComponent.html":{}}}],["deletestring",{"_index":744,"title":{},"body":{"components/DeleteScenarioToast.html":{}}}],["deletetoast",{"_index":748,"title":{},"body":{"components/DeleteScenarioToast.html":{}}}],["deletetoast(event",{"_index":752,"title":{},"body":{"components/DeleteScenarioToast.html":{}}}],["demo",{"_index":465,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{},"components/LoginComponent.html":{}}}],["demographic",{"_index":1567,"title":{},"body":{"components/TermsComponent.html":{}}}],["dependencies",{"_index":553,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deposited",{"_index":181,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["describes",{"_index":1391,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["description",{"_index":13,"title":{},"body":{"components/AccountManagementComponent.html":{},"guards/AuthGuard.html":{},"components/ConfirmResetPasswordComponent.html":{},"directives/EditModeDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"directives/ViewModeDirective.html":{},"components/LoginComponent.html":{}}}],["destroy",{"_index":859,"title":{},"body":{"components/EditableComponent.html":{},"dependencies.html":{}}}],["detailed",{"_index":1614,"title":{},"body":{"components/TermsComponent.html":{}}}],["dev",{"_index":1852,"title":{},"body":{"index.html":{}}}],["develop",{"_index":1517,"title":{},"body":{"components/TermsComponent.html":{}}}],["development",{"_index":1850,"title":{},"body":{"index.html":{}}}],["direction",{"_index":266,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["directive",{"_index":312,"title":{"directives/EditModeDirective.html":{},"directives/EditableOnEnterDirective.html":{},"directives/FocusableDirective.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"directives/ViewModeDirective.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"directives/ViewModeDirective.html":{},"coverage.html":{},"components/LoginComponent.html":{}}}],["directives",{"_index":358,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"directives/ViewModeDirective.html":{},"overview.html":{},"components/LoginComponent.html":{}}}],["directives/edit",{"_index":599,"title":{},"body":{"modules/AppModule.html":{},"components/EditableComponent.html":{}}}],["directives/password",{"_index":622,"title":{},"body":{"modules/AppModule.html":{}}}],["directives/view",{"_index":597,"title":{},"body":{"modules/AppModule.html":{},"components/EditableComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1859,"title":{},"body":{"index.html":{}}}],["directly",{"_index":1500,"title":{},"body":{"components/TermsComponent.html":{}}}],["directory",{"_index":1864,"title":{},"body":{"index.html":{}}}],["disable",{"_index":1619,"title":{},"body":{"components/TermsComponent.html":{}}}],["disclaimer",{"_index":1201,"title":{},"body":{"components/ReportHistoryComponent.html":{},"components/TermsComponent.html":{}}}],["disclaimercontainer",{"_index":1229,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["disclose",{"_index":1632,"title":{},"body":{"components/TermsComponent.html":{}}}],["disconnect",{"_index":186,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["disconnectgithub",{"_index":44,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["dismissed",{"_index":1370,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["display",{"_index":196,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["display:inline",{"_index":270,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{}}}],["displayed",{"_index":944,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["displayedcolumns",{"_index":898,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["dist",{"_index":1863,"title":{},"body":{"index.html":{}}}],["document",{"_index":1468,"title":{},"body":{"components/TermsComponent.html":{}}}],["document.getelementbyid('change",{"_index":157,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["document.getelementbyid('footer",{"_index":429,"title":{},"body":{"components/AppComponent.html":{}}}],["document.getelementbyid('githubhref",{"_index":169,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["document.getelementbyid('loadingspinner",{"_index":2010,"title":{},"body":{"components/LoginComponent.html":{}}}],["document.getelementbyid('repositorieslist",{"_index":2021,"title":{},"body":{"components/LoginComponent.html":{}}}],["document.getelementbyid('testframe",{"_index":1119,"title":{},"body":{"components/ReportComponent.html":{}}}],["documentation",{"_index":1755,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["don't",{"_index":1252,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["don\\'t",{"_index":1276,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["dotenv",{"_index":1817,"title":{},"body":{"dependencies.html":{}}}],["double",{"_index":1270,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["download",{"_index":1208,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["dragdropmodule",{"_index":602,"title":{},"body":{"modules/AppModule.html":{}}}],["drop",{"_index":604,"title":{},"body":{"modules/AppModule.html":{}}}],["dropdown",{"_index":527,"title":{},"body":{"components/AppComponent.html":{}}}],["dropdown:hover",{"_index":543,"title":{},"body":{"components/AppComponent.html":{}}}],["dynamic",{"_index":1807,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1001,"title":{},"body":{"components/ParentComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["e2e",{"_index":1873,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":655,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":659,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":658,"title":{},"body":{"classes/AppPage.html":{}}}],["each",{"_index":1587,"title":{},"body":{"components/TermsComponent.html":{}}}],["ease",{"_index":781,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["edit",{"_index":106,"title":{},"body":{"components/AccountManagementComponent.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{}}}],["editable",{"_index":813,"title":{},"body":{"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{}}}],["editable'},{'name",{"_index":329,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["editable.component.css",{"_index":814,"title":{},"body":{"components/EditableComponent.html":{}}}],["editable.component.html",{"_index":815,"title":{},"body":{"components/EditableComponent.html":{}}}],["editable/editable.component",{"_index":596,"title":{},"body":{"modules/AppModule.html":{},"directives/EditableOnEnterDirective.html":{}}}],["editable/focusable.directive",{"_index":601,"title":{},"body":{"modules/AppModule.html":{}}}],["editablecomponent",{"_index":328,"title":{"components/EditableComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{},"components/LoginComponent.html":{}}}],["editableonenter",{"_index":883,"title":{},"body":{"directives/EditableOnEnterDirective.html":{}}}],["editableonenter]'},{'name",{"_index":360,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["editableonenterdirective",{"_index":359,"title":{"directives/EditableOnEnterDirective.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{},"components/LoginComponent.html":{}}}],["editmode",{"_index":805,"title":{},"body":{"directives/EditModeDirective.html":{},"components/EditableComponent.html":{}}}],["editmode]'},{'name",{"_index":362,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["editmodedirective",{"_index":361,"title":{"directives/EditModeDirective.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{},"components/LoginComponent.html":{}}}],["editmodehandler",{"_index":818,"title":{},"body":{"components/EditableComponent.html":{}}}],["editmodetpl",{"_index":816,"title":{},"body":{"components/EditableComponent.html":{}}}],["editor",{"_index":97,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["editor'},{'name",{"_index":350,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["editor.component",{"_index":577,"title":{},"body":{"modules/AppModule.html":{}}}],["editor.component.ts",{"_index":1789,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["editor/scenario",{"_index":576,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["editor/story",{"_index":610,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editrepobutton",{"_index":302,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["effectiveness",{"_index":1603,"title":{},"body":{"components/TermsComponent.html":{}}}],["efforts",{"_index":1687,"title":{},"body":{"components/TermsComponent.html":{}}}],["elem._id",{"_index":2017,"title":{},"body":{"components/LoginComponent.html":{}}}],["elem.source",{"_index":2015,"title":{},"body":{"components/LoginComponent.html":{}}}],["element",{"_index":311,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["element(by.css('app",{"_index":662,"title":{},"body":{"classes/AppPage.html":{}}}],["element[column",{"_index":965,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["elementref",{"_index":827,"title":{},"body":{"components/EditableComponent.html":{},"directives/FocusableDirective.html":{}}}],["ellipsis",{"_index":1431,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["em",{"_index":1224,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["email",{"_index":37,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{},"components/TermsComponent.html":{},"interfaces/User.html":{}}}],["emaillabel",{"_index":241,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["emails",{"_index":1529,"title":{},"body":{"components/TermsComponent.html":{}}}],["emits",{"_index":920,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["emitter",{"_index":914,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["emptybackground",{"_index":1794,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["enable",{"_index":689,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{}}}],["encourage",{"_index":1669,"title":{},"body":{"components/TermsComponent.html":{}}}],["end",{"_index":490,"title":{},"body":{"components/AppComponent.html":{},"components/StoriesBarComponent.html":{},"index.html":{}}}],["english",{"_index":460,"title":{},"body":{"components/AppComponent.html":{}}}],["enter",{"_index":1088,"title":{},"body":{"components/RegistrationComponent.html":{},"components/LoginComponent.html":{}}}],["enter.directive",{"_index":600,"title":{},"body":{"modules/AppModule.html":{}}}],["enter.directive.ts",{"_index":882,"title":{},"body":{"directives/EditableOnEnterDirective.html":{},"coverage.html":{}}}],["enter.directive.ts:11",{"_index":887,"title":{},"body":{"directives/EditableOnEnterDirective.html":{}}}],["enter.directive.ts:16",{"_index":888,"title":{},"body":{"directives/EditableOnEnterDirective.html":{}}}],["entitled",{"_index":1646,"title":{},"body":{"components/TermsComponent.html":{}}}],["entries",{"_index":942,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["entrycomponents",{"_index":565,"title":{},"body":{"modules/AppModule.html":{}}}],["environment",{"_index":1796,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["erase",{"_index":1657,"title":{},"body":{"components/TermsComponent.html":{}}}],["erasure",{"_index":1656,"title":{},"body":{"components/TermsComponent.html":{}}}],["err",{"_index":436,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["err.error",{"_index":438,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["error",{"_index":377,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["esc",{"_index":1374,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["event",{"_index":131,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/DeleteScenarioToast.html":{},"components/ExampleTableComponent.html":{},"components/RunTestToast.html":{}}}],["event.stoppropagation",{"_index":797,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["eventemitter",{"_index":829,"title":{},"body":{"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{}}}],["events",{"_index":769,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["example",{"_index":331,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/StepDefinition.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"directives/ViewModeDirective.html":{},"components/LoginComponent.html":{}}}],["exampletablecomponent",{"_index":330,"title":{"components/ExampleTableComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{},"components/LoginComponent.html":{}}}],["examplethere",{"_index":899,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["execute",{"_index":1871,"title":{},"body":{"index.html":{}}}],["exercise",{"_index":1640,"title":{},"body":{"components/TermsComponent.html":{}}}],["existing",{"_index":1254,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["expand",{"_index":1514,"title":{},"body":{"components/TermsComponent.html":{}}}],["expendable",{"_index":498,"title":{},"body":{"components/AppComponent.html":{}}}],["experience",{"_index":1580,"title":{},"body":{"components/TermsComponent.html":{}}}],["export",{"_index":126,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interfaces/Background.html":{},"interfaces/Block.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"interfaces/ReportContainer.html":{},"components/ReportHistoryComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"interfaces/StepType.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"interfaces/User.html":{},"directives/ViewModeDirective.html":{},"components/LoginComponent.html":{}}}],["exports",{"_index":557,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["express",{"_index":1819,"title":{},"body":{"dependencies.html":{}}}],["expressionchangedafterithasbeencheckederror",{"_index":1987,"title":{},"body":{"components/LoginComponent.html":{}}}],["extends",{"_index":737,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{},"components/TestAccountComponent.html":{}}}],["f1f1f1",{"_index":1437,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["false",{"_index":410,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/ParentComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{},"miscellaneous/variables.html":{},"components/LoginComponent.html":{}}}],["family",{"_index":292,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ExampleTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TermsComponent.html":{}}}],["features",{"_index":1520,"title":{},"body":{"components/TermsComponent.html":{}}}],["fee",{"_index":1649,"title":{},"body":{"components/TermsComponent.html":{}}}],["feedback",{"_index":456,"title":{},"body":{"components/AppComponent.html":{},"components/FeedbackComponent.html":{},"miscellaneous/variables.html":{}}}],["feedback'},{'name",{"_index":334,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["feedback.component.css",{"_index":973,"title":{},"body":{"components/FeedbackComponent.html":{}}}],["feedback.component.html",{"_index":974,"title":{},"body":{"components/FeedbackComponent.html":{}}}],["feedback/feedback.component",{"_index":608,"title":{},"body":{"modules/AppModule.html":{}}}],["feedbackcomponent",{"_index":333,"title":{"components/FeedbackComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{},"components/LoginComponent.html":{}}}],["fetch",{"_index":1834,"title":{},"body":{"dependencies.html":{}}}],["fetch(`https://api.github.com/user?access_token=${accesstoken",{"_index":1989,"title":{},"body":{"components/LoginComponent.html":{}}}],["ff69b4",{"_index":764,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["ffffff",{"_index":768,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["field",{"_index":890,"title":{},"body":{"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{}}}],["fieldname",{"_index":925,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interfaces/Background.html":{},"interfaces/Block.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"interfaces/ReportContainer.html":{},"components/ReportHistoryComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"interfaces/StepType.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"interfaces/User.html":{},"directives/ViewModeDirective.html":{},"coverage.html":{},"dependencies.html":{},"components/LoginComponent.html":{}}}],["files",{"_index":1533,"title":{},"body":{"components/TermsComponent.html":{},"index.html":{}}}],["fills",{"_index":102,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["filter",{"_index":853,"title":{},"body":{"components/EditableComponent.html":{}}}],["filterprojects",{"_index":385,"title":{},"body":{"components/AppComponent.html":{}}}],["filterprojects(resp",{"_index":391,"title":{},"body":{"components/AppComponent.html":{}}}],["find",{"_index":1530,"title":{},"body":{"components/TermsComponent.html":{}}}],["first",{"_index":2030,"title":{},"body":{"components/LoginComponent.html":{}}}],["fixed",{"_index":532,"title":{},"body":{"components/AppComponent.html":{}}}],["flag",{"_index":1866,"title":{},"body":{"index.html":{}}}],["flex",{"_index":265,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ReportHistoryComponent.html":{},"components/LoginComponent.html":{}}}],["float",{"_index":520,"title":{},"body":{"components/AppComponent.html":{},"components/StoriesBarComponent.html":{}}}],["focusable",{"_index":979,"title":{},"body":{"directives/FocusableDirective.html":{}}}],["focusable]'},{'name",{"_index":364,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["focusabledirective",{"_index":363,"title":{"directives/FocusableDirective.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{},"components/LoginComponent.html":{}}}],["following",{"_index":1404,"title":{},"body":{"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{}}}],["follows",{"_index":1534,"title":{},"body":{"components/TermsComponent.html":{}}}],["font",{"_index":246,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/ExampleTableComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/LoginComponent.html":{}}}],["footer",{"_index":427,"title":{},"body":{"components/AppComponent.html":{},"components/StoriesBarComponent.html":{}}}],["footer.scrollintoview",{"_index":430,"title":{},"body":{"components/AppComponent.html":{}}}],["footercenter",{"_index":496,"title":{},"body":{"components/AppComponent.html":{}}}],["forgot",{"_index":1256,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["form",{"_index":702,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["form.value.password",{"_index":1079,"title":{},"body":{"components/RegistrationComponent.html":{},"components/LoginComponent.html":{}}}],["form.value.password).topromise",{"_index":710,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{}}}],["form.value.stayloggedin).topromise",{"_index":2004,"title":{},"body":{"components/LoginComponent.html":{}}}],["formarray",{"_index":939,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["formcontrol",{"_index":928,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["formgroup",{"_index":950,"title":{},"body":{"components/ExampleTableComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"miscellaneous/variables.html":{}}}],["formsmodule",{"_index":585,"title":{},"body":{"modules/AppModule.html":{}}}],["formtosubmit",{"_index":989,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["formular",{"_index":715,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["found",{"_index":1623,"title":{},"body":{"components/TermsComponent.html":{}}}],["fraud",{"_index":1532,"title":{},"body":{"components/TermsComponent.html":{}}}],["fromevent",{"_index":851,"title":{},"body":{"components/EditableComponent.html":{}}}],["fromevent(document",{"_index":871,"title":{},"body":{"components/EditableComponent.html":{}}}],["fromevent(this.element",{"_index":865,"title":{},"body":{"components/EditableComponent.html":{}}}],["frontend",{"_index":414,"title":{},"body":{"components/AppComponent.html":{}}}],["frontend.herokuapp.com",{"_index":1463,"title":{},"body":{"components/TermsComponent.html":{}}}],["fully",{"_index":1644,"title":{},"body":{"components/TermsComponent.html":{}}}],["function",{"_index":1995,"title":{},"body":{"components/LoginComponent.html":{}}}],["functionality",{"_index":1521,"title":{},"body":{"components/TermsComponent.html":{}}}],["further",{"_index":1874,"title":{},"body":{"index.html":{},"components/LoginComponent.html":{}}}],["gap",{"_index":202,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["gathering",{"_index":1566,"title":{},"body":{"components/TermsComponent.html":{}}}],["gdpr",{"_index":1641,"title":{},"body":{"components/TermsComponent.html":{}}}],["geladen",{"_index":976,"title":{},"body":{"components/FeedbackComponent.html":{}}}],["general",{"_index":528,"title":{},"body":{"components/AppComponent.html":{},"components/TermsComponent.html":{}}}],["generate",{"_index":1858,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1847,"title":{},"body":{"index.html":{}}}],["generator",{"_index":1569,"title":{},"body":{"components/TermsComponent.html":{}}}],["german",{"_index":459,"title":{},"body":{"components/AppComponent.html":{}}}],["getcontrol",{"_index":902,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["getcontrol(rowindex",{"_index":923,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["getcurrentview",{"_index":847,"title":{},"body":{"components/EditableComponent.html":{}}}],["getdismissreason",{"_index":1321,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["getdismissreason(reason",{"_index":1333,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["getelement",{"_index":845,"title":{},"body":{"components/EditableComponent.html":{}}}],["getgithubdata",{"_index":1914,"title":{},"body":{"components/LoginComponent.html":{}}}],["getgithubdata(accesstoken",{"_index":1921,"title":{},"body":{"components/LoginComponent.html":{}}}],["getparagraphtext",{"_index":656,"title":{},"body":{"classes/AppPage.html":{}}}],["getreport",{"_index":1106,"title":{},"body":{"components/ReportComponent.html":{}}}],["getreport(reportname",{"_index":1108,"title":{},"body":{"components/ReportComponent.html":{}}}],["getreports",{"_index":1133,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["getrepositories",{"_index":386,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["getsortedstories",{"_index":1322,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["getstories(repository",{"_index":1022,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["getting",{"_index":1844,"title":{"index.html":{}},"body":{}}],["github",{"_index":19,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/StoriesBarComponent.html":{},"interfaces/User.html":{},"components/LoginComponent.html":{}}}],["github['login",{"_index":185,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["github[\\'login",{"_index":314,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["githubaccountname",{"_index":1748,"title":{},"body":{"interfaces/User.html":{}}}],["githubhref",{"_index":546,"title":{},"body":{"components/AppComponent.html":{}}}],["githubhref:hover",{"_index":547,"title":{},"body":{"components/AppComponent.html":{}}}],["githublogin",{"_index":261,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{}}}],["githublogincontainer",{"_index":269,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{}}}],["githubname",{"_index":378,"title":{},"body":{"components/AppComponent.html":{}}}],["githubrepo",{"_index":379,"title":{},"body":{"components/AppComponent.html":{},"interfaces/User.html":{}}}],["githubtoken",{"_index":1747,"title":{},"body":{"interfaces/User.html":{}}}],["given",{"_index":1303,"title":{},"body":{"interfaces/StepDefinition.html":{},"components/LoginComponent.html":{}}}],["go",{"_index":1875,"title":{},"body":{"index.html":{}}}],["goback",{"_index":1134,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["grape",{"_index":526,"title":{},"body":{"components/AppComponent.html":{},"components/ReportHistoryComponent.html":{},"components/LoginComponent.html":{}}}],["gray",{"_index":967,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["green",{"_index":1217,"title":{},"body":{"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{}}}],["grey",{"_index":258,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ParentComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["grid",{"_index":194,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["grid_customrepos",{"_index":229,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["grid_eraseaccount",{"_index":231,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["grid_github",{"_index":234,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["grid_githubrepos",{"_index":236,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["grid_jira",{"_index":237,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["grid_jirarepos",{"_index":239,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["grid_seedtest",{"_index":218,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["guard",{"_index":664,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"overview.html":{}}}],["guardians",{"_index":1671,"title":{},"body":{"components/TermsComponent.html":{}}}],["guards",{"_index":665,"title":{},"body":{"guards/AuthGuard.html":{}}}],["guards/auth.guard",{"_index":589,"title":{},"body":{"modules/AppModule.html":{}}}],["guide",{"_index":1675,"title":{},"body":{"components/TermsComponent.html":{}}}],["h1",{"_index":244,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ResetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["h1')).gettext",{"_index":663,"title":{},"body":{"classes/AppPage.html":{}}}],["h2",{"_index":252,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["hammerjs",{"_index":1823,"title":{},"body":{"dependencies.html":{}}}],["handle",{"_index":64,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{}}}],["header",{"_index":1425,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["headerfont",{"_index":714,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["headers",{"_index":1991,"title":{},"body":{"components/LoginComponent.html":{}}}],["headline",{"_index":1226,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["height",{"_index":275,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{},"components/LoginComponent.html":{}}}],["help",{"_index":457,"title":{},"body":{"components/AppComponent.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"index.html":{},"components/LoginComponent.html":{}}}],["here",{"_index":1253,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["hereby",{"_index":1491,"title":{},"body":{"components/TermsComponent.html":{}}}],["hesitate",{"_index":1477,"title":{},"body":{"components/TermsComponent.html":{}}}],["hidden",{"_index":765,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{}}}],["history",{"_index":1128,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["history'},{'name",{"_index":345,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["history.component",{"_index":640,"title":{},"body":{"modules/AppModule.html":{}}}],["history.component.css",{"_index":1129,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["history.component.html",{"_index":1130,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["history.component.ts",{"_index":1127,"title":{},"body":{"components/ReportHistoryComponent.html":{},"coverage.html":{}}}],["history.component.ts:14",{"_index":1162,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["history.component.ts:15",{"_index":1161,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["history.component.ts:18",{"_index":1141,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["history.component.ts:20",{"_index":1160,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["history.component.ts:22",{"_index":1147,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["history.component.ts:26",{"_index":1142,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["history.component.ts:33",{"_index":1145,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["history.component.ts:41",{"_index":1157,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["history.component.ts:45",{"_index":1154,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["history.component.ts:49",{"_index":1146,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["history.component.ts:53",{"_index":1149,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["history.component.ts:60",{"_index":1144,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["history.component.ts:73",{"_index":1159,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["history.component.ts:82",{"_index":1152,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["history/report",{"_index":639,"title":{},"body":{"modules/AppModule.html":{},"components/ReportHistoryComponent.html":{},"coverage.html":{}}}],["host",{"_index":763,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"directives/FocusableDirective.html":{},"components/RunTestToast.html":{},"interfaces/User.html":{},"components/LoginComponent.html":{}}}],["hosting",{"_index":1539,"title":{},"body":{"components/TermsComponent.html":{}}}],["hostlistener",{"_index":889,"title":{},"body":{"directives/EditableOnEnterDirective.html":{}}}],["hostlistener('keyup.enter",{"_index":891,"title":{},"body":{"directives/EditableOnEnterDirective.html":{}}}],["hostlisteners",{"_index":884,"title":{},"body":{"directives/EditableOnEnterDirective.html":{}}}],["howtostart",{"_index":1267,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["html",{"_index":310,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["htmlbuttonelement).innerhtml",{"_index":158,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["htmlelement",{"_index":428,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["htmliframeelement",{"_index":1118,"title":{},"body":{"components/ReportComponent.html":{}}}],["htmllinkelement",{"_index":168,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["http://localhost:4200",{"_index":1854,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":579,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclientmodule",{"_index":578,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":1734,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["httphandler",{"_index":1729,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["httpinterceptor",{"_index":1735,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["httprequest",{"_index":1727,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["https://github.com",{"_index":171,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["https://github.com/adessoag/seed",{"_index":464,"title":{},"body":{"components/AppComponent.html":{}}}],["https://seed",{"_index":1462,"title":{},"body":{"components/TermsComponent.html":{}}}],["https://stackoverflow.com/questions/45938931/default",{"_index":1736,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["id",{"_index":38,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"interfaces/StepType.html":{},"components/LoginComponent.html":{}}}],["id).subscribe((resp",{"_index":1997,"title":{},"body":{"components/LoginComponent.html":{}}}],["identifiable",{"_index":1557,"title":{},"body":{"components/TermsComponent.html":{}}}],["identifier",{"_index":1756,"title":{},"body":{"coverage.html":{}}}],["if(!localstorage.getitem('url_backend",{"_index":1114,"title":{},"body":{"components/ReportComponent.html":{}}}],["if(!this.apiservice.urlreceived",{"_index":419,"title":{},"body":{"components/AppComponent.html":{}}}],["if(a.issue_number",{"_index":1382,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["if(elem.value",{"_index":2014,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(params.reportname",{"_index":1113,"title":{},"body":{"components/ReportComponent.html":{}}}],["if(resp.length",{"_index":2013,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(this.apiservice.urlreceived",{"_index":1014,"title":{},"body":{"components/ParentComponent.html":{}}}],["if(this.router.url",{"_index":449,"title":{},"body":{"components/AppComponent.html":{}}}],["if(this.showimpressum",{"_index":431,"title":{},"body":{"components/AppComponent.html":{}}}],["if(this.showterms",{"_index":426,"title":{},"body":{"components/AppComponent.html":{}}}],["if(userid",{"_index":1980,"title":{},"body":{"components/LoginComponent.html":{}}}],["iframe",{"_index":977,"title":{},"body":{"components/FeedbackComponent.html":{},"components/ReportComponent.html":{}}}],["iframe.srcdoc",{"_index":1121,"title":{},"body":{"components/ReportComponent.html":{}}}],["ignore",{"_index":161,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{}}}],["image0",{"_index":1940,"title":{},"body":{"components/LoginComponent.html":{}}}],["image01",{"_index":1943,"title":{},"body":{"components/LoginComponent.html":{}}}],["image02",{"_index":1946,"title":{},"body":{"components/LoginComponent.html":{}}}],["image03",{"_index":1949,"title":{},"body":{"components/LoginComponent.html":{}}}],["image04",{"_index":1952,"title":{},"body":{"components/LoginComponent.html":{}}}],["image05",{"_index":1955,"title":{},"body":{"components/LoginComponent.html":{}}}],["image06",{"_index":1958,"title":{},"body":{"components/LoginComponent.html":{}}}],["image07",{"_index":1961,"title":{},"body":{"components/LoginComponent.html":{}}}],["image08",{"_index":1964,"title":{},"body":{"components/LoginComponent.html":{}}}],["image09",{"_index":1967,"title":{},"body":{"components/LoginComponent.html":{}}}],["image10",{"_index":1970,"title":{},"body":{"components/LoginComponent.html":{}}}],["image11",{"_index":1973,"title":{},"body":{"components/LoginComponent.html":{}}}],["img",{"_index":272,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{}}}],["immediately",{"_index":1685,"title":{},"body":{"components/TermsComponent.html":{}}}],["implements",{"_index":23,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"components/LoginComponent.html":{}}}],["import",{"_index":119,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interfaces/Background.html":{},"interfaces/Block.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"interfaces/ReportContainer.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"directives/ViewModeDirective.html":{},"components/LoginComponent.html":{}}}],["important",{"_index":283,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["imports",{"_index":641,"title":{},"body":{"modules/AppModule.html":{}}}],["impressum",{"_index":461,"title":{},"body":{"components/AppComponent.html":{}}}],["impressum:hover",{"_index":501,"title":{},"body":{"components/AppComponent.html":{}}}],["impressumcontent",{"_index":504,"title":{},"body":{"components/AppComponent.html":{}}}],["improve",{"_index":1512,"title":{},"body":{"components/TermsComponent.html":{}}}],["inaccurate",{"_index":1653,"title":{},"body":{"components/TermsComponent.html":{}}}],["include",{"_index":1543,"title":{},"body":{"components/TermsComponent.html":{}}}],["includes",{"_index":1401,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["including",{"_index":17,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/TermsComponent.html":{}}}],["incomplete",{"_index":1655,"title":{},"body":{"components/TermsComponent.html":{}}}],["index",{"_index":33,"title":{"index.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interfaces/Background.html":{},"interfaces/Block.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"directives/FocusableDirective.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"interfaces/ReportContainer.html":{},"components/ReportHistoryComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"interfaces/StepType.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"interfaces/User.html":{},"directives/ViewModeDirective.html":{},"miscellaneous/variables.html":{},"components/LoginComponent.html":{}}}],["individual",{"_index":1620,"title":{},"body":{"components/TermsComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interfaces/Background.html":{},"interfaces/Block.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"interfaces/ReportContainer.html":{},"components/ReportHistoryComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"interfaces/StepType.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"interfaces/User.html":{},"directives/ViewModeDirective.html":{},"components/LoginComponent.html":{}}}],["infoicon",{"_index":1092,"title":{},"body":{"components/RegistrationComponent.html":{},"components/StoriesBarComponent.html":{}}}],["information",{"_index":475,"title":{},"body":{"components/AppComponent.html":{},"components/TermsComponent.html":{},"components/LoginComponent.html":{}}}],["inherit",{"_index":519,"title":{},"body":{"components/AppComponent.html":{},"components/ResetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["inherited",{"_index":1702,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["initializes",{"_index":930,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["initializetable",{"_index":903,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["initializetablecontrols",{"_index":904,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["inject",{"_index":1732,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["injectable",{"_index":673,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/TimeoutInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["injectiontoken",{"_index":1733,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["injectiontoken('defaulttimeout",{"_index":1737,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["inline",{"_index":530,"title":{},"body":{"components/AppComponent.html":{},"components/StoriesBarComponent.html":{}}}],["input",{"_index":728,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/ExampleTableComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{}}}],["input.wrongemail",{"_index":730,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{}}}],["inputchange",{"_index":905,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["inputs",{"_index":908,"title":{},"body":{"components/ExampleTableComponent.html":{},"components/ReportHistoryComponent.html":{}}}],["instanceof",{"_index":132,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["instructions",{"_index":1616,"title":{},"body":{"components/TermsComponent.html":{}}}],["instructiontext",{"_index":1268,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["intercept",{"_index":1722,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["intercept(req",{"_index":1726,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["interceptor",{"_index":1718,"title":{"interceptors/TimeoutInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptor.interceptor",{"_index":638,"title":{},"body":{"modules/AppModule.html":{}}}],["interceptor.interceptor.ts",{"_index":1721,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptor.interceptor.ts:11",{"_index":1724,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["interceptor.interceptor.ts:15",{"_index":1730,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["interceptors",{"_index":1719,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["interface",{"_index":676,"title":{"interfaces/Background.html":{},"interfaces/Block.html":{},"interfaces/Report.html":{},"interfaces/ReportContainer.html":{},"interfaces/RepositoryContainer.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"interfaces/StepType.html":{},"interfaces/Story.html":{},"interfaces/User.html":{}},"body":{"interfaces/Background.html":{},"interfaces/Block.html":{},"interfaces/Report.html":{},"interfaces/ReportContainer.html":{},"interfaces/RepositoryContainer.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"interfaces/StepType.html":{},"interfaces/Story.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":677,"title":{},"body":{"interfaces/Background.html":{},"interfaces/Block.html":{},"interfaces/Report.html":{},"interfaces/ReportContainer.html":{},"interfaces/RepositoryContainer.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"interfaces/StepType.html":{},"interfaces/Story.html":{},"interfaces/User.html":{},"overview.html":{}}}],["internet",{"_index":1544,"title":{},"body":{"components/TermsComponent.html":{}}}],["invalid:not(form",{"_index":725,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{}}}],["invert",{"_index":1825,"title":{},"body":{"dependencies.html":{}}}],["ip",{"_index":1546,"title":{},"body":{"components/TermsComponent.html":{}}}],["isp",{"_index":1549,"title":{},"body":{"components/TermsComponent.html":{}}}],["issaved",{"_index":1094,"title":{},"body":{"interfaces/Report.html":{}}}],["issue",{"_index":2036,"title":{},"body":{"components/LoginComponent.html":{}}}],["issue_number",{"_index":1451,"title":{},"body":{"interfaces/Story.html":{}}}],["italic",{"_index":968,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["item",{"_index":544,"title":{},"body":{"components/AppComponent.html":{},"components/ExampleTableComponent.html":{}}}],["items",{"_index":235,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TermsComponent.html":{},"components/LoginComponent.html":{}}}],["javascript",{"_index":1594,"title":{},"body":{"components/TermsComponent.html":{}}}],["jira",{"_index":20,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/User.html":{},"components/LoginComponent.html":{}}}],["jira['accountname",{"_index":188,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["jira['host",{"_index":190,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["jira[\\'accountname",{"_index":315,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["jira[\\'host",{"_index":316,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["jirakeys",{"_index":380,"title":{},"body":{"components/AppComponent.html":{}}}],["jiralogin",{"_index":45,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["jiraproject",{"_index":381,"title":{},"body":{"components/AppComponent.html":{}}}],["jquery",{"_index":1828,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":1813,"title":{},"body":{"dependencies.html":{}}}],["json.parse(json.stringify(this.reports",{"_index":1189,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["json.parse(resp)['projects'].foreach(entry",{"_index":442,"title":{},"body":{"components/AppComponent.html":{}}}],["jsonreport",{"_index":1095,"title":{},"body":{"interfaces/Report.html":{}}}],["justify",{"_index":267,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ParentComponent.html":{},"components/ReportHistoryComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["k",{"_index":959,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["karma",{"_index":1872,"title":{},"body":{"index.html":{}}}],["keep",{"_index":1206,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["kept",{"_index":1396,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["keyframes",{"_index":759,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["keyup.enter",{"_index":885,"title":{},"body":{"directives/EditableOnEnterDirective.html":{}}}],["kind",{"_index":1683,"title":{},"body":{"components/TermsComponent.html":{}}}],["klavika",{"_index":293,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ExampleTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TermsComponent.html":{}}}],["know",{"_index":1621,"title":{},"body":{"components/TermsComponent.html":{}}}],["knowingly",{"_index":1677,"title":{},"body":{"components/TermsComponent.html":{}}}],["kv",{"_index":1826,"title":{},"body":{"dependencies.html":{}}}],["label",{"_index":260,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{}}}],["last",{"_index":1203,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["lasttestpassed",{"_index":1299,"title":{},"body":{"interfaces/Scenario.html":{},"interfaces/Story.html":{}}}],["left",{"_index":228,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{},"components/LoginComponent.html":{}}}],["left:38",{"_index":2066,"title":{},"body":{"components/LoginComponent.html":{}}}],["legend",{"_index":309,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"overview.html":{},"components/LoginComponent.html":{}}}],["li",{"_index":542,"title":{},"body":{"components/AppComponent.html":{}}}],["liable",{"_index":469,"title":{},"body":{"components/AppComponent.html":{}}}],["licence",{"_index":473,"title":{},"body":{"components/AppComponent.html":{}}}],["licenced",{"_index":470,"title":{},"body":{"components/AppComponent.html":{}}}],["light",{"_index":477,"title":{},"body":{"components/AppComponent.html":{},"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["lightgrey",{"_index":1221,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["linkbutton",{"_index":1272,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["linkbutton:hover",{"_index":2061,"title":{},"body":{"components/LoginComponent.html":{}}}],["linked",{"_index":1555,"title":{},"body":{"components/TermsComponent.html":{}}}],["links",{"_index":1597,"title":{},"body":{"components/TermsComponent.html":{}}}],["list",{"_index":531,"title":{},"body":{"components/AppComponent.html":{},"components/TermsComponent.html":{},"components/LoginComponent.html":{}}}],["literal",{"_index":1746,"title":{},"body":{"interfaces/User.html":{}}}],["loadingspinner",{"_index":2009,"title":{},"body":{"components/LoginComponent.html":{}}}],["loadingspinner.scrollintoview",{"_index":2011,"title":{},"body":{"components/LoginComponent.html":{}}}],["loadstories",{"_index":992,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["localstorage.getitem('clientid",{"_index":422,"title":{},"body":{"components/AppComponent.html":{}}}],["localstorage.getitem('clientid_local",{"_index":423,"title":{},"body":{"components/AppComponent.html":{}}}],["localstorage.getitem('id",{"_index":1020,"title":{},"body":{"components/ParentComponent.html":{},"components/LoginComponent.html":{}}}],["localstorage.getitem('repository",{"_index":1018,"title":{},"body":{"components/ParentComponent.html":{},"components/LoginComponent.html":{}}}],["localstorage.getitem('source",{"_index":1019,"title":{},"body":{"components/ParentComponent.html":{},"components/StoriesBarComponent.html":{},"components/LoginComponent.html":{}}}],["localstorage.getitem('userid",{"_index":1074,"title":{},"body":{"components/RegistrationComponent.html":{},"components/LoginComponent.html":{}}}],["localstorage.getitem('version",{"_index":1378,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["localstorage.removeitem('userid",{"_index":1075,"title":{},"body":{"components/RegistrationComponent.html":{},"components/LoginComponent.html":{}}}],["localstorage.setitem('id",{"_index":176,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["localstorage.setitem('login",{"_index":1979,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.setitem('repository",{"_index":173,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["localstorage.setitem('repositorytype",{"_index":2001,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.setitem('source",{"_index":174,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["localstorage.setitem('userid",{"_index":138,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["log",{"_index":1250,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/TermsComponent.html":{}}}],["logged",{"_index":668,"title":{},"body":{"guards/AuthGuard.html":{}}}],["loggs",{"_index":78,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["login",{"_index":46,"title":{},"body":{"components/AccountManagementComponent.html":{},"miscellaneous/variables.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":336,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["login(form",{"_index":1926,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.css",{"_index":1899,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":1900,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":584,"title":{},"body":{"modules/AppModule.html":{}}}],["logincomponent",{"_index":335,"title":{"components/LoginComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{},"components/LoginComponent.html":{}}}],["loginfont",{"_index":2059,"title":{},"body":{"components/LoginComponent.html":{}}}],["logingithubtoken",{"_index":1915,"title":{},"body":{"components/LoginComponent.html":{}}}],["logingithubtoken(login",{"_index":1928,"title":{},"body":{"components/LoginComponent.html":{}}}],["logingrid",{"_index":2045,"title":{},"body":{"components/LoginComponent.html":{}}}],["logintestaccount",{"_index":1916,"title":{},"body":{"components/LoginComponent.html":{}}}],["logo",{"_index":508,"title":{},"body":{"components/AppComponent.html":{}}}],["logout",{"_index":387,"title":{},"body":{"components/AppComponent.html":{}}}],["long",{"_index":713,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["longer",{"_index":1207,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["made",{"_index":1496,"title":{},"body":{"components/TermsComponent.html":{}}}],["mail",{"_index":1257,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["main",{"_index":1465,"title":{},"body":{"components/TermsComponent.html":{}}}],["maintain",{"_index":1510,"title":{},"body":{"components/TermsComponent.html":{}}}],["make",{"_index":1637,"title":{},"body":{"components/TermsComponent.html":{},"components/LoginComponent.html":{}}}],["maker",{"_index":468,"title":{},"body":{"components/AppComponent.html":{}}}],["manage",{"_index":183,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management",{"_index":28,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/TermsComponent.html":{}}}],["management'},{'name",{"_index":317,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["management.component",{"_index":611,"title":{},"body":{"modules/AppModule.html":{}}}],["management.component.css",{"_index":30,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.html",{"_index":32,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts",{"_index":12,"title":{},"body":{"components/AccountManagementComponent.html":{},"coverage.html":{}}}],["management.component.ts:126",{"_index":75,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:135",{"_index":81,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:144",{"_index":93,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:21",{"_index":115,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:26",{"_index":118,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:31",{"_index":109,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:32",{"_index":110,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:33",{"_index":111,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:34",{"_index":55,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:41",{"_index":108,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:55",{"_index":80,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:63",{"_index":88,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:70",{"_index":77,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:77",{"_index":67,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:85",{"_index":105,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:93",{"_index":101,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management/account",{"_index":11,"title":{},"body":{"components/AccountManagementComponent.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["margin",{"_index":193,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["marine",{"_index":291,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{}}}],["mark",{"_index":1209,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["marketing",{"_index":1527,"title":{},"body":{"components/TermsComponent.html":{}}}],["mask",{"_index":1362,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["mat",{"_index":971,"title":{},"body":{"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{}}}],["matcarouselmodule",{"_index":628,"title":{},"body":{"modules/AppModule.html":{}}}],["matcarouselmodule.forroot",{"_index":643,"title":{},"body":{"modules/AppModule.html":{}}}],["match",{"_index":1050,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":371,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interfaces/Background.html":{},"interfaces/Block.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"interfaces/ReportContainer.html":{},"components/ReportHistoryComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"interfaces/StepType.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"interfaces/User.html":{},"directives/ViewModeDirective.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"components/LoginComponent.html":{},"routes.html":{}}}],["matlistmodule",{"_index":592,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressspinnermodule",{"_index":617,"title":{},"body":{"modules/AppModule.html":{}}}],["mattablemodule",{"_index":590,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":300,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["measure",{"_index":1602,"title":{},"body":{"components/TermsComponent.html":{}}}],["media",{"_index":306,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["menu",{"_index":453,"title":{},"body":{"components/AppComponent.html":{}}}],["menubutton",{"_index":517,"title":{},"body":{"components/AppComponent.html":{}}}],["menubutton:hover",{"_index":514,"title":{},"body":{"components/AppComponent.html":{}}}],["menuselection",{"_index":521,"title":{},"body":{"components/AppComponent.html":{}}}],["menuselection#logout:hover",{"_index":525,"title":{},"body":{"components/AppComponent.html":{}}}],["menuselection:hover",{"_index":524,"title":{},"body":{"components/AppComponent.html":{}}}],["message",{"_index":743,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{},"components/TermsComponent.html":{}}}],["metadata",{"_index":25,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"directives/ViewModeDirective.html":{},"components/LoginComponent.html":{}}}],["method:\"get",{"_index":1990,"title":{},"body":{"components/LoginComponent.html":{}}}],["methods",{"_index":42,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"directives/FocusableDirective.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"components/LoginComponent.html":{}}}],["mid",{"_index":1308,"title":{},"body":{"interfaces/StepType.html":{}}}],["miminum",{"_index":1260,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["min",{"_index":483,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["minmax(0",{"_index":1032,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["miscellaneous",{"_index":1883,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":472,"title":{},"body":{"components/AppComponent.html":{}}}],["modal",{"_index":69,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/StoriesBarComponent.html":{}}}],["modalcomponent",{"_index":39,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["modaldismissreasons",{"_index":1353,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["modaldismissreasons.backdrop_click",{"_index":1375,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["modaldismissreasons.esc",{"_index":1372,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["modals",{"_index":117,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["modals'},{'name",{"_index":337,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["modals/modals.component",{"_index":125,"title":{},"body":{"components/AccountManagementComponent.html":{},"modules/AppModule.html":{},"components/StoriesBarComponent.html":{}}}],["modalscomponent",{"_index":112,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{},"components/LoginComponent.html":{}}}],["modalservice",{"_index":1328,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["mode",{"_index":803,"title":{},"body":{"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"interfaces/Report.html":{}}}],["mode.directive",{"_index":598,"title":{},"body":{"modules/AppModule.html":{},"components/EditableComponent.html":{}}}],["mode.directive.ts",{"_index":801,"title":{},"body":{"directives/EditModeDirective.html":{},"directives/ViewModeDirective.html":{},"coverage.html":{}}}],["mode.directive.ts:11",{"_index":809,"title":{},"body":{"directives/EditModeDirective.html":{}}}],["mode.directive.ts:15",{"_index":1753,"title":{},"body":{"directives/ViewModeDirective.html":{}}}],["mode.directive.ts:16",{"_index":810,"title":{},"body":{"directives/EditModeDirective.html":{}}}],["mode.directive.ts:9",{"_index":1752,"title":{},"body":{"directives/ViewModeDirective.html":{}}}],["model/report",{"_index":1164,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["model/reportcontainer",{"_index":1165,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["model/repositorycontainer",{"_index":124,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ParentComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["model/scenario",{"_index":951,"title":{},"body":{"components/ExampleTableComponent.html":{},"components/ParentComponent.html":{},"components/StoriesBarComponent.html":{}}}],["model/story",{"_index":1011,"title":{},"body":{"components/ParentComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["module",{"_index":550,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":552,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["monitor",{"_index":1674,"title":{},"body":{"components/TermsComponent.html":{}}}],["month",{"_index":1638,"title":{},"body":{"components/TermsComponent.html":{}}}],["more",{"_index":474,"title":{},"body":{"components/AppComponent.html":{},"components/TermsComponent.html":{},"index.html":{}}}],["movement",{"_index":1565,"title":{},"body":{"components/TermsComponent.html":{}}}],["multi",{"_index":649,"title":{},"body":{"modules/AppModule.html":{},"directives/PasswordConfirmedValidatorDirective.html":{}}}],["muted",{"_index":1444,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["name",{"_index":58,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/Background.html":{},"interfaces/Block.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"directives/ViewModeDirective.html":{},"index.html":{},"components/LoginComponent.html":{}}}],["navigate",{"_index":1853,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":657,"title":{},"body":{"classes/AppPage.html":{}}}],["navigationend",{"_index":122,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/RegistrationComponent.html":{}}}],["navtoregistration",{"_index":47,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["necessary",{"_index":791,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["need",{"_index":180,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["needcustomrepo",{"_index":243,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["needed",{"_index":1986,"title":{},"body":{"components/LoginComponent.html":{}}}],["networks",{"_index":1592,"title":{},"body":{"components/TermsComponent.html":{}}}],["new",{"_index":89,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"components/LoginComponent.html":{}}}],["newly",{"_index":2033,"title":{},"body":{"components/LoginComponent.html":{}}}],["newreports",{"_index":1188,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["newreports.scenarioreports",{"_index":1194,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["newreports.scenarioreports.filter((rep",{"_index":1195,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["newreports.storyreports",{"_index":1190,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["newreports.storyreports.filter((rep",{"_index":1191,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["newrepository",{"_index":48,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["newselectedscenario",{"_index":909,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["newselectedscenario(scenario",{"_index":953,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["newselectedstory",{"_index":1139,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["newselectedstory(story",{"_index":1166,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["next",{"_index":1728,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["next.handle(req).pipe(timeout(timeoutvaluenumeric",{"_index":1744,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["ng",{"_index":606,"title":{},"body":{"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{},"components/StoriesBarComponent.html":{},"dependencies.html":{},"index.html":{},"components/LoginComponent.html":{}}}],["ng_validators",{"_index":1039,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{}}}],["ngafterviewinit",{"_index":981,"title":{},"body":{"directives/FocusableDirective.html":{},"components/LoginComponent.html":{}}}],["ngbmodal",{"_index":1329,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["ngbmodule",{"_index":605,"title":{},"body":{"modules/AppModule.html":{}}}],["ngbmodule/material",{"_index":629,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ngform",{"_index":699,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["nginit",{"_index":1016,"title":{},"body":{"components/ParentComponent.html":{}}}],["ngmodule",{"_index":571,"title":{},"body":{"modules/AppModule.html":{}}}],["ngondestroy",{"_index":819,"title":{},"body":{"components/EditableComponent.html":{}}}],["ngoninit",{"_index":162,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["ngx",{"_index":613,"title":{},"body":{"modules/AppModule.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/RegistrationComponent.html":{},"components/RunTestToast.html":{},"dependencies.html":{}}}],["noaccount",{"_index":2060,"title":{},"body":{"components/LoginComponent.html":{}}}],["noaccountdiv",{"_index":2062,"title":{},"body":{"components/LoginComponent.html":{}}}],["node",{"_index":1833,"title":{},"body":{"dependencies.html":{}}}],["noemail",{"_index":214,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["none",{"_index":264,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/DeleteScenarioToast.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/LoginComponent.html":{}}}],["normal",{"_index":970,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["normalbutton",{"_index":1432,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["note",{"_index":1606,"title":{},"body":{"components/TermsComponent.html":{}}}],["notpassed",{"_index":1445,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["now",{"_index":86,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{}}}],["nowrap",{"_index":1430,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["null",{"_index":1053,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{},"components/ReportHistoryComponent.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":924,"title":{},"body":{"components/ExampleTableComponent.html":{},"interfaces/Report.html":{},"interfaces/Scenario.html":{},"interfaces/StepType.html":{},"interfaces/Story.html":{},"components/TermsComponent.html":{},"interceptors/TimeoutInterceptor.html":{}}}],["number(timeoutvalue",{"_index":1743,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["object",{"_index":1071,"title":{},"body":{"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TermsComponent.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":1731,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["observe",{"_index":1672,"title":{},"body":{"components/TermsComponent.html":{}}}],["occurs",{"_index":1601,"title":{},"body":{"components/TermsComponent.html":{}}}],["ocean",{"_index":216,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/LoginComponent.html":{}}}],["offline",{"_index":1488,"title":{},"body":{"components/TermsComponent.html":{}}}],["ondestroy",{"_index":812,"title":{},"body":{"components/EditableComponent.html":{}}}],["one",{"_index":1464,"title":{},"body":{"components/TermsComponent.html":{}}}],["onenter",{"_index":892,"title":{},"body":{"directives/EditableOnEnterDirective.html":{}}}],["oninit",{"_index":24,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["online",{"_index":1480,"title":{},"body":{"components/TermsComponent.html":{}}}],["opacity",{"_index":778,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["open",{"_index":466,"title":{},"body":{"components/AppComponent.html":{},"components/StoriesBarComponent.html":{}}}],["open(content",{"_index":1338,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["opencreatenewscenariomodal",{"_index":1323,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["openimpressum",{"_index":388,"title":{},"body":{"components/AppComponent.html":{}}}],["openinstruction",{"_index":1917,"title":{},"body":{"components/LoginComponent.html":{}}}],["opens",{"_index":68,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["openterms",{"_index":389,"title":{},"body":{"components/AppComponent.html":{}}}],["operate",{"_index":1509,"title":{},"body":{"components/TermsComponent.html":{}}}],["opt",{"_index":1617,"title":{},"body":{"components/TermsComponent.html":{}}}],["optimize",{"_index":1579,"title":{},"body":{"components/TermsComponent.html":{}}}],["optional",{"_index":60,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/Background.html":{},"interfaces/Block.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"directives/FocusableDirective.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"interfaces/StepType.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"directives/ViewModeDirective.html":{},"components/LoginComponent.html":{}}}],["options",{"_index":1096,"title":{},"body":{"interfaces/Report.html":{},"components/TermsComponent.html":{}}}],["organization",{"_index":1664,"title":{},"body":{"components/TermsComponent.html":{}}}],["out",{"_index":563,"title":{},"body":{"modules/AppModule.html":{},"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{},"components/TermsComponent.html":{},"index.html":{},"overview.html":{},"components/LoginComponent.html":{}}}],["outdated",{"_index":1309,"title":{},"body":{"interfaces/StepType.html":{}}}],["outline",{"_index":512,"title":{},"body":{"components/AppComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{}}}],["outline:0",{"_index":282,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["output",{"_index":850,"title":{},"body":{"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{}}}],["outputs",{"_index":822,"title":{},"body":{"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{}}}],["over",{"_index":1608,"title":{},"body":{"components/TermsComponent.html":{}}}],["overflow",{"_index":538,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{}}}],["overview",{"_index":1880,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":684,"title":{},"body":{"interfaces/Block.html":{}}}],["p",{"_index":500,"title":{},"body":{"components/AppComponent.html":{}}}],["package",{"_index":1801,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":191,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["page",{"_index":84,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/TermsComponent.html":{}}}],["pages",{"_index":1552,"title":{},"body":{"components/TermsComponent.html":{}}}],["param",{"_index":128,"title":{},"body":{"components/AccountManagementComponent.html":{},"guards/AuthGuard.html":{},"components/ConfirmResetPasswordComponent.html":{},"directives/EditModeDirective.html":{},"directives/FocusableDirective.html":{},"directives/ViewModeDirective.html":{}}}],["parameters",{"_index":56,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"directives/FocusableDirective.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"directives/ViewModeDirective.html":{},"components/LoginComponent.html":{}}}],["params.code",{"_index":1976,"title":{},"body":{"components/LoginComponent.html":{}}}],["params.uuid",{"_index":707,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{}}}],["parent",{"_index":986,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["parent'},{'name",{"_index":339,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["parent.component.css",{"_index":987,"title":{},"body":{"components/ParentComponent.html":{}}}],["parent.component.html",{"_index":988,"title":{},"body":{"components/ParentComponent.html":{}}}],["parent/parent.component",{"_index":583,"title":{},"body":{"modules/AppModule.html":{},"components/TestAccountComponent.html":{}}}],["parent/parent.component.css",{"_index":1697,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["parent/parent.component.html",{"_index":1698,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["parentcomponent",{"_index":338,"title":{"components/ParentComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{},"components/LoginComponent.html":{}}}],["parentcomponent:15",{"_index":1713,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["parentcomponent:16",{"_index":1712,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["parentcomponent:17",{"_index":1711,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["parentcomponent:18",{"_index":1710,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["parentcomponent:19",{"_index":1714,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["parentcomponent:21",{"_index":1709,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["parentcomponent:32",{"_index":1704,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["parentcomponent:37",{"_index":1703,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["parentcomponent:51",{"_index":1707,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["parentcomponent:56",{"_index":1706,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["parentcomponent:60",{"_index":1705,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["parents",{"_index":1670,"title":{},"body":{"components/TermsComponent.html":{}}}],["parseint(elem.scenarioid",{"_index":1172,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["part",{"_index":1541,"title":{},"body":{"components/TermsComponent.html":{}}}],["participate",{"_index":1673,"title":{},"body":{"components/TermsComponent.html":{}}}],["partners",{"_index":1524,"title":{},"body":{"components/TermsComponent.html":{}}}],["party",{"_index":1589,"title":{},"body":{"components/TermsComponent.html":{}}}],["passed",{"_index":1442,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["password",{"_index":690,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{},"components/LoginComponent.html":{}}}],["password'},{'name",{"_index":323,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["password.component",{"_index":632,"title":{},"body":{"modules/AppModule.html":{}}}],["password.component.css",{"_index":691,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.html",{"_index":692,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts",{"_index":688,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:15",{"_index":1245,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:16",{"_index":1242,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:17",{"_index":1243,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:18",{"_index":1244,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:19",{"_index":1237,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:20",{"_index":704,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{}}}],["password.component.ts:21",{"_index":1241,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:24",{"_index":1240,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:25",{"_index":697,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{}}}],["password.component.ts:31",{"_index":1238,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:34",{"_index":703,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{}}}],["password.component.ts:46",{"_index":700,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{}}}],["password.value",{"_index":1056,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{},"miscellaneous/variables.html":{}}}],["password/confirm",{"_index":633,"title":{},"body":{"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"coverage.html":{}}}],["password/reset",{"_index":631,"title":{},"body":{"modules/AppModule.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["passwordconfirmed",{"_index":1058,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{},"miscellaneous/variables.html":{}}}],["passwordconfirmedvalidator",{"_index":1052,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["passwordconfirmedvalidator(control",{"_index":1059,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{}}}],["passwordconfirmedvalidatordirective",{"_index":365,"title":{"directives/PasswordConfirmedValidatorDirective.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{},"components/LoginComponent.html":{}}}],["passwordlengthinfo",{"_index":718,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{}}}],["path",{"_index":1894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["per",{"_index":1204,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["personal",{"_index":1493,"title":{},"body":{"components/TermsComponent.html":{}}}],["personalize",{"_index":1513,"title":{},"body":{"components/TermsComponent.html":{}}}],["personally",{"_index":1556,"title":{},"body":{"components/TermsComponent.html":{}}}],["phone",{"_index":1502,"title":{},"body":{"components/TermsComponent.html":{}}}],["pieces",{"_index":1634,"title":{},"body":{"components/TermsComponent.html":{}}}],["pink",{"_index":325,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["place",{"_index":716,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["please",{"_index":1087,"title":{},"body":{"components/RegistrationComponent.html":{},"components/TermsComponent.html":{}}}],["point",{"_index":1498,"title":{},"body":{"components/TermsComponent.html":{}}}],["pointer",{"_index":280,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/DeleteScenarioToast.html":{},"components/ReportHistoryComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{}}}],["policies",{"_index":1585,"title":{},"body":{"components/TermsComponent.html":{}}}],["policy",{"_index":1460,"title":{},"body":{"components/TermsComponent.html":{}}}],["portability",{"_index":1661,"title":{},"body":{"components/TermsComponent.html":{}}}],["position",{"_index":495,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/LoginComponent.html":{}}}],["possibly",{"_index":1553,"title":{},"body":{"components/TermsComponent.html":{}}}],["practices",{"_index":1615,"title":{},"body":{"components/TermsComponent.html":{}}}],["pre",{"_index":1310,"title":{},"body":{"interfaces/StepType.html":{}}}],["preferences",{"_index":1575,"title":{},"body":{"components/TermsComponent.html":{}}}],["preservewhitespaces",{"_index":738,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["press",{"_index":1261,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["pressing",{"_index":1373,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["prevent",{"_index":1531,"title":{},"body":{"components/TermsComponent.html":{}}}],["priorities",{"_index":1466,"title":{},"body":{"components/TermsComponent.html":{}}}],["priority",{"_index":1666,"title":{},"body":{"components/TermsComponent.html":{}}}],["privacy",{"_index":1459,"title":{},"body":{"components/TermsComponent.html":{}}}],["private",{"_index":675,"title":{},"body":{"guards/AuthGuard.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/EditableComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/LoginComponent.html":{}}}],["procedure",{"_index":1536,"title":{},"body":{"components/TermsComponent.html":{}}}],["processing",{"_index":1660,"title":{},"body":{"components/TermsComponent.html":{}}}],["prod",{"_index":1865,"title":{},"body":{"index.html":{}}}],["production",{"_index":1867,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["products",{"_index":1518,"title":{},"body":{"components/TermsComponent.html":{}}}],["project",{"_index":90,"title":{},"body":{"components/AccountManagementComponent.html":{},"index.html":{},"components/LoginComponent.html":{}}}],["projectkeys",{"_index":441,"title":{},"body":{"components/AppComponent.html":{}}}],["projectkeys.concat(`${entry['key",{"_index":444,"title":{},"body":{"components/AppComponent.html":{}}}],["projectnames",{"_index":440,"title":{},"body":{"components/AppComponent.html":{}}}],["projectnames.concat(`jira/${entry['name",{"_index":443,"title":{},"body":{"components/AppComponent.html":{}}}],["projects",{"_index":18,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["promise((resolve",{"_index":1184,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["promotional",{"_index":1528,"title":{},"body":{"components/TermsComponent.html":{}}}],["promptly",{"_index":1688,"title":{},"body":{"components/TermsComponent.html":{}}}],["properties",{"_index":34,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"interfaces/Background.html":{},"interfaces/Block.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"interfaces/ReportContainer.html":{},"components/ReportHistoryComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"interfaces/StepType.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TestAccountComponent.html":{},"interfaces/User.html":{},"directives/ViewModeDirective.html":{},"components/LoginComponent.html":{}}}],["protected",{"_index":794,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{},"interceptors/TimeoutInterceptor.html":{}}}],["protection",{"_index":1642,"title":{},"body":{"components/TermsComponent.html":{}}}],["protocol",{"_index":1545,"title":{},"body":{"components/TermsComponent.html":{}}}],["protractor",{"_index":660,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["provide",{"_index":647,"title":{},"body":{"modules/AppModule.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/TermsComponent.html":{}}}],["provided",{"_index":1682,"title":{},"body":{"components/TermsComponent.html":{}}}],["provider",{"_index":1548,"title":{},"body":{"components/TermsComponent.html":{}}}],["providers",{"_index":556,"title":{},"body":{"modules/AppModule.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"overview.html":{}}}],["provides",{"_index":481,"title":{},"body":{"components/AppComponent.html":{}}}],["public",{"_index":35,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{},"directives/ViewModeDirective.html":{},"components/LoginComponent.html":{}}}],["purpose",{"_index":1558,"title":{},"body":{"components/TermsComponent.html":{}}}],["purposes",{"_index":790,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{},"components/TermsComponent.html":{}}}],["questions",{"_index":1475,"title":{},"body":{"components/TermsComponent.html":{}}}],["radius",{"_index":720,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/LoginComponent.html":{}}}],["reactiveformsmodule",{"_index":586,"title":{},"body":{"modules/AppModule.html":{}}}],["read",{"_index":1583,"title":{},"body":{"components/TermsComponent.html":{}}}],["readme",{"_index":1876,"title":{},"body":{"index.html":{}}}],["reason",{"_index":1335,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["reasons",{"_index":1495,"title":{},"body":{"components/TermsComponent.html":{}}}],["receive",{"_index":1263,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/TermsComponent.html":{}}}],["recommended",{"_index":1405,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["recorded",{"_index":1472,"title":{},"body":{"components/TermsComponent.html":{}}}],["records",{"_index":1690,"title":{},"body":{"components/TermsComponent.html":{}}}],["rectification",{"_index":1650,"title":{},"body":{"components/TermsComponent.html":{}}}],["red",{"_index":1219,"title":{},"body":{"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{}}}],["redirects",{"_index":82,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["ref",{"_index":167,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["ref.href",{"_index":170,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["refactor",{"_index":476,"title":{},"body":{"components/AppComponent.html":{}}}],["referring/exit",{"_index":1551,"title":{},"body":{"components/TermsComponent.html":{}}}],["regards",{"_index":1483,"title":{},"body":{"components/TermsComponent.html":{}}}],["register",{"_index":83,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TermsComponent.html":{},"miscellaneous/variables.html":{},"components/LoginComponent.html":{}}}],["registered",{"_index":1086,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registering.alternatively",{"_index":2026,"title":{},"body":{"components/LoginComponent.html":{}}}],["registeruser",{"_index":1065,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registeruser(form",{"_index":1068,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registration",{"_index":1061,"title":{},"body":{"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["registration'},{'name",{"_index":341,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["registration.component.css",{"_index":1062,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registration.component.html",{"_index":1063,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registration/registration.component",{"_index":621,"title":{},"body":{"modules/AppModule.html":{}}}],["registrationcomponent",{"_index":340,"title":{"components/RegistrationComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{},"components/LoginComponent.html":{}}}],["reject",{"_index":1185,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["relating",{"_index":1526,"title":{},"body":{"components/TermsComponent.html":{}}}],["relative",{"_index":529,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/LoginComponent.html":{}}}],["reload",{"_index":1855,"title":{},"body":{"index.html":{}}}],["remove",{"_index":1689,"title":{},"body":{"components/TermsComponent.html":{}}}],["removed",{"_index":788,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/ExampleTableComponent.html":{},"components/RunTestToast.html":{}}}],["removes",{"_index":76,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["rep._id",{"_index":1192,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["repeat(4",{"_index":1031,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["repo_img",{"_index":299,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["repobutton",{"_index":545,"title":{},"body":{"components/AppComponent.html":{}}}],["report",{"_index":103,"title":{"interfaces/Report.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"interfaces/ReportContainer.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"components/LoginComponent.html":{}}}],["report'},{'name",{"_index":343,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["report._id",{"_index":1193,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["report.component.css",{"_index":1103,"title":{},"body":{"components/ReportComponent.html":{}}}],["report.component.html",{"_index":1104,"title":{},"body":{"components/ReportComponent.html":{}}}],["report.issaved",{"_index":1197,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["report/:reportname",{"_index":1895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["report/report.component",{"_index":620,"title":{},"body":{"modules/AppModule.html":{}}}],["reportbuttons",{"_index":1222,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["reportcomponent",{"_index":342,"title":{"components/ReportComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{},"components/LoginComponent.html":{}}}],["reportcontainer",{"_index":1122,"title":{"interfaces/ReportContainer.html":{}},"body":{"interfaces/ReportContainer.html":{},"components/ReportHistoryComponent.html":{},"coverage.html":{}}}],["reporthistorycomponent",{"_index":344,"title":{"components/ReportHistoryComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{},"components/LoginComponent.html":{}}}],["reporthistorycontainer",{"_index":1215,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["reporthistorytitlecontainer",{"_index":1228,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["reportname",{"_index":1097,"title":{},"body":{"interfaces/Report.html":{},"components/ReportComponent.html":{}}}],["reportreceived",{"_index":1105,"title":{},"body":{"components/ReportComponent.html":{}}}],["reports",{"_index":1131,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["reportsheader",{"_index":1230,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["reporttime",{"_index":1098,"title":{},"body":{"interfaces/Report.html":{},"components/ReportHistoryComponent.html":{}}}],["reporttime(rep.reporttime",{"_index":1210,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["reporttime(reps.reporttime",{"_index":1214,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["reporttime(time",{"_index":1148,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["repositories",{"_index":40,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ResetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["repositorieslist",{"_index":2020,"title":{},"body":{"components/LoginComponent.html":{}}}],["repositorieslist.scrollintoview",{"_index":2022,"title":{},"body":{"components/LoginComponent.html":{}}}],["repositoriesloading",{"_index":1234,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["repository",{"_index":95,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"interfaces/Block.html":{},"components/ParentComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["repository._id",{"_index":2018,"title":{},"body":{"components/LoginComponent.html":{}}}],["repository.source",{"_index":2016,"title":{},"body":{"components/LoginComponent.html":{}}}],["repository.value",{"_index":182,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["repositorycontainer",{"_index":92,"title":{"interfaces/RepositoryContainer.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ParentComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"components/LoginComponent.html":{}}}],["repositoryid",{"_index":685,"title":{},"body":{"interfaces/Block.html":{}}}],["repositorylist",{"_index":2058,"title":{},"body":{"components/LoginComponent.html":{}}}],["reps",{"_index":1155,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["reps.sort((a",{"_index":1174,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["req",{"_index":1271,"title":{},"body":{"components/ResetPasswordComponent.html":{},"interceptors/TimeoutInterceptor.html":{}}}],["req.headers.get('timeout",{"_index":1740,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["request",{"_index":705,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/TermsComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"dependencies.html":{}}}],["requestreset",{"_index":1236,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["requestreset(form",{"_index":1239,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["require",{"_index":1476,"title":{},"body":{"components/TermsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":2044,"title":{},"body":{"components/LoginComponent.html":{}}}],["requirements",{"_index":1392,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["reset",{"_index":322,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{},"components/LoginComponent.html":{}}}],["resetpassword",{"_index":1896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resetpasswordcomponent",{"_index":346,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{},"components/LoginComponent.html":{}}}],["resetpasswordconfirm",{"_index":1897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resolve",{"_index":1196,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["resp",{"_index":393,"title":{},"body":{"components/AppComponent.html":{},"components/ParentComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["resp.error",{"_index":1978,"title":{},"body":{"components/LoginComponent.html":{}}}],["resp.id",{"_index":1985,"title":{},"body":{"components/LoginComponent.html":{}}}],["resp.id).subscribe((respo",{"_index":1983,"title":{},"body":{"components/LoginComponent.html":{}}}],["resp.login",{"_index":1982,"title":{},"body":{"components/LoginComponent.html":{}}}],["resp.message",{"_index":1999,"title":{},"body":{"components/LoginComponent.html":{}}}],["resp.repository",{"_index":2000,"title":{},"body":{"components/LoginComponent.html":{}}}],["resp.status",{"_index":1998,"title":{},"body":{"components/LoginComponent.html":{}}}],["respective",{"_index":1595,"title":{},"body":{"components/TermsComponent.html":{}}}],["respond",{"_index":1639,"title":{},"body":{"components/TermsComponent.html":{}}}],["response",{"_index":1076,"title":{},"body":{"components/RegistrationComponent.html":{},"components/LoginComponent.html":{}}}],["response.error",{"_index":1081,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["response.error.message",{"_index":1083,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["response.error.status",{"_index":1082,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["response.message",{"_index":2006,"title":{},"body":{"components/LoginComponent.html":{}}}],["response.status",{"_index":2005,"title":{},"body":{"components/LoginComponent.html":{}}}],["restrict",{"_index":1659,"title":{},"body":{"components/TermsComponent.html":{}}}],["result",{"_index":370,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interfaces/Background.html":{},"interfaces/Block.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"interfaces/ReportContainer.html":{},"components/ReportHistoryComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"interfaces/StepType.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"interfaces/User.html":{},"directives/ViewModeDirective.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"components/LoginComponent.html":{},"routes.html":{}}}],["result.then((result",{"_index":1367,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["results",{"_index":372,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interfaces/Background.html":{},"interfaces/Block.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"interfaces/ReportContainer.html":{},"components/ReportHistoryComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"interfaces/StepType.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"interfaces/User.html":{},"directives/ViewModeDirective.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"components/LoginComponent.html":{},"routes.html":{}}}],["return",{"_index":447,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":73,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"directives/FocusableDirective.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"components/LoginComponent.html":{}}}],["rgb(109",{"_index":1418,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["rgb(228",{"_index":733,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{}}}],["rgb(247",{"_index":2064,"title":{},"body":{"components/LoginComponent.html":{}}}],["rgb(255",{"_index":206,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["rgba(0,0,0,0.08",{"_index":1413,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["rgba(0,0,0,0.2",{"_index":536,"title":{},"body":{"components/AppComponent.html":{}}}],["rgba(153",{"_index":254,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["right",{"_index":238,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/LoginComponent.html":{}}}],["rightbutton",{"_index":509,"title":{},"body":{"components/AppComponent.html":{}}}],["rightbutton:hover",{"_index":513,"title":{},"body":{"components/AppComponent.html":{}}}],["rights",{"_index":1625,"title":{},"body":{"components/TermsComponent.html":{}}}],["root",{"_index":374,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{}}}],["root'},{'name",{"_index":319,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["route",{"_index":695,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/ReportComponent.html":{},"components/LoginComponent.html":{}}}],["router",{"_index":41,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["router.events.foreach((event",{"_index":130,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["router.url",{"_index":133,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["routermodule",{"_index":572,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(routes",{"_index":642,"title":{},"body":{"modules/AppModule.html":{}}}],["routes",{"_index":573,"title":{"routes.html":{}},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["row",{"_index":219,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ExampleTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["rowindex",{"_index":918,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["rows",{"_index":197,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["run",{"_index":1288,"title":{},"body":{"components/RunTestToast.html":{},"index.html":{},"components/LoginComponent.html":{}}}],["running",{"_index":1868,"title":{},"body":{"index.html":{}}}],["runstring",{"_index":1280,"title":{},"body":{"components/RunTestToast.html":{}}}],["runtest",{"_index":1281,"title":{},"body":{"components/RunTestToast.html":{}}}],["runtest(event",{"_index":1284,"title":{},"body":{"components/RunTestToast.html":{}}}],["runtesttoast",{"_index":347,"title":{"components/RunTestToast.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{},"components/LoginComponent.html":{}}}],["rxjs",{"_index":852,"title":{},"body":{"components/EditableComponent.html":{},"interceptors/TimeoutInterceptor.html":{}}}],["rxjs/operators",{"_index":856,"title":{},"body":{"components/EditableComponent.html":{},"interceptors/TimeoutInterceptor.html":{}}}],["s.issue_number",{"_index":1406,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["s.issue_number}}.{{c+1",{"_index":1408,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["s.title",{"_index":1407,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["same",{"_index":1715,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["sampleoauth",{"_index":1993,"title":{},"body":{"components/LoginComponent.html":{}}}],["sans",{"_index":294,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ExampleTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TermsComponent.html":{}}}],["sass",{"_index":1836,"title":{},"body":{"dependencies.html":{}}}],["save",{"_index":1289,"title":{},"body":{"components/RunTestToast.html":{},"components/LoginComponent.html":{}}}],["saveandruntest",{"_index":1282,"title":{},"body":{"components/RunTestToast.html":{}}}],["saveandruntest(event",{"_index":1285,"title":{},"body":{"components/RunTestToast.html":{}}}],["saved",{"_index":679,"title":{},"body":{"interfaces/Background.html":{},"components/ExampleTableComponent.html":{},"components/ReportHistoryComponent.html":{},"interfaces/Scenario.html":{}}}],["saver",{"_index":1821,"title":{},"body":{"dependencies.html":{}}}],["savereport",{"_index":1135,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["savereport(report",{"_index":1151,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["savereport(report._id",{"_index":1199,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["saverunstring",{"_index":1279,"title":{},"body":{"components/RunTestToast.html":{}}}],["scaffolding",{"_index":1857,"title":{},"body":{"index.html":{}}}],["scen.name",{"_index":1213,"title":{},"body":{"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{}}}],["scenario",{"_index":349,"title":{"interfaces/Scenario.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"components/LoginComponent.html":{}}}],["scenario.scenario_id",{"_index":1173,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["scenario_id",{"_index":1300,"title":{},"body":{"interfaces/Scenario.html":{}}}],["scenariochosen",{"_index":1326,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["scenarioeditorcomponent",{"_index":348,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{},"components/LoginComponent.html":{}}}],["scenarioid",{"_index":1099,"title":{},"body":{"interfaces/Report.html":{}}}],["scenariolistitem",{"_index":1438,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["scenariolistitem:hover",{"_index":1439,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["scenarioreports",{"_index":1124,"title":{},"body":{"interfaces/ReportContainer.html":{}}}],["scenarios",{"_index":1403,"title":{},"body":{"components/StoriesBarComponent.html":{},"interfaces/Story.html":{}}}],["schemas",{"_index":566,"title":{},"body":{"modules/AppModule.html":{}}}],["screen",{"_index":307,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["sectionheader",{"_index":1220,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["see",{"_index":1605,"title":{},"body":{"components/TermsComponent.html":{},"components/LoginComponent.html":{}}}],["seed",{"_index":71,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/TermsComponent.html":{},"components/LoginComponent.html":{}}}],["seen",{"_index":957,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["seen.add(k",{"_index":961,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["seen.has(k",{"_index":960,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["select",{"_index":2032,"title":{},"body":{"components/LoginComponent.html":{}}}],["selected",{"_index":948,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["selectedscenario",{"_index":900,"title":{},"body":{"components/ExampleTableComponent.html":{},"components/ParentComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["selectedstory",{"_index":990,"title":{},"body":{"components/ParentComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["selection",{"_index":1311,"title":{},"body":{"interfaces/StepType.html":{}}}],["selector",{"_index":26,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"directives/ViewModeDirective.html":{},"components/LoginComponent.html":{}}}],["selectrepository",{"_index":49,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["selectrepository(userrepository",{"_index":91,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["selects",{"_index":94,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["selectscenario",{"_index":1324,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["selectscenario(storyid",{"_index":1341,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["selectstoryscenario",{"_index":1325,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["selectstoryscenario(story",{"_index":1343,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["self",{"_index":489,"title":{},"body":{"components/AppComponent.html":{}}}],["sell",{"_index":1626,"title":{},"body":{"components/TermsComponent.html":{}}}],["sells",{"_index":1636,"title":{},"body":{"components/TermsComponent.html":{}}}],["send",{"_index":701,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/TermsComponent.html":{}}}],["sent",{"_index":1599,"title":{},"body":{"components/TermsComponent.html":{}}}],["sentences",{"_index":1398,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["serif",{"_index":295,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ExampleTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TermsComponent.html":{}}}],["serve",{"_index":1851,"title":{},"body":{"index.html":{}}}],["server",{"_index":189,"title":{},"body":{"components/AccountManagementComponent.html":{},"index.html":{},"components/LoginComponent.html":{}}}],["servers",{"_index":1591,"title":{},"body":{"components/TermsComponent.html":{}}}],["service",{"_index":63,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/TermsComponent.html":{},"dependencies.html":{}}}],["services",{"_index":1519,"title":{},"body":{"components/TermsComponent.html":{}}}],["services/api.service",{"_index":121,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["services/timeout",{"_index":637,"title":{},"body":{"modules/AppModule.html":{}}}],["set",{"_index":952,"title":{},"body":{"components/ExampleTableComponent.html":{},"components/ReportHistoryComponent.html":{},"dependencies.html":{}}}],["seteditor",{"_index":993,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["seteditor(e",{"_index":999,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["setnewselectedscenario(scenario",{"_index":949,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["setnewselectedstory(story",{"_index":1163,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["sets",{"_index":912,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["setselectedscenario",{"_index":994,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["setselectedscenario(scenario",{"_index":1002,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["setselectedstory",{"_index":995,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["setselectedstory(story",{"_index":1004,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["settimeout",{"_index":2019,"title":{},"body":{"components/LoginComponent.html":{}}}],["settings",{"_index":179,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{}}}],["several",{"_index":1402,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["shadow",{"_index":534,"title":{},"body":{"components/AppComponent.html":{},"components/StoriesBarComponent.html":{}}}],["shared",{"_index":1484,"title":{},"body":{"components/TermsComponent.html":{}}}],["short",{"_index":1397,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["show",{"_index":14,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["showimpressum",{"_index":382,"title":{},"body":{"components/AppComponent.html":{}}}],["showinstruction",{"_index":1235,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["shown",{"_index":946,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["showterms",{"_index":383,"title":{},"body":{"components/AppComponent.html":{}}}],["simple",{"_index":1399,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["site",{"_index":1562,"title":{},"body":{"components/TermsComponent.html":{}}}],["size",{"_index":247,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/LoginComponent.html":{}}}],["skewx",{"_index":783,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["skewx(20deg",{"_index":785,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["skewx(30deg",{"_index":789,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["slide0",{"_index":1901,"title":{},"body":{"components/LoginComponent.html":{}}}],["slide01",{"_index":1902,"title":{},"body":{"components/LoginComponent.html":{}}}],["slide02",{"_index":1903,"title":{},"body":{"components/LoginComponent.html":{}}}],["slide03",{"_index":1904,"title":{},"body":{"components/LoginComponent.html":{}}}],["slide04",{"_index":1905,"title":{},"body":{"components/LoginComponent.html":{}}}],["slide05",{"_index":1906,"title":{},"body":{"components/LoginComponent.html":{}}}],["slide06",{"_index":1907,"title":{},"body":{"components/LoginComponent.html":{}}}],["slide07",{"_index":1908,"title":{},"body":{"components/LoginComponent.html":{}}}],["slide08",{"_index":1909,"title":{},"body":{"components/LoginComponent.html":{}}}],["slide09",{"_index":1910,"title":{},"body":{"components/LoginComponent.html":{}}}],["slide10",{"_index":1911,"title":{},"body":{"components/LoginComponent.html":{}}}],["slide11",{"_index":1912,"title":{},"body":{"components/LoginComponent.html":{}}}],["slidedescription",{"_index":2054,"title":{},"body":{"components/LoginComponent.html":{}}}],["sm",{"_index":1366,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["small",{"_index":493,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/LoginComponent.html":{}}}],["smaller",{"_index":1434,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["software",{"_index":1393,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["solid",{"_index":212,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{},"components/LoginComponent.html":{}}}],["sortreportstime",{"_index":1136,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["sortreportstime(reps",{"_index":1153,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["sortscenarioreports",{"_index":1137,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["sortscenarioreports(scenario",{"_index":1156,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interfaces/Background.html":{},"interfaces/Block.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"interfaces/ReportContainer.html":{},"components/ReportHistoryComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"interfaces/StepType.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"interfaces/User.html":{},"directives/ViewModeDirective.html":{},"index.html":{},"components/LoginComponent.html":{}}}],["sources",{"_index":22,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["space",{"_index":304,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{}}}],["span.notpassed",{"_index":1447,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["span.passed",{"_index":1446,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["span[rel=def",{"_index":1416,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["spec\\.ts",{"_index":1893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specific",{"_index":927,"title":{},"body":{"components/ExampleTableComponent.html":{},"components/TermsComponent.html":{},"interceptors/TimeoutInterceptor.html":{}}}],["spinner",{"_index":619,"title":{},"body":{"modules/AppModule.html":{}}}],["src/.../environment.prod.ts",{"_index":1888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../password",{"_index":1890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../routes.ts",{"_index":1891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../story",{"_index":1887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../timeout",{"_index":1886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/account",{"_index":10,"title":{},"body":{"components/AccountManagementComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts",{"_index":373,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:101",{"_index":395,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:13",{"_index":401,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:14",{"_index":415,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:15",{"_index":405,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":402,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:17",{"_index":404,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":406,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:19",{"_index":411,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:20",{"_index":412,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:21",{"_index":403,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":390,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":400,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:33",{"_index":396,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:41",{"_index":398,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:50",{"_index":397,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:59",{"_index":394,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:71",{"_index":392,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:87",{"_index":399,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":564,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/confirm",{"_index":687,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/custom",{"_index":1278,"title":{},"body":{"components/RunTestToast.html":{},"coverage.html":{}}}],["src/app/deletescenario",{"_index":735,"title":{},"body":{"components/DeleteScenarioToast.html":{},"coverage.html":{}}}],["src/app/directives/edit",{"_index":800,"title":{},"body":{"directives/EditModeDirective.html":{},"directives/EditableOnEnterDirective.html":{},"coverage.html":{}}}],["src/app/directives/password",{"_index":1036,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/directives/view",{"_index":1750,"title":{},"body":{"directives/ViewModeDirective.html":{},"coverage.html":{}}}],["src/app/editable/editable.component.ts",{"_index":811,"title":{},"body":{"components/EditableComponent.html":{},"coverage.html":{}}}],["src/app/editable/editable.component.ts:15",{"_index":844,"title":{},"body":{"components/EditableComponent.html":{}}}],["src/app/editable/editable.component.ts:16",{"_index":841,"title":{},"body":{"components/EditableComponent.html":{}}}],["src/app/editable/editable.component.ts:17",{"_index":830,"title":{},"body":{"components/EditableComponent.html":{}}}],["src/app/editable/editable.component.ts:19",{"_index":837,"title":{},"body":{"components/EditableComponent.html":{}}}],["src/app/editable/editable.component.ts:20",{"_index":839,"title":{},"body":{"components/EditableComponent.html":{}}}],["src/app/editable/editable.component.ts:22",{"_index":828,"title":{},"body":{"components/EditableComponent.html":{}}}],["src/app/editable/editable.component.ts:28",{"_index":833,"title":{},"body":{"components/EditableComponent.html":{}}}],["src/app/editable/editable.component.ts:33",{"_index":834,"title":{},"body":{"components/EditableComponent.html":{}}}],["src/app/editable/editable.component.ts:38",{"_index":846,"title":{},"body":{"components/EditableComponent.html":{}}}],["src/app/editable/editable.component.ts:42",{"_index":835,"title":{},"body":{"components/EditableComponent.html":{}}}],["src/app/editable/editable.component.ts:51",{"_index":831,"title":{},"body":{"components/EditableComponent.html":{}}}],["src/app/editable/editable.component.ts:62",{"_index":848,"title":{},"body":{"components/EditableComponent.html":{}}}],["src/app/editable/editable.component.ts:66",{"_index":832,"title":{},"body":{"components/EditableComponent.html":{}}}],["src/app/editable/focusable.directive.ts",{"_index":978,"title":{},"body":{"directives/FocusableDirective.html":{},"coverage.html":{}}}],["src/app/editable/focusable.directive.ts:17",{"_index":983,"title":{},"body":{"directives/FocusableDirective.html":{}}}],["src/app/editable/focusable.directive.ts:9",{"_index":982,"title":{},"body":{"directives/FocusableDirective.html":{}}}],["src/app/example",{"_index":894,"title":{},"body":{"components/ExampleTableComponent.html":{},"coverage.html":{}}}],["src/app/feedback/feedback.component.ts",{"_index":972,"title":{},"body":{"components/FeedbackComponent.html":{},"coverage.html":{}}}],["src/app/guards/auth.guard.ts",{"_index":666,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/guards/auth.guard.ts:23",{"_index":671,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/guards/auth.guard.ts:9",{"_index":670,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/login/login.component.ts",{"_index":1776,"title":{},"body":{"coverage.html":{},"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:111",{"_index":1930,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:117",{"_index":1924,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:153",{"_index":1934,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:162",{"_index":1925,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:168",{"_index":1933,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:20",{"_index":1937,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:21",{"_index":1936,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:22",{"_index":1975,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:23",{"_index":1938,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:24",{"_index":1939,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:25",{"_index":1942,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:26",{"_index":1945,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:27",{"_index":1948,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:28",{"_index":1951,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:29",{"_index":1954,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:30",{"_index":1957,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:31",{"_index":1960,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:32",{"_index":1963,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:33",{"_index":1966,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:34",{"_index":1969,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:35",{"_index":1972,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:36",{"_index":1920,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:39",{"_index":1935,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:61",{"_index":1931,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:66",{"_index":1922,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:79",{"_index":1932,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:82",{"_index":1929,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:98",{"_index":1927,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modals/modals.component.ts",{"_index":1778,"title":{},"body":{"coverage.html":{}}}],["src/app/model/background.ts",{"_index":678,"title":{},"body":{"interfaces/Background.html":{},"coverage.html":{}}}],["src/app/model/block.ts",{"_index":682,"title":{},"body":{"interfaces/Block.html":{},"coverage.html":{}}}],["src/app/model/report.ts",{"_index":1093,"title":{},"body":{"interfaces/Report.html":{},"coverage.html":{}}}],["src/app/model/reportcontainer.ts",{"_index":1123,"title":{},"body":{"interfaces/ReportContainer.html":{},"coverage.html":{}}}],["src/app/model/repositorycontainer.ts",{"_index":1231,"title":{},"body":{"interfaces/RepositoryContainer.html":{},"coverage.html":{}}}],["src/app/model/scenario.ts",{"_index":1296,"title":{},"body":{"interfaces/Scenario.html":{},"coverage.html":{}}}],["src/app/model/stepdefinition.ts",{"_index":1302,"title":{},"body":{"interfaces/StepDefinition.html":{},"coverage.html":{}}}],["src/app/model/stepdefinitionbackground.ts",{"_index":1305,"title":{},"body":{"interfaces/StepDefinitionBackground.html":{},"coverage.html":{}}}],["src/app/model/steptype.ts",{"_index":1306,"title":{},"body":{"interfaces/StepType.html":{},"coverage.html":{}}}],["src/app/model/story.ts",{"_index":1448,"title":{},"body":{"interfaces/Story.html":{},"coverage.html":{}}}],["src/app/model/user.ts",{"_index":1745,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/parent/parent.component.ts",{"_index":985,"title":{},"body":{"components/ParentComponent.html":{},"coverage.html":{}}}],["src/app/parent/parent.component.ts:15",{"_index":1010,"title":{},"body":{"components/ParentComponent.html":{}}}],["src/app/parent/parent.component.ts:16",{"_index":1009,"title":{},"body":{"components/ParentComponent.html":{}}}],["src/app/parent/parent.component.ts:17",{"_index":1008,"title":{},"body":{"components/ParentComponent.html":{}}}],["src/app/parent/parent.component.ts:18",{"_index":1007,"title":{},"body":{"components/ParentComponent.html":{}}}],["src/app/parent/parent.component.ts:19",{"_index":996,"title":{},"body":{"components/ParentComponent.html":{}}}],["src/app/parent/parent.component.ts:21",{"_index":1006,"title":{},"body":{"components/ParentComponent.html":{}}}],["src/app/parent/parent.component.ts:32",{"_index":998,"title":{},"body":{"components/ParentComponent.html":{}}}],["src/app/parent/parent.component.ts:37",{"_index":997,"title":{},"body":{"components/ParentComponent.html":{}}}],["src/app/parent/parent.component.ts:51",{"_index":1005,"title":{},"body":{"components/ParentComponent.html":{}}}],["src/app/parent/parent.component.ts:56",{"_index":1003,"title":{},"body":{"components/ParentComponent.html":{}}}],["src/app/parent/parent.component.ts:60",{"_index":1000,"title":{},"body":{"components/ParentComponent.html":{}}}],["src/app/registration/registration.component.ts",{"_index":1060,"title":{},"body":{"components/RegistrationComponent.html":{},"coverage.html":{}}}],["src/app/registration/registration.component.ts:16",{"_index":1072,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/registration/registration.component.ts:17",{"_index":1066,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/registration/registration.component.ts:19",{"_index":1070,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/registration/registration.component.ts:23",{"_index":1067,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/registration/registration.component.ts:26",{"_index":1069,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/report",{"_index":1126,"title":{},"body":{"components/ReportHistoryComponent.html":{},"coverage.html":{}}}],["src/app/report/report.component.ts",{"_index":1102,"title":{},"body":{"components/ReportComponent.html":{},"coverage.html":{}}}],["src/app/report/report.component.ts:11",{"_index":1107,"title":{},"body":{"components/ReportComponent.html":{}}}],["src/app/report/report.component.ts:14",{"_index":1111,"title":{},"body":{"components/ReportComponent.html":{}}}],["src/app/report/report.component.ts:28",{"_index":1110,"title":{},"body":{"components/ReportComponent.html":{}}}],["src/app/report/report.component.ts:31",{"_index":1109,"title":{},"body":{"components/ReportComponent.html":{}}}],["src/app/reset",{"_index":1233,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/routes/routes.ts",{"_index":1787,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/scenario",{"_index":1788,"title":{},"body":{"coverage.html":{}}}],["src/app/services/api.service.ts",{"_index":1759,"title":{},"body":{"coverage.html":{}}}],["src/app/services/timeout",{"_index":1720,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/stories",{"_index":1313,"title":{},"body":{"components/StoriesBarComponent.html":{},"coverage.html":{}}}],["src/app/story",{"_index":1792,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/terms/terms.component.ts",{"_index":1454,"title":{},"body":{"components/TermsComponent.html":{},"coverage.html":{}}}],["src/app/terms/terms.component.ts:12",{"_index":1458,"title":{},"body":{"components/TermsComponent.html":{}}}],["src/app/terms/terms.component.ts:8",{"_index":1457,"title":{},"body":{"components/TermsComponent.html":{}}}],["src/app/test",{"_index":1695,"title":{},"body":{"components/TestAccountComponent.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":1795,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1797,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1798,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stamp",{"_index":1550,"title":{},"body":{"components/TermsComponent.html":{}}}],["standard",{"_index":1535,"title":{},"body":{"components/TermsComponent.html":{}}}],["star",{"_index":1211,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["star_border",{"_index":1212,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["start",{"_index":499,"title":{},"body":{"components/AppComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{},"components/LoginComponent.html":{}}}],["started",{"_index":1845,"title":{"index.html":{}},"body":{}}],["state",{"_index":760,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{},"interfaces/Story.html":{}}}],["state('inactive",{"_index":777,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["statements",{"_index":1757,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":933,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["step",{"_index":2041,"title":{},"body":{"components/LoginComponent.html":{}}}],["stepdefinition",{"_index":686,"title":{"interfaces/StepDefinition.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"coverage.html":{}}}],["stepdefinitionbackground",{"_index":681,"title":{"interfaces/StepDefinitionBackground.html":{}},"body":{"interfaces/Background.html":{},"interfaces/StepDefinitionBackground.html":{},"coverage.html":{}}}],["stepdefinitions",{"_index":680,"title":{},"body":{"interfaces/Background.html":{},"interfaces/Block.html":{},"interfaces/Scenario.html":{},"miscellaneous/variables.html":{}}}],["steps",{"_index":2039,"title":{},"body":{"components/LoginComponent.html":{}}}],["steptype",{"_index":1304,"title":{"interfaces/StepType.html":{}},"body":{"interfaces/StepDefinition.html":{},"interfaces/StepType.html":{},"coverage.html":{}}}],["stepwaittime",{"_index":1301,"title":{},"body":{"interfaces/Scenario.html":{}}}],["sticky",{"_index":482,"title":{},"body":{"components/AppComponent.html":{}}}],["store",{"_index":1574,"title":{},"body":{"components/TermsComponent.html":{}}}],["stored",{"_index":1862,"title":{},"body":{"index.html":{}}}],["stories",{"_index":352,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["stories.if",{"_index":2035,"title":{},"body":{"components/LoginComponent.html":{}}}],["storiesbar",{"_index":1033,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["storiesbarcomponent",{"_index":351,"title":{"components/StoriesBarComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{},"components/LoginComponent.html":{}}}],["story",{"_index":96,"title":{"interfaces/Story.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"components/LoginComponent.html":{}}}],["story_id",{"_index":1452,"title":{},"body":{"interfaces/Story.html":{}}}],["storychosen",{"_index":1327,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["storyeditor",{"_index":1034,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["storyeditoractive",{"_index":991,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["storyeditorcomponent",{"_index":354,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{},"components/LoginComponent.html":{}}}],["storyheader",{"_index":1410,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["storyid",{"_index":1100,"title":{},"body":{"interfaces/Report.html":{},"components/StoriesBarComponent.html":{}}}],["storyindex",{"_index":1386,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["storylist",{"_index":1411,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["storylist:hover",{"_index":1436,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["storyreports",{"_index":1125,"title":{},"body":{"interfaces/ReportContainer.html":{}}}],["storysource",{"_index":1453,"title":{},"body":{"interfaces/Story.html":{}}}],["string",{"_index":100,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"interfaces/Background.html":{},"interfaces/Block.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/ExampleTableComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"interfaces/StepType.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"interfaces/User.html":{},"components/LoginComponent.html":{}}}],["stroke",{"_index":2069,"title":{},"body":{"components/LoginComponent.html":{}}}],["strongly",{"_index":1684,"title":{},"body":{"components/TermsComponent.html":{}}}],["style",{"_index":518,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteScenarioToast.html":{},"components/ExampleTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/LoginComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["styleurls",{"_index":29,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["subject",{"_index":836,"title":{},"body":{"components/EditableComponent.html":{}}}],["submit",{"_index":1266,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["subscribe",{"_index":868,"title":{},"body":{"components/EditableComponent.html":{}}}],["subscribe((resp",{"_index":1023,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["subscribe(_resp",{"_index":1187,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["subscribe(event",{"_index":878,"title":{},"body":{"components/EditableComponent.html":{}}}],["successful",{"_index":145,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["such",{"_index":1501,"title":{},"body":{"components/TermsComponent.html":{}}}],["super(apiservice",{"_index":1716,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["super(toastrservice",{"_index":795,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["support",{"_index":1877,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":1643,"title":{},"body":{"components/TermsComponent.html":{}}}],["svg",{"_index":1878,"title":{},"body":{"modules.html":{}}}],["switchmapto",{"_index":855,"title":{},"body":{"components/EditableComponent.html":{}}}],["switchmapto(clickoutside",{"_index":877,"title":{},"body":{"components/EditableComponent.html":{}}}],["system",{"_index":1394,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["t",{"_index":1181,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["table",{"_index":804,"title":{},"body":{"directives/EditModeDirective.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"directives/FocusableDirective.html":{},"directives/ViewModeDirective.html":{},"coverage.html":{}}}],["table'},{'name",{"_index":332,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["table.component",{"_index":595,"title":{},"body":{"modules/AppModule.html":{}}}],["table.component.css",{"_index":896,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["table.component.html",{"_index":897,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["table.component.ts",{"_index":895,"title":{},"body":{"components/ExampleTableComponent.html":{},"coverage.html":{}}}],["table.component.ts:116",{"_index":935,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["table.component.ts:132",{"_index":926,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["table.component.ts:139",{"_index":938,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["table.component.ts:154",{"_index":919,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["table.component.ts:18",{"_index":943,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["table.component.ts:22",{"_index":941,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["table.component.ts:27",{"_index":940,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["table.component.ts:32",{"_index":947,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["table.component.ts:37",{"_index":945,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["table.component.ts:43",{"_index":913,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["table.component.ts:59",{"_index":911,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["table.component.ts:67",{"_index":932,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["table.component.ts:74",{"_index":931,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["table.component.ts:99",{"_index":929,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["table/example",{"_index":594,"title":{},"body":{"modules/AppModule.html":{},"components/ExampleTableComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1800,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":2037,"title":{},"body":{"components/LoginComponent.html":{}}}],["take",{"_index":854,"title":{},"body":{"components/EditableComponent.html":{},"dependencies.html":{}}}],["take(1",{"_index":875,"title":{},"body":{"components/EditableComponent.html":{}}}],["target",{"_index":873,"title":{},"body":{"components/EditableComponent.html":{}}}],["team",{"_index":184,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["technologies",{"_index":1593,"title":{},"body":{"components/TermsComponent.html":{}}}],["telephone",{"_index":1506,"title":{},"body":{"components/TermsComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["templateref",{"_index":808,"title":{},"body":{"directives/EditModeDirective.html":{},"directives/ViewModeDirective.html":{}}}],["templateurl",{"_index":31,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["terms",{"_index":462,"title":{},"body":{"components/AppComponent.html":{},"components/TermsComponent.html":{},"miscellaneous/variables.html":{}}}],["terms'},{'name",{"_index":356,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["terms.component.css",{"_index":1455,"title":{},"body":{"components/TermsComponent.html":{}}}],["terms.component.html",{"_index":1456,"title":{},"body":{"components/TermsComponent.html":{}}}],["terms/terms.component",{"_index":609,"title":{},"body":{"modules/AppModule.html":{}}}],["terms:hover",{"_index":502,"title":{},"body":{"components/AppComponent.html":{}}}],["termscomponent",{"_index":355,"title":{"components/TermsComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{},"components/LoginComponent.html":{}}}],["termscontent",{"_index":505,"title":{},"body":{"components/AppComponent.html":{}}}],["test",{"_index":72,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"index.html":{},"components/LoginComponent.html":{}}}],["test!usually",{"_index":2040,"title":{},"body":{"components/LoginComponent.html":{}}}],["test's",{"_index":1610,"title":{},"body":{"components/TermsComponent.html":{}}}],["test@adesso.de",{"_index":463,"title":{},"body":{"components/AppComponent.html":{}}}],["test\\'s",{"_index":1692,"title":{},"body":{"components/TermsComponent.html":{}}}],["testaccount",{"_index":1717,"title":{},"body":{"components/TestAccountComponent.html":{},"miscellaneous/variables.html":{}}}],["testaccountcomponent",{"_index":357,"title":{"components/TestAccountComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{},"components/LoginComponent.html":{}}}],["testjirahost",{"_index":1913,"title":{},"body":{"components/LoginComponent.html":{}}}],["tests",{"_index":1870,"title":{},"body":{"index.html":{}}}],["teststatus",{"_index":1101,"title":{},"body":{"interfaces/Report.html":{}}}],["text",{"_index":223,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/LoginComponent.html":{}}}],["then(async",{"_index":1994,"title":{},"body":{"components/LoginComponent.html":{}}}],["think",{"_index":1680,"title":{},"body":{"components/TermsComponent.html":{}}}],["third",{"_index":1588,"title":{},"body":{"components/TermsComponent.html":{}}}],["this.apiservice",{"_index":1021,"title":{},"body":{"components/ParentComponent.html":{},"components/ReportHistoryComponent.html":{},"components/TestAccountComponent.html":{}}}],["this.apiservice.confirmreset(this.uuid",{"_index":709,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{}}}],["this.apiservice.createcustomstoryemitter.subscribe(custom",{"_index":1356,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["this.apiservice.createstory(custom.story.title",{"_index":1357,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["this.apiservice.deletescenarioemitter",{"_index":798,"title":{},"body":{"components/DeleteScenarioToast.html":{}}}],["this.apiservice.disconnectgithub().subscribe((resp",{"_index":163,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["this.apiservice.getbackendinfo",{"_index":420,"title":{},"body":{"components/AppComponent.html":{},"components/ParentComponent.html":{}}}],["this.apiservice.getbackendinfo().then((value",{"_index":1115,"title":{},"body":{"components/ReportComponent.html":{}}}],["this.apiservice.getbackendurlevent.subscribe",{"_index":1012,"title":{},"body":{"components/ParentComponent.html":{}}}],["this.apiservice.getreport(reportname).subscribe((resp",{"_index":1117,"title":{},"body":{"components/ReportComponent.html":{}}}],["this.apiservice.getreporthistory(this.selectedstory._id).subscribe(resp",{"_index":1169,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["this.apiservice.getrepositories().subscribe",{"_index":1017,"title":{},"body":{"components/ParentComponent.html":{}}}],["this.apiservice.getrepositories().subscribe((repositories",{"_index":160,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["this.apiservice.getrepositories().subscribe((resp",{"_index":2012,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.apiservice.getrepositoriesevent.subscribe((repositories",{"_index":136,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{}}}],["this.apiservice.getstories(custom.repositorycontainer).subscribe((resp",{"_index":1361,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["this.apiservice.getstories(userrepository).subscribe((resp",{"_index":450,"title":{},"body":{"components/AppComponent.html":{}}}],["this.apiservice.getstoriesevent.subscribe(stories",{"_index":1354,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["this.apiservice.getuserdata().subscribe(user",{"_index":146,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["this.apiservice.githubcallback(params.code).subscribe(resp",{"_index":1977,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.apiservice.githublogin",{"_index":140,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{}}}],["this.apiservice.isloggedin",{"_index":433,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{}}}],["this.apiservice.local",{"_index":421,"title":{},"body":{"components/AppComponent.html":{}}}],["this.apiservice.logingithubtoken(login",{"_index":1996,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.apiservice.loginuser(form.value.email",{"_index":2003,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.apiservice.logoutevent.subscribe(_",{"_index":416,"title":{},"body":{"components/AppComponent.html":{}}}],["this.apiservice.logoutuser().subscribe(resp",{"_index":451,"title":{},"body":{"components/AppComponent.html":{}}}],["this.apiservice.mergeaccountgithub(userid",{"_index":1981,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.apiservice.registeruser(form.value.email",{"_index":1078,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.apiservice.requestreset(form.value.email).subscribe(res",{"_index":1246,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.apiservice.runsaveoption('run",{"_index":1293,"title":{},"body":{"components/RunTestToast.html":{}}}],["this.apiservice.runsaveoption('saverun",{"_index":1295,"title":{},"body":{"components/RunTestToast.html":{}}}],["this.cdr.detectchanges",{"_index":1988,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.changeeditor.emit",{"_index":1178,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["this.closeresult",{"_index":1368,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["this.daisyversion",{"_index":1380,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["this.db",{"_index":1355,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["this.defaulttimeout",{"_index":1741,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["this.displayedcolumns",{"_index":964,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["this.editable.toviewmode",{"_index":893,"title":{},"body":{"directives/EditableOnEnterDirective.html":{}}}],["this.editmode$.pipe",{"_index":876,"title":{},"body":{"components/EditableComponent.html":{}}}],["this.editmode.asobservable",{"_index":838,"title":{},"body":{"components/EditableComponent.html":{}}}],["this.editmode.next(true",{"_index":869,"title":{},"body":{"components/EditableComponent.html":{}}}],["this.editmodehandler",{"_index":861,"title":{},"body":{"components/EditableComponent.html":{}}}],["this.editmodetpl.tpl",{"_index":881,"title":{},"body":{"components/EditableComponent.html":{}}}],["this.element.contains(target",{"_index":874,"title":{},"body":{"components/EditableComponent.html":{}}}],["this.email",{"_index":152,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["this.error",{"_index":437,"title":{},"body":{"components/AppComponent.html":{},"components/RegistrationComponent.html":{},"components/LoginComponent.html":{}}}],["this.getdismissreason(reason",{"_index":1371,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["this.getreport(params.reportname",{"_index":1116,"title":{},"body":{"components/ReportComponent.html":{}}}],["this.getreports",{"_index":1167,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["this.getrepositories",{"_index":418,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["this.github",{"_index":154,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["this.host.nativeelement",{"_index":864,"title":{},"body":{"components/EditableComponent.html":{}}}],["this.host.nativeelement.focus",{"_index":984,"title":{},"body":{"directives/FocusableDirective.html":{}}}],["this.id",{"_index":139,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["this.jira",{"_index":156,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["this.jirakeys",{"_index":445,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadstories",{"_index":1013,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["this.logingithubtoken(resp.login",{"_index":1984,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.logout",{"_index":417,"title":{},"body":{"components/AppComponent.html":{}}}],["this.modalcomponent.openchangejiraaccountmodal('jira",{"_index":142,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["this.modalcomponent.opencreatecustomprojectmodal",{"_index":141,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["this.modalcomponent.opendeleteaccountmodal(this.email",{"_index":143,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["this.modalcomponent.openworkgroupeditmodal(project",{"_index":144,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["this.modalscomponent.opencreatenewstorymodal",{"_index":1390,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["this.modalservice.open(content",{"_index":1363,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["this.mode",{"_index":863,"title":{},"body":{"components/EditableComponent.html":{}}}],["this.remove",{"_index":799,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["this.reportreceived",{"_index":1120,"title":{},"body":{"components/ReportComponent.html":{}}}],["this.reports",{"_index":1168,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["this.reports.scenarioreports.filter((elem",{"_index":1171,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["this.repositories",{"_index":137,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["this.repositories.length",{"_index":434,"title":{},"body":{"components/AppComponent.html":{}}}],["this.repositoriesloading",{"_index":2002,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.route.params.subscribe((params",{"_index":1112,"title":{},"body":{"components/ReportComponent.html":{}}}],["this.route.queryparams.subscribe((params",{"_index":706,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.router.navigate",{"_index":178,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/RegistrationComponent.html":{},"components/LoginComponent.html":{}}}],["this.router.navigate(['/login",{"_index":452,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.router.navigate(['/register",{"_index":165,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["this.router.navigate(['/testaccount",{"_index":2008,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.scenariochosen.emit(scenario",{"_index":1384,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["this.selectedscenario",{"_index":954,"title":{},"body":{"components/ExampleTableComponent.html":{},"components/ParentComponent.html":{},"components/StoriesBarComponent.html":{}}}],["this.selectedscenario.saved",{"_index":956,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["this.selectedscenario.stepdefinitions.example[0].values",{"_index":962,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["this.selectedscenario.stepdefinitions.example[0].values.filter(item",{"_index":958,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["this.selectedstory",{"_index":1027,"title":{},"body":{"components/ParentComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{}}}],["this.selectedstory.title",{"_index":1200,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["this.selectscenario(this.selectedstory._id",{"_index":1389,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["this.showimpressum",{"_index":424,"title":{},"body":{"components/AppComponent.html":{}}}],["this.showinstruction",{"_index":2024,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.showterms",{"_index":425,"title":{},"body":{"components/AppComponent.html":{}}}],["this.stories",{"_index":1026,"title":{},"body":{"components/ParentComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["this.stories.indexof(this.selectedstory",{"_index":1387,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["this.stories.sort(function(a",{"_index":1381,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["this.stories[storyindex].scenarios[0",{"_index":1388,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["this.storychosen.emit(story",{"_index":1385,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["this.storyeditoractive",{"_index":1029,"title":{},"body":{"components/ParentComponent.html":{}}}],["this.toastr.error(response.error.message",{"_index":1084,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.toastr.success('successfully",{"_index":1085,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.toviewmode",{"_index":879,"title":{},"body":{"components/EditableComponent.html":{}}}],["this.update.emit",{"_index":862,"title":{},"body":{"components/EditableComponent.html":{}}}],["this.updatesite('successful",{"_index":135,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["this.updatetable",{"_index":955,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["this.uuid",{"_index":708,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{}}}],["this.viewmodehandler",{"_index":860,"title":{},"body":{"components/EditableComponent.html":{}}}],["this.viewmodetpl.tpl",{"_index":880,"title":{},"body":{"components/EditableComponent.html":{}}}],["through",{"_index":1523,"title":{},"body":{"components/TermsComponent.html":{}}}],["ththe",{"_index":915,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["thus",{"_index":1612,"title":{},"body":{"components/TermsComponent.html":{}}}],["time",{"_index":1150,"title":{},"body":{"components/ReportHistoryComponent.html":{},"components/TermsComponent.html":{}}}],["timeout",{"_index":645,"title":{},"body":{"modules/AppModule.html":{},"interceptors/TimeoutInterceptor.html":{}}}],["timeoutinterceptor",{"_index":636,"title":{"interceptors/TimeoutInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/TimeoutInterceptor.html":{},"coverage.html":{}}}],["timeoutvalue",{"_index":1739,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["timeoutvaluenumeric",{"_index":1742,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["title",{"_index":384,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{}}}],["title.uk",{"_index":1443,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["titlecase",{"_index":1409,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["toast",{"_index":326,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["toast.ts",{"_index":736,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{},"coverage.html":{}}}],["toast.ts:112",{"_index":1290,"title":{},"body":{"components/RunTestToast.html":{}}}],["toast.ts:113",{"_index":1283,"title":{},"body":{"components/RunTestToast.html":{}}}],["toast.ts:116",{"_index":756,"title":{},"body":{"components/DeleteScenarioToast.html":{}}}],["toast.ts:117",{"_index":751,"title":{},"body":{"components/DeleteScenarioToast.html":{}}}],["toast.ts:118",{"_index":1291,"title":{},"body":{"components/RunTestToast.html":{}}}],["toast.ts:119",{"_index":1287,"title":{},"body":{"components/RunTestToast.html":{}}}],["toast.ts:123",{"_index":757,"title":{},"body":{"components/DeleteScenarioToast.html":{}}}],["toast.ts:124",{"_index":754,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["toast.ts:129",{"_index":753,"title":{},"body":{"components/DeleteScenarioToast.html":{}}}],["toast.ts:132",{"_index":1286,"title":{},"body":{"components/RunTestToast.html":{}}}],["toastpackage",{"_index":747,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["toastr",{"_index":625,"title":{},"body":{"modules/AppModule.html":{},"components/DeleteScenarioToast.html":{},"components/RegistrationComponent.html":{},"components/RunTestToast.html":{},"dependencies.html":{}}}],["toastrmodule",{"_index":624,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrmodule.forroot",{"_index":644,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrservice",{"_index":750,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RegistrationComponent.html":{},"components/RunTestToast.html":{}}}],["token",{"_index":1265,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["top",{"_index":226,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ExampleTableComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{},"components/LoginComponent.html":{}}}],["topnav",{"_index":479,"title":{},"body":{"components/AppComponent.html":{}}}],["topnavcenter",{"_index":491,"title":{},"body":{"components/AppComponent.html":{}}}],["topnavright",{"_index":488,"title":{},"body":{"components/AppComponent.html":{}}}],["toviewmode",{"_index":820,"title":{},"body":{"components/EditableComponent.html":{}}}],["tpl",{"_index":806,"title":{},"body":{"directives/EditModeDirective.html":{},"directives/ViewModeDirective.html":{}}}],["tracking",{"_index":1563,"title":{},"body":{"components/TermsComponent.html":{}}}],["transfer",{"_index":1662,"title":{},"body":{"components/TermsComponent.html":{}}}],["transform",{"_index":549,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["transition",{"_index":288,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/LoginComponent.html":{}}}],["transition('active",{"_index":787,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["transition('inactive",{"_index":779,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["translate3d(100",{"_index":782,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["translatez(0",{"_index":774,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["transparent",{"_index":298,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ResetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["trends",{"_index":1560,"title":{},"body":{"components/TermsComponent.html":{}}}],["trigger",{"_index":761,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["trigger('flyinout",{"_index":776,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["true",{"_index":650,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{},"miscellaneous/variables.html":{},"components/LoginComponent.html":{}}}],["try",{"_index":439,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["trying",{"_index":2028,"title":{},"body":{"components/LoginComponent.html":{}}}],["tutorial",{"_index":458,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["type",{"_index":59,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/Background.html":{},"interfaces/Block.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"directives/FocusableDirective.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"interfaces/ReportContainer.html":{},"components/ReportHistoryComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"interfaces/StepType.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"interfaces/User.html":{},"directives/ViewModeDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"components/LoginComponent.html":{}}}],["typeof",{"_index":149,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{}}}],["types",{"_index":1470,"title":{},"body":{"components/TermsComponent.html":{}}}],["uikit",{"_index":1840,"title":{},"body":{"dependencies.html":{}}}],["uk",{"_index":285,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/LoginComponent.html":{}}}],["undefined",{"_index":151,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/RegistrationComponent.html":{},"components/LoginComponent.html":{}}}],["under",{"_index":471,"title":{},"body":{"components/AppComponent.html":{},"components/TermsComponent.html":{}}}],["underline",{"_index":503,"title":{},"body":{"components/AppComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["understand",{"_index":1515,"title":{},"body":{"components/TermsComponent.html":{}}}],["unit",{"_index":1869,"title":{},"body":{"index.html":{}}}],["unsavereport",{"_index":1138,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["unsavereport(report",{"_index":1158,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["unsavereport(report._id",{"_index":1198,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["until",{"_index":858,"title":{},"body":{"components/EditableComponent.html":{},"dependencies.html":{}}}],["untildestroyed",{"_index":857,"title":{},"body":{"components/EditableComponent.html":{}}}],["untildestroyed(this",{"_index":867,"title":{},"body":{"components/EditableComponent.html":{}}}],["update",{"_index":823,"title":{},"body":{"components/EditableComponent.html":{}}}],["updatefield",{"_index":906,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["updatefield(columnindex",{"_index":934,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["updates",{"_index":936,"title":{},"body":{"components/ExampleTableComponent.html":{},"components/TermsComponent.html":{}}}],["updatesite",{"_index":50,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["updatesite(report",{"_index":99,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["updatetable",{"_index":907,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["url",{"_index":65,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["use",{"_index":1473,"title":{},"body":{"components/TermsComponent.html":{},"index.html":{},"components/LoginComponent.html":{}}}],["useclass",{"_index":648,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":85,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["useexisting",{"_index":1040,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{}}}],["user",{"_index":79,"title":{"interfaces/User.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/FeedbackComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"components/LoginComponent.html":{}}}],["user's",{"_index":1049,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{},"miscellaneous/variables.html":{}}}],["user._id",{"_index":147,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["user['email",{"_index":150,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["user['github",{"_index":153,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["user['jira",{"_index":155,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["userid",{"_index":1073,"title":{},"body":{"components/RegistrationComponent.html":{},"components/LoginComponent.html":{}}}],["userid).topromise",{"_index":1080,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["userrepository",{"_index":98,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["userrepository._id",{"_index":177,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["userrepository.source",{"_index":175,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["userrepository.value",{"_index":172,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["users",{"_index":1564,"title":{},"body":{"components/TermsComponent.html":{}}}],["uses",{"_index":1573,"title":{},"body":{"components/TermsComponent.html":{}}}],["usevalue",{"_index":651,"title":{},"body":{"modules/AppModule.html":{}}}],["using",{"_index":792,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{},"components/TermsComponent.html":{},"components/LoginComponent.html":{}}}],["uuid",{"_index":693,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{}}}],["valid",{"_index":1089,"title":{},"body":{"components/RegistrationComponent.html":{},"components/TermsComponent.html":{}}}],["valid.required",{"_index":723,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{}}}],["valid[required",{"_index":722,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{}}}],["validate",{"_index":1042,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{}}}],["validate(control",{"_index":1043,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{}}}],["validation",{"_index":727,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{}}}],["validationerrors",{"_index":1047,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":1038,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{}}}],["validatorfn",{"_index":1048,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{},"miscellaneous/variables.html":{}}}],["value",{"_index":409,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"components/LoginComponent.html":{}}}],["valuerow",{"_index":969,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["values",{"_index":1312,"title":{},"body":{"interfaces/StepType.html":{}}}],["var",{"_index":215,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["variable",{"_index":1761,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1884,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":1507,"title":{},"body":{"components/TermsComponent.html":{}}}],["version",{"_index":454,"title":{},"body":{"components/AppComponent.html":{},"components/StoriesBarComponent.html":{},"index.html":{}}}],["via",{"_index":187,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/TermsComponent.html":{},"index.html":{},"components/LoginComponent.html":{}}}],["view",{"_index":842,"title":{},"body":{"components/EditableComponent.html":{}}}],["viewable",{"_index":1751,"title":{},"body":{"directives/ViewModeDirective.html":{}}}],["viewchild",{"_index":116,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/RegistrationComponent.html":{},"components/StoriesBarComponent.html":{}}}],["viewchild('modalcomponent",{"_index":114,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["viewchild('modalscomponent",{"_index":1349,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["viewmode",{"_index":368,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"directives/ViewModeDirective.html":{},"components/LoginComponent.html":{}}}],["viewmodedirective",{"_index":367,"title":{"directives/ViewModeDirective.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"directives/ViewModeDirective.html":{},"coverage.html":{},"overview.html":{},"components/LoginComponent.html":{}}}],["viewmodehandler",{"_index":821,"title":{},"body":{"components/EditableComponent.html":{}}}],["viewmodetpl",{"_index":817,"title":{},"body":{"components/EditableComponent.html":{}}}],["visibility",{"_index":773,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["visit",{"_index":1537,"title":{},"body":{"components/TermsComponent.html":{}}}],["visited",{"_index":1578,"title":{},"body":{"components/TermsComponent.html":{}}}],["visitor",{"_index":1576,"title":{},"body":{"components/TermsComponent.html":{}}}],["visitors",{"_index":1467,"title":{},"body":{"components/TermsComponent.html":{}}}],["void",{"_index":74,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"directives/FocusableDirective.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["want",{"_index":1205,"title":{},"body":{"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{},"components/LoginComponent.html":{}}}],["ways",{"_index":1508,"title":{},"body":{"components/TermsComponent.html":{}}}],["web",{"_index":1571,"title":{},"body":{"components/TermsComponent.html":{}}}],["webkit",{"_index":771,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["website",{"_index":1482,"title":{},"body":{"components/TermsComponent.html":{},"components/LoginComponent.html":{}}}],["websites",{"_index":1538,"title":{},"body":{"components/TermsComponent.html":{}}}],["webste",{"_index":1511,"title":{},"body":{"components/TermsComponent.html":{}}}],["weight",{"_index":249,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ExampleTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["welcome",{"_index":2025,"title":{},"body":{"components/LoginComponent.html":{}}}],["welcomeslide",{"_index":2051,"title":{},"body":{"components/LoginComponent.html":{}}}],["white",{"_index":253,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/LoginComponent.html":{}}}],["width",{"_index":273,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/DeleteScenarioToast.html":{},"components/ExampleTableComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"components/LoginComponent.html":{}}}],["window.location.reload",{"_index":164,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["wird",{"_index":975,"title":{},"body":{"components/FeedbackComponent.html":{}}}],["without",{"_index":2027,"title":{},"body":{"components/LoginComponent.html":{}}}],["words",{"_index":1400,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["workgroup",{"_index":107,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["workgroupedit",{"_index":51,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["workgroupedit(project",{"_index":104,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["wronglogin",{"_index":732,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{},"components/LoginComponent.html":{}}}],["x",{"_index":506,"title":{},"body":{"components/AppComponent.html":{}}}],["y",{"_index":539,"title":{},"body":{"components/AppComponent.html":{}}}],["yourself",{"_index":2029,"title":{},"body":{"components/LoginComponent.html":{}}}],["z",{"_index":537,"title":{},"body":{"components/AppComponent.html":{},"components/StoriesBarComponent.html":{},"components/LoginComponent.html":{}}}],["zone.js",{"_index":1842,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":562,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AccountManagementComponent.html":{"url":"components/AccountManagementComponent.html","title":"component - AccountManagementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AccountManagementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/account-management/account-management.component.ts\n\n\n    \n        Description\n    \n    \n        Component to show all account data including the projects of Github, Jira and custom sources\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-account-management\n            \n\n            \n                styleUrls\n                ./account-management.component.css\n            \n\n\n\n            \n                templateUrl\n                ./account-management.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiService\n                            \n                            \n                                email\n                            \n                            \n                                github\n                            \n                            \n                                id\n                            \n                            \n                                jira\n                            \n                            \n                                modalComponent\n                            \n                            \n                                repositories\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteAccount\n                            \n                            \n                                disconnectGithub\n                            \n                            \n                                jiraLogin\n                            \n                            \n                                login\n                            \n                            \n                                navToRegistration\n                            \n                            \n                                newRepository\n                            \n                            \n                                selectRepository\n                            \n                            \n                                updateSite\n                            \n                            \n                                workGroupEdit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/account-management/account-management.component.ts:34\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Connection to the api service\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                router to handle url changes\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteAccount\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteAccount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/account-management/account-management.component.ts:77\n                \n            \n\n\n            \n                \n                    Opens Modal to delete the Seed-Test account\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            disconnectGithub\n                        \n                        \n                    \n                \n            \n            \n                \ndisconnectGithub()\n                \n            \n\n\n            \n                \n                    Defined in src/app/account-management/account-management.component.ts:126\n                \n            \n\n\n            \n                \n                    Removes Github connection from Seed-Test Account\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            jiraLogin\n                        \n                        \n                    \n                \n            \n            \n                \njiraLogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/account-management/account-management.component.ts:70\n                \n            \n\n\n            \n                \n                    Loggs in the user to Jira\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/account-management/account-management.component.ts:55\n                \n            \n\n\n            \n                \n                    Loggs in the user to Github\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navToRegistration\n                        \n                        \n                    \n                \n            \n            \n                \nnavToRegistration()\n                \n            \n\n\n            \n                \n                    Defined in src/app/account-management/account-management.component.ts:135\n                \n            \n\n\n            \n                \n                    Redirects user to Register page if the user only used a Github account and now wants to create a Seed-Test account\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            newRepository\n                        \n                        \n                    \n                \n            \n            \n                \nnewRepository()\n                \n            \n\n\n            \n                \n                    Defined in src/app/account-management/account-management.component.ts:63\n                \n            \n\n\n            \n                \n                    Opens Modal to create a new custom project\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectRepository\n                        \n                        \n                    \n                \n            \n            \n                \nselectRepository(userRepository: RepositoryContainer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/account-management/account-management.component.ts:144\n                \n            \n\n\n            \n                \n                    Selects the repository and redirects the user to the story editor\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userRepository\n                                    \n                                                RepositoryContainer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateSite\n                        \n                        \n                    \n                \n            \n            \n                \nupdateSite(report: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/account-management/account-management.component.ts:93\n                \n            \n\n\n            \n                \n                    Fills the Account data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    report\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            workGroupEdit\n                        \n                        \n                    \n                \n            \n            \n                \nworkGroupEdit(project: RepositoryContainer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/account-management/account-management.component.ts:85\n                \n            \n\n\n            \n                \n                    Opens Modal to edit the workgroup\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                RepositoryContainer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApiService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/account-management/account-management.component.ts:41\n                            \n                        \n\n                \n                    \n                        Connection to the api service\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/account-management/account-management.component.ts:31\n                            \n                        \n\n                \n                    \n                        Data of the user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            github\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/account-management/account-management.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/account-management/account-management.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jira\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/account-management/account-management.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalsComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('modalComponent')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/account-management/account-management.component.ts:21\n                            \n                        \n\n                \n                    \n                        Viewchild to create the modals\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            repositories\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RepositoryContainer[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/account-management/account-management.component.ts:26\n                            \n                        \n\n                \n                    \n                        Repositories or projects of this user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/account-management/account-management.component.ts:41\n                            \n                        \n\n                \n                    \n                        router to handle url changes\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ApiService} from '../Services/api.service';\nimport {NavigationEnd, Router} from '@angular/router';\nimport { RepositoryContainer } from '../model/RepositoryContainer';\nimport { ModalsComponent } from \"../modals/modals.component\";\n\n/**\n * Component to show all account data including the projects of Github, Jira and custom sources\n */\n@Component({\n    selector: 'app-account-management',\n    templateUrl: './account-management.component.html',\n    styleUrls: ['./account-management.component.css']\n})\n\n\nexport class AccountManagementComponent implements OnInit {\n    /**\n     * Viewchild to create the modals\n     */\n    @ViewChild('modalComponent') modalComponent: ModalsComponent;\n\n    /**\n     * Repositories or projects of this user\n     */\n    repositories: RepositoryContainer[];\n\n    /**\n     * Data of the user\n     */\n    email: string;\n    github: any;\n    jira: any;\n    id: string;\n\n    /**\n     * Constructor\n     * @param apiService Connection to the api service\n     * @param router router to handle url changes\n     */\n    constructor(public apiService: ApiService, public router: Router) {\n        router.events.forEach((event) => {\n            if (event instanceof NavigationEnd && router.url === '/accountManagement') {\n                this.updateSite('Successful');\n            }\n        });\n        this.apiService.getRepositoriesEvent.subscribe((repositories) => {\n            this.repositories = repositories;\n        });\n    }\n\n    /**\n     * Loggs in the user to Github\n     */\n    login() {\n        localStorage.setItem('userId', this.id);\n        this.apiService.githubLogin();\n    }\n    \n    /**\n     * Opens Modal to create a new custom project\n     */\n    newRepository() {\n        this.modalComponent.openCreateCustomProjectModal();\n    }\n\n    /**\n     * Loggs in the user to Jira\n     */\n    jiraLogin() {\n        this.modalComponent.openChangeJiraAccountModal('Jira');\n    }\n \n    /**\n     * Opens Modal to delete the Seed-Test account\n     */\n    deleteAccount() {\n        this.modalComponent.openDeleteAccountModal(this.email);\n    }\n\n    /**\n     * Opens Modal to edit the workgroup\n     * @param project\n     */\n    workGroupEdit(project: RepositoryContainer){\n        this.modalComponent.openWorkgroupEditModal(project);\n    }\n    \n    /**\n     * Fills the Account data\n     * @param report \n     */\n    updateSite(report: String) {\n        if (report === 'Successful') {\n            this.apiService.getUserData().subscribe(user => {\n                this.id = user._id;\n                console.log(user)\n                if (typeof user['email'] !== 'undefined') {\n                    this.email = user['email'];\n                }\n                if (typeof user['github'] !== 'undefined') {\n                    this.github = user['github'];\n                }\n                if (typeof user['jira'] !== 'undefined') {\n                    this.jira = user['jira'];\n                    (document.getElementById('change-jira') as HTMLButtonElement).innerHTML = 'Change Jira-Account';\n                }\n            });\n\n            this.apiService.getRepositories().subscribe((repositories) => {\n                this.repositories = repositories;\n            });\n        }\n    }\n\n   \n    /**\n     * @ignore\n     */\n    ngOnInit() {\n    }\n\n    /**\n     * Removes Github connection from Seed-Test Account\n     */\n    disconnectGithub() {\n        this.apiService.disconnectGithub().subscribe((resp) => {\n            window.location.reload();\n        });\n    }\n\n    /**\n     * Redirects user to Register page if the user only used a Github account and now wants to create a Seed-Test account\n     */\n    navToRegistration() {\n        localStorage.setItem('userId', this.id);\n        this.router.navigate(['/register']);\n    }\n\n    /**\n     * Selects the repository and redirects the user to the story editor\n     * @param userRepository \n     */\n    selectRepository(userRepository: RepositoryContainer) {\n        const ref: HTMLLinkElement = document.getElementById('githubHref') as HTMLLinkElement;\n        ref.href = 'https://github.com/' + userRepository.value;\n        localStorage.setItem('repository', userRepository.value)\n        localStorage.setItem('source', userRepository.source)\n        localStorage.setItem('id', userRepository._id)\n        this.router.navigate(['']);\n    }\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n            \n        \n    \n    \n        Account Settings\n    \n    \n        Seed-Test Account\n        \n            Email: \n            {{email}}\n            \n            Need a new Custom Project?\n            Create Custom Project\n        \n        \n            - no email deposited -\n            Register\n        \n        \n        \n            \n                Custom Projects:\n                \n                    \n                        \n                            \n                                \n                                    \n                                        \n                                        {{repository.value}}\n                                    \n                                    Manage Team\n                                \n                            \n                        \n                    \n                \n            \n        \n        \n        \n            \n                Delete Seed-Test Account\n            \n        \n    \n    \n    \n    \n        Github\n        \n            Github-Account: \n            {{github['login']}}\n            \n                \n                    \n                       \n                       Disconnect GitHub\n                    \n                 \n            \n        \n        \n            \n                \n                   \n                   Login via GitHub\n                \n             \n        \n        \n        \n            \n                Github Projects:\n                \n                    \n                        \n                            \n                                \n                                {{repository.value}}\n                            \n                        \n                    \n                \n            \n        \n     \n    \n    \n        Jira\n        \n            \n                \n                    Jira-Name: \n                    {{jira['AccountName']}}\n                \n                \n                    Jira-Server: \n                    {{jira['Host']}}\n                \n            \n            \n                Login to Jira\n            \n          \n        \n        \n            \n                Jira Projects:\n                \n                    \n                        \n                            \n                                \n                                {{repository.value}}\n                            \n                        \n                    \n                \n            \n        \n        \n    \n\n\n\n    \n\n    \n                \n                    ./account-management.component.css\n                \n                * {\n    padding: 0px;\n    margin: 0px;\n}\n\n.grid-container {\n    display: grid;\n    grid-template-rows: auto;\n    grid-template-columns: 1fr 1fr 1fr;\n    grid-column-gap: 20px;\n    background-color: rgb(255, 255, 255);\n    padding-bottom: 100px;\n    border: 1px solid #999;\n}\n\n#noEmail{\n    color: var(--ocean-blue);\n}\n\n.grid_seedTest{\n    grid-row: 2 / 3;\n    grid-column: 1 / 2;\n    text-align: center;\n    margin-top: 10px;\n    margin-left: 20px;\n}\n\n.grid_customRepos {\n    grid-row: 3 / 4;\n    grid-column: 1 / 2;\n}\n\n.grid_eraseAccount {\n    grid-row: 5 / 6;\n    grid-column: 1 / 2;\n}\n\n.grid_github{\n    grid-row: 2 / 3;\n    grid-column: 2 / 3;\n    text-align: center;\n    align-items: center;\n    margin-top: 10px;\n}\n\n.grid_githubRepos {\n    grid-row: 3 / 4;\n    grid-column: 2 / 3;\n}\n\n.grid_jira{\n    grid-row: 2 / 3;\n    grid-column: 3 / 4;\n    text-align: center;\n    margin-top: 10px;\n    margin-right: 20px;\n}\n\n.grid_jiraRepos {\n    grid-row: 3 / 4;\n    grid-column: 3 / 4;\n}\n\n.active{\n    color: var(--ocean-blue);\n}\n\n#emailLabel{\n    margin-bottom: 25px;\n}\n\n#needCustomRepo{\n    margin-top: 25px;\n}\n\nh1{\n    color:var(--ocean-blue);\n    font-size: 22pt;\n    font-weight: bold;\n    text-align: center;\n    margin-top: 40px;\n    margin-bottom: 20px;\n}\n\nh2{\n    padding-top: 10px;\n    color: var(--white);\n    font-size: 20px;\n    /*background-color: rgba(153, 153, 153, 0.63);*/\n    background-color: var(--dark-grey);\n    padding-bottom: 10px;\n    margin-bottom: 30px;\n}\n\nlabel{\n    text-align: center;\n    font-weight: bold;\n}\n\n.githubLogin{\n    color: var(--white);\n    padding: 5px 10px;\n    background-color: black;\n    border: none;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n}\n\n.githubLoginContainer{\n    margin: 10px;\n    display:inline-block;\n}\n\n.githubLogin img{\n    margin-right: 5px;\n    width: 17px;\n    height: 17px;\n}\n\n.backButton{\n    background: none;\n    width: 50px;\n    height: 50px;\n    margin-top: 30px;\n    margin-left: 20px;\n    font-size: 15px;\n    cursor: pointer;\n    border: none;\n}\n\n.backButton:focus {\n    outline:0 !important;\n}\n\n\n#backImage{\n    width: 40px;\n}\n\n#change-jira{\n    margin-top: 30px;\n}\n\n.uk-card{\n    border: 1px solid grey;\n}\n\na.repoLink{\n    color: var(--ocean-blue);\n    transition: 0.2s;\n}\n\na.repoLink:hover{\n    color: var(--marine-blue);\n}\n\nh2, h1{\n    font-family: Klavika, sans-serif;\n}\n\n.repositories{\n    width: 90%;\n    text-align: center;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 60px;\n    margin-top: 60px;\n    padding: 15px;\n    background-color: transparent;\n    border-top: 1px solid #999;\n}\n\n.repo_img{\n    margin-left: 5px;\n    margin-right: 5px;\n    max-height: 18px;\n}\n\n.editRepoButton{\n    margin-left: 5px;;\n}\n\n.customRepoContainer{\n    display: flex;\n    justify-content: space-between;\n}\n\n@media screen and (max-width: 600px) {\n    .grid{\n        display: grid;\n        grid-template-rows: auto;\n        grid-template-columns: 1fr;\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                            Account Settings                Seed-Test Account                    Email:             {{email}}                        Need a new Custom Project?            Create Custom Project                            - no email deposited -            Register                                                    Custom Projects:                                                                                                                                                                                                                                            {{repository.value}}                                                                        Manage Team                                                                                                                                                                                        Delete Seed-Test Account                                            Github                    Github-Account:             {{github[\\'login\\']}}                                                                                              Disconnect GitHub                                                                                                                                   Login via GitHub                                                                                 Github Projects:                                                                                                                                                        {{repository.value}}                                                                                                                                 Jira                                                        Jira-Name:                     {{jira[\\'AccountName\\']}}                                                    Jira-Server:                     {{jira[\\'Host\\']}}                                                        Login to Jira                                                                  Jira Projects:                                                                                                                                                        {{repository.value}}                                                                                                                        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmResetPasswordComponent', 'selector': 'app-confirm-reset-password'},{'name': 'DeleteScenarioToast', 'selector': '[pink-toast-component]'},{'name': 'EditableComponent', 'selector': 'editable'},{'name': 'ExampleTableComponent', 'selector': 'app-example-table'},{'name': 'FeedbackComponent', 'selector': 'app-feedback'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalsComponent', 'selector': 'app-modals'},{'name': 'ParentComponent', 'selector': 'app-parent'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'ReportHistoryComponent', 'selector': 'app-report-history'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RunTestToast', 'selector': '[pink-toast-component]'},{'name': 'ScenarioEditorComponent', 'selector': 'app-scenario-editor'},{'name': 'StoriesBarComponent', 'selector': 'app-stories-bar'},{'name': 'StoryEditorComponent', 'selector': 'app-story-editor'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'TestAccountComponent', 'selector': 'app-test-account'}];\n    var DIRECTIVES = [{'name': 'EditableOnEnterDirective', 'selector': '[editableOnEnter]'},{'name': 'EditModeDirective', 'selector': '[editMode]'},{'name': 'FocusableDirective', 'selector': '[focusable]'},{'name': 'PasswordConfirmedValidatorDirective', 'selector': '[appPasswordConfirmed]'},{'name': 'ViewModeDirective', 'selector': '[viewMode]'}];\n    var ACTUAL_COMPONENT = {'name': 'AccountManagementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiService\n                            \n                            \n                                error\n                            \n                            \n                                githubName\n                            \n                            \n                                githubRepo\n                            \n                            \n                                jirakeys\n                            \n                            \n                                jiraProject\n                            \n                            \n                                repositories\n                            \n                            \n                                repository\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                showImpressum\n                            \n                            \n                                showTerms\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filterProjects\n                            \n                            \n                                getRepositories\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openImpressum\n                            \n                            \n                                openTerms\n                            \n                            \n                                selectRepository\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filterProjects\n                        \n                        \n                    \n                \n            \n            \n                \nfilterProjects(resp)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resp\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRepositories\n                        \n                        \n                    \n                \n            \n            \n                \ngetRepositories()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openImpressum\n                        \n                        \n                    \n                \n            \n            \n                \nopenImpressum()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openTerms\n                        \n                        \n                    \n                \n            \n            \n                \nopenTerms()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectRepository\n                        \n                        \n                    \n                \n            \n            \n                \nselectRepository(userRepository: RepositoryContainer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userRepository\n                                    \n                                                RepositoryContainer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApiService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            githubName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            githubRepo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jirakeys\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jiraProject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            repositories\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RepositoryContainer[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            repository\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showImpressum\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showTerms\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'cucumber-frontend'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {ApiService} from './Services/api.service';\nimport { Router } from '@angular/router';\nimport { RepositoryContainer } from './model/RepositoryContainer';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  githubName: string;\n  title = 'cucumber-frontend';\n  repositories: RepositoryContainer[];\n  githubRepo: string[];\n  jiraProject: string[];\n  repository: string;\n  showImpressum: boolean = false;\n  showTerms: boolean = false;\n  jirakeys: any;\n  error: string;\n\n  constructor(public apiService: ApiService, public router: Router) {\n    this.apiService.getRepositoriesEvent.subscribe((repositories) => {\n      this.repositories = repositories;\n    });\n    this.apiService.logoutEvent.subscribe(_ => {\n      this.logout();\n  });\n  }\n\n  ngOnInit() {\n    this.getRepositories();\n    if(!this.apiService.urlReceived) {\n      this.apiService.getBackendInfo()\n    }\n    //this.apiService.local = localStorage.getItem('clientId') === localStorage.getItem('clientId_local')\n  }\n\n  openTerms(){\n    this.showImpressum = false;\n    this.showTerms = !this.showTerms;\n    if(this.showTerms) {\n      const footer: HTMLElement = document.getElementById('footer');\n      footer.scrollIntoView();\n    }\n  }\n\n  openImpressum(){\n    this.showTerms = false;\n    this.showImpressum = !this.showImpressum;\n    if(this.showImpressum) {\n      const footer: HTMLElement = document.getElementById('footer');\n      footer.scrollIntoView();\n    }\n  }\n\n  getRepositories() {\n    console.log('get Repositories');\n    if (this.apiService.isLoggedIn() && (typeof this.repositories === 'undefined' || this.repositories.length  {\n        this.repositories = resp;\n        console.log('repositories', this.repositories);\n      }, (err) => {\n        this.error = err.error;\n      });\n    }\n  }\n\n  filterProjects(resp) {\n    try{\n      let projectNames = [];\n      let projectKeys = [];\n      JSON.parse(resp)['projects'].forEach(entry => {\n          projectNames = projectNames.concat(`jira/${entry['name']}`);\n          projectKeys = projectKeys.concat(`${entry['key']}`);\n      });\n      this.jirakeys = projectKeys;\n      console.log(this.jirakeys);\n      return projectNames;\n    }catch(error) {\n      return []\n    }\n  }\n\n  selectRepository(userRepository: RepositoryContainer) {\n    const ref: HTMLLinkElement = document.getElementById('githubHref') as HTMLLinkElement;\n    ref.href = 'https://github.com/' + userRepository.value;\n    localStorage.setItem('repository', userRepository.value)\n    localStorage.setItem('source', userRepository.source)\n    localStorage.setItem('id', userRepository._id)\n    if(this.router.url !== '/'){\n      this.router.navigate(['']);\n    } else {\n      this.apiService.getStories(userRepository).subscribe((resp) => {\n      });\n    }\n  }\n\n  logout() {\n    this.repositories = undefined;\n    this.apiService.logoutUser().subscribe(resp => {\n    });\n    this.router.navigate(['/login']);\n  }\n  \n}\n    \n\n    \n        \n  \n    \n    \n      menu\n      \n        \n          \n            \n              Projects\n                \n                  \n                   \n                     \n                     \n                     \n                     {{repository.value}}\n                   \n                  \n                \n            \n          \n          \n            Account Settings\n          \n          \n            Logout\n          \n        \n      \n      Version 1.3.2\n    \n\n\n    \n    \n      \n        \n          \n        \n      \n    \n    \n    \n      \n        \n          Feedback\n        \n        \n          Help\n            \n              Tutorial (german)\n              Tutorial (english)\n            \n        \n        \n      \n    \n  \n\n  \n    \n  \n\n  \n    \n      Impressum\n      Terms\n    \n    \n      \n        \n      \n    -->\n    \n      \n        Seed-Test\n        Email: seed-test@adesso.de\n        https://github.com/adessoAG/Seed-Test\n      \n      \n        This is only a demo version of an open source application\n        The maker of this service is not liable for the user and its data\n        It is licenced under the MIT Licence\n        For more information\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                *{\n  padding: 0px;\n  margin: 0px;\n}\n/* Refactor this*/\n.grid{\n  background-color: var(--light-grey);\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: auto 1fr auto;\n  grid-template-areas:\n  \"topnav\"\n  \"router\"\n  \"footer\";\n\n  /*Below provides sticky footer*/\n  min-height: 100vh;\n}\n\n.router{\n  grid-area: router;\n  background-color: var(--light-grey);\n}\n\n\n.topnav{\n  /*background-color: #999;*/\n  background-color: var(--dark-grey);\n  grid-area: topnav;\n  display: grid;\n  grid-template-columns: 3fr auto 1fr auto 3fr;\n  grid-template-areas:\n  \"left . center . right\";\n}\n\n.topnav a {\n  text-align: center;\n  text-decoration: none;\n  font-size: 17px;\n}\n\n.topnavRight{\n  grid-area: right;\n  align-self: center;\n  justify-self: right;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  align-content: center;\n}\n\n.topnavCenter{\n  grid-area: center;\n  align-self: center;\n}\n\n.topnavRight a{\n  padding: 12px;\n}\n\n\n#version {\n  color: var(--light-grey);\n  padding: 17px;\n}\n\n.impressum, .terms {\n  text-align: center;\n  color: var(--white);\n  font-size: small;\n  padding: 4px;\n  position: center;\n\n}\n\n.footer{\n  grid-area: footer;\n  display: grid;\n  background-color: var(--dark-grey);\n  grid-template-rows: auto auto;\n  grid-template-columns: 1fr auto 1fr;\n  grid-template-areas:\n  \". footerCenter adessoLogo\"\n  \"expendable expendable expendable\";\n  justify-items: center;\n}\n\n.footerCenter{\n  grid-area: footerCenter;\n  grid-column-start: 2;\n  margin-left: auto;\n  display: flex;\n  flex-direction: row;\n}\n\n.expendable {\n  grid-area: expendable;\n}\n\n.footerCenter > p {\n  padding: 0px 15px;\n  align-self: center;\n  justify-content: center;\n\n}\n\n.adessoLogo{\n  grid-area: adessoLogo;\n  justify-self: flex-end;\n}\n\n.impressum:hover,\n.terms:hover{\n  text-decoration: underline;\n  cursor: pointer;\n}\n\n.impressumContent,\n.termsContent{\n  display: block;\n  text-align: center;\n}\n\n.impressumContent p,\n.impressumContent a,\n.termsContent a,\n.termsContent p{\n  color: var(--white);\n  text-align: center;\n  font-size: x-small;\n}\n\n#adesso-logo {\n  padding: 5px;\n  height: 40px;\n}\n\n.rightButton {\n  background-color: transparent;\n  color: var(--white);\n  padding: 13px;\n  font-size: 15px;\n  border: none;\n  cursor: pointer;\n  transition: 0.3s;\n  outline: none;\n}\n\n.rightButton:hover, .menuButton:hover {\n  color: var(--light-grey);\n}\n\na:hover{\n  color: var(--ocean-blue);\n}\n\n#logo {\n  height: 51px;\n}\n\n.menuButton{\n  color: var(--white);\n  outline: none;\n  font-style: inherit;\n  padding: 12px 20px;\n  border: 0px;\n  background: transparent;\n  float: left;\n  transition: 0.3s;\n}\n\n.menuSelection{\n  font-size: 100%;\n  font-style: inherit;\n  padding: 12px 16px;\n  border: 0px;\n  background-color: transparent;\n  color: var(--black);\n  outline: none;\n}\n\n.menuSelection:hover{\n  color: var(--ocean-blue);\n}\n\n.menuSelection#logout:hover{\n  color: var(--grape);\n}\n\n/*dropdown general*/\n\n.dropdown{\n  position: relative;\n  display: inline-block;\n}\n\n.dropdown-list{\n  display: none;\n  position: fixed;\n  background-color: var(--light-grey);\n  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n  z-index: 1;\n  list-style-type: none;\n  overflow-y: auto;\n  max-height: 70%;\n  height: auto;\n}\n\n.dropdown-list a{\n  overflow: auto;\n  color: var(--black);\n  padding: 12px 16px;\n  display: block;\n  list-style-type: none;\n  text-decoration: none;\n  margin-left: auto;\n  margin-right: auto;\n  font-size: 14px;\n}\n.dropdown-list li{\n  text-align: center;\n}\n\n.dropdown-list a:hover{\n  color: var(--ocean-blue);\n}\n\n.dropdown:hover .dropdown-list{\n  display: block;\n}\n\n.list-item{\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.repo_img{\n  margin-left: 10px;\n  margin-right: 5px;\n  max-height: 20px;\n}\n.repoButton{\n  margin-right: 10px;\n  margin-left: 5px;\n  outline: none;\n}\n\n#githubHref{\n  color: var(--white);\n  transition: 0.3s;\n}\n\n#githubHref:hover{\n  color: var(--light-grey);\n}\n\n@media screen and (max-width: 600px) {\n  .topnav a, .topnavRight {\n    float: none;\n    display: block;\n  }\n\n  .topnavCenter a {\n    position: relative;\n    top: 0;\n    left: 0;\n    transform: none;\n  }\n\n  .topnavRight{\n    text-align: center;\n  }\n\n  .topnavRight{\n    text-align: center;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                menu                                                  Projects                                                                                                                                         {{repository.value}}                                                                                                 Account Settings                                Logout                              Version 1.3.2                                                                                      Feedback                          Help                          Tutorial (german)              Tutorial (english)                                                            Impressum      Terms                                -->                  Seed-Test        Email: seed-test@adesso.de        https://github.com/adessoAG/Seed-Test                    This is only a demo version of an open source application        The maker of this service is not liable for the user and its data        It is licenced under the MIT Licence        For more information            '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmResetPasswordComponent', 'selector': 'app-confirm-reset-password'},{'name': 'DeleteScenarioToast', 'selector': '[pink-toast-component]'},{'name': 'EditableComponent', 'selector': 'editable'},{'name': 'ExampleTableComponent', 'selector': 'app-example-table'},{'name': 'FeedbackComponent', 'selector': 'app-feedback'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalsComponent', 'selector': 'app-modals'},{'name': 'ParentComponent', 'selector': 'app-parent'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'ReportHistoryComponent', 'selector': 'app-report-history'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RunTestToast', 'selector': '[pink-toast-component]'},{'name': 'ScenarioEditorComponent', 'selector': 'app-scenario-editor'},{'name': 'StoriesBarComponent', 'selector': 'app-stories-bar'},{'name': 'StoryEditorComponent', 'selector': 'app-story-editor'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'TestAccountComponent', 'selector': 'app-test-account'}];\n    var DIRECTIVES = [{'name': 'EditableOnEnterDirective', 'selector': '[editableOnEnter]'},{'name': 'EditModeDirective', 'selector': '[editMode]'},{'name': 'FocusableDirective', 'selector': '[focusable]'},{'name': 'PasswordConfirmedValidatorDirective', 'selector': '[appPasswordConfirmed]'},{'name': 'ViewModeDirective', 'selector': '[viewMode]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAccountManagementComponent\n\nAccountManagementComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccountManagementComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nConfirmResetPasswordComponent\n\nConfirmResetPasswordComponent\n\nAppModule -->\n\nConfirmResetPasswordComponent->AppModule\n\n\n\n\n\nDeleteScenarioToast\n\nDeleteScenarioToast\n\nAppModule -->\n\nDeleteScenarioToast->AppModule\n\n\n\n\n\nEditModeDirective\n\nEditModeDirective\n\nAppModule -->\n\nEditModeDirective->AppModule\n\n\n\n\n\nEditableComponent\n\nEditableComponent\n\nAppModule -->\n\nEditableComponent->AppModule\n\n\n\n\n\nEditableOnEnterDirective\n\nEditableOnEnterDirective\n\nAppModule -->\n\nEditableOnEnterDirective->AppModule\n\n\n\n\n\nExampleTableComponent\n\nExampleTableComponent\n\nAppModule -->\n\nExampleTableComponent->AppModule\n\n\n\n\n\nFeedbackComponent\n\nFeedbackComponent\n\nAppModule -->\n\nFeedbackComponent->AppModule\n\n\n\n\n\nFocusableDirective\n\nFocusableDirective\n\nAppModule -->\n\nFocusableDirective->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nModalsComponent\n\nModalsComponent\n\nAppModule -->\n\nModalsComponent->AppModule\n\n\n\n\n\nParentComponent\n\nParentComponent\n\nAppModule -->\n\nParentComponent->AppModule\n\n\n\n\n\nPasswordConfirmedValidatorDirective\n\nPasswordConfirmedValidatorDirective\n\nAppModule -->\n\nPasswordConfirmedValidatorDirective->AppModule\n\n\n\n\n\nRegistrationComponent\n\nRegistrationComponent\n\nAppModule -->\n\nRegistrationComponent->AppModule\n\n\n\nAppModule -->\n\nRegistrationComponent->AppModule\n\n\n\n\n\nReportComponent\n\nReportComponent\n\nAppModule -->\n\nReportComponent->AppModule\n\n\n\n\n\nReportHistoryComponent\n\nReportHistoryComponent\n\nAppModule -->\n\nReportHistoryComponent->AppModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAppModule -->\n\nResetPasswordComponent->AppModule\n\n\n\n\n\nRunTestToast\n\nRunTestToast\n\nAppModule -->\n\nRunTestToast->AppModule\n\n\n\n\n\nScenarioEditorComponent\n\nScenarioEditorComponent\n\nAppModule -->\n\nScenarioEditorComponent->AppModule\n\n\n\n\n\nStoriesBarComponent\n\nStoriesBarComponent\n\nAppModule -->\n\nStoriesBarComponent->AppModule\n\n\n\n\n\nStoryEditorComponent\n\nStoryEditorComponent\n\nAppModule -->\n\nStoryEditorComponent->AppModule\n\n\n\n\n\nTermsComponent\n\nTermsComponent\n\nAppModule -->\n\nTermsComponent->AppModule\n\n\n\n\n\nTestAccountComponent\n\nTestAccountComponent\n\nAppModule -->\n\nTestAccountComponent->AppModule\n\n\n\n\n\nViewModeDirective\n\nViewModeDirective\n\nAppModule -->\n\nViewModeDirective->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nApiService\n\nApiService\n\nAppModule -->\n\nApiService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AccountManagementComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            ConfirmResetPasswordComponent\n                        \n                        \n                            DeleteScenarioToast\n                        \n                        \n                            EditModeDirective\n                        \n                        \n                            EditableComponent\n                        \n                        \n                            EditableOnEnterDirective\n                        \n                        \n                            ExampleTableComponent\n                        \n                        \n                            FeedbackComponent\n                        \n                        \n                            FocusableDirective\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            ModalsComponent\n                        \n                        \n                            ParentComponent\n                        \n                        \n                            PasswordConfirmedValidatorDirective\n                        \n                        \n                            RegistrationComponent\n                        \n                        \n                            RegistrationComponent\n                        \n                        \n                            ReportComponent\n                        \n                        \n                            ReportHistoryComponent\n                        \n                        \n                            ResetPasswordComponent\n                        \n                        \n                            RunTestToast\n                        \n                        \n                            ScenarioEditorComponent\n                        \n                        \n                            StoriesBarComponent\n                        \n                        \n                            StoryEditorComponent\n                        \n                        \n                            TermsComponent\n                        \n                        \n                            TestAccountComponent\n                        \n                        \n                            ViewModeDirective\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            RunTestToast\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ApiService\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule, CUSTOM_ELEMENTS_SCHEMA} from '@angular/core';\nimport {RouterModule} from '@angular/router';\nimport {ROUTES} from '../app/routes/routes';\nimport {AppComponent} from './app.component';\nimport {ScenarioEditorComponent} from './scenario-editor/scenario-editor.component';\nimport {HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\nimport {ApiService} from './Services/api.service';\nimport {StoriesBarComponent} from './stories-bar/stories-bar.component';\nimport {ParentComponent} from './parent/parent.component';\nimport {LoginComponent} from './login/login.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {AuthGuard} from './guards/auth.guard';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatListModule} from '@angular/material/list'\nimport {ExampleTableComponent} from './example-table/example-table.component';\nimport {EditableComponent} from './editable/editable.component';\nimport {ViewModeDirective} from './directives/view-mode.directive';\nimport {EditModeDirective} from './directives/edit-mode.directive';\nimport {EditableOnEnterDirective} from './directives/edit-on-enter.directive';\nimport {FocusableDirective} from './editable/focusable.directive';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { FeedbackComponent } from './feedback/feedback.component';\nimport { TermsComponent } from './terms/terms.component';\nimport { StoryEditorComponent } from './story-editor/story-editor.component';\nimport { AccountManagementComponent } from './account-management/account-management.component';\nimport {CookieService } from 'ngx-cookie-service';\nimport { TestAccountComponent } from './test-account/test-account.component'\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport { ReportComponent } from './report/report.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { PasswordConfirmedValidatorDirective } from './directives/password-confirmed.directive';\nimport { ToastrModule } from \"ngx-toastr\";\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { MatCarouselModule } from '@ngbmodule/material-carousel';\nimport {RunTestToast} from './custom-toast'\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\nimport { ConfirmResetPasswordComponent } from './confirm-reset-password/confirm-reset-password.component';\nimport { ModalsComponent } from './modals/modals.component'\nimport { DeleteScenarioToast } from './deleteScenario-toast';\nimport { DEFAULT_TIMEOUT, TimeoutInterceptor } from './Services/timeout-interceptor.interceptor';\nimport { ReportHistoryComponent } from './report-history/report-history.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ScenarioEditorComponent,\n    StoriesBarComponent,\n    ParentComponent,\n    LoginComponent,\n    ExampleTableComponent,\n    ViewModeDirective,\n    EditModeDirective,\n    EditableComponent,\n    FocusableDirective,\n    EditableOnEnterDirective,\n    FeedbackComponent,\n    TermsComponent,\n    AccountManagementComponent,\n    TestAccountComponent,\n    StoryEditorComponent,\n    RegistrationComponent,\n    RegistrationComponent,\n    PasswordConfirmedValidatorDirective,\n    ReportComponent,\n    RunTestToast,\n    DeleteScenarioToast,\n    ResetPasswordComponent,\n    ConfirmResetPasswordComponent,\n    ModalsComponent,\n    ReportHistoryComponent\n  ],\n  imports: [\n      NgbModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    MatTableModule,\n    MatListModule,\n    RouterModule.forRoot(ROUTES),\n    FormsModule,\n    DragDropModule,\n    MatProgressSpinnerModule,\n    MatCarouselModule.forRoot(),\n    ToastrModule.forRoot({\n      timeOut: 3000\n    })\n  ],\n  entryComponents: [RunTestToast],\n  providers: [ApiService, AuthGuard, CookieService,[{ provide: HTTP_INTERCEPTORS, useClass: TimeoutInterceptor, multi: true }], [{ provide: DEFAULT_TIMEOUT, useValue: 120000 }]],\n  bootstrap: [AppComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getParagraphText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParagraphText\n                        \n                        \n                    \n                \n            \n            \n                \ngetParagraphText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get('/');\n  }\n\n  getParagraphText() {\n    return element(by.css('app-root h1')).getText();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/auth.guard.ts\n            \n\n                \n                Description\n                \n                \n                    Guard to check if the user is logged in\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/auth.guard.ts:9\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/guards/auth.guard.ts:23\n                \n            \n\n\n            \n                \n                    Checks if the user is logged in\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        boolean if the user is logged in\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { ApiService } from '../Services/api.service';\n\n/**\n * Guard to check if the user is logged in\n */\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n    /**\n     * Constructor\n     * @param apiService \n     * @param router \n     */\n    constructor(private apiService: ApiService,\n                private router: Router) {}\n\n    /**\n     * Checks if the user is logged in\n     * @returns boolean if the user is logged in\n     */\n    canActivate(): boolean {\n        if (this.apiService.isLoggedIn()) { return true; }\n        this.router.navigate(['/login']);\n        return false;\n    }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Background.html":{"url":"interfaces/Background.html","title":"interface - Background","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Background\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/Background.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        saved\n                                \n                                \n                                        stepDefinitions\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        saved\n                                    \n                                \n                                \n                                    \n                                        saved:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stepDefinitions\n                                    \n                                \n                                \n                                    \n                                        stepDefinitions:         StepDefinitionBackground\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StepDefinitionBackground\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { StepDefinitionBackground } from './StepDefinitionBackground';\n\nexport interface Background {\n    name?: string;\n    stepDefinitions: StepDefinitionBackground;\n    saved?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Block.html":{"url":"interfaces/Block.html","title":"interface - Block","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Block\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/Block.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        _id\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        owner\n                                \n                                \n                                            Optional\n                                        repository\n                                \n                                \n                                            Optional\n                                        repositoryId\n                                \n                                \n                                            Optional\n                                        source\n                                \n                                \n                                        stepDefinitions\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                    \n                                \n                                \n                                    \n                                        owner:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        repository\n                                    \n                                \n                                \n                                    \n                                        repository:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        repositoryId\n                                    \n                                \n                                \n                                    \n                                        repositoryId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stepDefinitions\n                                    \n                                \n                                \n                                    \n                                        stepDefinitions:         StepDefinition\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StepDefinition\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { StepDefinition } from \"./StepDefinition\";\n\nexport interface Block {\n    _id?: any;\n    owner?: any;\n    name?: string;\n    stepDefinitions: StepDefinition;\n    repositoryId?: string;\n    repository?: string;\n    source?: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmResetPasswordComponent.html":{"url":"components/ConfirmResetPasswordComponent.html","title":"component - ConfirmResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfirmResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/confirm-reset-password/confirm-reset-password.component.ts\n\n\n    \n        Description\n    \n    \n        Component to enable to reset the password\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirm-reset-password\n            \n\n            \n                styleUrls\n                ./confirm-reset-password.component.css\n            \n\n\n\n            \n                templateUrl\n                ./confirm-reset-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiService\n                            \n                            \n                                password\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmReset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/confirm-reset-password/confirm-reset-password.component.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                api service\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            confirmReset\n                        \n                        \n                    \n                \n            \n            \n                \nconfirmReset(form: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/confirm-reset-password/confirm-reset-password.component.ts:46\n                \n            \n\n\n            \n                \n                    Confirm the reset and send new password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        form with the new password value\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApiService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/confirm-reset-password/confirm-reset-password.component.ts:34\n                            \n                        \n\n                \n                    \n                        api service\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/confirm-reset-password/confirm-reset-password.component.ts:25\n                            \n                        \n\n                \n                    \n                        New Password of the user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uuid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/confirm-reset-password/confirm-reset-password.component.ts:20\n                            \n                        \n\n                \n                    \n                        Id of the reset password request\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component} from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport {ApiService} from '../Services/api.service';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n/**\n * Component to enable to reset the password\n */\n@Component({\n  selector: 'app-confirm-reset-password',\n  templateUrl: './confirm-reset-password.component.html',\n  styleUrls: ['./confirm-reset-password.component.css']\n})\n\nexport class ConfirmResetPasswordComponent {\n \n  /**\n   * Id of the reset password request\n   */\n  uuid: string;\n\n  /**\n   * New Password of the user\n   */\n  password: string; \n\n \n  /**\n   * Constructor\n   * @param apiService api service\n   * @param router \n   * @param route \n   */\n  constructor(public apiService: ApiService, private router: Router, private route: ActivatedRoute) {\n    this.route.queryParams.subscribe((params) => {\n      if (params.uuid){\n           this.uuid = params.uuid;\n       }\n   })\n  }\n\n  /**\n   * Confirm the reset and send new password\n   * @param form form with the new password value\n   */\n  confirmReset(form : NgForm) {\n    this.apiService.confirmReset(this.uuid, form.value.password).toPromise()\n    this.router.navigate(['/login']);\n  }\n\n}\n\n    \n\n    \n        \n \n   \n    \n    Reset Your Password\n     \n      \n      \n      \n    \n      \n      \n      \n    -->\n    \n      \n      \n      Password must be at least 8 characters long\n      \n        \n      \n      \n      \n\n    \n      Confirm New Password\n    \n  \n\n    \n\n    \n                \n                    ./confirm-reset-password.component.css\n                \n                * {\n    padding: 0px;\n    margin: 0px;\n}\n\n\n#headerFont{\n    color:var(--ocean-blue);\n}\n\n.grid{\n    display: grid;\n    grid-template-rows: auto;\n    grid-template-columns: 1fr 1fr 1fr;\n    grid-template-areas: \"formular\";\n    background-color: var(--white);\n    place-items: center;\n}\n\n.formular{\n    grid-area: formular;\n    grid-column: 2 / 3;\n    text-align: center;\n    background-color: var(--white);\n    padding: 80px 50px 20px;\n    margin-bottom: 80px;\n}\n\n\n#passwordLengthInfo{\n    font-size: small;\n}\n\n#headerFont{\n    color:var(--ocean-blue);\n}\n\n.uk-form-controls{\n    border-radius: 3px;\n    padding: 5px 5px 5px 5px;\n}\n\n.ng-valid[required], .ng-valid.required  {\n    border-left: 5px solid #53d35a; \n  }\n  \n.ng-invalid:not(form)  {\n    border-left: 5px solid var(--ocean-blue); \n  }\n\n.cross-validation-error input {\n    border-left: 5px solid #d15553;\n  }\n\ninput.wrongEmail {\n  border-left: 5px solid #d15553;\n}\n\n#email, #confirmPassword{\n    margin: 25px;\n}\n\n.wrongLogin{\n    background-color: rgb(228, 92, 92);\n    text-align: center;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Reset Your Password                                                 -->                      Password must be at least 8 characters long                                          Confirm New Password      '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmResetPasswordComponent', 'selector': 'app-confirm-reset-password'},{'name': 'DeleteScenarioToast', 'selector': '[pink-toast-component]'},{'name': 'EditableComponent', 'selector': 'editable'},{'name': 'ExampleTableComponent', 'selector': 'app-example-table'},{'name': 'FeedbackComponent', 'selector': 'app-feedback'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalsComponent', 'selector': 'app-modals'},{'name': 'ParentComponent', 'selector': 'app-parent'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'ReportHistoryComponent', 'selector': 'app-report-history'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RunTestToast', 'selector': '[pink-toast-component]'},{'name': 'ScenarioEditorComponent', 'selector': 'app-scenario-editor'},{'name': 'StoriesBarComponent', 'selector': 'app-stories-bar'},{'name': 'StoryEditorComponent', 'selector': 'app-story-editor'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'TestAccountComponent', 'selector': 'app-test-account'}];\n    var DIRECTIVES = [{'name': 'EditableOnEnterDirective', 'selector': '[editableOnEnter]'},{'name': 'EditModeDirective', 'selector': '[editMode]'},{'name': 'FocusableDirective', 'selector': '[focusable]'},{'name': 'PasswordConfirmedValidatorDirective', 'selector': '[appPasswordConfirmed]'},{'name': 'ViewModeDirective', 'selector': '[viewMode]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DeleteScenarioToast.html":{"url":"components/DeleteScenarioToast.html","title":"component - DeleteScenarioToast","body":"\n                   \n\n\n\n\n\n  Components\n  DeleteScenarioToast\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/deleteScenario-toast.ts\n\n\n\n    \n        Extends\n    \n    \n            Toast\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n            \n                preserveWhitespaces\n                false\n            \n\n\n\n            \n                selector\n                [pink-toast-component]\n            \n\n\n            \n                styles\n                \n        a {\n            background: #388196;\n            margin: 2px;\n        }\n\n        .deleteButton{\n          background: darkred;\n        }\n        \n        a:hover {\n            color: black;\n        }\n    \n            \n\n            \n                template\n                \n  \n    \n      {{ title }}\n    \n    \n    \n    \n      {{ message }}\n    \n  \n  \n    \n        {{ deleteString }}\n    \n    \n    {{ cancelString }}\n    \n    \n      close\n    \n  \n\n\n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiService\n                            \n                            \n                                cancelString\n                            \n                            \n                                deleteString\n                            \n                            \n                                    Public\n                                toastPackage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteToast\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toastrService: ToastrService, toastPackage: ToastPackage, apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/deleteScenario-toast.ts:117\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toastrService\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastPackage\n                                                  \n                                                        \n                                                                    ToastPackage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteToast\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteToast(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/deleteScenario-toast.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApiService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/deleteScenario-toast.ts:124\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cancelString\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Cancel'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/deleteScenario-toast.ts:117\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteString\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Delete'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/deleteScenario-toast.ts:116\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toastPackage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ToastPackage\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/deleteScenario-toast.ts:123\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n    animate,\n    keyframes,\n    state,\n    style,\n    transition,\n    trigger\n  } from '@angular/animations';\n  import { Component} from '@angular/core';\n  \n  import { Toast, ToastrService, ToastPackage } from 'ngx-toastr';\nimport { ApiService } from './Services/api.service';\n  \n  @Component({\n    selector: '[pink-toast-component]',\n    //styles: [`\n    //  :host {\n    //    background-color: #FF69B4;\n    //    position: relative;\n    //    overflow: hidden;\n    //    margin: 0 0 6px;\n    //    padding: 10px 10px 10px 10px;\n    //    width: 300px;\n    //    border-radius: 3px 3px 3px 3px;\n    //    color: #FFFFFF;\n    //    pointer-events: all;\n    //    cursor: pointer;\n    //  }\n    //  .btn-pink {\n    //    -webkit-backface-visibility: hidden;\n    //    -webkit-transform: translateZ(0);\n    //  }\n    //`],\n    styles:[`\n        a {\n            background: #388196;\n            margin: 2px;\n        }\n\n        .deleteButton{\n          background: darkred;\n        }\n        \n        a:hover {\n            color: black;\n        }\n    `],\n    template: `\n    \n      \n        \n          {{ title }}\n        \n        \n        \n        \n          {{ message }}\n        \n      \n      \n        \n            {{ deleteString }}\n        \n        \n        {{ cancelString }}\n        \n        \n          close\n        \n      \n    \n    \n      \n    \n    `,\n    animations: [\n      trigger('flyInOut', [\n        state('inactive', style({\n          opacity: 0,\n        })),\n        transition('inactive => active', animate('400ms ease-out', keyframes([\n          style({\n            transform: 'translate3d(100%, 0, 0) skewX(-30deg)',\n            opacity: 0,\n          }),\n          style({\n            transform: 'skewX(20deg)',\n            opacity: 1,\n          }),\n          style({\n            transform: 'skewX(-5deg)',\n            opacity: 1,\n          }),\n          style({\n            transform: 'none',\n            opacity: 1,\n          }),\n        ]))),\n        transition('active => removed', animate('400ms ease-out', keyframes([\n          style({\n            opacity: 1,\n          }),\n          style({\n            transform: 'translate3d(100%, 0, 0) skewX(30deg)',\n            opacity: 0,\n          }),\n        ]))),\n      ]),\n    ],\n    preserveWhitespaces: false,\n  })\n  export class DeleteScenarioToast extends Toast {\n    // used for demo purposes\n    deleteString = 'Delete';\n    cancelString = 'Cancel';\n\n    // constructor is only necessary when not using AoT\n\n    constructor(\n      protected toastrService: ToastrService,\n      public toastPackage: ToastPackage,\n      public apiService: ApiService\n    ) {\n      super(toastrService, toastPackage);\n    }\n  \n    deleteToast(event: Event){\n        console.log('delete Toast')\n        event.stopPropagation();\n        this.apiService.deleteScenarioEmitter()\n        this.remove();\n    }\n  }\n    \n\n\n    \n            \n        a {\n            background: #388196;\n            margin: 2px;\n        }\n\n        .deleteButton{\n          background: darkred;\n        }\n        \n        a:hover {\n            color: black;\n        }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ title }}                      {{ message }}                    {{ deleteString }}            {{ cancelString }}              close        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmResetPasswordComponent', 'selector': 'app-confirm-reset-password'},{'name': 'DeleteScenarioToast', 'selector': '[pink-toast-component]'},{'name': 'EditableComponent', 'selector': 'editable'},{'name': 'ExampleTableComponent', 'selector': 'app-example-table'},{'name': 'FeedbackComponent', 'selector': 'app-feedback'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalsComponent', 'selector': 'app-modals'},{'name': 'ParentComponent', 'selector': 'app-parent'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'ReportHistoryComponent', 'selector': 'app-report-history'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RunTestToast', 'selector': '[pink-toast-component]'},{'name': 'ScenarioEditorComponent', 'selector': 'app-scenario-editor'},{'name': 'StoriesBarComponent', 'selector': 'app-stories-bar'},{'name': 'StoryEditorComponent', 'selector': 'app-story-editor'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'TestAccountComponent', 'selector': 'app-test-account'}];\n    var DIRECTIVES = [{'name': 'EditableOnEnterDirective', 'selector': '[editableOnEnter]'},{'name': 'EditModeDirective', 'selector': '[editMode]'},{'name': 'FocusableDirective', 'selector': '[focusable]'},{'name': 'PasswordConfirmedValidatorDirective', 'selector': '[appPasswordConfirmed]'},{'name': 'ViewModeDirective', 'selector': '[viewMode]'}];\n    var ACTUAL_COMPONENT = {'name': 'DeleteScenarioToast'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/EditModeDirective.html":{"url":"directives/EditModeDirective.html","title":"directive - EditModeDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  EditModeDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/directives/edit-mode.directive.ts\n        \n\n            \n                Description\n            \n            \n                Directive to activate Edit Mode for the example table\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [editMode]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                tpl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tpl: TemplateRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/directives/edit-mode.directive.ts:11\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tpl\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tpl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/directives/edit-mode.directive.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, TemplateRef } from '@angular/core';\n\n/**\n * Directive to activate Edit Mode for the example table\n */\n\n@Directive({\n  selector: '[editMode]'\n})\n\nexport class EditModeDirective {\n  /**\n   * Constructor\n   * @param tpl\n   */\n  constructor(public tpl: TemplateRef) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditableComponent.html":{"url":"components/EditableComponent.html","title":"component - EditableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/editable/editable.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                editable\n            \n\n            \n                styleUrls\n                ./editable.component.css\n            \n\n\n\n            \n                templateUrl\n                ./editable.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editMode\n                            \n                            \n                                editMode$\n                            \n                            \n                                editModeTpl\n                            \n                            \n                                mode\n                            \n                            \n                                viewModeTpl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                editModeHandler\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toViewMode\n                            \n                            \n                                    Private\n                                viewModeHandler\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    element\n                                \n                                \n                                    currentView\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(host: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/editable/editable.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        update\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/editable/editable.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            editModeHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editModeHandler()\n                \n            \n\n\n            \n                \n                    Defined in src/app/editable/editable.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/editable/editable.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/editable/editable.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toViewMode\n                        \n                        \n                    \n                \n            \n            \n                \ntoViewMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/editable/editable.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            viewModeHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    viewModeHandler()\n                \n            \n\n\n            \n                \n                    Defined in src/app/editable/editable.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/editable/editable.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editMode$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.editMode.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/editable/editable.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editModeTpl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EditModeDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChild(EditModeDirective)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/editable/editable.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"view\" | \"edit\"\n\n                        \n                    \n                    \n                        \n                            Default value : 'view'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/editable/editable.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewModeTpl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ViewModeDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChild(ViewModeDirective)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/editable/editable.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n\n                \n                    \n                        getelement()\n                    \n                \n                            \n                                \n                                    Defined in src/app/editable/editable.component.ts:38\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        currentView\n                    \n                \n\n                \n                    \n                        getcurrentView()\n                    \n                \n                            \n                                \n                                    Defined in src/app/editable/editable.component.ts:62\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, ContentChild, ElementRef, EventEmitter,\n   Output, OnInit, OnDestroy } from '@angular/core';\nimport { ViewModeDirective } from '../directives/view-mode.directive';\nimport { EditModeDirective } from '../directives/edit-mode.directive';\nimport { fromEvent, Subject } from 'rxjs';\nimport { filter, take, switchMapTo } from 'rxjs/operators';\nimport { untilDestroyed } from 'ngx-take-until-destroy';\n\n@Component({\n  selector: 'editable',\n  templateUrl: './editable.component.html',\n  styleUrls: ['./editable.component.css']\n})\nexport class EditableComponent implements OnInit, OnDestroy {\n  @ContentChild(ViewModeDirective) viewModeTpl: ViewModeDirective;\n  @ContentChild(EditModeDirective) editModeTpl: EditModeDirective;\n  @Output() update = new EventEmitter();\n\n  editMode = new Subject();\n  editMode$ = this.editMode.asObservable();\n\n  mode: 'view' | 'edit' = 'view';\n\n\n  constructor(private host: ElementRef) {\n  }\n\n  ngOnInit() {\n    this.viewModeHandler();\n    this.editModeHandler();\n  }\n\n  toViewMode() {\n    this.update.emit();\n    this.mode = 'view';\n  }\n\n  private get element() {\n    return this.host.nativeElement;\n  }\n\n  private viewModeHandler() {\n    fromEvent(this.element, 'dblclick').pipe(\n      untilDestroyed(this)\n    ).subscribe(() => {\n      this.mode = 'edit';\n      this.editMode.next(true);\n    });\n  }\n\n  private editModeHandler() {\n    const clickOutside$ = fromEvent(document, 'click').pipe(\n      filter(({ target }) => this.element.contains(target) === false),\n      take(1)\n    );\n    this.editMode$.pipe(\n      switchMapTo(clickOutside$),\n      untilDestroyed(this)\n    ).subscribe(event => this.toViewMode());\n  }\n\n  get currentView() {\n    return this.mode === 'view' ? this.viewModeTpl.tpl : this.editModeTpl.tpl;\n  }\n\n  ngOnDestroy() {\n  }\n\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./editable.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmResetPasswordComponent', 'selector': 'app-confirm-reset-password'},{'name': 'DeleteScenarioToast', 'selector': '[pink-toast-component]'},{'name': 'EditableComponent', 'selector': 'editable'},{'name': 'ExampleTableComponent', 'selector': 'app-example-table'},{'name': 'FeedbackComponent', 'selector': 'app-feedback'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalsComponent', 'selector': 'app-modals'},{'name': 'ParentComponent', 'selector': 'app-parent'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'ReportHistoryComponent', 'selector': 'app-report-history'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RunTestToast', 'selector': '[pink-toast-component]'},{'name': 'ScenarioEditorComponent', 'selector': 'app-scenario-editor'},{'name': 'StoriesBarComponent', 'selector': 'app-stories-bar'},{'name': 'StoryEditorComponent', 'selector': 'app-story-editor'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'TestAccountComponent', 'selector': 'app-test-account'}];\n    var DIRECTIVES = [{'name': 'EditableOnEnterDirective', 'selector': '[editableOnEnter]'},{'name': 'EditModeDirective', 'selector': '[editMode]'},{'name': 'FocusableDirective', 'selector': '[focusable]'},{'name': 'PasswordConfirmedValidatorDirective', 'selector': '[appPasswordConfirmed]'},{'name': 'ViewModeDirective', 'selector': '[viewMode]'}];\n    var ACTUAL_COMPONENT = {'name': 'EditableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/EditableOnEnterDirective.html":{"url":"directives/EditableOnEnterDirective.html","title":"directive - EditableOnEnterDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  EditableOnEnterDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/directives/edit-on-enter.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [editableOnEnter]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                keyup.enter\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(editable: EditableComponent)\n                    \n                \n                        \n                            \n                                Defined in src/app/directives/edit-on-enter.directive.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        editable\n                                                  \n                                                        \n                                                                        EditableComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            keyup.enter\n                        \n                        \n                    \n                \n            \n            \n                \nkeyup.enter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/directives/edit-on-enter.directive.ts:16\n                \n            \n\n\n        \n    \n\n\n\n\n    \n\n\n    \n        import { Directive, HostListener } from '@angular/core';\nimport { EditableComponent } from '../editable/editable.component';\n\n@Directive({\n  selector: '[editableOnEnter]'\n})\n\n/**\n * Directive to activate change the editable field for the example table\n */\nexport class EditableOnEnterDirective {\n  constructor(private editable: EditableComponent) {\n  }\n\n  @HostListener('keyup.enter')\n  onEnter() {\n    this.editable.toViewMode();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExampleTableComponent.html":{"url":"components/ExampleTableComponent.html","title":"component - ExampleTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ExampleTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/example-table/example-table.component.ts\n\n\n    \n        Description\n    \n    \n        Component of for the Example Table\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-example-table\n            \n\n            \n                styleUrls\n                ./example-table.component.css\n            \n\n\n\n            \n                templateUrl\n                ./example-table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                controls\n                            \n                            \n                                data\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                exampleThere\n                            \n                            \n                                selectedScenario\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkExample\n                            \n                            \n                                getControl\n                            \n                            \n                                initializeTable\n                            \n                            \n                                initializeTableControls\n                            \n                            \n                                inputChange\n                            \n                            \n                                updateField\n                            \n                            \n                                updateTable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                newSelectedScenario\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                checkRowIndex\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    newSelectedScenario\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        newSelectedScenario\n                    \n                \n                        \n                            \n                                    Defined in src/app/example-table/example-table.component.ts:59\n                            \n                        \n                \n                    \n                        Sets the new scenario\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        checkRowIndex\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/example-table/example-table.component.ts:43\n                            \n                        \n                \n                    \n                        Event emitter to check if ththe example table should be removed or added to\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkExample\n                        \n                        \n                    \n                \n            \n            \n                \ncheckExample(event, rowIndex)\n                \n            \n\n\n            \n                \n                    Defined in src/app/example-table/example-table.component.ts:154\n                \n            \n\n\n            \n                \n                    Emits an event to check if the example table should be removed\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        change event\n\n                                    \n                                \n                                \n                                    rowIndex\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        row index of the changed cell\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getControl\n                        \n                        \n                    \n                \n            \n            \n                \ngetControl(rowIndex: number, fieldName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/example-table/example-table.component.ts:132\n                \n            \n\n\n            \n                \n                    Get the controls of a specific cell\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    rowIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        index of the row\n\n                                    \n                                \n                                \n                                    fieldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        name of the cell column\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        FormControl of the cell\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeTable\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/example-table/example-table.component.ts:99\n                \n            \n\n\n            \n                \n                    Initializes the data of the table\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeTableControls\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeTableControls()\n                \n            \n\n\n            \n                \n                    Defined in src/app/example-table/example-table.component.ts:74\n                \n            \n\n\n            \n                \n                    Initializes the controls of the table\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            inputChange\n                        \n                        \n                    \n                \n            \n            \n                \ninputChange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/example-table/example-table.component.ts:67\n                \n            \n\n\n            \n                \n                    Sets the status of the scenario to not saved\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateField\n                        \n                        \n                    \n                \n            \n            \n                \nupdateField(columnIndex: number, rowIndex: number, field: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/example-table/example-table.component.ts:116\n                \n            \n\n\n            \n                \n                    Updates a field of the table\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    columnIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        index of the column of the changed value\n\n                                    \n                                \n                                \n                                    rowIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        index of the row of the changed value\n\n                                    \n                                \n                                \n                                    field\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        name of the changed value column\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateTable\n                        \n                        \n                    \n                \n            \n            \n                \nupdateTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/example-table/example-table.component.ts:139\n                \n            \n\n\n            \n                \n                    Updates the table controls and data\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controls\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormArray\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/example-table/example-table.component.ts:27\n                            \n                        \n\n                \n                    \n                        Controls of the table\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/example-table/example-table.component.ts:22\n                            \n                        \n\n                \n                    \n                        Data of the table entries\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/example-table/example-table.component.ts:18\n                            \n                        \n\n                \n                    \n                        Columns which are displayed in the table\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            exampleThere\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/example-table/example-table.component.ts:37\n                            \n                        \n\n                \n                    \n                        Boolean if the example table should be shown or not\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedScenario\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Scenario\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/example-table/example-table.component.ts:32\n                            \n                        \n\n                \n                    \n                        selected Scenario\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        newSelectedScenario\n                    \n                \n\n\n                \n                    \n                        setnewSelectedScenario(scenario)\n                    \n                \n                            \n                                \n                                    Defined in src/app/example-table/example-table.component.ts:59\n                                \n                            \n                    \n                        \n                                Sets the new scenario\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            scenario\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormArray, FormControl } from '@angular/forms';\nimport { Scenario } from '../model/Scenario';\n\n/**\n * Component of for the Example Table\n */\n@Component({\n  selector: 'app-example-table',\n  templateUrl: './example-table.component.html',\n  styleUrls: ['./example-table.component.css']\n})\nexport class ExampleTableComponent implements OnInit {\n\n  /**\n   * Columns which are displayed in the table\n   */\n  displayedColumns: string[] = [];\n  /**\n   * Data of the table entries\n   */\n  data = [];\n\n  /**\n   * Controls of the table\n   */\n  controls: FormArray;\n\n  /**\n   * selected Scenario\n   */\n  selectedScenario: Scenario;\n\n  /**\n   * Boolean if the example table should be shown or not\n   */\n  exampleThere: boolean = false;\n\n  /**\n   * Event emitter to check if ththe example table should be removed or added to\n   */\n  @Output()\n  checkRowIndex: EventEmitter = new EventEmitter();\n\n  /**\n   * @ignore\n   */\n  constructor() {}\n\n    /**\n   * @ignore\n   */\n  ngOnInit() {}\n\n  /**\n   * Sets the new scenario\n   */\n  @Input()\n  set newSelectedScenario(scenario: Scenario) {\n    this.selectedScenario = scenario;\n    this.updateTable();\n  }\n\n  /**\n   * Sets the status of the scenario to not saved\n   */\n  inputChange(){\n    this.selectedScenario.saved = false;\n  }\n\n  /**\n   * Initializes the controls of the table\n   */\n  initializeTableControls() {\n    //let seen = new Set();\n    //this.selectedScenario.stepDefinitions.example[0].values.filter(item => {\n    //    let k = item;\n    //    return seen.has(k) ? false : seen.add(k);\n    //});\n    //this.selectedScenario.stepDefinitions.example[0].values = Array.from(seen);\n    this.displayedColumns = this.selectedScenario.stepDefinitions.example[0].values;\n    const formArray: FormGroup[] = [];\n    for (let i = 1 ; i \n    \n\n    \n        \n\n\t\n\n\n\t \n\t\t\t {{column}}\n\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t{{element[column]}}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t \n\t\t\t\n\t\t\t\t\n\t\n\t\n\t\n\n\n\n\n    \n\n    \n                \n                    ./example-table.component.css\n                \n                table {\n    margin-top: 5px;\n    width: 100%;\n}\n\n.deactivated{\n  color: gray;\n  font-style: italic;\n}\n\n.valueRow{\n  font-weight: normal;\n}\n\n.mat-table{\n  font-family: Klavika, sans-serif;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t \t\t\t {{column}}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{element[column]}}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmResetPasswordComponent', 'selector': 'app-confirm-reset-password'},{'name': 'DeleteScenarioToast', 'selector': '[pink-toast-component]'},{'name': 'EditableComponent', 'selector': 'editable'},{'name': 'ExampleTableComponent', 'selector': 'app-example-table'},{'name': 'FeedbackComponent', 'selector': 'app-feedback'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalsComponent', 'selector': 'app-modals'},{'name': 'ParentComponent', 'selector': 'app-parent'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'ReportHistoryComponent', 'selector': 'app-report-history'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RunTestToast', 'selector': '[pink-toast-component]'},{'name': 'ScenarioEditorComponent', 'selector': 'app-scenario-editor'},{'name': 'StoriesBarComponent', 'selector': 'app-stories-bar'},{'name': 'StoryEditorComponent', 'selector': 'app-story-editor'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'TestAccountComponent', 'selector': 'app-test-account'}];\n    var DIRECTIVES = [{'name': 'EditableOnEnterDirective', 'selector': '[editableOnEnter]'},{'name': 'EditModeDirective', 'selector': '[editMode]'},{'name': 'FocusableDirective', 'selector': '[focusable]'},{'name': 'PasswordConfirmedValidatorDirective', 'selector': '[appPasswordConfirmed]'},{'name': 'ViewModeDirective', 'selector': '[viewMode]'}];\n    var ACTUAL_COMPONENT = {'name': 'ExampleTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FeedbackComponent.html":{"url":"components/FeedbackComponent.html","title":"component - FeedbackComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FeedbackComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/feedback/feedback.component.ts\n\n\n    \n        Description\n    \n    \n        Component for the feedback of the user\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-feedback\n            \n\n            \n                styleUrls\n                ./feedback.component.css\n            \n\n\n\n            \n                templateUrl\n                ./feedback.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Component for the feedback of the user\n */\n@Component({\n  selector: 'app-feedback',\n  templateUrl: './feedback.component.html',\n  styleUrls: ['./feedback.component.css']\n})\nexport class FeedbackComponent implements OnInit {\n  /**\n   * @ignore\n   */\n  constructor() {\n   }\n  /**\n   * @ignore\n   */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n         \n  Wird geladen…\n\n\n\n    \n\n    \n                \n                    ./feedback.component.css\n                \n                iframe{\n    display: block;\n    margin: 0 auto;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   Wird geladen…'\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmResetPasswordComponent', 'selector': 'app-confirm-reset-password'},{'name': 'DeleteScenarioToast', 'selector': '[pink-toast-component]'},{'name': 'EditableComponent', 'selector': 'editable'},{'name': 'ExampleTableComponent', 'selector': 'app-example-table'},{'name': 'FeedbackComponent', 'selector': 'app-feedback'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalsComponent', 'selector': 'app-modals'},{'name': 'ParentComponent', 'selector': 'app-parent'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'ReportHistoryComponent', 'selector': 'app-report-history'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RunTestToast', 'selector': '[pink-toast-component]'},{'name': 'ScenarioEditorComponent', 'selector': 'app-scenario-editor'},{'name': 'StoriesBarComponent', 'selector': 'app-stories-bar'},{'name': 'StoryEditorComponent', 'selector': 'app-story-editor'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'TestAccountComponent', 'selector': 'app-test-account'}];\n    var DIRECTIVES = [{'name': 'EditableOnEnterDirective', 'selector': '[editableOnEnter]'},{'name': 'EditModeDirective', 'selector': '[editMode]'},{'name': 'FocusableDirective', 'selector': '[focusable]'},{'name': 'PasswordConfirmedValidatorDirective', 'selector': '[appPasswordConfirmed]'},{'name': 'ViewModeDirective', 'selector': '[viewMode]'}];\n    var ACTUAL_COMPONENT = {'name': 'FeedbackComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/FocusableDirective.html":{"url":"directives/FocusableDirective.html","title":"directive - FocusableDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  FocusableDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/editable/focusable.directive.ts\n        \n\n            \n                Description\n            \n            \n                Directive for an table cell to be focusable\n\n            \n\n            \n                Implements\n            \n            \n                            AfterViewInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [focusable]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(host: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/editable/focusable.directive.ts:9\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/editable/focusable.directive.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, AfterViewInit } from '@angular/core';\n\n/**\n * Directive for an table cell to be focusable\n */\n@Directive({\n  selector: '[focusable]'\n})\nexport class FocusableDirective implements AfterViewInit {\n\n  /**\n   * Constructor\n   * @param host \n   */\n  constructor(private host: ElementRef) { }\n\n  ngAfterViewInit() {\n    this.host.nativeElement.focus();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ParentComponent.html":{"url":"components/ParentComponent.html","title":"component - ParentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ParentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/parent/parent.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-parent\n            \n\n            \n                styleUrls\n                ./parent.component.css\n            \n\n\n\n            \n                templateUrl\n                ./parent.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiService\n                            \n                            \n                                formtosubmit\n                            \n                            \n                                selectedScenario\n                            \n                            \n                                selectedStory\n                            \n                            \n                                stories\n                            \n                            \n                                storyEditorActive\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadStories\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setEditor\n                            \n                            \n                                setSelectedScenario\n                            \n                            \n                                setSelectedStory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/parent/parent.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadStories\n                        \n                        \n                    \n                \n            \n            \n                \nloadStories()\n                \n            \n\n\n            \n                \n                    Defined in src/app/parent/parent.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/parent/parent.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setEditor\n                        \n                        \n                    \n                \n            \n            \n                \nsetEditor(e)\n                \n            \n\n\n            \n                \n                    Defined in src/app/parent/parent.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSelectedScenario\n                        \n                        \n                    \n                \n            \n            \n                \nsetSelectedScenario(scenario: Scenario)\n                \n            \n\n\n            \n                \n                    Defined in src/app/parent/parent.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scenario\n                                    \n                                                Scenario\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSelectedStory\n                        \n                        \n                    \n                \n            \n            \n                \nsetSelectedStory(story: Story)\n                \n            \n\n\n            \n                \n                    Defined in src/app/parent/parent.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    story\n                                    \n                                                Story\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApiService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/parent/parent.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formtosubmit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     [\"\"]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/parent/parent.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedScenario\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Scenario\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/parent/parent.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedStory\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Story\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/parent/parent.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stories\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Story[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/parent/parent.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            storyEditorActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/parent/parent.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../Services/api.service';\nimport { Story } from '../model/Story';\nimport { Scenario } from '../model/Scenario';\nimport { RepositoryContainer } from '../model/RepositoryContainer';\n\n\n@Component({\n  selector: 'app-parent',\n  templateUrl: './parent.component.html',\n  styleUrls: ['./parent.component.css']\n})\nexport class ParentComponent implements OnInit {\n\n  stories: Story[];\n  selectedStory: Story;\n  selectedScenario: Scenario;\n  formtosubmit: [\"\"];\n  storyEditorActive = false;\n\n  constructor(public apiService: ApiService) {\n    this.apiService.getBackendUrlEvent.subscribe(() => {\n      this.loadStories();\n    });\n    if(this.apiService.urlReceived) {\n      this.loadStories();\n    }else {\n      this.apiService.getBackendInfo()\n    }\n   }\n\n  ngOnInit() {\n    console.log('on nginit in parent')\n    this.apiService.getRepositories().subscribe();\n  }\n\n  loadStories() {\n    let value: string = localStorage.getItem('repository');\n    let source: string = localStorage.getItem('source');\n    let _id: string = localStorage.getItem('id');\n    let repository: RepositoryContainer = {value, source, _id};\n    this.apiService\n      .getStories(repository)\n      .subscribe((resp: Story[]) => {\n        console.log('Stories');\n        console.log(resp);\n        this.stories = resp;\n    });\n  }\n\n  setSelectedStory(story: Story){\n    this.selectedStory = story;\n    console.log('select story')\n  }\n\n  setSelectedScenario(scenario: Scenario){\n    this.selectedScenario = scenario;\n  }\n\n  setEditor(e){\n    this.storyEditorActive = !this.storyEditorActive;\n    console.log('setEditor', this.storyEditorActive, this.selectedStory)\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        \n        \n    \n\n\n    \n\n    \n                \n                    ./parent.component.css\n                \n                * {\n    padding: 0px;\n    margin: 0px;\n}\n\n.grid{\n    background-color: var(--light-grey);\n    display: grid;\n    grid-template-columns: repeat(4, minmax(0, 1fr));\n    grid-template-rows: auto;\n    grid-template-areas:\n    \"storiesBar storyEditor storyEditor storyEditor\";\n    grid-column-gap: 10px;\n    padding-bottom: 5px;\n}\n\n.storiesBar{\n    grid-area: storiesBar;\n}\n\n.storyEditor{\n    grid-area: storyEditor;\n}\n\n\n\n@media screen and (max-width: 600px) {\n    .grid{\n        display: grid;\n        grid-template-columns: 94%;\n        grid-template-rows: auto auto;\n        grid-template-areas:\n        \"storiesBar\"\n        \"storyEditor\";\n        justify-content: center;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmResetPasswordComponent', 'selector': 'app-confirm-reset-password'},{'name': 'DeleteScenarioToast', 'selector': '[pink-toast-component]'},{'name': 'EditableComponent', 'selector': 'editable'},{'name': 'ExampleTableComponent', 'selector': 'app-example-table'},{'name': 'FeedbackComponent', 'selector': 'app-feedback'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalsComponent', 'selector': 'app-modals'},{'name': 'ParentComponent', 'selector': 'app-parent'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'ReportHistoryComponent', 'selector': 'app-report-history'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RunTestToast', 'selector': '[pink-toast-component]'},{'name': 'ScenarioEditorComponent', 'selector': 'app-scenario-editor'},{'name': 'StoriesBarComponent', 'selector': 'app-stories-bar'},{'name': 'StoryEditorComponent', 'selector': 'app-story-editor'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'TestAccountComponent', 'selector': 'app-test-account'}];\n    var DIRECTIVES = [{'name': 'EditableOnEnterDirective', 'selector': '[editableOnEnter]'},{'name': 'EditModeDirective', 'selector': '[editMode]'},{'name': 'FocusableDirective', 'selector': '[focusable]'},{'name': 'PasswordConfirmedValidatorDirective', 'selector': '[appPasswordConfirmed]'},{'name': 'ViewModeDirective', 'selector': '[viewMode]'}];\n    var ACTUAL_COMPONENT = {'name': 'ParentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/PasswordConfirmedValidatorDirective.html":{"url":"directives/PasswordConfirmedValidatorDirective.html","title":"directive - PasswordConfirmedValidatorDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  PasswordConfirmedValidatorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/directives/password-confirmed.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: PasswordConfirmedValidatorDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [appPasswordConfirmed]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/directives/password-confirmed.directive.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidationErrors\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { AbstractControl, FormGroup, NG_VALIDATORS, ValidationErrors, Validator, ValidatorFn } from '@angular/forms';\n\n/** A user's password has to match the user's confirmed password */\nexport const passwordConfirmedValidator: ValidatorFn = (control: FormGroup): ValidationErrors | null => {\n  const password = control.get('password');\n  const confirmPassword = control.get('confirmPassword');\n\n  return password && confirmPassword && password.value !== confirmPassword.value ? { 'passwordConfirmed': true } : null;\n};\n\n@Directive({\n  selector: '[appPasswordConfirmed]',\n  providers: [{ provide: NG_VALIDATORS, useExisting: PasswordConfirmedValidatorDirective, multi: true }]\n})\nexport class PasswordConfirmedValidatorDirective implements Validator {\n  validate(control: AbstractControl): ValidationErrors {\n    return passwordConfirmedValidator(control)\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegistrationComponent.html":{"url":"components/RegistrationComponent.html","title":"component - RegistrationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegistrationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/registration/registration.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-registration\n            \n\n            \n                styleUrls\n                ./registration.component.css\n            \n\n\n\n            \n                templateUrl\n                ./registration.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiService\n                            \n                            \n                                error\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                registerUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, router: Router, toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in src/app/registration/registration.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/registration/registration.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            registerUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerUser(form: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/registration/registration.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApiService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/registration/registration.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/registration/registration.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/registration/registration.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ApiService} from '../Services/api.service';\nimport {NavigationEnd, Router} from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\n\n\n@Component({\n    selector: 'app-registration',\n    templateUrl: './registration.component.html',\n    styleUrls: ['./registration.component.css']\n})\n\nexport class RegistrationComponent implements OnInit {\n\n    user = {};\n    error: string;\n\n    constructor(public apiService: ApiService, private router: Router, private toastr: ToastrService) {\n        \n    }\n\n    ngOnInit() {\n    }\n\n    async registerUser(form: NgForm){\n        let userId = localStorage.getItem('userId');\n        localStorage.removeItem('userId')\n        this.error = undefined;\n        let response = await this.apiService.registerUser(form.value.email, form.value.password, userId).toPromise()\n        if (response.error && response.error.status === 'error') {\n            this.error = response.error.message;\n            //this.toastr.error(response.error.message, 'Registration')\n        } else {\n            this.toastr.success('successfully registered', 'Registration')\n            this.router.navigate([\"/\"]);\n        } \n    }\n}\n\n    \n\n    \n        \n  \n    Registration\n     \n    \n    \n     \n      \n      {{error}}\n      \n      \n      \n\n      \n        \n          \n            \n            \n              \n              Password must be at least 8 characters long\n          \n            \n                  \n          \n          \n              Password and Confirm Password do not match.\n          \n          \n            Please enter a valid Email address.\n        \n        \n        Register\n    \n  \n\n    \n    \n\n    \n                \n                    ./registration.component.css\n                \n                .grid{\n    display: grid;\n    grid-template-rows: 1;\n    grid-template-columns: 3;\n    grid-template-areas: \"formular\";\n    background-color: var(--white);\n}\n\n.formular{\n    grid-area: formular;\n    grid-column: 2;\n    text-align: center;\n    width: 500px;\n    background-color: var(--white);\n    padding: 80px 50px;\n}\n\n#infoIcon{\n    color: #999;\n    padding: 5px;\n  }\n\n#passwordLengthInfo{\n    font-size: small;\n}\n\n#headerFont{\n    color:var(--ocean-blue);\n}\n\n.uk-form-controls{\n    border-radius: 3px;\n    padding: 5px 5px 5px 5px;\n}\n\n.ng-valid[required], .ng-valid.required  {\n    border-left: 5px solid #53d35a; \n  }\n  \n.ng-invalid:not(form)  {\n    border-left: 5px solid var(--ocean-blue); \n  }\n\n.cross-validation-error input {\n    border-left: 5px solid #d15553;\n  }\n\ninput.wrongEmail {\n  border-left: 5px solid #d15553;\n}\n\n#email, #confirmPassword{\n    margin: 25px;\n}\n\n.wrongLogin{\n    background-color: rgb(228, 92, 92);\n    text-align: center;\n}\n\n\n@media screen and (max-width: 600px) {\n    .grid{\n        display: grid;\n        grid-template-rows: auto;\n        grid-template-areas: \"formular\";\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Registration                              {{error}}                                                                                              Password must be at least 8 characters long                                                                          Password and Confirm Password do not match.                                Please enter a valid Email address.                        Register          '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmResetPasswordComponent', 'selector': 'app-confirm-reset-password'},{'name': 'DeleteScenarioToast', 'selector': '[pink-toast-component]'},{'name': 'EditableComponent', 'selector': 'editable'},{'name': 'ExampleTableComponent', 'selector': 'app-example-table'},{'name': 'FeedbackComponent', 'selector': 'app-feedback'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalsComponent', 'selector': 'app-modals'},{'name': 'ParentComponent', 'selector': 'app-parent'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'ReportHistoryComponent', 'selector': 'app-report-history'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RunTestToast', 'selector': '[pink-toast-component]'},{'name': 'ScenarioEditorComponent', 'selector': 'app-scenario-editor'},{'name': 'StoriesBarComponent', 'selector': 'app-stories-bar'},{'name': 'StoryEditorComponent', 'selector': 'app-story-editor'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'TestAccountComponent', 'selector': 'app-test-account'}];\n    var DIRECTIVES = [{'name': 'EditableOnEnterDirective', 'selector': '[editableOnEnter]'},{'name': 'EditModeDirective', 'selector': '[editMode]'},{'name': 'FocusableDirective', 'selector': '[focusable]'},{'name': 'PasswordConfirmedValidatorDirective', 'selector': '[appPasswordConfirmed]'},{'name': 'ViewModeDirective', 'selector': '[viewMode]'}];\n    var ACTUAL_COMPONENT = {'name': 'RegistrationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Report.html":{"url":"interfaces/Report.html","title":"interface - Report","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Report\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/Report.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        _id\n                                \n                                \n                                            Optional\n                                        isSaved\n                                \n                                \n                                        jsonReport\n                                \n                                \n                                        mode\n                                \n                                \n                                        options\n                                \n                                \n                                        reportName\n                                \n                                \n                                        reportTime\n                                \n                                \n                                            Optional\n                                        scenarioId\n                                \n                                \n                                        storyId\n                                \n                                \n                                        testStatus\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isSaved\n                                    \n                                \n                                \n                                    \n                                        isSaved:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jsonReport\n                                    \n                                \n                                \n                                    \n                                        jsonReport:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                    \n                                \n                                \n                                    \n                                        mode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reportName\n                                    \n                                \n                                \n                                    \n                                        reportName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reportTime\n                                    \n                                \n                                \n                                    \n                                        reportTime:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenarioId\n                                    \n                                \n                                \n                                    \n                                        scenarioId:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        storyId\n                                    \n                                \n                                \n                                    \n                                        storyId:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        testStatus\n                                    \n                                \n                                \n                                    \n                                        testStatus:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Report {\n    _id?: any,\n    reportTime: number;\n    reportName: string;\n    jsonReport: any;\n    options: any;\n    storyId: any;\n    mode: string;\n    scenarioId?: any;\n    testStatus: boolean;\n    isSaved?: boolean;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReportComponent.html":{"url":"components/ReportComponent.html","title":"component - ReportComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ReportComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/report/report.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-report\n            \n\n            \n                styleUrls\n                ./report.component.css\n            \n\n\n\n            \n                templateUrl\n                ./report.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiService\n                            \n                            \n                                reportReceived\n                            \n                            \n                                    Public\n                                route\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getReport\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/report/report.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getReport\n                        \n                        \n                    \n                \n            \n            \n                \ngetReport(reportName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/report/report.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reportName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/report/report.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApiService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/report/report.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reportReceived\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/report/report.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ActivatedRoute\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/report/report.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../Services/api.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-report',\n  templateUrl: './report.component.html',\n  styleUrls: ['./report.component.css']\n})\nexport class ReportComponent implements OnInit {\n  reportReceived: Boolean = false;\n\n\n  constructor(public apiService: ApiService, public route: ActivatedRoute) { \n    this.route.params.subscribe((params) => {\n      if(params.reportName){\n        if(!localStorage.getItem('url_backend')){\n          this.apiService.getBackendInfo().then((value) => {\n            this.getReport(params.reportName);\n          })\n        }else {\n          this.getReport(params.reportName);\n        }\n      }\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  getReport(reportName: string){\n    this.apiService.getReport(reportName).subscribe((resp) => {\n      const iframe: HTMLIFrameElement = document.getElementById('testFrame') as HTMLIFrameElement;\n      this.reportReceived = true;\n      iframe.srcdoc = resp;\n    })\n  }\n\n}\n\n    \n\n    \n        \n    \n\n\n\n    \n\n    \n                \n                    ./report.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmResetPasswordComponent', 'selector': 'app-confirm-reset-password'},{'name': 'DeleteScenarioToast', 'selector': '[pink-toast-component]'},{'name': 'EditableComponent', 'selector': 'editable'},{'name': 'ExampleTableComponent', 'selector': 'app-example-table'},{'name': 'FeedbackComponent', 'selector': 'app-feedback'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalsComponent', 'selector': 'app-modals'},{'name': 'ParentComponent', 'selector': 'app-parent'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'ReportHistoryComponent', 'selector': 'app-report-history'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RunTestToast', 'selector': '[pink-toast-component]'},{'name': 'ScenarioEditorComponent', 'selector': 'app-scenario-editor'},{'name': 'StoriesBarComponent', 'selector': 'app-stories-bar'},{'name': 'StoryEditorComponent', 'selector': 'app-story-editor'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'TestAccountComponent', 'selector': 'app-test-account'}];\n    var DIRECTIVES = [{'name': 'EditableOnEnterDirective', 'selector': '[editableOnEnter]'},{'name': 'EditModeDirective', 'selector': '[editMode]'},{'name': 'FocusableDirective', 'selector': '[focusable]'},{'name': 'PasswordConfirmedValidatorDirective', 'selector': '[appPasswordConfirmed]'},{'name': 'ViewModeDirective', 'selector': '[viewMode]'}];\n    var ACTUAL_COMPONENT = {'name': 'ReportComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReportContainer.html":{"url":"interfaces/ReportContainer.html","title":"interface - ReportContainer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ReportContainer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/ReportContainer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        scenarioReports\n                                \n                                \n                                        storyReports\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        scenarioReports\n                                    \n                                \n                                \n                                    \n                                        scenarioReports:         Report[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Report[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        storyReports\n                                    \n                                \n                                \n                                    \n                                        storyReports:         Report[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Report[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Report } from \"./Report\";\n\nexport interface ReportContainer {\n    storyReports: Report[],\n    scenarioReports: Report[]\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReportHistoryComponent.html":{"url":"components/ReportHistoryComponent.html","title":"component - ReportHistoryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ReportHistoryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/report-history/report-history.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-report-history\n            \n\n            \n                styleUrls\n                ./report-history.component.css\n            \n\n\n\n            \n                templateUrl\n                ./report-history.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiService\n                            \n                            \n                                reports\n                            \n                            \n                                selectedStory\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteReport\n                            \n                            \n                                getReports\n                            \n                            \n                                goBack\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                reportTime\n                            \n                            \n                                saveReport\n                            \n                            \n                                sortReportsTime\n                            \n                            \n                                sortScenarioReports\n                            \n                            \n                                unsaveReport\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                newSelectedStory\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changeEditor\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    newSelectedStory\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/report-history/report-history.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        newSelectedStory\n                    \n                \n                        \n                            \n                                    Defined in src/app/report-history/report-history.component.ts:26\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changeEditor\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/report-history/report-history.component.ts:18\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteReport\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteReport(report: Report)\n                \n            \n\n\n            \n                \n                    Defined in src/app/report-history/report-history.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    report\n                                    \n                                                Report\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getReports\n                        \n                        \n                    \n                \n            \n            \n                \ngetReports()\n                \n            \n\n\n            \n                \n                    Defined in src/app/report-history/report-history.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            goBack\n                        \n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n            \n                \n                    Defined in src/app/report-history/report-history.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/report-history/report-history.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reportTime\n                        \n                        \n                    \n                \n            \n            \n                \nreportTime(time)\n                \n            \n\n\n            \n                \n                    Defined in src/app/report-history/report-history.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    time\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveReport\n                        \n                        \n                    \n                \n            \n            \n                \nsaveReport(report: Report)\n                \n            \n\n\n            \n                \n                    Defined in src/app/report-history/report-history.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    report\n                                    \n                                                Report\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortReportsTime\n                        \n                        \n                    \n                \n            \n            \n                \nsortReportsTime(reps)\n                \n            \n\n\n            \n                \n                    Defined in src/app/report-history/report-history.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reps\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortScenarioReports\n                        \n                        \n                    \n                \n            \n            \n                \nsortScenarioReports(scenario)\n                \n            \n\n\n            \n                \n                    Defined in src/app/report-history/report-history.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scenario\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unsaveReport\n                        \n                        \n                    \n                \n            \n            \n                \nunsaveReport(report: Report)\n                \n            \n\n\n            \n                \n                    Defined in src/app/report-history/report-history.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    report\n                                    \n                                                Report\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApiService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/report-history/report-history.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reports\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ReportContainer\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/report-history/report-history.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedStory\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Story\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/report-history/report-history.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        newSelectedStory\n                    \n                \n\n\n                \n                    \n                        setnewSelectedStory(story)\n                    \n                \n                            \n                                \n                                    Defined in src/app/report-history/report-history.component.ts:26\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            story\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Report } from '../model/Report';\nimport { ReportContainer } from '../model/ReportContainer';\nimport { Story } from '../model/Story';\nimport { ApiService } from '../Services/api.service';\n\n@Component({\n  selector: 'app-report-history',\n  templateUrl: './report-history.component.html',\n  styleUrls: ['./report-history.component.css']\n})\nexport class ReportHistoryComponent implements OnInit {\n\n  selectedStory: Story = null;\n  reports: ReportContainer = null;\n\n  @Output()\n  changeEditor: EventEmitter = new EventEmitter();\n\n  constructor(public apiService: ApiService) { }\n\n  ngOnInit(): void {\n  }\n\n  @Input()\n  set newSelectedStory(story: Story) {\n      this.selectedStory = story;\n      if (this.selectedStory){\n        this.getReports();\n      }\n  }\n\n  getReports(){\n    this.reports = null;\n    this.apiService.getReportHistory(this.selectedStory._id).subscribe(resp => {\n        console.log('resp.', resp)\n        this.reports = resp;\n    });\n  }\n\n  sortScenarioReports(scenario){\n    return this.reports.scenarioReports.filter((elem) => parseInt(elem.scenarioId) == scenario.scenario_id)\n  }\n\n  sortReportsTime(reps){\n    return reps.sort((a, b) => a.reportTime > b.reportTime)\n  }\n\n  goBack(){\n    this.changeEditor.emit();\n  }\n\n  reportTime(time){\n    let date = new Date(time).toLocaleDateString(\"de\")\n    let t = new Date(time).toLocaleTimeString(\"de\")\n    return \"Report: \" + date + \" \" + t\n  }\n\n\n  deleteReport(report: Report){\n    console.log('report', report)\n    return new Promise((resolve, reject) => {this.apiService\n      .deleteReport(report._id)\n      .subscribe(_resp => {\n          let newReports = JSON.parse(JSON.stringify(this.reports));\n          newReports.storyReports = newReports.storyReports.filter((rep) => rep._id != report._id);\n          newReports.scenarioReports = newReports.scenarioReports.filter((rep) => rep._id != report._id);\n          this.reports = newReports;\n          resolve()\n      });})\n  }\n\n  unsaveReport(report: Report){\n    report.isSaved = false;\n    return new Promise((resolve, reject) => {this.apiService\n      .unsaveReport(report._id)\n      .subscribe(_resp => {\n          resolve()\n      });})  \n  }\n\n  saveReport(report: Report){\n    report.isSaved = true;\n    return new Promise((resolve, reject) => {this.apiService\n      .saveReport(report._id)\n      .subscribe(_resp => {\n          resolve()\n      });})\n  }\n\n}\n\n    \n\n    \n        \n\n    \n        \n            \n                \n                    \n                \n            \n        \n        \n            Reports: {{this.selectedStory.title}}\n        \n    \n    \n        Disclaimer: Currently only the last 1 report per scenario and story will be saved. If you want to keep the reports longer, you have to download the report or mark it as saved.\n    \n    \n        \n            Story Reports:\n        \n        \n            \n                {{reportTime(rep.reportTime)}}\n                \n                    \n                      delete\n                    \n                    \n                      star\n                    \n                    \n                      star_border\n                    \n                \n            \n        \n    \n    \n        \n            \n                Scenario {{i + 1}} Reports: {{scen.name}}\n            \n            \n                \n                    {{reportTime(reps.reportTime)}}\n                    \n                        \n                          delete\n                        \n                        \n                          star\n                        \n                        \n                          star_border\n                        \n                    \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./report-history.component.css\n                \n                * {\n  padding: 0px;\n  margin: 0px;\n}\n\n.reportHistoryContainer{\n  border-left: 1px solid #999;\n  border-top: 1px solid #999;\n  border-bottom: 1px solid #999;\n  background: var(--white);\n}\n\na.passed{\n    color: green;\n  }\n\n  a.notPassed{\n    color: red;\n  }\n\n  .backButton{\n    background: none;\n    width: 50px;\n    height: 50px;\n    margin-left: 20px;\n    margin-right: 20px;\n    font-size: 15px;\n    cursor: pointer;\n    border: none;\n}\n\n.sectionHeader {\n  background-color: lightgrey;\n  margin: 5px;\n}\n\n.report{\n  display: flex;\n  justify-content: space-between;\n  margin: 3px 30px;\n  align-items: center;\n}\n\n.reportButtons{\n  margin-right: 10px;\n}\n\n.actionButton{\n  margin-left: 10px;\n  background: none;\n  border: none;\n}\n\n.actionButton > em{\n  color: var(--ocean-blue);\n  font-size: 22px;\n\n}\n\n.headline{\n  color: var(--charcoal-grey);\n}\n\n.reportHistoryTitleContainer{\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  margin: 10px;\n}\n\n.disclaimerContainer{\n  margin: 20px;\n  padding: 5px;\n  border: 1px solid var(--grape);\n  text-align: center;\n}\n\n.reportsHeader{\n  padding:  2px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                    Reports: {{this.selectedStory.title}}                        Disclaimer: Currently only the last 1 report per scenario and story will be saved. If you want to keep the reports longer, you have to download the report or mark it as saved.                            Story Reports:                                            {{reportTime(rep.reportTime)}}                                                          delete                                                              star                                                              star_border                                                                                                    Scenario {{i + 1}} Reports: {{scen.name}}                                                            {{reportTime(reps.reportTime)}}                                                                      delete                                                                          star                                                                          star_border                                                                                    '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmResetPasswordComponent', 'selector': 'app-confirm-reset-password'},{'name': 'DeleteScenarioToast', 'selector': '[pink-toast-component]'},{'name': 'EditableComponent', 'selector': 'editable'},{'name': 'ExampleTableComponent', 'selector': 'app-example-table'},{'name': 'FeedbackComponent', 'selector': 'app-feedback'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalsComponent', 'selector': 'app-modals'},{'name': 'ParentComponent', 'selector': 'app-parent'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'ReportHistoryComponent', 'selector': 'app-report-history'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RunTestToast', 'selector': '[pink-toast-component]'},{'name': 'ScenarioEditorComponent', 'selector': 'app-scenario-editor'},{'name': 'StoriesBarComponent', 'selector': 'app-stories-bar'},{'name': 'StoryEditorComponent', 'selector': 'app-story-editor'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'TestAccountComponent', 'selector': 'app-test-account'}];\n    var DIRECTIVES = [{'name': 'EditableOnEnterDirective', 'selector': '[editableOnEnter]'},{'name': 'EditModeDirective', 'selector': '[editMode]'},{'name': 'FocusableDirective', 'selector': '[focusable]'},{'name': 'PasswordConfirmedValidatorDirective', 'selector': '[appPasswordConfirmed]'},{'name': 'ViewModeDirective', 'selector': '[viewMode]'}];\n    var ACTUAL_COMPONENT = {'name': 'ReportHistoryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RepositoryContainer.html":{"url":"interfaces/RepositoryContainer.html","title":"interface - RepositoryContainer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RepositoryContainer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/RepositoryContainer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        _id\n                                \n                                \n                                            Optional\n                                        canEdit\n                                \n                                \n                                        source\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        canEdit\n                                    \n                                \n                                \n                                    \n                                        canEdit:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RepositoryContainer {\n    _id?: any;\n    value: string;\n    source: string;\n    canEdit?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/reset-password/reset-password.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-password\n            \n\n            \n                styleUrls\n                ./reset-password.component.css\n            \n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiService\n                            \n                            \n                                error\n                            \n                            \n                                repositories\n                            \n                            \n                                repositoriesLoading\n                            \n                            \n                                showInstruction\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navToRegistration\n                            \n                            \n                                requestReset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/reset-password/reset-password.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navToRegistration\n                        \n                        \n                    \n                \n            \n            \n                \nnavToRegistration()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reset-password/reset-password.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            requestReset\n                        \n                        \n                    \n                \n            \n            \n                \nrequestReset(form: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/reset-password/reset-password.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApiService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-password/reset-password.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-password/reset-password.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            repositories\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RepositoryContainer[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-password/reset-password.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            repositoriesLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-password/reset-password.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showInstruction\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-password/reset-password.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-password/reset-password.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport {ApiService} from '../Services/api.service';\nimport {Router} from '@angular/router';\nimport { RepositoryContainer } from '../model/RepositoryContainer';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\n\nexport class ResetPasswordComponent{\n\n  user = {};\n  error: string;\n  repositoriesLoading: boolean;\n  showInstruction = false;\n  repositories: RepositoryContainer[];\n\n  constructor(public apiService: ApiService, private router: Router) {    \n  }\n\n  requestReset(form : NgForm) {\n    this.apiService.requestReset(form.value.email).subscribe(res => {\n      //console.log('test')\n    })\n    this.router.navigate(['/login']);\n  }\n\n  navToRegistration(){\n    console.log('navigate to registration')\n  }\n}\n\n    \n\n    \n        \n \n  \n    \n        Can't log in?\n        \n        \n        \n        1.Don't have an account yet?\n        If you don't have an account yet you can register an new account \n        here.\n        \n        \n        2. Reset password for an existing account\n        If you already have an account but forgot your password you can reset your password here.\n        \n        \n        1. Type in the e-mail address connected to your account.\n        \n        2. Choose a new password of miminum 8 characters.\n        \n        3. Press the 'reset' button and you will receive an automated e-mail with a reset-token.\n        \n    \n  \n\n   \n    \n    Reset Your Password\n     \n      \n      \n      \n    \n      \n      \n      \n      \n    \n    \n      Reset Password\n    \n  \n\n  \n\n\n\n  \n  -->\n \n \n \n \n \n \n    \n            \n            Password must be at least 8 characters long\n\n\n!--Confirm NEW Password--\n\n\n   \n\nSubmit Button!\n\nRegister      \n            \n--->     \n            \n            \n            \n \n    \n    \n\n    \n                \n                    ./reset-password.component.css\n                \n                * {\n    padding: 0px;\n    margin: 0px;\n    font-family: Klavika, sans-serif;\n}\n\nh1{\n    margin: 5px;\n}\n\n.grid{\n    display: grid;\n    grid-template-rows: auto;\n    grid-template-columns: 1fr 1fr 1fr 1fr;\n    grid-template-areas: \"howToStart\" \"formular\";\n    background-color: var(--white);\n    place-items: center;\n}\n\n.formular{\n    grid-area: formular;\n    grid-row: 2 / 3;\n    grid-column: 3 / 4;\n    text-align: center;\n    background-color: var(--white);\n    padding: 80px 50px 20px;\n    margin-bottom: 80px;\n}\n\n.howToStart {\n    grid-area: howToStart;\n    grid-row: 2 / 3;\n    grid-column: 2 / 3;\n    background-color: var(--white);\n    padding: 50px 10px 50px;\n    text-align: center;\n    font-size: small;\n}\n\n.instructionText{\n    width: 350px;\n    border: double 5px var(--dark-grey);\n    padding: 30px;\n}\n\n.req{\n    text-decoration: underline;\n}\n\n#headerFont{\n    color:var(--ocean-blue);\n}\n\n.uk-form-controls{\n    border-radius: 3px;\n    padding: 5px 5px 5px 5px;\n}\n\n.linkButton{\n    font-style: inherit;\n    border: 0px;\n    background-color: transparent;\n    color:var(--ocean-blue);\n    font-size: 10pt;\n    font-weight: bold;\n    outline: none;\n}\n\n@media screen and (max-width: 600px) {\n    .grid{\n        display: grid;\n        grid-template-rows: auto;\n        grid-template-areas: \"howToStart\" \"formular\";\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '               Can\\'t log in?                                1.Don\\'t have an account yet?        If you don\\'t have an account yet you can register an new account         here.                        2. Reset password for an existing account        If you already have an account but forgot your password you can reset your password here.                        1. Type in the e-mail address connected to your account.                2. Choose a new password of miminum 8 characters.                3. Press the \\'reset\\' button and you will receive an automated e-mail with a reset-token.                         Reset Your Password                                                                 Reset Password            -->                                  Password must be at least 8 characters long!--Confirm NEW Password--   Submit Button!Register                  --->                                              '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmResetPasswordComponent', 'selector': 'app-confirm-reset-password'},{'name': 'DeleteScenarioToast', 'selector': '[pink-toast-component]'},{'name': 'EditableComponent', 'selector': 'editable'},{'name': 'ExampleTableComponent', 'selector': 'app-example-table'},{'name': 'FeedbackComponent', 'selector': 'app-feedback'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalsComponent', 'selector': 'app-modals'},{'name': 'ParentComponent', 'selector': 'app-parent'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'ReportHistoryComponent', 'selector': 'app-report-history'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RunTestToast', 'selector': '[pink-toast-component]'},{'name': 'ScenarioEditorComponent', 'selector': 'app-scenario-editor'},{'name': 'StoriesBarComponent', 'selector': 'app-stories-bar'},{'name': 'StoryEditorComponent', 'selector': 'app-story-editor'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'TestAccountComponent', 'selector': 'app-test-account'}];\n    var DIRECTIVES = [{'name': 'EditableOnEnterDirective', 'selector': '[editableOnEnter]'},{'name': 'EditModeDirective', 'selector': '[editMode]'},{'name': 'FocusableDirective', 'selector': '[focusable]'},{'name': 'PasswordConfirmedValidatorDirective', 'selector': '[appPasswordConfirmed]'},{'name': 'ViewModeDirective', 'selector': '[viewMode]'}];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RunTestToast.html":{"url":"components/RunTestToast.html","title":"component - RunTestToast","body":"\n                   \n\n\n\n\n\n  Components\n  RunTestToast\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/custom-toast.ts\n\n\n\n    \n        Extends\n    \n    \n            Toast\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n            \n                preserveWhitespaces\n                false\n            \n\n\n\n            \n                selector\n                [pink-toast-component]\n            \n\n\n            \n                styles\n                \n        a {\n            background: #388196;\n            margin: 2px;\n        }\n\n        a:hover {\n            color: black;\n        }\n    \n            \n\n            \n                template\n                \n  \n    \n      {{ title }}\n    \n    \n    \n    \n      {{ message }}\n    \n  \n  \n    \n      {{ saveRunString }}\n    \n    \n        {{ runString }}\n    \n    \n      close\n    \n  \n\n\n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiService\n                            \n                            \n                                runString\n                            \n                            \n                                saveRunString\n                            \n                            \n                                    Public\n                                toastPackage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                runTest\n                            \n                            \n                                saveAndRunTest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toastrService: ToastrService, toastPackage: ToastPackage, apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/custom-toast.ts:113\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toastrService\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastPackage\n                                                  \n                                                        \n                                                                    ToastPackage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            runTest\n                        \n                        \n                    \n                \n            \n            \n                \nrunTest(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/custom-toast.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveAndRunTest\n                        \n                        \n                    \n                \n            \n            \n                \nsaveAndRunTest(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/custom-toast.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApiService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/custom-toast.ts:119\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            runString\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Run Test'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/custom-toast.ts:113\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveRunString\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Save and Run'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/custom-toast.ts:112\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toastPackage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ToastPackage\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/custom-toast.ts:118\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n    animate,\n    keyframes,\n    state,\n    style,\n    transition,\n    trigger\n  } from '@angular/animations';\n  import { Component} from '@angular/core';\n  \n  import { Toast, ToastrService, ToastPackage } from 'ngx-toastr';\nimport { ApiService } from './Services/api.service';\n  \n  @Component({\n    selector: '[pink-toast-component]',\n    //styles: [`\n    //  :host {\n    //    background-color: #FF69B4;\n    //    position: relative;\n    //    overflow: hidden;\n    //    margin: 0 0 6px;\n    //    padding: 10px 10px 10px 10px;\n    //    width: 300px;\n    //    border-radius: 3px 3px 3px 3px;\n    //    color: #FFFFFF;\n    //    pointer-events: all;\n    //    cursor: pointer;\n    //  }\n    //  .btn-pink {\n    //    -webkit-backface-visibility: hidden;\n    //    -webkit-transform: translateZ(0);\n    //  }\n    //`],\n    styles:[`\n        a {\n            background: #388196;\n            margin: 2px;\n        }\n\n        a:hover {\n            color: black;\n        }\n    `],\n    template: `\n    \n      \n        \n          {{ title }}\n        \n        \n        \n        \n          {{ message }}\n        \n      \n      \n        \n          {{ saveRunString }}\n        \n        \n            {{ runString }}\n        \n        \n          close\n        \n      \n    \n    \n      \n    \n    `,\n    animations: [\n      trigger('flyInOut', [\n        state('inactive', style({\n          opacity: 0,\n        })),\n        transition('inactive => active', animate('400ms ease-out', keyframes([\n          style({\n            transform: 'translate3d(100%, 0, 0) skewX(-30deg)',\n            opacity: 0,\n          }),\n          style({\n            transform: 'skewX(20deg)',\n            opacity: 1,\n          }),\n          style({\n            transform: 'skewX(-5deg)',\n            opacity: 1,\n          }),\n          style({\n            transform: 'none',\n            opacity: 1,\n          }),\n        ]))),\n        transition('active => removed', animate('400ms ease-out', keyframes([\n          style({\n            opacity: 1,\n          }),\n          style({\n            transform: 'translate3d(100%, 0, 0) skewX(30deg)',\n            opacity: 0,\n          }),\n        ]))),\n      ]),\n    ],\n    preserveWhitespaces: false,\n  })\n  export class RunTestToast extends Toast {\n    // used for demo purposes\n    saveRunString = 'Save and Run';\n    runString = 'Run Test'\n    // constructor is only necessary when not using AoT\n\n    constructor(\n      protected toastrService: ToastrService,\n      public toastPackage: ToastPackage,\n      public apiService: ApiService\n    ) {\n      super(toastrService, toastPackage);\n    }\n  \n    runTest(event: Event){\n        console.log('Run Test')\n        event.stopPropagation();\n        this.apiService.runSaveOption('run')\n        this.remove();\n\n    }\n\n    saveAndRunTest(event: Event){\n        console.log('Save and Run Test')\n        event.stopPropagation();\n        this.apiService.runSaveOption('saveRun')\n        this.remove();\n    }\n  }\n    \n\n\n    \n            \n        a {\n            background: #388196;\n            margin: 2px;\n        }\n\n        a:hover {\n            color: black;\n        }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ title }}                      {{ message }}                  {{ saveRunString }}                {{ runString }}              close        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmResetPasswordComponent', 'selector': 'app-confirm-reset-password'},{'name': 'DeleteScenarioToast', 'selector': '[pink-toast-component]'},{'name': 'EditableComponent', 'selector': 'editable'},{'name': 'ExampleTableComponent', 'selector': 'app-example-table'},{'name': 'FeedbackComponent', 'selector': 'app-feedback'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalsComponent', 'selector': 'app-modals'},{'name': 'ParentComponent', 'selector': 'app-parent'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'ReportHistoryComponent', 'selector': 'app-report-history'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RunTestToast', 'selector': '[pink-toast-component]'},{'name': 'ScenarioEditorComponent', 'selector': 'app-scenario-editor'},{'name': 'StoriesBarComponent', 'selector': 'app-stories-bar'},{'name': 'StoryEditorComponent', 'selector': 'app-story-editor'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'TestAccountComponent', 'selector': 'app-test-account'}];\n    var DIRECTIVES = [{'name': 'EditableOnEnterDirective', 'selector': '[editableOnEnter]'},{'name': 'EditModeDirective', 'selector': '[editMode]'},{'name': 'FocusableDirective', 'selector': '[focusable]'},{'name': 'PasswordConfirmedValidatorDirective', 'selector': '[appPasswordConfirmed]'},{'name': 'ViewModeDirective', 'selector': '[viewMode]'}];\n    var ACTUAL_COMPONENT = {'name': 'RunTestToast'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Scenario.html":{"url":"interfaces/Scenario.html","title":"interface - Scenario","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Scenario\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/Scenario.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        browser\n                                \n                                \n                                        comment\n                                \n                                \n                                            Optional\n                                        daisyAutoLogout\n                                \n                                \n                                            Optional\n                                        lastTestPassed\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        saved\n                                \n                                \n                                        scenario_id\n                                \n                                \n                                        stepDefinitions\n                                \n                                \n                                            Optional\n                                        stepWaitTime\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        browser\n                                    \n                                \n                                \n                                    \n                                        browser:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                    \n                                \n                                \n                                    \n                                        comment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        daisyAutoLogout\n                                    \n                                \n                                \n                                    \n                                        daisyAutoLogout:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastTestPassed\n                                    \n                                \n                                \n                                    \n                                        lastTestPassed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        saved\n                                    \n                                \n                                \n                                    \n                                        saved:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenario_id\n                                    \n                                \n                                \n                                    \n                                        scenario_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stepDefinitions\n                                    \n                                \n                                \n                                    \n                                        stepDefinitions:         StepDefinition\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StepDefinition\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stepWaitTime\n                                    \n                                \n                                \n                                    \n                                        stepWaitTime:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {StepDefinition} from './StepDefinition';\n\n\nexport interface Scenario {\n    scenario_id: number;\n    name: string;\n    stepDefinitions: StepDefinition;\n    comment: string;\n    lastTestPassed?: boolean;\n    saved?: boolean;\n    daisyAutoLogout?: boolean;\n    stepWaitTime?: number;\n    browser?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StepDefinition.html":{"url":"interfaces/StepDefinition.html","title":"interface - StepDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StepDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/StepDefinition.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        example\n                                \n                                \n                                        given\n                                \n                                \n                                        then\n                                \n                                \n                                        when\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        example\n                                    \n                                \n                                \n                                    \n                                        example:         StepType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StepType[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        given\n                                    \n                                \n                                \n                                    \n                                        given:         StepType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StepType[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        then\n                                    \n                                \n                                \n                                    \n                                        then:         StepType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StepType[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        when\n                                    \n                                \n                                \n                                    \n                                        when:         StepType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StepType[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { StepType } from \"./StepType\";\n\nexport interface StepDefinition {\n    given: StepType[];\n    when: StepType[];\n    then: StepType[];\n    example: StepType[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StepDefinitionBackground.html":{"url":"interfaces/StepDefinitionBackground.html","title":"interface - StepDefinitionBackground","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StepDefinitionBackground\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/StepDefinitionBackground.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        when\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        when\n                                    \n                                \n                                \n                                    \n                                        when:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface StepDefinitionBackground {\n    when: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StepType.html":{"url":"interfaces/StepType.html","title":"interface - StepType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StepType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/StepType.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        _id\n                                \n                                \n                                            Optional\n                                        checked\n                                \n                                \n                                            Optional\n                                        deactivated\n                                \n                                \n                                        id\n                                \n                                \n                                        mid\n                                \n                                \n                                            Optional\n                                        outdated\n                                \n                                \n                                        pre\n                                \n                                \n                                            Optional\n                                        selection\n                                \n                                \n                                        stepType\n                                \n                                \n                                        type\n                                \n                                \n                                        values\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        checked\n                                    \n                                \n                                \n                                    \n                                        checked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deactivated\n                                    \n                                \n                                \n                                    \n                                        deactivated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mid\n                                    \n                                \n                                \n                                    \n                                        mid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outdated\n                                    \n                                \n                                \n                                    \n                                        outdated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pre\n                                    \n                                \n                                \n                                    \n                                        pre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selection\n                                    \n                                \n                                \n                                    \n                                        selection:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stepType\n                                    \n                                \n                                \n                                    \n                                        stepType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        values\n                                    \n                                \n                                \n                                    \n                                        values:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface StepType {\n    _id?: string;\n    id: number;\n    mid: string;\n    pre: string;\n    selection?: string[];\n    stepType: string;\n    type: string;\n    values: string[];\n    outdated?: boolean;\n    checked?: boolean;\n    deactivated?: boolean;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StoriesBarComponent.html":{"url":"components/StoriesBarComponent.html","title":"component - StoriesBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StoriesBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/stories-bar/stories-bar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-stories-bar\n            \n\n            \n                styleUrls\n                ./stories-bar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./stories-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiService\n                            \n                            \n                                closeResult\n                            \n                            \n                                daisyVersion\n                            \n                            \n                                db\n                            \n                            \n                                modalsComponent\n                            \n                            \n                                selectedScenario\n                            \n                            \n                                selectedStory\n                            \n                            \n                                stories\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getDismissReason\n                            \n                            \n                                getSortedStories\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                open\n                            \n                            \n                                openCreateNewScenarioModal\n                            \n                            \n                                selectScenario\n                            \n                            \n                                selectStoryScenario\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                scenarioChosen\n                            \n                            \n                                storyChosen\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, modalService: NgbModal)\n                    \n                \n                        \n                            \n                                Defined in src/app/stories-bar/stories-bar.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        scenarioChosen\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/stories-bar/stories-bar.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        storyChosen\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/stories-bar/stories-bar.component.ts:24\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getDismissReason\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDismissReason(reason: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/stories-bar/stories-bar.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reason\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSortedStories\n                        \n                        \n                    \n                \n            \n            \n                \ngetSortedStories()\n                \n            \n\n\n            \n                \n                    Defined in src/app/stories-bar/stories-bar.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/stories-bar/stories-bar.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            open\n                        \n                        \n                    \n                \n            \n            \n                \nopen(content)\n                \n            \n\n\n            \n                \n                    Defined in src/app/stories-bar/stories-bar.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openCreateNewScenarioModal\n                        \n                        \n                    \n                \n            \n            \n                \nopenCreateNewScenarioModal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/stories-bar/stories-bar.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectScenario\n                        \n                        \n                    \n                \n            \n            \n                \nselectScenario(storyID, scenario: Scenario)\n                \n            \n\n\n            \n                \n                    Defined in src/app/stories-bar/stories-bar.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    storyID\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    scenario\n                                    \n                                                Scenario\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectStoryScenario\n                        \n                        \n                    \n                \n            \n            \n                \nselectStoryScenario(story: Story)\n                \n            \n\n\n            \n                \n                    Defined in src/app/stories-bar/stories-bar.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    story\n                                    \n                                                Story\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApiService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/stories-bar/stories-bar.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeResult\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/stories-bar/stories-bar.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            daisyVersion\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/stories-bar/stories-bar.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            db\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/stories-bar/stories-bar.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalsComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalsComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('modalsComponent')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/stories-bar/stories-bar.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedScenario\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Scenario\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/stories-bar/stories-bar.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedStory\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Story\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/stories-bar/stories-bar.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stories\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Story[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/stories-bar/stories-bar.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, EventEmitter, Output, ViewChild } from '@angular/core';\nimport {ApiService} from '../Services/api.service';\nimport { Story } from '../model/Story';\nimport { Scenario } from '../model/Scenario';\nimport {RepositoryContainer} from \"../model/RepositoryContainer\";\nimport {NgbModal, ModalDismissReasons} from '@ng-bootstrap/ng-bootstrap';\nimport { ModalsComponent } from '../modals/modals.component';\n\n@Component({\n  selector: 'app-stories-bar',\n  templateUrl: './stories-bar.component.html',\n  styleUrls: ['./stories-bar.component.css']\n})\nexport class StoriesBarComponent implements OnInit {\n\n  closeResult = '';\n  stories: Story[];\n  selectedStory: Story;\n  selectedScenario: Scenario;\n  db = false;\n  daisyVersion: boolean = true;\n\n  @Output()\n  storyChosen: EventEmitter = new EventEmitter();\n  @Output()\n  scenarioChosen: EventEmitter = new EventEmitter();\n\n  @ViewChild('modalsComponent') modalsComponent: ModalsComponent;\n  \n  constructor(public apiService: ApiService, private modalService: NgbModal) {\n    this.apiService.getStoriesEvent.subscribe(stories => {\n      this.stories = stories;\n      this.db = localStorage.getItem('source') === 'db' ;\n    } );\n\n    this.apiService.createCustomStoryEmitter.subscribe(custom => {\n      this.apiService.createStory(custom.story.title, custom.story.description, custom.repositoryContainer.value, custom.repositoryContainer._id).subscribe(respp => {\n        this.apiService.getStories(custom.repositoryContainer).subscribe((resp: Story[]) => {\n          console.log('stories', resp);\n          this.stories = resp;\n        });\n      });\n    })\n  }\n    \n  /* modal mask start */\n  open(content) {\n    this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title', size: 'sm' }).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n  /* modal mask end */\n\n  ngOnInit() {\n    let version = localStorage.getItem('version')\n    if (version == 'DAISY' || !version) {\n      this.daisyVersion = true;\n    } else {\n      this.daisyVersion = false;\n    }\n  }\n\n\n  getSortedStories() {\n    if (this.stories) {\n      return this.stories.sort(function(a, b) { \n        if(a.issue_number  b.issue_number) { return 1; }\n        return 0;\n      });\n    }\n  }\n\n  selectScenario(storyID, scenario: Scenario) {\n    this.selectedScenario = scenario;\n    this.scenarioChosen.emit(scenario);\n  }\n\n  selectStoryScenario(story: Story) {\n    this.selectedStory = story;\n    this.storyChosen.emit(story);\n    const storyIndex = this.stories.indexOf(this.selectedStory);\n    if (this.stories[storyIndex].scenarios[0]) {\n      this.selectScenario(this.selectedStory._id, this.stories[storyIndex].scenarios[0]);\n    }\n  }\n\n  openCreateNewScenarioModal(){\n    this.modalsComponent.openCreateNewStoryModal()\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      Stories\n      \n        A user story describes requirements for a software system.\n          It is consciously kept in short sentences and simple words.\n          A story includes several scenarios.\n          The following template is recommended:\n          As a , I want  so that \n        \n    \n    \n    \n      \n        \n            \n              {{s.issue_number}}. {{s.title}}\n            \n          \n            -->\n            \n            \n          \n        \n\n        \n          \n            #{{s.issue_number}}.{{c+1}} {{scen.name | titlecase}}\n          \n        \n      \n    \n    \n      Create New Story\n    \n  \n\n\n\n    \n\n    \n                \n                    ./stories-bar.component.css\n                \n                  .grid {\n    /*display: grid;\n    grid-template-columns: 100%;\n    grid-template-rows: auto;\n    grid-template-areas: \"storyHeader\" \"storyList\";*/\n    margin-top: 24px;\n    border: 1px solid #999;\n    padding-left: 10px;\n    padding-right: 10px;\n    padding-bottom: 1px;\n    box-shadow: 0px 5px 15px rgba(0,0,0,0.08);\n    background-color: var(--white);\n  }\n\n\n  #storyHeader{\n    grid-area: storyHeader;\n  }\n\n  #infoIcon{\n    grid-area: storyHeader;\n    color: #999;\n    padding-top: 3px;\n    margin-left: 7px;\n  }\n\n  .def {\n    color: #999;\n    cursor: help;\n    position: relative;\n    z-index: 2;\n    top: -2px;\n  }\n  \n  .def span[rel=def] {\n    display: none;\n  }\n  \n  .def:hover span[rel=def] {\n    font-size: small;\n    color: white;\n    background-color: rgb(109, 109, 109);\n    position: absolute;\n    bottom: 2em;\n    left: 2em;\n    width: 30em;\n    padding: 0.5em;\n    display: block;\n  }\n\n \n\n\n  #createNewStoryDiv{\n    text-align: right;\n  }\n\n  .modal-title{\n    color: var(--white);\n  }\n  .modal-header{\n    background-color: var(--ocean-blue);\n  }\n\n  .modal-body{\n    text-align: center;\n    padding-top: 30px;\n    padding-left: 30px;\n    padding-right: 30px;\n    padding-bottom: 15px;\n  }\n\n  .modal-footer{\n    height: 60px;\n  }\n\n  .close{\n    color: white;\n    outline: none;\n  }\n\n  .github-avatar{\n    float: right;\n  }\n\n  a.storyListLink {\n    transition: 0.2s;\n    display: inline-block;\n    max-width: 80%;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n\n  .normalButton{\n    margin-bottom: 10px;\n  }\n\n  a.storyListLink:hover{\n    color: var(--dark-grey);\n  }\n\n  #storyList{\n    grid-area: storyList;\n    font-size: smaller;\n    transition: 0.1s;\n  }\n\n  #storyList:hover{\n    cursor: pointer;\n    background-color: #f1f1f1;\n  }\n  .scenarioListItem{\n    display: block;\n  }\n  .scenarioListItem:hover{\n    background-color: #f1f1f1;\n  }\n\n  .uk-accordion{\n    width: 100%;\n  }\n  \n  .uk-accordion-content {\n    font-size: small;\n  }\n\n  .uk-accordion-content a{\n    color: #56595e;\n  }\n\n  .uk-accordion-content .passed,\n  .uk-accordion-title.uk-background-muted .passed{\n    color: green;\n  }\n  \n  .uk-accordion-content .notPassed,\n  .uk-accordion-title.uk-background-muted .notPassed{\n    color: red;\n  }\n\n  .uk-accordion-title.uk-background-muted span.passed{\n    background-color: green;\n  }\n\n  .uk-accordion-title.uk-background-muted span.notPassed{\n    background-color: red;\n  }\n  \n@media screen and (max-width: 600px) {\n  .grid{\n      display: grid;\n      grid-template-areas:\n      \"storyHeader\"\n      \"storyList\";\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Stories              A user story describes requirements for a software system.          It is consciously kept in short sentences and simple words.          A story includes several scenarios.          The following template is recommended:          As a , I want  so that                                                             {{s.issue_number}}. {{s.title}}                                  -->                                                                        #{{s.issue_number}}.{{c+1}} {{scen.name | titlecase}}                                      Create New Story      '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmResetPasswordComponent', 'selector': 'app-confirm-reset-password'},{'name': 'DeleteScenarioToast', 'selector': '[pink-toast-component]'},{'name': 'EditableComponent', 'selector': 'editable'},{'name': 'ExampleTableComponent', 'selector': 'app-example-table'},{'name': 'FeedbackComponent', 'selector': 'app-feedback'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalsComponent', 'selector': 'app-modals'},{'name': 'ParentComponent', 'selector': 'app-parent'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'ReportHistoryComponent', 'selector': 'app-report-history'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RunTestToast', 'selector': '[pink-toast-component]'},{'name': 'ScenarioEditorComponent', 'selector': 'app-scenario-editor'},{'name': 'StoriesBarComponent', 'selector': 'app-stories-bar'},{'name': 'StoryEditorComponent', 'selector': 'app-story-editor'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'TestAccountComponent', 'selector': 'app-test-account'}];\n    var DIRECTIVES = [{'name': 'EditableOnEnterDirective', 'selector': '[editableOnEnter]'},{'name': 'EditModeDirective', 'selector': '[editMode]'},{'name': 'FocusableDirective', 'selector': '[focusable]'},{'name': 'PasswordConfirmedValidatorDirective', 'selector': '[appPasswordConfirmed]'},{'name': 'ViewModeDirective', 'selector': '[viewMode]'}];\n    var ACTUAL_COMPONENT = {'name': 'StoriesBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Story.html":{"url":"interfaces/Story.html","title":"interface - Story","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Story\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/Story.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        assignee\n                                \n                                \n                                        assignee_avatar_url\n                                \n                                \n                                        background\n                                \n                                \n                                        body\n                                \n                                \n                                        issue_number\n                                \n                                \n                                            Optional\n                                        lastTestPassed\n                                \n                                \n                                        scenarios\n                                \n                                \n                                        state\n                                \n                                \n                                        story_id\n                                \n                                \n                                        storySource\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        assignee\n                                    \n                                \n                                \n                                    \n                                        assignee:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        assignee_avatar_url\n                                    \n                                \n                                \n                                    \n                                        assignee_avatar_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        background\n                                    \n                                \n                                \n                                    \n                                        background:         Background\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Background\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issue_number\n                                    \n                                \n                                \n                                    \n                                        issue_number:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastTestPassed\n                                    \n                                \n                                \n                                    \n                                        lastTestPassed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenarios\n                                    \n                                \n                                \n                                    \n                                        scenarios:         Scenario[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Scenario[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                    \n                                \n                                \n                                    \n                                        state:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        story_id\n                                    \n                                \n                                \n                                    \n                                        story_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        storySource\n                                    \n                                \n                                \n                                    \n                                        storySource:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Scenario} from './Scenario';\nimport { Background } from './Background';\n\nexport interface Story {\n    _id: any;\n    issue_number: any;\n    story_id: number;\n    storySource: string;\n    background: Background;\n    scenarios: Scenario[];\n    title: string;\n    body: string;\n    state: string;\n    assignee: string;\n    assignee_avatar_url: string;\n    lastTestPassed?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TermsComponent.html":{"url":"components/TermsComponent.html","title":"component - TermsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TermsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/terms/terms.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-terms\n            \n\n            \n                styleUrls\n                ./terms.component.css\n            \n\n\n\n            \n                templateUrl\n                ./terms.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/terms/terms.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/terms/terms.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-terms',\n  templateUrl: './terms.component.html',\n  styleUrls: ['./terms.component.css']\n})\nexport class TermsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  Privacy Policy for Seed-Test\n\n  At Seed-Test, accessible from https://seed-test-frontend.herokuapp.com/, one of our main priorities is the privacy of our visitors. This Privacy Policy document contains types of information that is collected and recorded by Seed-Test and how we use it.\n  \n  If you have additional questions or require more information about our Privacy Policy, do not hesitate to contact us.\n  \n  This Privacy Policy applies only to our online activities and is valid for visitors to our website with regards to the information that they shared and/or collect in Seed-Test. This policy is not applicable to any information collected offline or via channels other than this website.\n  \n  Consent\n  \n  By using our website, you hereby consent to our Privacy Policy and agree to its terms.\n  \n  Information we collect\n  \n  The personal information that you are asked to provide, and the reasons why you are asked to provide it, will be made clear to you at the point we ask you to provide your personal information.\n  If you contact us directly, we may receive additional information about you such as your name, email address, phone number, the contents of the message and/or attachments you may send us, and any other information you may choose to provide.\n  When you register for an Account, we may ask for your contact information, including items such as name, company name, address, email address, and telephone number.\n  \n  How we use your information\n  \n  We use the information we collect in various ways, including to:\n  \n  \n  Provide, operate, and maintain our webste\n  Improve, personalize, and expand our webste\n  Understand and analyze how you use our webste\n  Develop new products, services, features, and functionality\n  Communicate with you, either directly or through one of our partners, including for customer service, to provide you with updates and other information relating to the webste, and for marketing and promotional purposes\n  Send you emails\n  Find and prevent fraud\n  \n  \n  Log Files\n  \n  Seed-Test follows a standard procedure of using log files. These files log visitors when they visit websites. All hosting companies do this and a part of hosting services' analytics. The information collected by log files include internet protocol (IP) addresses, browser type, Internet Service Provider (ISP), date and time stamp, referring/exit pages, and possibly the number of clicks. These are not linked to any information that is personally identifiable. The purpose of the information is for analyzing trends, administering the site, tracking users' movement on the website, and gathering demographic information. Our Privacy Policy was created with the help of the Privacy Policy Generator and the Disclaimer Generator.\n  \n  Cookies and Web Beacons\n  \n  Like any other website, Seed-Test uses 'cookies'. These cookies are used to store information including visitors' preferences, and the pages on the website that the visitor accessed or visited. The information is used to optimize the users' experience by customizing our web page content based on visitors' browser type and/or other information.\n  \n  For more general information on cookies, please read \"What Are Cookies\".\n  \n  \n  \n  Advertising Partners Privacy Policies\n  \n  You may consult this list to find the Privacy Policy for each of the advertising partners of Seed-Test.\n  \n  Third-party ad servers or ad networks uses technologies like cookies, JavaScript, or Web Beacons that are used in their respective advertisements and links that appear on Seed-Test, which are sent directly to users' browser. They automatically receive your IP address when this occurs. These technologies are used to measure the effectiveness of their advertising campaigns and/or to personalize the advertising content that you see on websites that you visit.\n  \n  Note that Seed-Test has no access to or control over these cookies that are used by third-party advertisers.\n  \n  Third Party Privacy Policies\n  \n  Seed-Test's Privacy Policy does not apply to other advertisers or websites. Thus, we are advising you to consult the respective Privacy Policies of these third-party ad servers for more detailed information. It may include their practices and instructions about how to opt-out of certain options. \n  \n  You can choose to disable cookies through your individual browser options. To know more detailed information about cookie management with specific web browsers, it can be found at the browsers' respective websites.\n  \n  CCPA Privacy Rights (Do Not Sell My Personal Information)\n  \n  Under the CCPA, among other rights, California consumers have the right to:\n  Request that a business that collects a consumer's personal data disclose the categories and specific pieces of personal data that a business has collected about consumers.\n  Request that a business delete any personal data about the consumer that a business has collected.\n  Request that a business that sells a consumer's personal data, not sell the consumer's personal data.\n  If you make a request, we have one month to respond to you. If you would like to exercise any of these rights, please contact us.\n  \n  GDPR Data Protection Rights\n  \n  We would like to make sure you are fully aware of all of your data protection rights. Every user is entitled to the following:\n  The right to access – You have the right to request copies of your personal data. We may charge you a small fee for this service.\n  The right to rectification – You have the right to request that we correct any information you believe is inaccurate. You also have the right to request that we complete the information you believe is incomplete.\n  The right to erasure – You have the right to request that we erase your personal data, under certain conditions.\n  The right to restrict processing – You have the right to request that we restrict the processing of your personal data, under certain conditions.\n  The right to object to processing – You have the right to object to our processing of your personal data, under certain conditions.\n  The right to data portability – You have the right to request that we transfer the data that we have collected to another organization, or directly to you, under certain conditions.\n  If you make a request, we have one month to respond to you. If you would like to exercise any of these rights, please contact us.\n  \n  Children's Information\n  \n  Another part of our priority is adding protection for children while using the internet. We encourage parents and guardians to observe, participate in, and/or monitor and guide their online activity.\n  \n  Seed-Test does not knowingly collect any Personal Identifiable Information from children under the age of 13. If you think that your child provided this kind of information on our website, we strongly encourage you to contact us immediately and we will do our best efforts to promptly remove such information from our records.\n\n\n\n\n\n\n    \n\n    \n                \n                    ./terms.component.css\n                \n                *{\n    font-family: Klavika, sans-serif;\n}\n\n.container{\n    margin: 20px;\n}\n\na {\n    color: #212529;\n}\n\n@media screen and (max-width: 600px) {\n    .container{\n        width: 94%;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Privacy Policy for Seed-Test  At Seed-Test, accessible from https://seed-test-frontend.herokuapp.com/, one of our main priorities is the privacy of our visitors. This Privacy Policy document contains types of information that is collected and recorded by Seed-Test and how we use it.    If you have additional questions or require more information about our Privacy Policy, do not hesitate to contact us.    This Privacy Policy applies only to our online activities and is valid for visitors to our website with regards to the information that they shared and/or collect in Seed-Test. This policy is not applicable to any information collected offline or via channels other than this website.    Consent    By using our website, you hereby consent to our Privacy Policy and agree to its terms.    Information we collect    The personal information that you are asked to provide, and the reasons why you are asked to provide it, will be made clear to you at the point we ask you to provide your personal information.  If you contact us directly, we may receive additional information about you such as your name, email address, phone number, the contents of the message and/or attachments you may send us, and any other information you may choose to provide.  When you register for an Account, we may ask for your contact information, including items such as name, company name, address, email address, and telephone number.    How we use your information    We use the information we collect in various ways, including to:      Provide, operate, and maintain our webste  Improve, personalize, and expand our webste  Understand and analyze how you use our webste  Develop new products, services, features, and functionality  Communicate with you, either directly or through one of our partners, including for customer service, to provide you with updates and other information relating to the webste, and for marketing and promotional purposes  Send you emails  Find and prevent fraud      Log Files    Seed-Test follows a standard procedure of using log files. These files log visitors when they visit websites. All hosting companies do this and a part of hosting services\\' analytics. The information collected by log files include internet protocol (IP) addresses, browser type, Internet Service Provider (ISP), date and time stamp, referring/exit pages, and possibly the number of clicks. These are not linked to any information that is personally identifiable. The purpose of the information is for analyzing trends, administering the site, tracking users\\' movement on the website, and gathering demographic information. Our Privacy Policy was created with the help of the Privacy Policy Generator and the Disclaimer Generator.    Cookies and Web Beacons    Like any other website, Seed-Test uses \\'cookies\\'. These cookies are used to store information including visitors\\' preferences, and the pages on the website that the visitor accessed or visited. The information is used to optimize the users\\' experience by customizing our web page content based on visitors\\' browser type and/or other information.    For more general information on cookies, please read \"What Are Cookies\".        Advertising Partners Privacy Policies    You may consult this list to find the Privacy Policy for each of the advertising partners of Seed-Test.    Third-party ad servers or ad networks uses technologies like cookies, JavaScript, or Web Beacons that are used in their respective advertisements and links that appear on Seed-Test, which are sent directly to users\\' browser. They automatically receive your IP address when this occurs. These technologies are used to measure the effectiveness of their advertising campaigns and/or to personalize the advertising content that you see on websites that you visit.    Note that Seed-Test has no access to or control over these cookies that are used by third-party advertisers.    Third Party Privacy Policies    Seed-Test\\'s Privacy Policy does not apply to other advertisers or websites. Thus, we are advising you to consult the respective Privacy Policies of these third-party ad servers for more detailed information. It may include their practices and instructions about how to opt-out of certain options.     You can choose to disable cookies through your individual browser options. To know more detailed information about cookie management with specific web browsers, it can be found at the browsers\\' respective websites.    CCPA Privacy Rights (Do Not Sell My Personal Information)    Under the CCPA, among other rights, California consumers have the right to:  Request that a business that collects a consumer\\'s personal data disclose the categories and specific pieces of personal data that a business has collected about consumers.  Request that a business delete any personal data about the consumer that a business has collected.  Request that a business that sells a consumer\\'s personal data, not sell the consumer\\'s personal data.  If you make a request, we have one month to respond to you. If you would like to exercise any of these rights, please contact us.    GDPR Data Protection Rights    We would like to make sure you are fully aware of all of your data protection rights. Every user is entitled to the following:  The right to access – You have the right to request copies of your personal data. We may charge you a small fee for this service.  The right to rectification – You have the right to request that we correct any information you believe is inaccurate. You also have the right to request that we complete the information you believe is incomplete.  The right to erasure – You have the right to request that we erase your personal data, under certain conditions.  The right to restrict processing – You have the right to request that we restrict the processing of your personal data, under certain conditions.  The right to object to processing – You have the right to object to our processing of your personal data, under certain conditions.  The right to data portability – You have the right to request that we transfer the data that we have collected to another organization, or directly to you, under certain conditions.  If you make a request, we have one month to respond to you. If you would like to exercise any of these rights, please contact us.    Children\\'s Information    Another part of our priority is adding protection for children while using the internet. We encourage parents and guardians to observe, participate in, and/or monitor and guide their online activity.    Seed-Test does not knowingly collect any Personal Identifiable Information from children under the age of 13. If you think that your child provided this kind of information on our website, we strongly encourage you to contact us immediately and we will do our best efforts to promptly remove such information from our records.'\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmResetPasswordComponent', 'selector': 'app-confirm-reset-password'},{'name': 'DeleteScenarioToast', 'selector': '[pink-toast-component]'},{'name': 'EditableComponent', 'selector': 'editable'},{'name': 'ExampleTableComponent', 'selector': 'app-example-table'},{'name': 'FeedbackComponent', 'selector': 'app-feedback'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalsComponent', 'selector': 'app-modals'},{'name': 'ParentComponent', 'selector': 'app-parent'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'ReportHistoryComponent', 'selector': 'app-report-history'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RunTestToast', 'selector': '[pink-toast-component]'},{'name': 'ScenarioEditorComponent', 'selector': 'app-scenario-editor'},{'name': 'StoriesBarComponent', 'selector': 'app-stories-bar'},{'name': 'StoryEditorComponent', 'selector': 'app-story-editor'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'TestAccountComponent', 'selector': 'app-test-account'}];\n    var DIRECTIVES = [{'name': 'EditableOnEnterDirective', 'selector': '[editableOnEnter]'},{'name': 'EditModeDirective', 'selector': '[editMode]'},{'name': 'FocusableDirective', 'selector': '[focusable]'},{'name': 'PasswordConfirmedValidatorDirective', 'selector': '[appPasswordConfirmed]'},{'name': 'ViewModeDirective', 'selector': '[viewMode]'}];\n    var ACTUAL_COMPONENT = {'name': 'TermsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TestAccountComponent.html":{"url":"components/TestAccountComponent.html","title":"component - TestAccountComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TestAccountComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/test-account/test-account.component.ts\n\n\n\n    \n        Extends\n    \n    \n                ParentComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-test-account\n            \n\n            \n                styleUrls\n                ../parent/parent.component.css\n            \n\n\n\n            \n                templateUrl\n                ../parent/parent.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiService\n                            \n                            \n                                    Public\n                                apiService\n                            \n                            \n                                formtosubmit\n                            \n                            \n                                selectedScenario\n                            \n                            \n                                selectedStory\n                            \n                            \n                                stories\n                            \n                            \n                                storyEditorActive\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadStories\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                loadStories\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setEditor\n                            \n                            \n                                setSelectedScenario\n                            \n                            \n                                setSelectedStory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/test-account/test-account.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadStories\n                        \n                        \n                    \n                \n            \n            \n                \nloadStories()\n                \n            \n\n\n            \n                \n                    Defined in src/app/test-account/test-account.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/test-account/test-account.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadStories\n                        \n                        \n                    \n                \n            \n            \n                \nloadStories()\n                \n            \n\n\n            \n                \n                    Inherited from         ParentComponent\n\n                \n            \n            \n                \n                        Defined in         ParentComponent:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         ParentComponent\n\n                \n            \n            \n                \n                        Defined in         ParentComponent:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setEditor\n                        \n                        \n                    \n                \n            \n            \n                \nsetEditor(e)\n                \n            \n\n\n            \n                \n                    Inherited from         ParentComponent\n\n                \n            \n            \n                \n                        Defined in         ParentComponent:60\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSelectedScenario\n                        \n                        \n                    \n                \n            \n            \n                \nsetSelectedScenario(scenario: Scenario)\n                \n            \n\n\n            \n                \n                    Inherited from         ParentComponent\n\n                \n            \n            \n                \n                        Defined in         ParentComponent:56\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scenario\n                                    \n                                                Scenario\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSelectedStory\n                        \n                        \n                    \n                \n            \n            \n                \nsetSelectedStory(story: Story)\n                \n            \n\n\n            \n                \n                    Inherited from         ParentComponent\n\n                \n            \n            \n                \n                        Defined in         ParentComponent:51\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    story\n                                    \n                                                Story\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApiService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/test-account/test-account.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApiService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ParentComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         ParentComponent:21\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formtosubmit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     [\"\"]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ParentComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         ParentComponent:18\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedScenario\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Scenario\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ParentComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         ParentComponent:17\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedStory\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Story\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ParentComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         ParentComponent:16\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stories\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Story[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ParentComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         ParentComponent:15\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            storyEditorActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         ParentComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         ParentComponent:19\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ParentComponent } from '../parent/parent.component';\nimport { ApiService } from '../Services/api.service';\nimport { Story } from '../model/Story';\nimport { RepositoryContainer } from '../model/RepositoryContainer';\n\n\n// here is the same template used as in the parent component\n@Component({\n  selector: 'app-test-account',\n  templateUrl: '../parent/parent.component.html',\n  styleUrls: ['../parent/parent.component.css']\n})\nexport class TestAccountComponent extends ParentComponent implements OnInit {\n\n  constructor(public apiService: ApiService) {\n    super(apiService);\n    this.loadStories()\n  }\n\n  ngOnInit() {\n  }\n\n  loadStories() {\n    let repository: RepositoryContainer = {value: '', source: 'testaccount'}\n    this.apiService\n        .getStories(repository)\n        .subscribe((resp: Story[]) => {\n          this.stories = resp;\n          console.log(resp);\n    });\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        \n        \n    \n\n\n    \n\n    \n                \n                    ../parent/parent.component.css\n                \n                * {\n    padding: 0px;\n    margin: 0px;\n}\n\n.grid{\n    background-color: var(--light-grey);\n    display: grid;\n    grid-template-columns: repeat(4, minmax(0, 1fr));\n    grid-template-rows: auto;\n    grid-template-areas:\n    \"storiesBar storyEditor storyEditor storyEditor\";\n    grid-column-gap: 10px;\n    padding-bottom: 5px;\n}\n\n.storiesBar{\n    grid-area: storiesBar;\n}\n\n.storyEditor{\n    grid-area: storyEditor;\n}\n\n\n\n@media screen and (max-width: 600px) {\n    .grid{\n        display: grid;\n        grid-template-columns: 94%;\n        grid-template-rows: auto auto;\n        grid-template-areas:\n        \"storiesBar\"\n        \"storyEditor\";\n        justify-content: center;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmResetPasswordComponent', 'selector': 'app-confirm-reset-password'},{'name': 'DeleteScenarioToast', 'selector': '[pink-toast-component]'},{'name': 'EditableComponent', 'selector': 'editable'},{'name': 'ExampleTableComponent', 'selector': 'app-example-table'},{'name': 'FeedbackComponent', 'selector': 'app-feedback'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalsComponent', 'selector': 'app-modals'},{'name': 'ParentComponent', 'selector': 'app-parent'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'ReportHistoryComponent', 'selector': 'app-report-history'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RunTestToast', 'selector': '[pink-toast-component]'},{'name': 'ScenarioEditorComponent', 'selector': 'app-scenario-editor'},{'name': 'StoriesBarComponent', 'selector': 'app-stories-bar'},{'name': 'StoryEditorComponent', 'selector': 'app-story-editor'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'TestAccountComponent', 'selector': 'app-test-account'}];\n    var DIRECTIVES = [{'name': 'EditableOnEnterDirective', 'selector': '[editableOnEnter]'},{'name': 'EditModeDirective', 'selector': '[editMode]'},{'name': 'FocusableDirective', 'selector': '[focusable]'},{'name': 'PasswordConfirmedValidatorDirective', 'selector': '[appPasswordConfirmed]'},{'name': 'ViewModeDirective', 'selector': '[viewMode]'}];\n    var ACTUAL_COMPONENT = {'name': 'TestAccountComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/TimeoutInterceptor.html":{"url":"interceptors/TimeoutInterceptor.html","title":"interceptor - TimeoutInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  TimeoutInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Services/timeout-interceptor.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(defaultTimeout: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/Services/timeout-interceptor.interceptor.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        defaultTimeout\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Services/timeout-interceptor.interceptor.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { timeout } from 'rxjs/operators';\n\n\n// from https://stackoverflow.com/questions/45938931/default-and-specific-request-timeout\nexport const DEFAULT_TIMEOUT = new InjectionToken('defaultTimeout');\n\n@Injectable()\nexport class TimeoutInterceptor implements HttpInterceptor {\n  constructor(@Inject(DEFAULT_TIMEOUT) protected defaultTimeout: number) {\n  }\n\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const timeoutValue = req.headers.get('timeout') || this.defaultTimeout;\n    const timeoutValueNumeric = Number(timeoutValue);\n\n    return next.handle(req).pipe(timeout(timeoutValueNumeric));\n  }\n}\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/User.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        email\n                                \n                                \n                                        github\n                                \n                                \n                                        jira\n                                \n                                \n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        github\n                                    \n                                \n                                \n                                    \n                                        github:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jira\n                                    \n                                \n                                \n                                    \n                                        jira:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n    _id: any;\n    email: string;\n    password: string;\n    github: {\n        githubToken: string;\n        githubAccountName: string;\n        githubRepo: string;\n    };\n    jira: {\n        AccountName: string;\n        Password: string;\n        Host: string;\n    };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ViewModeDirective.html":{"url":"directives/ViewModeDirective.html","title":"directive - ViewModeDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ViewModeDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/directives/view-mode.directive.ts\n        \n\n            \n                Description\n            \n            \n                Directive of table cell if it is only viewable for the example table\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [viewMode]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                tpl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tpl: TemplateRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/directives/view-mode.directive.ts:9\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tpl\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            tpl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/directives/view-mode.directive.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, TemplateRef } from '@angular/core';\n\n/**\n * Directive of table cell if it is only viewable for the example table\n */\n@Directive({\n  selector: '[viewMode]'\n})\nexport class ViewModeDirective {\n\n  /**\n   * Constructor\n   * @param tpl \n   */\n  constructor(public tpl: TemplateRef) { }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/Services/api.service.ts\n            \n            injectable\n            ApiService\n            \n                0 %\n                (0/72)\n            \n        \n        \n            \n                \n                src/app/Services/timeout-interceptor.interceptor.ts\n            \n            interceptor\n            TimeoutInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/Services/timeout-interceptor.interceptor.ts\n            \n            variable\n            DEFAULT_TIMEOUT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/account-management/account-management.component.ts\n            \n            component\n            AccountManagementComponent\n            \n                84 %\n                (16/19)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/confirm-reset-password/confirm-reset-password.component.ts\n            \n            component\n            ConfirmResetPasswordComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/custom-toast.ts\n            \n            component\n            RunTestToast\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/deleteScenario-toast.ts\n            \n            component\n            DeleteScenarioToast\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/directives/edit-mode.directive.ts\n            \n            directive\n            EditModeDirective\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/directives/edit-on-enter.directive.ts\n            \n            directive\n            EditableOnEnterDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/directives/password-confirmed.directive.ts\n            \n            directive\n            PasswordConfirmedValidatorDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/directives/password-confirmed.directive.ts\n            \n            variable\n            passwordConfirmedValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/directives/view-mode.directive.ts\n            \n            directive\n            ViewModeDirective\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/editable/editable.component.ts\n            \n            component\n            EditableComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/editable/focusable.directive.ts\n            \n            directive\n            FocusableDirective\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/example-table/example-table.component.ts\n            \n            component\n            ExampleTableComponent\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                src/app/feedback/feedback.component.ts\n            \n            component\n            FeedbackComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/33)\n            \n        \n        \n            \n                \n                src/app/modals/modals.component.ts\n            \n            component\n            ModalsComponent\n            \n                0 %\n                (0/61)\n            \n        \n        \n            \n                \n                src/app/model/Background.ts\n            \n            interface\n            Background\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/model/Block.ts\n            \n            interface\n            Block\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/model/Report.ts\n            \n            interface\n            Report\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/model/ReportContainer.ts\n            \n            interface\n            ReportContainer\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/model/RepositoryContainer.ts\n            \n            interface\n            RepositoryContainer\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/model/Scenario.ts\n            \n            interface\n            Scenario\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/model/StepDefinition.ts\n            \n            interface\n            StepDefinition\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/model/StepDefinitionBackground.ts\n            \n            interface\n            StepDefinitionBackground\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/model/StepType.ts\n            \n            interface\n            StepType\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/model/Story.ts\n            \n            interface\n            Story\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/model/User.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/parent/parent.component.ts\n            \n            component\n            ParentComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/registration/registration.component.ts\n            \n            component\n            RegistrationComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/report-history/report-history.component.ts\n            \n            component\n            ReportHistoryComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/report/report.component.ts\n            \n            component\n            ReportComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/reset-password/reset-password.component.ts\n            \n            component\n            ResetPasswordComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/routes/routes.ts\n            \n            variable\n            ROUTES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/scenario-editor/scenario-editor.component.ts\n            \n            component\n            ScenarioEditorComponent\n            \n                0 %\n                (0/80)\n            \n        \n        \n            \n                \n                src/app/stories-bar/stories-bar.component.ts\n            \n            component\n            StoriesBarComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/story-editor/story-editor.component.ts\n            \n            component\n            StoryEditorComponent\n            \n                0 %\n                (0/89)\n            \n        \n        \n            \n                \n                src/app/story-editor/story-editor.component.ts\n            \n            variable\n            emptyBackground\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/terms/terms.component.ts\n            \n            component\n            TermsComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/test-account/test-account.component.ts\n            \n            component\n            TestAccountComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^10.2.3\n        \n            @angular/common : ^10.2.3\n        \n            @angular/compiler : ^10.2.3\n        \n            @angular/core : ^10.2.3\n        \n            @angular/forms : ^10.2.3\n        \n            @angular/http : ^7.2.16\n        \n            @angular/platform-browser : ^10.2.3\n        \n            @angular/platform-browser-dynamic : ^10.2.3\n        \n            @angular/router : ^10.2.3\n        \n            @ng-bootstrap/ng-bootstrap : ^8.0.0\n        \n            @ngbmodule/material-carousel : ^0.7.1\n        \n            angular : ^1.8.2\n        \n            core-js : ^3.7.0\n        \n            cors : ^2.8.5\n        \n            dotenv : ^8.2.0\n        \n            express : ^4.16.4\n        \n            file-saver : ^2.0.1\n        \n            hammerjs : ^2.0.8\n        \n            invert-kv : ^3.0.1\n        \n            jquery : ^3.5.1\n        \n            ngx-cookie-service : 10.1.1\n        \n            ngx-take-until-destroy : ^5.4.0\n        \n            ngx-toastr : 13.1.0\n        \n            node-fetch : ^2.6.1\n        \n            node-sass : ^4.14.1\n        \n            request : ^2.88.2\n        \n            set-value : 3.0.2\n        \n            uikit : ^3.5.9\n        \n            zone.js : ~0.11.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCucumberFrontend\nThis project was generated with Angular CLI version 6.2.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAccountManagementComponent\n\nAccountManagementComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccountManagementComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nConfirmResetPasswordComponent\n\nConfirmResetPasswordComponent\n\nAppModule -->\n\nConfirmResetPasswordComponent->AppModule\n\n\n\n\n\nDeleteScenarioToast\n\nDeleteScenarioToast\n\nAppModule -->\n\nDeleteScenarioToast->AppModule\n\n\n\n\n\nEditModeDirective\n\nEditModeDirective\n\nAppModule -->\n\nEditModeDirective->AppModule\n\n\n\n\n\nEditableComponent\n\nEditableComponent\n\nAppModule -->\n\nEditableComponent->AppModule\n\n\n\n\n\nEditableOnEnterDirective\n\nEditableOnEnterDirective\n\nAppModule -->\n\nEditableOnEnterDirective->AppModule\n\n\n\n\n\nExampleTableComponent\n\nExampleTableComponent\n\nAppModule -->\n\nExampleTableComponent->AppModule\n\n\n\n\n\nFeedbackComponent\n\nFeedbackComponent\n\nAppModule -->\n\nFeedbackComponent->AppModule\n\n\n\n\n\nFocusableDirective\n\nFocusableDirective\n\nAppModule -->\n\nFocusableDirective->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nModalsComponent\n\nModalsComponent\n\nAppModule -->\n\nModalsComponent->AppModule\n\n\n\n\n\nParentComponent\n\nParentComponent\n\nAppModule -->\n\nParentComponent->AppModule\n\n\n\n\n\nPasswordConfirmedValidatorDirective\n\nPasswordConfirmedValidatorDirective\n\nAppModule -->\n\nPasswordConfirmedValidatorDirective->AppModule\n\n\n\n\n\nRegistrationComponent\n\nRegistrationComponent\n\nAppModule -->\n\nRegistrationComponent->AppModule\n\n\n\nAppModule -->\n\nRegistrationComponent->AppModule\n\n\n\n\n\nReportComponent\n\nReportComponent\n\nAppModule -->\n\nReportComponent->AppModule\n\n\n\n\n\nReportHistoryComponent\n\nReportHistoryComponent\n\nAppModule -->\n\nReportHistoryComponent->AppModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAppModule -->\n\nResetPasswordComponent->AppModule\n\n\n\n\n\nRunTestToast\n\nRunTestToast\n\nAppModule -->\n\nRunTestToast->AppModule\n\n\n\n\n\nScenarioEditorComponent\n\nScenarioEditorComponent\n\nAppModule -->\n\nScenarioEditorComponent->AppModule\n\n\n\n\n\nStoriesBarComponent\n\nStoriesBarComponent\n\nAppModule -->\n\nStoriesBarComponent->AppModule\n\n\n\n\n\nStoryEditorComponent\n\nStoryEditorComponent\n\nAppModule -->\n\nStoryEditorComponent->AppModule\n\n\n\n\n\nTermsComponent\n\nTermsComponent\n\nAppModule -->\n\nTermsComponent->AppModule\n\n\n\n\n\nTestAccountComponent\n\nTestAccountComponent\n\nAppModule -->\n\nTestAccountComponent->AppModule\n\n\n\n\n\nViewModeDirective\n\nViewModeDirective\n\nAppModule -->\n\nViewModeDirective->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nApiService\n\nApiService\n\nAppModule -->\n\nApiService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    20 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    11 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            DEFAULT_TIMEOUT   (src/.../timeout-interceptor.interceptor.ts)\n                        \n                        \n                            emptyBackground   (src/.../story-editor.component.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            passwordConfirmedValidator   (src/.../password-confirmed.directive.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            ROUTES   (src/.../routes.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/app/Services/timeout-interceptor.interceptor.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_TIMEOUT\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('defaultTimeout')\n                        \n                    \n\n\n            \n        \n\n    src/app/story-editor/story-editor.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            emptyBackground\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Background\n\n                        \n                    \n                    \n                        \n                            Default value : {stepDefinitions: {when: []}}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/directives/password-confirmed.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            passwordConfirmedValidator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ValidatorFn\n\n                        \n                    \n                    \n                        \n                            Default value : (control: FormGroup): ValidationErrors | null => {\n  const password = control.get('password');\n  const confirmPassword = control.get('confirmPassword');\n\n  return password && confirmPassword && password.value !== confirmPassword.value ? { 'passwordConfirmed': true } : null;\n}\n                        \n                    \n\n                \n                    \n                        A user's password has to match the user's confirmed password \n\n                    \n                \n\n            \n        \n\n    src/app/routes/routes.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ROUTES\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        path: 'login',\n        component: LoginComponent\n    },\n    {\n        path: 'accountManagement',\n        component: AccountManagementComponent\n    },\n    {\n        path: '',\n        component: ParentComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'report/:reportName',\n        component: ReportComponent\n    },\n    {\n        path: 'testaccount',\n        component: TestAccountComponent\n    },\n    {\n        path: 'feedback',\n        component: FeedbackComponent\n    },\n    {\n        path: 'terms',\n        component: TermsComponent\n    },\n    {\n        path: 'register',\n        component: RegistrationComponent\n    },\n\n    {\n        path: 'resetpassword',\n        component: ResetPasswordComponent\n    },\n\n    {\n        path: 'resetpasswordconfirm',\n        component: ConfirmResetPasswordComponent\n    },\n]\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        Component to handle the client login\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiService\n                            \n                            \n                                error\n                            \n                            \n                                repositories\n                            \n                            \n                                repositoriesLoading\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                showInstruction\n                            \n                            \n                                slide0\n                            \n                            \n                                slide01\n                            \n                            \n                                slide02\n                            \n                            \n                                slide03\n                            \n                            \n                                slide04\n                            \n                            \n                                slide05\n                            \n                            \n                                slide06\n                            \n                            \n                                slide07\n                            \n                            \n                                slide08\n                            \n                            \n                                slide09\n                            \n                            \n                                slide10\n                            \n                            \n                                slide11\n                            \n                            \n                                    Private\n                                testJiraHost\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getGithubData\n                            \n                            \n                                getRepositories\n                            \n                            \n                                githubLogin\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                loginGithubToken\n                            \n                            \n                                    Async\n                                loginTestAccount\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openInstruction\n                            \n                            \n                                selectRepository\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, router: Router, route: ActivatedRoute, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getGithubData\n                        \n                        \n                    \n                \n            \n            \n                \ngetGithubData(accessToken)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    accessToken\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRepositories\n                        \n                        \n                    \n                \n            \n            \n                \ngetRepositories()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            githubLogin\n                        \n                        \n                    \n                \n            \n            \n                \ngithubLogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(form: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loginGithubToken\n                        \n                        \n                    \n                \n            \n            \n                \nloginGithubToken(login: string, id: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    login\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loginTestAccount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loginTestAccount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openInstruction\n                        \n                        \n                    \n                \n            \n            \n                \nopenInstruction()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectRepository\n                        \n                        \n                    \n                \n            \n            \n                \nselectRepository(userRepository: RepositoryContainer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userRepository\n                                    \n                                                RepositoryContainer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApiService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            repositories\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RepositoryContainer[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:20\n                            \n                        \n\n                \n                    \n                        Repositories / projects of the user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            repositoriesLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showInstruction\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slide0\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{'image0': '/assets//slide0.png'}]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slide01\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{'image01': '/assets//slide01.PNG'}]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slide02\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{'image02': '/assets//slide02.png'}]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slide03\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{'image03': '/assets//slide03.PNG'}]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slide04\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{'image04': '/assets//slide04.PNG'}]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slide05\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{'image05': '/assets//slide05.PNG'}]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slide06\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{'image06': '/assets//slide06.PNG'}]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slide07\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{'image07': '/assets//slide07.png'}]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slide08\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{'image08': '/assets//slide08.PNG'}]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slide09\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{'image09': '/assets//slide09.PNG'}]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slide10\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{'image10': '/assets//slide10.PNG'}]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slide11\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{'image11': '/assets//slide11.png'}]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            testJiraHost\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {AfterViewInit, ChangeDetectorRef, Component, OnInit} from '@angular/core';\nimport {ApiService} from '../Services/api.service';\nimport {Router, ActivatedRoute} from '@angular/router';\nimport {NgForm} from '@angular/forms';\nimport { RepositoryContainer } from '../model/RepositoryContainer';\n\n/**\n * Component to handle the client login\n */\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit, AfterViewInit {\n\n    /**\n     * Repositories / projects of the user\n     */\n    repositories: RepositoryContainer[];\n    error: string;\n    private testJiraHost = '';\n    repositoriesLoading: boolean;\n    showInstruction = false;\n    slide0 = [{'image0': '/assets//slide0.png'}];\n    slide01 = [{'image01': '/assets//slide01.PNG'}];\n    slide02 = [{'image02': '/assets//slide02.png'}];\n    slide03 = [{'image03': '/assets//slide03.PNG'}];\n    slide04 = [{'image04': '/assets//slide04.PNG'}];\n    slide05 = [{'image05': '/assets//slide05.PNG'}];\n    slide06 = [{'image06': '/assets//slide06.PNG'}];\n    slide07 = [{'image07': '/assets//slide07.png'}];\n    slide08 = [{'image08': '/assets//slide08.PNG'}];\n    slide09 = [{'image09': '/assets//slide09.PNG'}];\n    slide10 = [{'image10': '/assets//slide10.PNG'}];\n    slide11 = [{'image11': '/assets//slide11.png'}];\n\n\n    constructor(public apiService: ApiService, public router: Router, private route: ActivatedRoute, private cdr: ChangeDetectorRef) {\n        this.error = undefined;\n        this.route.queryParams.subscribe((params) => {\n           if (params.code){\n                this.apiService.githubCallback(params.code).subscribe(resp => {\n                    if (resp.error){\n                        this.error = resp.error\n                    }else{\n                        localStorage.setItem('login', 'true')\n                        this.getRepositories()\n                        let userId = localStorage.getItem('userId');\n                        localStorage.removeItem('userId');\n                        if(userId){\n                            this.apiService.mergeAccountGithub(userId, resp.login, resp.id).subscribe((respo) => {\n                                this.loginGithubToken(resp.login, resp.id);\n                            })\n                        }\n                    }\n                })\n            }\n        })\n    }\n    ngAfterViewInit(): void {\n        // needed for ExpressionChangedAfterItHasBeenCheckedError mat-carousel error\n        this.cdr.detectChanges();\n    }\n\n    getGithubData (accessToken){\n        fetch(`https://api.github.com/user?access_token=${accessToken}`,\n            {\n                method:\"GET\",\n                headers: {\n                    \"User-Agent\": \"SampleOAuth\",\n                }\n            }).then(async function (resp) {\n                //console.log(resp)\n            })\n                \n      }\n\n    ngOnInit() {\n    }\n\n    loginGithubToken(login: string, id: any){\n        this.apiService.loginGithubToken(login, id).subscribe((resp) => {\n            if (resp.status === 'error') {\n                this.error = resp.message;\n            } else if (resp.message === 'repository') {\n                let repository = resp.repository;\n                localStorage.setItem('repositoryType', 'github');\n                localStorage.setItem('repository', repository);\n                this.repositoriesLoading = false;\n                this.router.navigate(['/']);\n            } else {\n                this.getRepositories()\n            }\n        })\n    }\n\n    async login(form: NgForm) {\n        this.repositoriesLoading = true;\n        this.error = undefined;\n        const response = await this.apiService.loginUser(form.value.email, form.value.password, form.value.stayLoggedIn).toPromise()\n        if (response.status === 'error') {\n            this.repositoriesLoading = false;\n            this.error = response.message;\n        } else {\n            localStorage.setItem('login', 'true');\n            this.getRepositories();\n        }\n    }\n\n    async loginTestAccount() {\n        localStorage.setItem('repository', 'adessoCucumber/Cucumber')\n        localStorage.setItem('source', 'github')\n        this.router.navigate(['/testaccount']);\n    }\n\n    getRepositories() {\n        let value = localStorage.getItem('repository')\n        let source = localStorage.getItem('source')\n        let _id = localStorage.getItem('id');\n        let repository: RepositoryContainer = {value, source, _id}\n        this.repositoriesLoading = true;\n        const loadingSpinner: HTMLElement = document.getElementById('loadingSpinner');\n        if (loadingSpinner){\n            loadingSpinner.scrollIntoView();\n        }\n        this.apiService.getRepositories().subscribe((resp: RepositoryContainer[]) => {\n            console.log(resp)\n            if(resp.length  {\n                if(elem.value == repository.value && elem.source == repository.source && elem._id == repository._id){\n                    this.router.navigate(['']);\n                }\n            })\n            this.repositories = resp;\n            this.repositoriesLoading = false;\n            setTimeout(() => {\n                const repositoriesList: HTMLElement = document.getElementById('repositoriesList');\n                if (repositoriesList){\n                    repositoriesList.scrollIntoView();\n                }\n            }, 500)\n\n        }, (err) => {\n            this.error = err.error;\n            this.repositoriesLoading = false;\n        });\n    }\n\n    selectRepository(userRepository: RepositoryContainer) {\n        const ref: HTMLLinkElement = document.getElementById('githubHref') as HTMLLinkElement;\n        ref.href = 'https://github.com/' + userRepository.value;\n        localStorage.setItem('repository', userRepository.value)\n        localStorage.setItem('source', userRepository.source)\n        localStorage.setItem('id', userRepository._id)\n        this.router.navigate(['']);\n    }\n\n    githubLogin() {\n        this.error = undefined;\n        this.repositoriesLoading = true;\n        this.apiService.githubLogin();\n    }\n\n    openInstruction() {\n        this.showInstruction = !this.showInstruction;\n    }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n            \n              Welcome to seed-test!\n              HOW TO START\n              \n            \n        -->\n        \n        \n        \n          Login to Seed-Test via GitHub or create a new Seed-Test Account by registering.Alternatively you can try Seed-Test without an account, by trying our Demo.\n        \n        \n            After the login via GitHub you can see your repositories.\n        \n        \n            Else you can just register yourself using your E-Mail.\n        \n        \n          After the first Login of your Seed-Test account, you can create your own custom Repositories or connect an existing GitHub Account or Jira Server.\n        \n        \n          Name your custom Project and save it.\n        \n        \n          Select your newly created Project to continue.\n        \n        \n          With a new Custom Project you can create your own stories.If you use a Github or Jira repository, you have to create an issue with the tag or label „story“, to make it appear in Seed-Test.\n        \n        \n          Enter a name and description for your new story.\n        \n        \n          Now you can add steps to create your first Test!Usually you want to start by using the Given-Step: \"Website\".\n        \n        \n          Run your Test by clickling on \"Run Scenario\".\n        \n        \n          For help and further information click on Help and check out our Tutorial.\n        \n      \n    \n  \n  \n    {{error}}\n    \n    Login\n    \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      Login\n      \n        \n      \n    \n    \n      Forgot Password?\n    \n    or\n    \n    No account?\n      Register here.\n    -->\n    Login via Github-->\n    \n      \n         \n         Login via GitHub\n      \n   \n   \n   \n    No account yet? \n    Register\n    or\n    Try Our Demo\n       (no account required)\n    \n    \n\n   \n  \n  \n  \n    \n      Select Your Project:\n      \n      \n        \n          \n          \n          \n          {{repository.value}}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                * {\n    padding: 0px;\n    margin: 0px;\n}\n\nh1{\n    margin: 5px;\n}\n\n\n.loginGrid{\n    display: grid;\n    grid-template:\n    \"howToStart formular\"\n    \"howToStart repositories\"\n    / 1fr 1fr;\n    background-color: var(--white);\n    place-items: center;\n}\n\n.formular{\n    grid-area: formular;\n    grid-row: 2 / 3;\n    grid-column: 3 / 4;\n    text-align: center;\n    background-color: var(--white);\n    margin-top: auto;\n    margin-right: auto;\n    margin-left: 10%;\n    margin-bottom: auto;\n    text-align: center;\n    padding: 40px 20px 40px 40px;\n}\n\n.repositories{\n    grid-area: repositories;\n    grid-row: 3 / 4;\n    grid-column: 3 / 4;\n    /*width: 400px;*/\n    text-align: center;\n    margin-right: auto;\n    margin-bottom: 5%;\n    margin-left: auto;\n    padding: 25px;\n    background-color:rgb(224, 224, 224);\n    border: 1px solid #999;\n}\n\n\n.howToStart {\n    grid-area: howToStart;\n    grid-row: 2 / 3;\n    grid-column: 2 / 3;\n    background-color: var(--white);\n    text-align: center;\n    font-size: small;\n    margin-top: auto;\n    margin-bottom: 10%;\n    margin-right: auto;\n    margin-left: auto;\n    width: 830px;\n    height: 500px;\n    position: relative;\n}\n\n.welcomeSlide{\n    background-color: var(--white);\n    height: 100%;\n    text-align: center;\n    margin: auto;\n    padding: 70px;\n}\n\n.welcomeSlide h1{\n    margin-bottom: 50px;\n}\n\n.mat-carousel{\n    z-index: auto;\n    position: absolute;\n    width: 100%; \n    height: 100px;\n}\n\n.mat{\n    width: 850px;\n    margin-top: 70px;\n    border: 12px solid #999;\n}\n\n.slideDescription{\n    margin-top: 340px;\n    background-color: #999;\n    color: var(--white);\n    height: 88px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.repo_img{\n    margin-left: 5px;\n    margin-right: 5px;\n    max-height: 18px;\n}\n\n/*\n#info{\n    color: #0099CC;\n    font-weight: bold;\n}*/\n.repositoryList{\n    list-style: none;\n}\n\na.repoLink{\n    color: var(--ocean-blue);\n    transition: 0.2s;\n}\n\na.repoLink:hover{\n    color: var(--marine-blue);\n}\n\n.wrongLogin{\n    background-color: var(--grape);\n    text-align: center;\n}\n\n.loginFont{\n    color:var(--ocean-blue);\n}\n\n.noAccount{\n    font-size: 13px;\n    padding: 5px;\n}\n\n.githubLogin{\n    color: var(--white);\n    padding: 5px 10px;\n    background-color: black;\n    border: none;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n}\n\n.githubLoginContainer{\n    margin: 10px;\n    display:inline-block;\n}\n\n.githubLogin img{\n    margin-right: 5px;\n    width: 17px;\n    height: 17px;\n}\n\n.uk-form-controls{\n    border-radius: 3px;\n    padding: 5px 5px 5px 5px;\n}\n\n.linkButton{\n    font-style: inherit;\n    border: none;\n    background-color: transparent;\n    color: var(--ocean-blue);\n    transition: 0.2s;\n    font-size: 10pt;\n}\n\n.linkButton:hover{\n    color: var(--marine-blue);\n}\n\n#noAccountDiv{\n    margin-top: 30px;\n    border: 0.25px solid #999;\n    padding: 10px;\n    background-color: rgb(247, 247, 247);\n  }\n\n#loadingSpinner{\n    margin-left:38%;\n}\n\n:host ::ng-deep .loadingSpinner circle{\n    stroke: var(--marine-blue);\n}\n\n@media screen and (max-width: 600px) {\n    .grid{\n        display: grid;\n        grid-template-rows: auto;\n        grid-template-areas: \"formular\" \"repositories\";\n    }\n}\n\n@media screen and (min-width: 1600px) {\n    .howToStart {\n        grid-area: howToStart;\n        grid-row: 2 / 3;\n        grid-column: 2 / 3;\n        background-color: var(--white);\n        text-align: center;\n        font-size: small;\n        margin-top: 80px;\n        margin-bottom: 180px;\n        margin-right: 150px;\n        margin-left: 100px;\n        width: 830px;\n        height: 500px;\n        position: relative;\n    }\n\n    .formular{\n        grid-area: formular;\n        grid-row: 2 / 3;\n        grid-column: 3 / 4;\n        text-align: center;\n        background-color: var(--white);\n        margin-top: 80px;\n        margin-right: 100px;\n        margin-bottom: 100px;\n        text-align: center;\n        padding: 40px;\n    }\n    \n    .repositories{\n        grid-area: repositories;\n        grid-row: 3 / 4;\n        grid-column: 3 / 4;\n        width: 400px;\n        text-align: center;\n        margin-right: 100px;\n        margin-bottom: 80px;\n        padding: 15px;\n        background-color:rgb(224, 224, 224);\n        border: 1px solid #999;\n    }\n    \n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              Welcome to seed-test!              HOW TO START                                  -->                                  Login to Seed-Test via GitHub or create a new Seed-Test Account by registering.Alternatively you can try Seed-Test without an account, by trying our Demo.                            After the login via GitHub you can see your repositories.                            Else you can just register yourself using your E-Mail.                          After the first Login of your Seed-Test account, you can create your own custom Repositories or connect an existing GitHub Account or Jira Server.                          Name your custom Project and save it.                          Select your newly created Project to continue.                          With a new Custom Project you can create your own stories.If you use a Github or Jira repository, you have to create an issue with the tag or label „story“, to make it appear in Seed-Test.                          Enter a name and description for your new story.                          Now you can add steps to create your first Test!Usually you want to start by using the Given-Step: \"Website\".                          Run your Test by clickling on \"Run Scenario\".                          For help and further information click on Help and check out our Tutorial.                          {{error}}        Login                                                                                              Login                                  Forgot Password?        or        No account?      Register here.    -->    Login via Github-->                            Login via GitHub                   No account yet?     Register    or    Try Our Demo       (no account required)                           Select Your Project:                                                            {{repository.value}}                    '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmResetPasswordComponent', 'selector': 'app-confirm-reset-password'},{'name': 'DeleteScenarioToast', 'selector': '[pink-toast-component]'},{'name': 'EditableComponent', 'selector': 'editable'},{'name': 'ExampleTableComponent', 'selector': 'app-example-table'},{'name': 'FeedbackComponent', 'selector': 'app-feedback'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalsComponent', 'selector': 'app-modals'},{'name': 'ParentComponent', 'selector': 'app-parent'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'ReportHistoryComponent', 'selector': 'app-report-history'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RunTestToast', 'selector': '[pink-toast-component]'},{'name': 'ScenarioEditorComponent', 'selector': 'app-scenario-editor'},{'name': 'StoriesBarComponent', 'selector': 'app-stories-bar'},{'name': 'StoryEditorComponent', 'selector': 'app-story-editor'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'TestAccountComponent', 'selector': 'app-test-account'}];\n    var DIRECTIVES = [{'name': 'EditableOnEnterDirective', 'selector': '[editableOnEnter]'},{'name': 'EditModeDirective', 'selector': '[editMode]'},{'name': 'FocusableDirective', 'selector': '[focusable]'},{'name': 'PasswordConfirmedValidatorDirective', 'selector': '[appPasswordConfirmed]'},{'name': 'ViewModeDirective', 'selector': '[viewMode]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
