var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AccountManagementComponent.html",[0,0.162,1,0.68]],["body/components/AccountManagementComponent.html",[0,0.214,1,0.817,2,0.73,3,0.097,4,0.083,5,1.234,6,0.481,7,0.481,8,0.481,9,0.07,10,5.395,11,4.762,12,1.495,13,0.205,14,2.417,15,1.517,16,2.977,17,2.417,18,4.212,19,3.966,20,4.797,21,4.212,22,2.847,23,0.777,24,1.253,25,0.35,26,1.318,27,1.437,28,2.133,29,0.879,30,3.584,31,0.879,32,2.847,33,0.142,34,0.427,35,1.917,36,1.534,37,3.098,38,1.626,39,3.584,40,3.261,41,3.164,42,0.686,43,4.117,44,4.117,45,4.117,46,3.576,47,4.117,48,4.117,49,2.133,50,2.847,51,2.847,52,1.107,53,0.799,54,1.425,55,2.847,56,1.056,57,0.025,58,0.704,59,0.525,60,0.714,61,4.521,62,3.042,63,2.029,64,3.042,65,3.042,66,3.042,67,1.761,68,3.624,69,4.105,70,2.779,71,3.46,72,1.141,73,1.318,74,1.69,75,1.761,76,2.847,77,1.761,78,3.085,79,1.754,80,1.761,81,1.761,82,2.779,83,2.33,84,2.133,85,1.612,86,2.417,87,3.576,88,1.761,89,1.353,90,2.775,91,2.133,92,2.483,93,1.761,94,1.921,95,1.491,96,0.579,97,1.612,98,2.133,99,2.847,100,1.151,101,1.761,102,2.847,103,0.817,104,2.847,105,1.761,106,1.921,107,2.847,108,2.847,109,1.761,110,1.761,111,1.761,112,0.931,113,1.319,114,2.847,115,1.761,116,2.686,117,2.417,118,1.761,119,0.405,120,0.264,121,0.544,122,2.417,123,0.747,124,0.997,125,1.319,126,0.097,127,0.284,128,1.396,129,0.616,130,1.761,131,0.922,132,1.761,133,1.761,134,1.495,135,1.761,136,1.495,137,2.133,138,2.847,139,3.584,140,1.495,141,1.761,142,1.761,143,1.761,144,1.761,145,1.495,146,1.761,147,1.761,148,1.761,149,3.042,150,2.847,151,2.419,152,1.761,153,2.847,154,1.761,155,2.847,156,1.761,157,1.761,158,1.761,159,1.491,160,1.761,161,0.511,162,0.616,163,1.761,164,1.761,165,1.495,166,0.747,167,1.319,168,2.133,169,1.319,170,1.319,171,1.319,172,2.133,173,1.319,174,1.319,175,1.319,176,1.319,177,1.319,178,1.188,179,2.417,180,2.847,181,2.847,182,3.624,183,2.847,184,2.847,185,1.761,186,2.847,187,1.921,188,1.761,189,2.133,190,1.761,191,1.801,192,1.292,193,2.013,194,2.958,195,1.188,196,1.635,197,1.292,198,1.635,199,1.292,200,2.156,201,2.404,202,1.319,203,2.533,204,1.24,205,1.889,206,1.761,207,2.847,208,2.354,209,1.495,210,1.917,211,2.419,212,2.029,213,1.612,214,1.761,215,1.569,216,2.004,217,2.2,218,1.761,219,3.261,220,2.775,221,3.46,222,1.52,223,2.194,224,2.579,225,2.321,226,3.182,227,2.159,228,2.367,229,1.761,230,3.387,231,1.761,232,1.319,233,1.761,234,1.761,235,1.491,236,1.761,237,1.761,238,2.33,239,1.761,240,1.188,241,1.761,242,1.921,243,1.761,244,2.133,245,1.084,246,2.051,247,1.744,248,1.761,249,1.921,250,2.133,251,2.133,252,2.847,253,1.386,254,1.761,255,2.847,256,1.761,257,1.188,258,1.491,259,2.206,260,1.495,261,2.417,262,1.795,263,1.084,264,1.744,265,2.419,266,1.319,267,1.612,268,1.386,269,1.495,270,1.495,271,0.857,272,1.495,273,1.581,274,2.133,275,2.206,276,1.495,277,1.612,278,1.752,279,0.997,280,0.997,281,1.761,282,1.761,283,1.761,284,1.761,285,0.997,286,1.761,287,1.495,288,0.997,289,1.319,290,1.495,291,1.495,292,1.188,293,1.188,294,1.188,295,1.188,296,1.761,297,2.417,298,1.188,299,1.319,300,1.292,301,1.495,302,1.761,303,1.761,304,1.319,305,1.319,306,0.799,307,0.799,308,0.799,309,0.424,310,0.73,311,0.73,312,0.226,313,0.481,314,1.761,315,1.761,316,1.761,317,0.481,318,0.373,319,0.481,320,0.35,321,0.424,322,0.603,323,0.777,324,0.373,325,0.777,326,0.73,327,0.777,328,0.35,329,0.481,330,0.373,331,0.35,332,0.481,333,0.35,334,0.481,335,0.35,336,0.481,337,0.481,338,0.35,339,0.481,340,0.35,341,0.481,342,0.35,343,0.481,344,0.373,345,0.481,346,0.35,347,0.373,348,0.398,349,0.327,350,0.777,351,0.373,352,0.452,353,0.481,354,0.398,355,0.35,356,0.481,357,0.35,358,0.327,359,0.35,360,0.481,361,0.35,362,0.481,363,0.35,364,0.481,365,0.35,366,0.481,367,0.35,368,0.452,369,0.481,370,0.006,371,0.01,372,0.006]],["title/components/AppComponent.html",[0,0.162,318,0.726]],["body/components/AppComponent.html",[0,0.22,1,0.37,2,0.764,3,0.103,4,0.176,5,1.523,6,0.508,7,0.508,8,0.508,9,0.074,13,0.134,15,0.962,16,1.834,18,3.717,23,0.813,24,1.302,25,0.37,26,1.328,27,1.452,29,0.92,31,0.92,33,0.24,34,0.447,35,1.973,36,1.562,37,1.687,40,3.33,41,3.208,42,0.718,46,2.011,49,2.232,52,1.15,53,0.845,54,1.366,56,0.764,57,0.025,58,0.598,59,0.513,60,0.516,63,1.687,68,3.187,71,2.618,72,0.923,73,1.195,74,1.532,78,2.232,79,1.235,82,2.011,84,2.232,90,2.228,91,2.232,92,2.251,94,2.011,96,0.301,98,2.232,100,0.674,103,0.37,112,0.421,119,0.381,120,0.28,121,0.575,123,0.79,124,1.055,126,0.103,127,0.301,128,1.15,129,0.652,136,1.582,137,3.485,149,1.582,151,2.011,162,1.488,166,1.579,167,1.396,168,2.232,169,1.396,170,1.396,171,1.396,172,2.232,173,1.396,174,1.396,175,1.396,176,1.396,177,1.396,178,1.257,179,2.529,182,2.232,191,2.131,192,2.363,193,1.671,194,2.952,196,2.363,197,1.352,198,2.4,199,1.689,200,2.436,201,0.845,203,1.56,204,1.431,205,2.15,210,1.579,213,1.055,215,1.795,216,1.812,217,1.812,219,1.834,220,0.976,222,0.79,223,2.596,224,2.896,225,2.703,226,1.055,227,1.264,228,2.728,235,1.56,238,2.808,246,2.295,247,2.414,251,1.396,253,2.264,257,2.011,258,2.834,262,1.479,263,1.834,264,2.896,265,3.515,266,2.232,267,2.808,268,2.07,271,2.264,273,0.652,274,2.232,275,3.054,278,1.834,279,1.687,280,1.687,288,2.107,298,2.513,299,1.396,300,1.689,306,0.845,307,0.845,308,0.845,309,0.449,310,0.764,311,0.764,312,0.24,313,0.508,317,0.508,318,0.902,319,0.508,320,0.37,321,0.449,322,0.632,323,0.813,324,0.395,325,0.813,326,0.764,327,0.813,328,0.37,329,0.508,330,0.395,331,0.37,332,0.508,333,0.37,334,0.508,335,0.37,336,0.508,337,0.508,338,0.37,339,0.508,340,0.37,341,0.508,342,0.37,343,0.508,344,0.395,345,0.508,346,0.37,347,0.395,348,0.421,349,0.346,350,0.813,351,0.395,352,0.478,353,0.508,354,0.421,355,0.37,356,0.508,357,0.37,358,0.346,359,0.37,360,0.508,361,0.37,362,0.508,363,0.37,364,0.508,365,0.37,366,0.508,367,0.37,368,0.478,369,0.508,370,0.006,371,0.01,372,0.006,373,1.582,374,2.98,375,2.98,376,3.723,377,2.98,378,2.863,379,3.723,380,3.723,381,3.611,382,4.211,383,4.254,384,4.254,385,2.98,386,1.863,387,2.232,388,1.863,389,1.352,390,1.863,391,2.011,392,1.863,393,5.209,394,4.254,395,1.863,396,3.903,397,1.863,398,3.522,399,2.98,400,2.232,401,2.529,402,1.863,403,1.56,404,2.98,405,1.585,406,1.042,407,0.92,408,1.97,409,1.863,410,2.618,411,1.863,412,1.863,413,1.863,414,1.582,415,1.863,416,1.582,417,3.723,418,3.723,419,1.863,420,4.211,421,2.529,422,2.98,423,2.98,424,1.863,425,1.582,426,1.863,427,0.976,428,1.863,429,1.582,430,1.396,431,1.582,432,1.863,433,1.863,434,1.863,435,1.257,436,2.98,437,3.485,438,2.98,439,2.232,440,1.834,441,3.611,442,2.98,443,2.98,444,2.98,445,2.98,446,2.529,447,2.98,448,2.98,449,2.98,450,2.98,451,2.98,452,2.529,453,2.98,454,2.98,455,2.232,456,2.232,457,1.863,458,3.717,459,1.812,460,4.652,461,1.863,462,1.863,463,1.863,464,1.582,465,1.863,466,2.633,467,2.98,468,3.16,469,4.652,470,4.652,471,2.529,472,2.98,473,3.611,474,1.56,475,1.863,476,2.618,477,4.254,478,3.723,479,4.652,480,1.396,481,3.723,482,1.863,483,1.863,484,1.582,485,3.723,486,3.723,487,1.863,488,1.863,489,2.98,490,1.863,491,1.582,492,3.723,493,3.187,494,1.863,495,1.863,496,2.232,497,1.863,498,1.863,499,2.408,500,2.232,501,2.529,502,1.863,503,1.147,504,3.723,505,1.863,506,1.863,507,1.396,508,5.209,509,1.582,510,1.834,511,1.582,512,1.863,513,1.582,514,1.582,515,1.863,516,1.863,517,1.396,518,2.011,519,1.863,520,1.863,521,1.863,522,1.863,523,1.863,524,1.582,525,1.863,526,1.863,527,1.863,528,1.687,529,1.396]],["title/modules/AppModule.html",[530,2.109,531,2.312]],["body/modules/AppModule.html",[1,1.189,3,0.168,4,0.144,9,0.12,11,2.28,15,0.688,36,1.635,57,0.025,63,1.722,72,0.604,96,0.491,103,0.604,112,1.355,119,0.645,120,0.457,121,0.94,123,1.29,125,2.28,126,0.168,127,0.491,309,0.733,318,1.406,320,1.189,321,0.733,322,1.158,324,1.27,326,1.107,328,1.189,330,1.27,331,0.604,333,1.189,335,1.189,338,1.189,340,1.272,342,1.189,344,1.27,346,1.189,347,1.335,348,1.355,349,0.565,351,1.27,352,0.78,354,1.355,355,1.189,357,1.189,359,1.189,361,1.189,363,1.189,365,1.189,367,1.189,370,0.01,371,0.015,372,0.01,389,1.381,530,1.873,531,4.897,532,2.28,533,2.054,534,4.261,535,4.093,536,3.761,537,2.583,538,2.583,539,2.583,540,2.583,541,2.583,542,3.665,543,3.043,544,4.318,545,4.318,546,5.019,547,4.318,548,3.665,549,1.873,550,4.318,551,3.043,552,1.873,553,3.043,554,3.043,555,2.583,556,4.318,557,4.318,558,4.318,559,2.583,560,2.28,561,3.043,562,2.583,563,3.043,564,5.019,565,4.318,566,1.481,567,2.658,568,3.043,569,4.318,570,3.043,571,4.318,572,3.043,573,2.28,574,3.043,575,2.583,576,2.583,577,3.665,578,3.665,579,3.043,580,3.043,581,4.318,582,3.043,583,3.043,584,4.318,585,1.722,586,2.583,587,3.043,588,3.043,589,2.28,590,3.043,591,4.318,592,2.444,593,2.28,594,2.28,595,3.043,596,4.318,597,3.043,598,3.043,599,3.043,600,3.043,601,3.043,602,3.043,603,3.043,604,1.873,605,4.318,606,3.043,607,3.043,608,2.583,609,2.28,610,3.043,611,2.28,612,4.318,613,2.28,614,3.043,615,2.914,616,2.914,617,3.043,618,3.043,619,2.28,620,3.043,621,3.043,622,3.043,623,3.043,624,3.043,625,2.28,626,3.043,627,3.235,628,3.043,629,2.583,630,1.29,631,3.043,632,3.043]],["title/guards/AuthGuard.html",[567,2.109,633,2.312]],["body/guards/AuthGuard.html",[3,0.261,4,0.224,9,0.187,13,0.34,23,1.29,33,0.381,36,1.875,41,3.633,42,1.392,52,1.928,53,2.145,54,1.306,56,1.212,57,0.025,58,0.608,59,0.424,60,0.819,73,1.392,79,1.97,119,0.56,120,0.709,121,1.46,123,2.005,126,0.261,127,0.763,128,1.785,370,0.016,371,0.02,372,0.016,405,2.422,408,1.878,425,4.013,435,3.19,567,3.557,630,2.005,633,3.9,634,4.728,635,4.013,636,3.557,637,6.786,638,5.76,639,4.728,640,4.728,641,4.906,642,3.9,643,3.19,644,2.676,645,2.812]],["title/interfaces/Background.html",[204,0.879,646,0.636]],["body/interfaces/Background.html",[3,0.274,4,0.235,9,0.196,13,0.357,33,0.4,34,0.893,57,0.025,58,0.882,59,0.572,60,1.145,100,1.441,119,0.445,126,0.274,204,1.816,370,0.017,371,0.02,372,0.017,405,2.374,646,1.183,647,1.847,648,4.21,649,4.224,650,4.631,651,4.015,652,4.561,653,4.015]],["title/interfaces/Block.html",[271,1.667,646,0.636]],["body/interfaces/Block.html",[3,0.244,4,0.32,9,0.175,13,0.318,33,0.357,34,0.832,38,2.881,57,0.025,58,0.88,59,0.607,60,1.219,95,3.644,100,1.59,119,0.396,126,0.244,271,3.485,370,0.015,371,0.019,372,0.015,646,1.124,647,1.646,650,4.286,653,3.741,654,3.752,655,3.09,656,6.351,657,6.351,658,2.698,659,3.412,660,5.544,661,5.666,662,4.026,663,3.138,664,4.706]],["title/components/ConfirmResetPasswordComponent.html",[0,0.162,320,0.68]],["body/components/ConfirmResetPasswordComponent.html",[0,0.269,1,0.58,2,1.076,3,0.162,4,0.138,5,1.464,6,0.798,7,0.798,8,0.798,9,0.116,13,0.353,15,0.948,25,0.58,26,1.396,27,1.554,29,1.296,31,1.296,33,0.236,34,0.63,35,1.779,36,1.757,37,1.654,38,1.904,41,3.263,42,1.011,52,1.516,53,1.326,54,1.284,56,1.076,57,0.025,58,0.73,59,0.509,60,0.727,62,4.166,63,2.778,72,0.58,73,0.704,74,0.903,79,1.218,89,2.047,96,0.472,100,1.213,103,0.58,112,0.661,119,0.481,120,0.439,121,0.903,123,1.24,126,0.162,127,0.472,128,1.656,129,1.022,191,1.828,192,1.904,193,1.516,194,2.763,196,1.161,197,1.326,198,1.161,199,1.326,200,2.57,201,1.326,203,1.531,204,1.259,205,1.613,208,1.422,210,2.409,212,3.036,215,1.662,216,2.389,217,2.389,220,1.531,221,1.799,223,1.904,224,2.042,225,2.082,228,2.809,235,1.531,242,1.973,245,2.582,246,1.24,247,1.422,253,2.042,262,2.475,277,1.654,285,1.654,309,0.704,310,1.076,311,1.076,312,0.376,313,0.798,317,0.798,318,0.62,319,0.798,320,1.065,321,1.586,322,1.496,323,1.145,324,0.62,325,1.145,326,1.076,327,1.145,328,0.58,329,0.798,330,0.62,331,0.58,332,0.798,333,0.58,334,0.798,335,0.58,336,0.798,337,0.798,338,0.58,339,0.798,340,0.58,341,0.798,342,0.58,343,0.798,344,0.62,345,0.798,346,0.58,347,0.62,348,0.661,349,0.543,350,1.145,351,0.62,352,0.75,353,0.798,354,0.661,355,0.58,356,0.798,357,0.58,358,0.543,359,0.58,360,0.798,361,0.58,362,0.798,363,0.58,364,0.798,365,0.58,366,0.798,367,0.58,368,0.75,369,0.798,370,0.01,371,0.014,372,0.01,378,1.799,407,1.296,435,1.973,459,1.422,466,1.422,474,1.531,566,1.422,585,2.778,613,4.43,644,2.375,665,5.019,666,2.19,667,3.562,668,3.626,669,4.166,670,3.562,671,4.908,672,4.196,673,4.019,674,4.019,675,4.196,676,4.196,677,3.62,678,2.923,679,3.562,680,3.833,681,2.923,682,2.923,683,2.375,684,2.481,685,4.196,686,2.923,687,2.923,688,2.923,689,3.144,690,3.144,691,3.144,692,3.144,693,3.312,694,2.19,695,2.832,696,2.481,697,1.799,698,1.654,699,1.422,700,2.481,701,2.481,702,2.481,703,2.481,704,2.481,705,2.481,706,1.799,707,3.562,708,2.481,709,1.973,710,2.19,711,2.481,712,3.562]],["title/components/DeleteScenarioToast.html",[0,0.162,324,0.726]],["body/components/DeleteScenarioToast.html",[0,0.284,1,0.556,2,1.043,3,0.155,4,0.132,5,1.11,6,1.435,7,0.764,8,0.764,9,0.111,13,0.293,15,0.92,25,0.556,26,1.39,27,1.531,33,0.226,34,0.61,35,2.471,36,1.763,42,0.98,52,1.857,54,1.317,56,1.043,57,0.025,58,0.807,59,0.522,60,0.705,70,3.932,72,0.556,73,0.674,74,0.865,96,0.452,100,0.92,103,0.556,112,0.633,119,0.471,120,0.42,121,0.865,126,0.155,127,0.452,128,1.624,131,2.925,191,1.043,193,1.624,204,1.542,205,1.835,210,1.187,215,1.435,222,2.23,227,2.23,240,1.89,263,2.949,264,1.363,273,0.979,279,1.585,280,2.302,288,1.585,309,0.674,310,1.043,311,1.043,312,0.36,313,0.764,317,0.764,318,0.593,319,0.764,320,0.556,321,0.674,322,0.862,323,1.11,324,1.114,325,1.524,326,1.61,327,1.11,328,0.556,329,0.764,330,0.593,331,0.556,332,0.764,333,0.556,334,0.764,335,0.556,336,0.764,337,0.764,338,0.556,339,0.764,340,0.556,341,0.764,342,0.556,343,0.764,344,0.593,345,0.764,346,0.556,347,0.593,348,0.633,349,1.037,350,1.11,351,0.593,352,0.718,353,0.764,354,0.633,355,0.556,356,0.764,357,0.556,358,0.52,359,0.556,360,0.764,361,0.556,362,0.764,363,0.556,364,0.764,365,0.556,366,0.764,367,0.556,368,0.718,369,0.764,370,0.009,371,0.014,372,0.009,389,1.846,406,1.422,407,1.256,408,1.616,476,1.723,496,3.589,499,3.486,510,1.723,518,1.89,528,3.554,529,4.365,592,1.585,604,1.723,698,1.585,699,2.559,713,5.103,714,2.098,715,3.453,716,3.048,717,3.453,718,4.067,719,3.233,720,4.791,721,4.791,722,3.233,723,3.589,724,5.826,725,5.826,726,3.589,727,5.545,728,4.068,729,2.8,730,4.504,731,4.068,732,4.067,733,3.233,734,4.067,735,4.068,736,2.8,737,3.453,738,4.068,739,2.8,740,5.258,741,3.94,742,2.8,743,2.8,744,2.377,745,4.067,746,2.098,747,2.377,748,2.098,749,1.585,750,2.377,751,3.048,752,2.377,753,2.377,754,2.377,755,2.377,756,2.377,757,3.453,758,2.377,759,2.377,760,2.377,761,2.377,762,2.377,763,2.377,764,5.103,765,2.377,766,3.453,767,3.453,768,3.453,769,3.453,770,2.377,771,2.377,772,2.377,773,2.377,774,2.098,775,2.377,776,2.098,777,2.377,778,2.377,779,2.8,780,2.377]],["title/directives/EditModeDirective.html",[312,0.44,361,0.68]],["body/directives/EditModeDirective.html",[3,0.289,4,0.247,9,0.206,13,0.376,25,1.035,26,1.217,57,0.024,106,4.137,119,0.468,120,0.783,126,0.289,127,0.842,129,1.824,161,1.514,312,0.864,331,1.217,358,0.968,361,1.217,370,0.018,371,0.021,372,0.018,781,3.908,782,3.908,783,5.204,784,4.137,785,3.21,786,5.204,787,5.204,788,4.428]],["title/components/EditableComponent.html",[0,0.162,328,0.68]],["body/components/EditableComponent.html",[0,0.273,1,0.606,2,1.11,3,0.169,4,0.144,5,0.833,6,0.833,7,0.833,8,0.833,9,0.121,13,0.22,15,0.978,23,1.181,24,1.758,25,0.606,26,1.401,27,1.549,29,1.336,31,1.336,33,0.246,34,0.649,42,1.042,54,1.501,57,0.025,58,0.646,59,0.49,66,3.673,72,0.606,73,1.317,74,1.689,89,1.652,96,0.493,103,0.606,106,4.162,112,0.69,113,3.242,119,0.538,120,0.458,126,0.169,127,0.493,161,1.256,162,1.913,166,1.294,215,1.493,309,0.735,310,1.11,311,1.582,312,0.392,313,0.833,317,0.833,318,0.647,319,0.833,320,0.606,321,0.735,322,0.917,323,1.181,324,0.647,325,1.181,326,1.11,327,1.181,328,1.086,329,0.833,330,0.647,331,0.998,332,0.833,333,0.606,334,0.833,335,0.606,336,0.833,337,0.833,338,0.606,339,0.833,340,0.606,341,0.833,342,0.606,343,0.833,344,0.647,345,0.833,346,0.606,347,0.647,348,0.69,349,0.566,350,1.181,351,0.647,352,0.783,353,0.833,354,0.69,355,0.606,356,0.833,357,0.606,358,0.566,359,0.606,360,0.833,361,1.086,362,0.833,363,0.606,364,0.833,365,0.606,366,0.833,367,1.086,368,0.783,369,0.833,370,0.01,371,0.015,372,0.01,387,4.098,406,1.758,407,1.552,408,1.212,576,2.59,577,3.673,578,2.59,592,1.727,643,2.059,644,3.491,645,2.105,667,3.673,749,1.727,784,4.517,785,2.266,786,5.091,789,2.59,790,4.643,791,4.327,792,5.027,793,5.027,794,4.327,795,5.027,796,5.027,797,5.47,798,5.47,799,5.47,800,2.92,801,5.027,802,3.242,803,5.027,804,3.392,805,3.051,806,3.051,807,5.998,808,3.051,809,4.974,810,3.242,811,3.051,812,3.051,813,5.027,814,3.051,815,4.327,816,3.051,817,4.327,818,3.051,819,3.051,820,4.327,821,3.051,822,3.051,823,3.051,824,3.673,825,3.051,826,3.051,827,2.92,828,3.051,829,3.673,830,2.92,831,3.051,832,2.59,833,4.327,834,3.673,835,3.051,836,2.59,837,3.051,838,2.59,839,2.59,840,3.051,841,3.051,842,3.051,843,3.051,844,5.027,845,3.051,846,3.051,847,3.051,848,4.327,849,3.051,850,3.051,851,3.051,852,3.051,853,3.051,854,3.051,855,3.051,856,3.051,857,3.051,858,3.051,859,3.051,860,3.051,861,3.051,862,3.051]],["title/directives/EditableOnEnterDirective.html",[312,0.44,359,0.68]],["body/directives/EditableOnEnterDirective.html",[3,0.279,4,0.239,9,0.2,25,1.002,26,1.194,33,0.408,54,1.142,57,0.025,119,0.539,120,0.758,126,0.279,127,0.815,159,2.645,161,1.466,312,0.826,328,1.194,331,1.002,358,0.937,359,1.194,370,0.017,371,0.02,372,0.017,575,4.287,643,3.408,781,4.506,783,4.287,784,4.059,785,2.645,790,5.105,809,4.506,863,4.287,864,6.014,865,6.014,866,6.423,867,5.05,868,6.014,869,5.05,870,3.784,871,5.05,872,5.05,873,5.05]],["title/components/ExampleTableComponent.html",[0,0.162,330,0.726]],["body/components/ExampleTableComponent.html",[0,0.259,1,0.527,2,1.003,3,0.147,4,0.126,5,0.724,6,0.724,7,0.724,8,0.724,9,0.105,13,0.369,15,0.884,16,3.639,23,1.068,24,1.625,25,0.527,26,1.383,27,1.535,29,1.208,31,1.208,33,0.441,34,0.587,42,0.942,52,0.82,54,1.5,56,1.315,57,0.025,58,0.796,59,0.544,60,0.888,72,0.527,73,1.462,74,1.826,89,1.796,96,0.429,100,1.293,103,0.527,112,0.6,119,0.417,120,0.398,126,0.147,127,0.429,131,2.862,159,1.39,161,1.136,162,0.928,166,1.126,193,0.82,199,1.775,201,2.48,205,0.872,215,1.399,219,2.859,222,1.126,226,1.503,246,1.97,249,1.792,262,1.054,273,0.928,292,1.792,293,1.792,294,1.792,295,1.792,309,0.639,310,1.003,311,1.003,312,0.341,313,0.724,317,0.724,318,0.563,319,0.724,320,0.527,321,0.639,322,0.829,323,1.068,324,0.563,325,1.068,326,1.003,327,1.068,328,0.527,329,0.724,330,1.087,331,1.317,332,0.724,333,0.527,334,0.724,335,0.527,336,0.724,337,0.724,338,0.527,339,0.724,340,0.527,341,0.724,342,0.527,343,0.724,344,0.563,345,0.724,346,0.527,347,0.563,348,0.6,349,1.223,350,1.068,351,0.563,352,0.681,353,0.724,354,0.6,355,0.527,356,0.724,357,0.527,358,0.493,359,0.527,360,0.724,361,0.527,362,0.724,363,0.527,364,0.724,365,0.527,366,0.724,367,0.527,368,0.681,369,0.724,370,0.009,371,0.013,372,0.009,405,1.909,406,1.625,407,1.766,408,2.036,410,2.408,499,1.503,503,1.634,524,2.254,566,1.292,573,5.006,636,2.859,645,1.292,649,2.408,697,3.812,706,2.408,774,3.481,785,3.598,800,2.64,802,2.931,804,3.46,830,2.64,870,3.481,874,5.671,875,2.254,876,4.646,877,3.913,878,4.646,879,4.646,880,3.135,881,3.913,882,3.913,883,4.646,884,5.127,885,5.127,886,3.913,887,4.646,888,3.321,889,5.127,890,4.646,891,3.913,892,3.364,893,2.655,894,3.913,895,3.913,896,3.913,897,2.655,898,5.466,899,2.655,900,2.254,901,5.127,902,3.841,903,2.655,904,2.782,905,3.913,906,2.655,907,1.989,908,4.646,909,2.655,910,4.646,911,2.655,912,2.655,913,3.321,914,2.655,915,2.655,916,3.321,917,2.655,918,2.655,919,5.127,920,2.655,921,2.655,922,3.913,923,2.655,924,3.913,925,2.655,926,2.655,927,2.049,928,2.655,929,2.931,930,1.792,931,2.931,932,2.655,933,1.989,934,2.655,935,2.655,936,2.655,937,2.655,938,2.655,939,2.655,940,2.655,941,3.913,942,2.655,943,2.655,944,3.913,945,2.254,946,2.655,947,2.655,948,2.655,949,2.655,950,2.254]],["title/components/FeedbackComponent.html",[0,0.162,333,0.68]],["body/components/FeedbackComponent.html",[0,0.304,1,0.83,2,1.373,3,0.231,4,0.198,5,1.141,6,1.141,7,1.141,8,1.141,9,0.165,13,0.301,15,1.21,23,1.461,24,2.064,25,0.83,26,1.434,27,1.614,29,1.653,31,1.653,52,1.291,57,0.024,58,0.759,72,0.83,79,1.554,96,0.675,103,0.83,112,0.945,119,0.375,120,0.628,126,0.231,127,0.675,161,1.554,162,1.462,193,1.291,196,1.661,198,1.661,215,1.698,271,2.035,309,1.007,310,1.373,311,1.373,312,0.537,313,1.141,317,1.141,318,0.886,319,1.141,320,0.83,321,1.007,322,1.134,323,1.461,324,0.886,325,1.461,326,1.373,327,1.461,328,0.83,329,1.141,330,0.886,331,0.83,332,1.141,333,1.235,334,1.141,335,0.83,336,1.141,337,1.141,338,0.83,339,1.141,340,0.83,341,1.141,342,0.83,343,1.141,344,0.886,345,1.141,346,0.83,347,0.886,348,0.945,349,0.776,350,1.461,351,0.886,352,1.072,353,1.141,354,0.945,355,0.83,356,1.141,357,0.83,358,0.776,359,0.83,360,1.141,361,0.83,362,1.141,363,0.83,364,1.141,365,0.83,366,1.141,367,0.83,368,1.072,369,1.141,370,0.014,371,0.018,372,0.014,439,4.663,528,2.367,951,3.549,952,5.903,953,5.352,954,5.352,955,5.352,956,3.549]],["title/directives/FocusableDirective.html",[312,0.44,363,0.68]],["body/directives/FocusableDirective.html",[3,0.278,4,0.238,9,0.199,13,0.362,23,1.637,25,0.998,26,1.191,33,0.406,42,1.445,54,1.136,57,0.025,73,1.211,74,1.552,119,0.451,120,0.754,126,0.278,127,0.812,161,1.459,311,1.538,312,0.853,358,0.933,363,1.191,370,0.017,371,0.02,372,0.017,643,3.393,749,2.846,785,3.141,824,5.091,829,5.091,902,4.494,957,4.267,958,6.639,959,5.441,960,5.635,961,5.027,962,5.998,963,5.027]],["title/components/LoginComponent.html",[0,0.162,335,0.68]],["body/components/LoginComponent.html",[0,0.191,1,0.282,2,0.613,3,0.132,4,0.146,5,0.987,6,0.388,7,0.388,8,0.388,9,0.056,13,0.26,15,1.387,18,2.709,19,3.777,20,2.709,21,3.268,23,0.652,24,1.08,25,0.282,26,1.276,27,1.375,29,0.738,31,0.738,33,0.193,34,0.358,35,1.709,36,1.426,38,1.64,40,3.664,41,2.813,42,0.575,46,4.266,49,1.79,52,0.953,53,0.646,54,1.437,56,0.927,57,0.025,58,0.69,59,0.555,60,0.627,64,2.028,71,3.515,72,1.207,73,1.117,74,1.347,78,3.268,79,1.658,82,2.44,83,2.469,86,2.028,87,3.527,89,1.433,90,2.548,91,1.79,92,2.207,94,1.612,95,2.879,96,0.749,97,1.352,98,1.79,100,0.911,103,0.282,112,0.322,119,0.361,120,0.214,121,0.439,123,0.603,124,0.805,126,0.079,127,0.23,128,1.502,129,0.498,137,1.066,140,1.208,151,2.083,161,0.413,162,0.498,166,1.533,167,1.066,168,1.79,169,1.066,170,1.066,171,1.066,172,1.79,173,2.313,174,1.79,175,1.066,176,1.066,177,1.066,178,2.083,182,2.313,187,3.283,189,1.79,191,1.947,192,1.084,193,2.028,194,2.868,196,1.436,197,0.646,198,2.133,200,1.251,201,1.979,203,0.745,204,1.439,205,1.978,208,2.256,209,3.42,210,1.966,211,1.612,212,2.046,213,2.281,215,1.643,216,1.502,217,2.123,219,2.853,220,2.284,221,3.384,223,2.371,224,2.675,225,2.46,226,2.624,227,1.309,228,2.11,230,3.268,232,1.066,235,1.617,238,2.754,242,0.96,244,1.79,245,0.876,246,1.85,247,1.759,249,0.96,250,1.066,251,2.709,253,2.367,259,0.876,260,2.028,261,3.703,262,2.075,263,0.876,264,1.502,265,2.083,266,1.066,267,1.352,268,1.162,269,1.208,270,1.208,271,0.692,272,1.208,273,1.769,274,1.79,275,2.853,277,0.805,278,0.876,285,0.805,287,1.208,288,1.352,289,1.79,290,1.208,291,2.62,298,0.96,299,1.066,300,1.084,301,1.208,306,1.084,307,1.084,308,0.646,309,0.343,310,0.613,311,0.613,312,0.183,313,0.388,317,0.388,318,0.302,319,0.388,320,0.282,321,0.343,322,0.506,323,0.652,324,0.302,325,0.652,326,0.613,327,0.652,328,0.282,329,0.388,330,0.302,331,0.282,332,0.388,333,0.282,334,0.388,335,0.718,336,0.388,337,0.388,338,0.282,339,0.388,340,0.282,341,0.388,342,0.282,343,0.388,344,0.302,345,0.388,346,0.282,347,0.302,348,0.322,349,0.573,350,0.652,351,0.302,352,0.365,353,0.388,354,0.322,355,0.282,356,0.388,357,0.282,358,0.264,359,0.282,360,0.388,361,0.282,362,0.388,363,0.282,364,0.388,365,0.282,366,0.388,367,0.282,368,0.365,369,0.388,370,0.005,371,0.008,372,0.005,378,3.306,381,3.069,389,1.084,391,1.612,398,0.876,401,2.028,405,1.347,406,1.923,407,1.763,408,1.436,414,2.62,421,2.028,427,0.745,429,1.208,430,3.473,431,1.208,440,2.225,441,3.069,446,3.069,456,1.79,459,0.692,464,1.208,466,2.123,473,1.208,474,1.251,476,1.9,480,2.709,491,1.208,499,1.352,500,1.066,503,1.47,507,1.066,510,1.47,517,1.066,566,0.692,585,0.805,609,2.313,630,1.709,636,1.47,644,1.352,651,1.612,655,1.162,663,1.352,668,1.251,673,2.709,674,2.709,677,2.44,680,2.083,684,1.208,693,2.944,694,1.066,695,2.083,697,0.876,698,0.805,699,0.692,710,1.066,733,2.44,749,0.805,927,1.251,950,3.069,959,2.62,960,3.069,964,1.208,965,2.389,966,3.087,967,2.389,968,3.087,969,3.087,970,3.087,971,3.087,972,3.087,973,3.087,974,3.087,975,3.087,976,3.087,977,3.087,978,3.087,979,3.087,980,3.087,981,3.703,982,2.389,983,3.616,984,3.616,985,3.616,986,2.389,987,1.423,988,1.423,989,2.389,990,1.423,991,2.389,992,1.423,993,1.79,994,1.423,995,1.423,996,2.389,997,2.389,998,1.423,999,2.389,1000,1.423,1001,1.423,1002,3.069,1003,2.389,1004,1.423,1005,2.389,1006,2.389,1007,1.423,1008,2.389,1009,2.389,1010,2.389,1011,1.423,1012,2.389,1013,2.389,1014,1.423,1015,2.389,1016,2.389,1017,1.423,1018,2.389,1019,2.389,1020,1.423,1021,2.389,1022,2.389,1023,1.423,1024,2.389,1025,2.389,1026,1.423,1027,2.389,1028,2.389,1029,1.423,1030,2.389,1031,2.389,1032,1.423,1033,2.389,1034,2.389,1035,1.423,1036,2.389,1037,2.389,1038,1.423,1039,2.389,1040,2.389,1041,1.423,1042,1.423,1043,2.389,1044,2.389,1045,1.208,1046,1.208,1047,1.208,1048,1.423,1049,1.423,1050,1.423,1051,1.423,1052,1.423,1053,1.423,1054,1.423,1055,1.423,1056,1.423,1057,1.423,1058,2.389,1059,1.423,1060,1.423,1061,4.636,1062,1.208,1063,1.208,1064,1.423,1065,1.208,1066,1.423,1067,1.423,1068,1.423,1069,1.423,1070,1.423,1071,1.208,1072,1.066,1073,1.208,1074,3.616,1075,1.423,1076,1.423,1077,1.423,1078,1.208,1079,1.423,1080,1.423,1081,1.423,1082,1.423,1083,1.423,1084,1.423,1085,1.423,1086,2.389,1087,1.423,1088,1.423,1089,1.423,1090,2.389,1091,2.389,1092,3.616,1093,2.028,1094,2.389,1095,2.389,1096,2.028,1097,2.028,1098,3.069,1099,2.389,1100,2.028,1101,2.028,1102,3.616,1103,2.389,1104,1.79,1105,2.389,1106,2.389,1107,1.79,1108,2.028,1109,2.389,1110,1.79,1111,2.028,1112,2.028,1113,2.389,1114,1.47,1115,2.389,1116,1.79,1117,2.028,1118,2.225,1119,2.389,1120,2.028,1121,2.389,1122,2.028,1123,2.028,1124,2.389,1125,1.423,1126,3.703,1127,2.389,1128,2.389,1129,2.389,1130,3.616,1131,2.389,1132,2.028,1133,2.389,1134,2.389,1135,1.208,1136,1.423,1137,1.423,1138,1.423,1139,1.423,1140,1.423,1141,1.423,1142,1.423,1143,1.423,1144,1.208,1145,1.208,1146,1.423,1147,1.423,1148,1.423,1149,1.423,1150,2.389,1151,1.423,1152,1.423,1153,1.423,1154,1.423,1155,1.423,1156,1.423,1157,1.423]],["title/components/ParentComponent.html",[0,0.162,338,0.68]],["body/components/ParentComponent.html",[0,0.264,1,0.556,2,1.044,3,0.155,4,0.227,5,1.641,6,0.765,7,0.765,8,0.765,9,0.111,13,0.293,15,0.92,23,1.111,24,1.676,25,0.556,26,1.39,27,1.546,29,1.257,31,1.257,33,0.226,34,0.611,35,1.726,36,1.741,40,2.505,42,0.98,52,1.48,53,1.271,54,1.461,56,1.349,57,0.025,58,0.773,59,0.539,60,0.912,72,0.556,73,1.346,74,1.725,90,2.131,92,1.847,95,2.51,96,1.126,97,3.487,100,1.083,103,1.109,112,0.633,119,0.501,120,0.421,121,0.865,124,1.586,126,0.155,127,0.452,128,1.624,129,0.98,131,2.755,159,2.131,162,1.839,191,1.516,192,1.847,193,0.865,194,2.992,196,1.616,197,1.847,198,1.904,199,1.847,200,1.468,201,1.271,202,2.1,204,0.719,205,0.921,208,1.364,215,1.525,225,1.188,227,1.188,258,1.468,262,1.113,267,1.586,268,1.364,273,0.98,300,1.271,306,1.271,307,1.271,308,1.271,309,0.675,310,1.044,311,1.044,312,0.36,313,0.765,317,0.765,318,0.594,319,0.765,320,0.556,321,0.675,322,0.863,323,1.111,324,0.594,325,1.111,326,1.044,327,1.111,328,0.556,329,0.765,330,0.594,331,0.556,332,0.765,333,0.556,334,0.765,335,0.556,336,0.765,337,0.765,338,1.044,339,0.765,340,0.556,341,0.765,342,0.556,343,0.765,344,0.594,345,0.765,346,0.556,347,0.594,348,0.633,349,1.234,350,1.111,351,0.594,352,1.58,353,0.765,354,0.633,355,0.556,356,0.765,357,0.556,358,0.52,359,0.556,360,0.765,361,0.556,362,0.765,363,0.556,364,0.765,365,0.556,366,0.765,367,0.556,368,0.719,369,0.765,370,0.009,371,0.014,372,0.009,403,3.226,406,0.98,407,1.48,410,2.505,416,2.379,427,1.468,458,2.1,459,1.981,466,1.981,630,1.726,655,1.981,810,3.05,827,2.747,880,3.235,892,3.237,927,3.421,930,1.891,933,2.1,1071,2.379,1072,2.1,1073,2.379,1158,2.379,1159,4.07,1160,3.455,1161,3.455,1162,4.793,1163,4.07,1164,4.068,1165,3.235,1166,4.465,1167,3.455,1168,3.455,1169,3.455,1170,4.07,1171,2.802,1172,3.455,1173,2.802,1174,3.05,1175,3.455,1176,2.802,1177,3.55,1178,3.455,1179,2.802,1180,3.455,1181,2.802,1182,2.802,1183,2.802,1184,2.802,1185,2.802,1186,1.891,1187,2.802,1188,3.455,1189,2.802,1190,2.802,1191,2.1,1192,2.379,1193,2.379,1194,2.1,1195,2.1,1196,4.07,1197,2.379,1198,2.379,1199,4.465,1200,4.947,1201,2.1]],["title/directives/PasswordConfirmedValidatorDirective.html",[312,0.44,365,0.68]],["body/directives/PasswordConfirmedValidatorDirective.html",[3,0.253,4,0.216,9,0.181,13,0.329,23,1.545,25,0.908,26,1.124,33,0.369,42,1.364,54,1.033,56,1.172,57,0.025,58,0.588,59,0.41,60,0.792,73,1.101,119,0.508,120,0.686,126,0.313,127,0.738,166,2.608,312,0.826,358,0.849,365,1.276,370,0.015,371,0.019,372,0.015,536,4.242,566,2.225,627,4.242,629,4.806,630,2.608,636,3.484,645,2.755,668,3.366,709,3.821,929,4.242,1202,4.242,1203,3.425,1204,5.662,1205,5.662,1206,6.15,1207,6.15,1208,5.662,1209,5.662,1210,5.662,1211,5.662,1212,6.428,1213,4.572,1214,4.242,1215,5.456,1216,4.806,1217,4.806,1218,3.425,1219,3.881,1220,3.425,1221,4.242,1222,3.881,1223,3.881,1224,3.881,1225,3.881,1226,3.881,1227,4.572]],["title/components/RegistrationComponent.html",[0,0.162,340,0.68]],["body/components/RegistrationComponent.html",[0,0.274,1,0.61,2,1.115,3,0.17,4,0.145,5,1.641,6,0.839,7,0.839,8,0.839,9,0.121,13,0.313,15,0.983,23,1.187,24,1.765,25,0.61,26,1.402,27,1.564,29,1.343,31,1.343,33,0.248,34,0.653,36,1.377,37,2.857,41,2.643,42,1.048,54,0.983,56,0.788,57,0.025,58,0.705,59,0.39,60,0.533,71,2.677,72,1.002,73,0.74,79,1.833,83,3.106,89,1.429,96,0.496,100,0.983,103,0.61,112,0.695,116,2.303,119,0.519,120,0.461,121,0.949,122,2.609,123,1.304,126,0.17,127,0.496,128,0.949,129,1.075,151,2.074,161,1.263,162,1.075,178,2.074,191,1.88,193,0.949,194,2.987,196,1.727,197,1.973,198,1.221,199,1.395,201,1.395,204,1.294,205,1.803,210,2.456,212,3.106,213,1.74,215,1.687,216,2.116,217,2.116,220,1.61,221,1.892,222,1.304,223,1.973,224,2.116,225,1.844,228,2.874,242,2.074,245,1.892,246,1.304,247,1.496,253,2.116,262,2.55,273,1.521,277,1.74,285,1.74,300,1.395,306,1.395,307,1.395,308,1.395,309,0.74,310,1.115,311,1.115,312,0.395,313,0.839,317,0.839,318,0.652,319,0.839,320,0.61,321,1.216,322,0.922,323,1.187,324,0.652,325,1.187,326,1.115,327,1.187,328,0.61,329,0.839,330,0.652,331,0.61,332,0.839,333,0.61,334,0.839,335,0.61,336,0.839,337,0.839,338,0.61,339,0.839,340,1.089,341,0.839,342,0.61,343,0.839,344,0.652,345,0.839,346,0.61,347,0.652,348,0.695,349,0.571,350,1.187,351,0.652,352,0.788,353,0.839,354,0.695,355,0.61,356,0.839,357,0.61,358,0.571,359,0.61,360,0.839,361,0.61,362,0.839,363,0.61,364,0.839,365,0.61,366,0.839,367,0.61,368,0.788,369,0.839,370,0.01,371,0.015,372,0.01,378,3.952,400,3.259,430,3.259,459,2.116,466,1.496,474,1.61,566,1.496,585,2.857,592,1.74,604,2.677,644,2.462,668,3.148,677,3.703,680,3.908,689,3.259,690,3.259,691,3.259,692,2.303,693,3.703,695,2.074,696,2.609,697,1.892,698,1.74,699,1.496,700,2.609,701,2.609,702,2.609,703,2.609,704,2.609,705,2.609,706,1.892,707,3.692,708,2.609,709,2.074,710,2.303,711,2.609,712,3.692,730,3.259,981,4.284,1045,2.609,1046,2.609,1047,2.609,1062,2.609,1063,2.609,1065,2.609,1112,3.692,1132,2.609,1218,3.259,1228,2.609,1229,6.012,1230,5.047,1231,4.349,1232,4.349,1233,4.349,1234,3.074,1235,4.349,1236,3.074,1237,4.349,1238,3.074,1239,3.074,1240,3.074,1241,3.074,1242,3.074,1243,3.074,1244,3.074,1245,3.074,1246,3.692,1247,3.692,1248,2.935,1249,2.609]],["title/interfaces/Report.html",[103,0.68,646,0.636]],["body/interfaces/Report.html",[3,0.233,4,0.199,9,0.167,13,0.303,33,0.34,34,0.807,38,2.991,57,0.025,58,0.691,59,0.619,60,1.143,72,1.347,87,3.629,96,0.868,100,1.49,103,1.38,126,0.233,310,1.379,349,1.158,370,0.014,371,0.018,372,0.014,405,2.456,646,0.998,647,1.569,649,3.31,653,3.629,655,3.037,658,2.617,784,4.45,904,2.883,913,5.297,1118,3.31,1250,3.576,1251,6.241,1252,6.241,1253,5.597,1254,5.297,1255,6.241,1256,6.241,1257,6.241,1258,6.241,1259,5.378,1260,5.378,1261,5.378,1262,5.378,1263,5.378,1264,5.378,1265,3.31,1266,5.378,1267,5.378,1268,6.241,1269,4.565]],["title/components/ReportComponent.html",[0,0.162,342,0.68]],["body/components/ReportComponent.html",[0,0.289,1,0.708,2,1.236,3,0.197,4,0.169,5,0.974,6,0.974,7,0.974,8,0.974,9,0.141,13,0.347,14,4.093,15,1.09,23,1.316,24,1.91,25,0.708,26,1.419,27,1.59,29,1.489,31,1.489,33,0.288,34,0.724,35,2.591,36,1.83,42,1.161,52,1.102,53,1.619,54,1.381,56,1.236,57,0.025,58,0.827,59,0.548,60,0.836,72,0.708,73,0.859,74,1.102,96,0.576,100,1.234,103,1.343,112,0.807,119,0.49,120,0.535,121,1.102,123,1.513,126,0.197,127,0.576,128,1.686,129,1.248,161,1.036,162,1.248,166,1.513,215,1.596,309,0.859,310,1.236,311,1.236,312,0.459,313,0.974,317,0.974,318,0.756,319,0.974,320,0.708,321,0.859,322,1.022,323,1.316,324,0.756,325,1.316,326,1.236,327,1.316,328,0.708,329,0.974,330,0.756,331,0.708,332,0.974,333,0.708,334,0.974,335,0.708,336,0.974,337,0.974,338,0.708,339,0.974,340,0.708,341,0.974,342,1.161,343,0.974,344,0.756,345,0.974,346,0.708,347,0.756,348,0.807,349,0.662,350,1.316,351,0.756,352,0.915,353,0.974,354,0.807,355,0.708,356,0.974,357,0.708,358,0.662,359,0.708,360,0.974,361,0.708,362,0.974,363,0.708,364,0.974,365,0.708,366,0.974,367,0.708,368,0.915,369,0.974,370,0.012,371,0.016,372,0.012,387,3.612,391,3.254,405,1.796,406,1.248,407,1.102,408,1.915,427,1.868,630,1.513,673,4.717,674,4.577,892,2.967,956,4.635,1254,4.093,1270,3.029,1271,5.461,1272,4.822,1273,5.461,1274,4.822,1275,4.822,1276,4.822,1277,3.568,1278,4.822,1279,3.568,1280,3.568,1281,3.568,1282,3.568,1283,4.822,1284,3.568,1285,4.822,1286,3.568,1287,3.568,1288,3.568]],["title/interfaces/ReportContainer.html",[646,0.636,1289,2.312]],["body/interfaces/ReportContainer.html",[3,0.28,4,0.24,9,0.2,13,0.365,33,0.409,34,0.904,57,0.024,59,0.54,96,1.075,103,1.42,119,0.454,126,0.28,195,4.066,370,0.017,371,0.02,372,0.017,646,1.194,647,1.887,653,4.066,1177,4.066,1289,4.066,1290,4.3,1291,6.656,1292,6.656,1293,4.986,1294,4.514]],["title/components/ReportHistoryComponent.html",[0,0.162,344,0.726]],["body/components/ReportHistoryComponent.html",[0,0.236,1,0.427,2,0.855,3,0.119,4,0.102,5,0.587,6,0.587,7,0.587,8,0.587,9,0.085,13,0.359,15,0.754,23,0.91,24,1.429,25,0.427,26,1.352,27,1.488,29,1.03,31,1.03,33,0.173,34,0.5,36,1.115,42,0.803,54,1.413,56,1.411,57,0.025,58,0.793,59,0.51,60,0.953,70,3.107,72,0.427,73,1.523,74,1.699,85,2.312,89,1.732,96,1.089,97,2.985,100,0.486,103,1.404,112,0.486,119,0.473,120,0.323,121,0.664,126,0.119,127,0.347,128,1.628,129,0.752,131,1.746,159,1.746,161,0.968,162,0.752,191,1.522,192,1.513,193,1.803,196,1.324,203,2.139,204,1.181,205,1.637,208,1.046,210,2.236,211,3.107,212,2.606,213,2.312,215,1.552,216,1.046,217,1.046,222,1.952,223,0.975,224,1.988,225,1.733,226,1.217,227,1.733,228,2.139,235,1.746,238,1.887,246,1.414,247,1.623,253,1.046,258,1.126,259,1.323,262,1.324,264,2.24,265,2.757,267,1.887,268,1.623,273,0.752,275,1.323,276,1.825,277,1.887,278,1.323,279,1.217,280,1.217,304,1.61,305,1.61,309,0.518,310,0.855,311,0.855,312,0.276,313,0.587,317,0.587,318,0.456,319,0.587,320,0.427,321,0.518,322,0.707,323,0.91,324,0.456,325,0.91,326,0.855,327,0.91,328,0.427,329,0.587,330,0.456,331,0.427,332,0.587,333,0.427,334,0.587,335,0.427,336,0.587,337,0.587,338,0.427,339,0.587,340,0.427,341,0.587,342,0.427,343,0.587,344,0.976,345,0.587,346,0.427,347,0.456,348,0.486,349,1.222,350,0.91,351,0.456,352,0.551,353,0.587,354,0.486,355,0.427,356,0.587,357,0.427,358,0.399,359,0.427,360,0.587,361,0.427,362,0.587,363,0.427,364,0.587,365,0.427,366,0.587,367,0.427,368,0.551,369,0.587,370,0.007,371,0.011,372,0.007,389,1.513,391,2.25,398,2.834,403,3.057,406,1.166,407,1.03,408,0.854,427,1.126,480,1.61,507,1.61,619,4.737,630,0.912,645,1.988,649,3.5,699,1.046,706,2.052,719,1.451,737,2.831,800,2.25,802,2.498,804,3.107,827,2.25,830,2.25,888,2.831,892,3.067,904,1.988,927,2.411,930,1.451,931,3.061,1116,2.498,1165,2.757,1177,3.107,1186,1.451,1191,3.061,1195,2.498,1221,3.734,1265,3.5,1289,2.757,1293,5.071,1295,5.367,1296,1.825,1297,4.086,1298,3.335,1299,3.335,1300,3.335,1301,4.604,1302,4.604,1303,3.335,1304,3.335,1305,3.335,1306,3.335,1307,4.604,1308,4.086,1309,3.335,1310,2.15,1311,3.335,1312,3.335,1313,2.15,1314,3.335,1315,3.335,1316,3.335,1317,2.15,1318,3.335,1319,3.335,1320,2.15,1321,2.15,1322,3.335,1323,2.15,1324,3.335,1325,2.15,1326,2.831,1327,3.335,1328,3.335,1329,3.335,1330,2.15,1331,4.476,1332,3.335,1333,2.15,1334,2.15,1335,2.15,1336,2.15,1337,2.15,1338,2.15,1339,2.15,1340,2.15,1341,4.086,1342,2.15,1343,2.15,1344,2.15,1345,2.15,1346,2.15,1347,1.825,1348,2.15,1349,2.15,1350,2.15,1351,2.15,1352,3.335,1353,2.15,1354,2.15,1355,4.086,1356,3.335,1357,2.15,1358,2.15,1359,2.15,1360,3.335,1361,3.335,1362,2.15,1363,2.15,1364,3.335,1365,2.15,1366,2.15,1367,3.335,1368,2.831,1369,2.052,1370,3.335,1371,3.335,1372,3.335,1373,3.335,1374,3.335,1375,3.335,1376,4.604,1377,4.604,1378,2.831,1379,3.335,1380,2.15,1381,2.15,1382,1.825,1383,2.15,1384,1.825,1385,2.15,1386,2.15,1387,2.15,1388,3.335,1389,2.15,1390,2.15,1391,2.15,1392,2.15,1393,2.15,1394,2.15,1395,2.15]],["title/interfaces/RepositoryContainer.html",[92,1.554,646,0.636]],["body/interfaces/RepositoryContainer.html",[3,0.271,4,0.328,9,0.194,13,0.353,33,0.396,34,0.887,38,2.68,57,0.025,58,0.759,59,0.59,60,1.141,79,1.715,92,2.68,95,3.681,100,1.547,106,3.987,126,0.271,195,4.279,370,0.017,371,0.02,372,0.017,405,2.362,407,2.033,646,1.097,647,1.826,655,3.203,658,2.875,659,3.636,1396,4.161,1397,6.583]],["title/components/ResetPasswordComponent.html",[0,0.162,346,0.68]],["body/components/ResetPasswordComponent.html",[0,0.286,1,0.564,2,1.054,3,0.157,4,0.134,5,1.598,6,0.775,7,0.775,8,0.775,9,0.112,13,0.204,15,1.506,25,0.564,26,1.392,27,1.549,29,1.269,31,1.269,33,0.229,34,0.617,36,1.318,41,2.529,42,0.99,54,1.092,56,0.728,57,0.025,58,0.68,59,0.475,60,0.492,72,0.564,73,0.99,74,1.269,79,1.193,82,2.774,83,2.996,89,1.739,92,1.289,96,0.459,100,0.929,103,0.564,112,0.642,119,0.504,120,0.426,121,0.877,123,1.205,124,1.608,126,0.157,127,0.459,128,0.877,129,0.993,161,0.825,165,2.411,191,2.092,192,2.191,193,1.492,194,3.044,196,1.632,197,1.865,198,1.632,199,1.289,200,2.772,201,1.865,203,1.488,204,1.357,205,1.739,208,1.382,210,2.048,215,1.687,216,2,217,2,219,2.53,220,3.162,221,3.604,222,1.743,223,2.191,224,2,225,2.048,227,1.205,230,2.128,235,1.488,244,2.128,245,2.53,246,2.382,247,2,249,1.917,250,2.128,253,2.35,257,1.917,258,1.488,259,1.748,262,2.325,264,1.382,273,1.437,277,2.734,285,1.608,292,1.917,293,1.917,294,1.917,295,1.917,298,1.917,300,1.289,306,1.289,307,1.289,308,1.289,309,0.684,310,1.054,311,1.054,312,0.365,313,0.775,317,0.775,318,0.602,319,0.775,320,0.564,321,0.684,322,1.486,323,1.122,324,0.602,325,1.122,326,1.054,327,1.122,328,0.564,329,0.775,330,0.602,331,0.564,332,0.775,333,0.564,334,0.775,335,0.564,336,0.775,337,0.775,338,0.564,339,0.775,340,0.564,341,0.775,342,0.564,343,0.775,344,0.602,345,0.775,346,1.051,347,0.602,348,0.642,349,0.527,350,1.122,351,0.602,352,0.728,353,0.775,354,0.642,355,0.564,356,0.775,357,0.564,358,0.527,359,0.564,360,0.775,361,0.564,362,0.775,363,0.564,364,0.775,365,0.564,366,0.775,367,0.564,368,0.728,369,0.775,370,0.01,371,0.014,372,0.01,378,3.457,400,3.08,435,1.917,459,2,466,2,468,2.411,474,1.488,484,2.411,493,2.128,499,1.608,500,2.128,566,1.382,611,3.966,644,1.608,666,2.128,668,3.601,669,4.1,670,3.489,677,3.572,680,3.26,683,2.327,689,3.08,690,3.08,692,2.128,693,3.572,694,2.128,695,2.774,697,1.748,698,1.608,699,1.382,741,3.08,993,3.08,1096,4.493,1097,4.493,1100,3.489,1122,3.489,1123,4.493,1126,4.493,1144,2.411,1145,2.411,1248,2.774,1398,4.493,1399,5.294,1400,4.11,1401,2.841,1402,4.11,1403,2.841,1404,2.841,1405,2.841,1406,2.841,1407,2.841,1408,3.489,1409,2.841,1410,2.841,1411,4.11,1412,3.489,1413,3.489,1414,4.11,1415,4.11,1416,3.489,1417,4.11,1418,2.841,1419,2.841,1420,2.841,1421,2.411,1422,2.841,1423,2.841,1424,2.841]],["title/components/RunTestToast.html",[0,0.162,347,0.726]],["body/components/RunTestToast.html",[0,0.286,1,0.567,2,1.059,3,0.158,4,0.135,5,1.127,6,1.449,7,0.78,8,0.78,9,0.113,13,0.206,15,0.933,25,0.567,26,1.393,27,1.536,33,0.231,34,0.62,35,1.751,36,1.323,42,0.994,52,1.275,54,1.2,56,1.059,57,0.025,58,0.811,59,0.476,60,0.715,72,1.272,73,0.994,74,1.275,96,0.461,100,0.933,103,0.567,112,0.646,119,0.476,120,0.429,121,0.882,126,0.158,127,0.461,128,1.275,131,3.355,161,0.83,191,1.064,193,1.639,204,1.361,205,1.85,210,1.212,215,1.449,222,2.251,227,2.251,240,1.929,263,2.983,264,1.391,273,0.999,279,1.617,280,2.337,288,1.617,309,0.688,310,1.059,311,1.059,312,0.367,313,0.78,317,0.78,318,0.606,319,0.78,320,0.567,321,0.688,322,0.875,323,1.127,324,0.606,325,1.536,326,1.551,327,1.127,328,0.567,329,0.78,330,0.606,331,0.567,332,0.78,333,0.567,334,0.78,335,0.567,336,0.78,337,0.78,338,0.567,339,0.78,340,0.567,341,0.78,342,0.567,343,0.78,344,0.606,345,0.78,346,0.567,347,1.125,348,0.646,349,0.9,350,1.127,351,0.606,352,0.733,353,0.78,354,0.646,355,0.567,356,0.78,357,0.567,358,0.53,359,0.567,360,0.78,361,0.567,362,0.78,363,0.567,364,0.78,365,0.567,366,0.78,367,0.567,368,0.733,369,0.78,370,0.01,371,0.014,372,0.01,389,1.873,406,1.444,407,1.275,408,1.64,476,1.759,496,3.631,499,3.506,510,1.759,518,1.929,528,3.572,529,4.396,592,1.617,604,1.759,698,1.617,699,2.583,714,2.141,715,3.504,716,3.093,717,3.504,718,4.114,719,3.271,722,3.271,723,3.631,726,3.631,727,4.506,730,3.631,732,2.426,733,1.929,734,2.426,741,3.977,744,2.426,745,4.114,746,2.141,747,2.426,748,2.141,749,1.617,750,2.426,751,3.093,752,2.426,753,2.426,754,2.426,755,2.426,756,2.426,757,3.504,758,2.426,759,2.426,760,2.426,761,2.426,762,2.426,763,2.426,764,5.135,765,2.426,766,3.504,767,3.504,768,3.504,769,3.504,770,2.426,771,2.426,772,2.426,773,2.426,774,2.141,775,2.426,776,2.141,777,2.426,778,3.504,780,3.504,1093,3.504,1101,4.98,1118,4.073,1425,4.779,1426,5.867,1427,5.867,1428,4.128,1429,4.128,1430,4.128,1431,2.858,1432,4.128,1433,4.128,1434,2.858,1435,4.128,1436,4.128,1437,2.858,1438,2.858,1439,2.858,1440,2.858,1441,2.858]],["title/interfaces/Scenario.html",[349,0.636,646,0.636]],["body/interfaces/Scenario.html",[3,0.234,4,0.2,9,0.167,13,0.304,33,0.341,34,0.809,57,0.025,58,0.848,59,0.615,60,1.197,72,1.241,96,0.87,100,1.55,119,0.379,126,0.234,198,2.141,240,3.638,305,4.039,349,1.309,370,0.014,371,0.018,372,0.014,382,4.576,405,2.554,549,4.062,646,1.102,647,1.575,649,4.062,650,4.218,662,3.973,663,3.051,664,4.576,904,3.304,927,2.823,1104,4.039,1114,3.318,1265,3.318,1269,4.576,1369,3.318,1442,3.59,1443,6.6,1444,6.25,1445,5.305,1446,6.25,1447,6.25,1448,4.576,1449,4.576,1450,5.391]],["title/interfaces/StepDefinition.html",[646,0.636,662,2.109]],["body/interfaces/StepDefinition.html",[3,0.276,4,0.236,9,0.197,13,0.359,33,0.403,34,0.896,57,0.025,59,0.594,119,0.447,126,0.276,331,1.315,370,0.017,371,0.02,372,0.017,646,1.186,647,1.859,651,4.638,662,3.675,663,3.38,1114,4.23,1451,4.235,1452,5.068,1453,4.42,1454,5.971]],["title/interfaces/StepDefinitionBackground.html",[646,0.636,652,2.312]],["body/interfaces/StepDefinitionBackground.html",[3,0.293,4,0.25,9,0.209,13,0.381,33,0.427,34,0.928,57,0.024,59,0.474,119,0.474,126,0.293,204,1.585,370,0.018,371,0.021,372,0.018,646,1.216,647,1.971,652,4.172,663,3.499,1114,3.805,1452,5.247,1453,4.232,1455,4.491]],["title/interfaces/StepType.html",[646,0.636,1453,2.109]],["body/interfaces/StepType.html",[3,0.214,4,0.183,9,0.153,13,0.279,33,0.312,34,0.764,38,2.924,57,0.025,58,0.777,59,0.64,60,1.18,79,1.478,85,3.773,100,1.61,126,0.214,223,2.742,370,0.013,371,0.017,372,0.013,398,3.966,403,3.491,405,2.512,410,3.133,646,0.945,647,1.442,651,3.435,655,2.94,658,2.477,659,3.133,661,4.321,663,3.817,706,3.966,870,4.527,904,2.768,945,5.47,1098,5.129,1114,3.719,1453,3.966,1456,3.285,1457,6.445,1458,6.043,1459,6.445,1460,6.043,1461,6.445,1462,6.445,1463,6.043,1464,5.091,1465,6.445,1466,5.091,1467,6.043,1468,5.091,1469,5.091,1470,5.091]],["title/components/StoriesBarComponent.html",[0,0.162,351,0.726]],["body/components/StoriesBarComponent.html",[0,0.231,1,0.408,2,0.826,3,0.114,4,0.097,5,1.477,6,0.561,7,0.561,8,0.561,9,0.081,13,0.148,15,0.728,19,1.266,21,2.414,23,0.879,24,1.389,25,0.408,26,1.345,27,1.477,29,0.995,31,0.995,33,0.26,34,0.483,35,1.366,36,1.608,42,0.776,52,1.227,53,0.933,54,1.431,56,1.019,57,0.025,58,0.665,59,0.547,60,0.688,68,2.414,69,4.395,72,0.408,73,1.247,74,1.388,79,0.935,87,3.034,89,2.099,90,1.687,94,3.034,96,1.094,103,0.408,112,1.223,113,1.541,116,1.541,117,2.735,119,0.438,120,0.309,121,0.635,125,1.541,126,0.114,127,0.332,128,1.227,129,0.719,162,1.572,166,0.872,191,2.145,192,0.933,193,1.227,194,2.725,196,2.056,197,0.933,198,0.817,199,0.933,204,1.54,205,2.099,208,2.187,210,0.872,211,2.174,212,1.164,213,2.248,215,1.529,216,1.001,217,1.001,220,1.077,222,0.872,223,1.802,224,1.568,225,0.872,226,2.544,227,1.684,228,2.354,238,2.544,246,1.684,247,1.933,253,2.375,257,1.388,258,1.077,259,2.445,262,0.817,264,1.568,268,2.187,271,1.933,273,1.572,275,1.266,278,1.983,279,1.824,280,1.164,285,3.26,288,1.824,289,1.541,297,1.746,300,1.462,304,1.541,306,0.933,307,0.933,308,0.933,309,0.495,310,0.826,311,0.826,312,0.264,313,0.561,317,0.561,318,0.436,319,0.561,320,0.408,321,0.495,322,0.683,323,0.879,324,0.436,325,0.879,326,0.826,327,0.879,328,0.408,329,0.561,330,0.436,331,0.408,332,0.561,333,0.408,334,0.561,335,0.408,336,0.561,337,0.561,338,0.408,339,0.561,340,0.408,341,0.561,342,0.408,343,0.561,344,0.436,345,0.561,346,0.408,347,0.436,348,0.465,349,1.22,350,0.879,351,0.953,352,1.686,353,0.561,354,0.465,355,0.408,356,0.561,357,0.408,358,0.382,359,0.408,360,0.561,361,0.408,362,0.561,363,0.408,364,0.561,365,0.408,366,0.561,367,0.408,368,0.527,369,0.561,370,0.007,371,0.011,372,0.007,403,2.354,405,1.674,406,1.127,407,0.995,408,1.577,420,1.746,427,1.687,437,4.055,440,1.266,459,1.568,466,1.933,474,1.687,476,1.983,493,1.541,501,1.746,503,1.983,510,1.266,511,1.746,513,1.746,514,1.746,517,1.541,518,2.174,528,1.164,560,4.787,630,1.684,641,2.735,645,1.933,699,1.001,719,1.388,722,1.388,726,1.541,751,1.541,800,2.174,804,3.652,809,2.414,830,2.68,880,2.68,900,3.816,927,2.354,930,1.388,933,1.541,1072,1.541,1116,2.414,1135,1.746,1160,3.816,1165,2.68,1186,1.388,1194,2.976,1195,1.541,1249,1.746,1294,2.414,1326,2.735,1347,1.746,1378,2.735,1382,2.735,1384,2.735,1449,4.143,1471,5.423,1472,1.746,1473,3.972,1474,3.222,1475,3.972,1476,3.972,1477,4.495,1478,4.495,1479,3.222,1480,3.222,1481,3.972,1482,3.972,1483,3.222,1484,2.057,1485,4.495,1486,2.057,1487,2.057,1488,2.735,1489,2.057,1490,2.057,1491,3.222,1492,2.057,1493,3.222,1494,2.057,1495,2.057,1496,2.057,1497,2.057,1498,3.222,1499,2.735,1500,2.057,1501,2.057,1502,2.057,1503,2.057,1504,2.057,1505,2.057,1506,2.057,1507,2.057,1508,2.057,1509,2.057,1510,2.057,1511,2.057,1512,2.057,1513,2.057,1514,3.222,1515,2.057,1516,2.057,1517,2.057,1518,2.057,1519,2.057,1520,2.057,1521,2.057,1522,2.057,1523,2.057,1524,2.057,1525,3.222,1526,3.222,1527,3.222,1528,2.735,1529,3.222,1530,3.222,1531,3.222,1532,3.222,1533,3.222,1534,3.222,1535,3.222,1536,3.222,1537,2.735,1538,3.222,1539,3.222,1540,3.222,1541,3.222,1542,3.222,1543,4.881,1544,4.495,1545,2.057,1546,2.057,1547,2.057,1548,3.222,1549,3.222,1550,2.057,1551,2.057,1552,3.222,1553,3.222,1554,2.057,1555,2.057,1556,2.057,1557,1.746,1558,1.746,1559,1.746,1560,2.057,1561,2.057,1562,2.057,1563,2.057,1564,2.057,1565,2.057,1566,2.057,1567,2.057,1568,2.057,1569,3.222,1570,2.057,1571,2.057,1572,5.76,1573,2.057,1574,3.222,1575,4.495,1576,4.495,1577,3.222,1578,2.057,1579,2.057]],["title/interfaces/Story.html",[96,0.553,646,0.636]],["body/interfaces/Story.html",[3,0.219,4,0.272,9,0.156,13,0.414,19,4.122,33,0.319,34,0.775,38,2.942,57,0.025,59,0.621,60,0.895,65,4.385,72,1.025,79,1.5,85,2.924,96,1.15,100,1.602,119,0.463,126,0.219,145,4.385,204,1.765,349,1.174,370,0.013,371,0.017,372,0.013,403,2.705,405,2.142,646,1.067,647,1.474,655,2.966,658,2.514,659,3.179,722,4.376,746,4.858,904,2.798,1108,5.174,1294,4.858,1369,3.179,1445,5.174,1488,5.504,1558,5.174,1559,4.385,1580,3.36,1581,6.484,1582,6.095,1583,6.095,1584,6.095,1585,5.166,1586,6.095,1587,5.166,1588,5.166,1589,5.166]],["title/components/TermsComponent.html",[0,0.162,355,0.68]],["body/components/TermsComponent.html",[0,0.208,1,0.33,2,0.697,3,0.092,4,0.079,5,0.454,6,0.454,7,0.454,8,0.454,9,0.066,13,0.12,15,0.9,16,4.036,17,4.4,23,0.741,24,1.205,25,0.33,26,1.307,27,1.421,28,2.036,29,0.839,31,0.839,37,2.253,52,0.513,57,0.023,58,0.689,59,0.357,63,2.665,70,1.834,71,3.951,72,1.282,79,0.789,83,1.538,84,2.036,85,3.123,89,0.893,96,0.268,103,0.33,112,0.376,119,0.149,120,0.249,126,0.092,127,0.268,161,0.789,162,0.581,187,1.834,193,0.513,195,1.834,203,0.871,205,0.546,215,1.086,235,1.423,238,3.743,246,0.705,268,1.937,273,0.95,292,1.122,293,1.122,294,1.122,295,1.122,300,0.754,306,0.754,307,0.754,308,0.754,309,0.4,310,0.697,311,0.697,312,0.214,313,0.454,317,0.454,318,0.352,319,0.454,320,0.33,321,0.4,322,0.576,323,0.741,324,0.352,325,0.741,326,0.697,327,0.741,328,0.33,329,0.454,330,0.352,331,0.33,332,0.454,333,0.33,334,0.454,335,0.33,336,0.454,337,0.454,338,0.33,339,0.454,340,0.33,341,0.454,342,0.33,343,0.454,344,0.352,345,0.454,346,0.33,347,0.352,348,0.376,349,0.309,350,0.741,351,0.352,352,0.426,353,0.454,354,0.376,355,0.79,356,0.454,357,0.33,358,0.309,359,0.33,360,0.454,361,0.33,362,0.454,363,0.33,364,0.454,365,0.33,366,0.454,367,0.33,368,0.426,369,0.454,370,0.006,371,0.009,372,0.006,389,1.233,396,3.528,398,1.672,440,1.672,452,4.894,455,3.884,456,5.265,474,1.423,509,2.306,549,3.19,593,2.036,627,4.32,658,1.937,679,3.378,683,3.634,723,2.036,733,3.178,904,2.291,907,2.982,916,2.306,1002,2.306,1104,2.036,1107,3.884,1110,3.528,1111,2.306,1117,5.056,1201,1.246,1214,2.036,1246,3.997,1247,2.306,1248,3.498,1253,3.378,1265,1.672,1331,2.306,1368,2.306,1408,4.4,1413,3.378,1416,3.378,1499,2.306,1537,2.306,1590,1.411,1591,3.446,1592,2.717,1593,6.613,1594,6.334,1595,2.717,1596,2.717,1597,2.717,1598,5.184,1599,2.717,1600,2.717,1601,5.518,1602,2.717,1603,2.717,1604,2.717,1605,5.765,1606,2.717,1607,3.98,1608,2.717,1609,2.717,1610,2.717,1611,5.765,1612,2.717,1613,3.98,1614,2.717,1615,2.717,1616,2.717,1617,5.518,1618,5.184,1619,2.717,1620,2.717,1621,2.717,1622,3.98,1623,2.717,1624,2.717,1625,6.558,1626,3.98,1627,2.717,1628,2.717,1629,2.717,1630,2.717,1631,3.98,1632,5.184,1633,4.709,1634,2.717,1635,2.717,1636,2.717,1637,2.717,1638,2.717,1639,2.717,1640,2.717,1641,2.717,1642,2.717,1643,5.184,1644,2.717,1645,3.98,1646,2.717,1647,2.717,1648,2.717,1649,2.717,1650,2.717,1651,3.98,1652,2.717,1653,2.717,1654,2.717,1655,3.98,1656,4.709,1657,2.717,1658,2.717,1659,2.717,1660,2.717,1661,2.717,1662,2.717,1663,3.98,1664,2.717,1665,2.717,1666,4.4,1667,2.717,1668,2.717,1669,2.717,1670,3.98,1671,5.184,1672,3.98,1673,2.717,1674,3.98,1675,2.717,1676,3.98,1677,4.709,1678,2.717,1679,3.98,1680,2.717,1681,2.717,1682,2.717,1683,2.717,1684,2.717,1685,3.98,1686,2.717,1687,2.717,1688,2.717,1689,2.717,1690,3.98,1691,2.717,1692,2.717,1693,2.717,1694,2.717,1695,2.717,1696,2.717,1697,4.709,1698,2.717,1699,2.717,1700,2.717,1701,3.98,1702,6.108,1703,5.184,1704,3.98,1705,3.98,1706,2.717,1707,2.717,1708,2.717,1709,2.717,1710,2.717,1711,2.717,1712,2.717,1713,2.717,1714,2.717,1715,2.717,1716,5.184,1717,4.709,1718,3.98,1719,2.717,1720,5.184,1721,5.184,1722,4.709,1723,3.98,1724,2.717,1725,3.98,1726,2.717,1727,4.709,1728,2.717,1729,2.717,1730,2.717,1731,2.306,1732,2.717,1733,2.717,1734,2.717,1735,2.717,1736,2.717,1737,3.378,1738,2.717,1739,3.98,1740,1.662,1741,2.717,1742,2.717,1743,2.717,1744,3.98,1745,2.717,1746,2.717,1747,2.717,1748,5.518,1749,2.717,1750,2.717,1751,2.717,1752,3.98,1753,2.717,1754,3.98,1755,5.765,1756,3.98,1757,2.717,1758,3.98,1759,5.518,1760,2.717,1761,3.446,1762,2.717,1763,2.717,1764,2.717,1765,2.717,1766,2.717,1767,3.98,1768,3.98,1769,3.98,1770,2.717,1771,4.709,1772,2.717,1773,2.717,1774,2.717,1775,2.717,1776,2.717,1777,2.717,1778,2.717,1779,2.717,1780,2.717,1781,3.98,1782,2.717,1783,2.717,1784,2.717,1785,2.717,1786,2.717,1787,5.184,1788,3.98,1789,5.184,1790,2.717,1791,2.717,1792,3.98,1793,2.717,1794,1.662,1795,2.717,1796,2.717,1797,3.98,1798,3.98,1799,2.717,1800,2.717,1801,2.717,1802,2.717,1803,2.717,1804,2.717,1805,2.717,1806,2.717,1807,2.717,1808,2.717,1809,2.717,1810,2.717,1811,2.717,1812,2.717,1813,2.717,1814,2.717,1815,2.717,1816,2.717,1817,2.717,1818,2.717,1819,1.662,1820,1.662,1821,3.446,1822,1.662]],["title/components/TestAccountComponent.html",[0,0.162,357,0.68]],["body/components/TestAccountComponent.html",[0,0.27,1,0.587,2,1.085,3,0.164,4,0.2,5,1.668,6,0.807,7,0.807,8,0.807,9,0.117,13,0.305,15,1.342,23,1.154,24,1.727,25,0.587,26,1.397,27,1.556,29,1.306,31,1.306,33,0.239,34,0.635,35,2.287,36,1.817,40,1.82,42,1.019,52,1.525,53,1.341,54,1.505,56,1.383,57,0.025,58,0.786,59,0.56,60,0.934,72,1.133,73,1.43,74,1.833,90,1.548,92,1.919,95,2.215,96,1.066,97,2.796,103,0.981,112,0.668,119,0.512,120,0.444,121,0.913,124,1.673,126,0.164,127,0.477,128,0.913,129,1.034,131,2.215,159,1.548,161,0.858,162,1.886,191,1.576,192,1.919,193,0.913,194,3.021,196,1.68,197,1.919,198,1.962,199,1.919,200,1.548,201,1.341,202,2.215,204,0.758,205,0.971,208,1.439,215,1.557,225,1.254,227,1.254,258,1.548,262,1.174,267,1.673,268,1.439,273,1.034,300,1.341,306,1.341,307,1.341,308,1.341,309,0.712,310,1.085,311,1.085,312,0.38,313,0.807,317,0.807,318,0.627,319,0.807,320,0.587,321,0.712,322,0.897,323,1.154,324,0.627,325,1.154,326,1.085,327,1.154,328,0.587,329,0.807,330,0.627,331,0.587,332,0.807,333,0.587,334,0.807,335,0.587,336,0.807,337,0.807,338,1.331,339,0.807,340,0.587,341,0.807,342,0.587,343,0.807,344,0.627,345,0.807,346,0.587,347,0.627,348,0.668,349,1.134,350,1.154,351,0.627,352,1.567,353,0.807,354,0.668,355,0.587,356,0.807,357,1.178,358,0.549,359,0.587,360,0.807,361,0.587,362,0.807,363,0.587,364,0.807,365,0.587,366,0.807,367,0.587,368,0.758,369,0.807,370,0.01,371,0.014,372,0.01,403,2.824,406,1.034,407,1.306,410,1.82,427,1.548,458,2.215,459,2.059,466,2.059,562,2.51,594,4.04,630,1.254,716,3.17,810,2.215,827,1.995,880,2.855,892,2.604,927,3.108,1078,2.51,1164,3.591,1165,2.855,1166,5.187,1167,3.591,1168,3.591,1169,3.591,1172,2.51,1174,2.215,1175,2.51,1177,2.855,1178,2.51,1180,2.51,1186,1.995,1188,2.51,1191,2.215,1192,2.51,1193,2.51,1194,2.215,1197,2.51,1198,2.51,1199,4.577,1200,5.038,1201,2.215,1823,4.577,1824,2.51,1825,4.94,1826,4.231,1827,2.957,1828,2.957,1829,4.231,1830,6.456,1831,2.957,1832,2.957,1833,2.957,1834,2.957,1835,2.957,1836,2.957,1837,2.957,1838,2.957,1839,2.957,1840,2.957,1841,2.957,1842,2.957,1843,2.51]],["title/interceptors/TimeoutInterceptor.html",[616,2.312,1844,2.567]],["body/interceptors/TimeoutInterceptor.html",[3,0.243,4,0.208,9,0.174,13,0.317,23,1.2,27,0.994,33,0.355,42,1.331,52,1.358,54,1.249,56,1.417,57,0.025,58,0.71,59,0.495,60,0.958,73,1.331,89,1.445,119,0.568,120,0.66,126,0.306,127,0.71,128,1.706,166,2.562,370,0.015,371,0.019,372,0.015,406,1.538,530,2.706,559,3.732,615,2.967,616,3.729,625,4.994,642,3.729,645,2.14,683,3.697,691,4.14,776,3.294,832,3.732,836,3.732,904,2.94,907,4.14,1110,4.14,1118,3.401,1174,4.14,1265,3.401,1369,3.401,1421,4.69,1557,4.69,1844,4.14,1845,4.397,1846,4.527,1847,3.294,1848,5.525,1849,5.525,1850,5.525,1851,4.397,1852,4.397,1853,5.525,1854,5.525,1855,6.339,1856,6.339,1857,6.339,1858,4.397,1859,5.525,1860,5.525,1861,5.129,1862,6.042,1863,4.397,1864,4.397,1865,4.397,1866,5.525,1867,3.732,1868,4.397,1869,4.397,1870,4.397,1871,4.397,1872,4.397,1873,4.397,1874,4.397]],["title/interfaces/User.html",[79,0.995,646,0.636]],["body/interfaces/User.html",[3,0.242,4,0.207,9,0.173,13,0.315,15,0.99,16,2.695,19,4.302,20,5.169,33,0.353,34,0.827,37,3.769,38,2.501,57,0.025,58,0.708,59,0.619,79,2.073,85,2.479,95,2.293,100,1.588,126,0.242,370,0.015,371,0.019,372,0.015,646,1.023,647,1.631,655,3.08,658,3.241,659,3.392,668,3.58,749,3.12,993,3.281,1248,2.956,1369,2.695,1412,5.373,1737,3.717,1875,3.717,1876,6.33,1877,6.031,1878,6.031,1879,4.38,1880,4.38,1881,4.38,1882,4.38]],["title/directives/ViewModeDirective.html",[312,0.44,367,0.68]],["body/directives/ViewModeDirective.html",[3,0.289,4,0.247,9,0.206,13,0.376,25,1.035,26,1.217,57,0.024,119,0.468,120,0.783,126,0.289,127,0.842,129,1.824,161,1.514,312,0.864,331,1.217,358,0.968,367,1.217,368,1.572,370,0.018,371,0.021,372,0.018,782,3.908,785,3.519,787,5.204,788,4.428,902,4.593,1883,4.428,1884,6.131]],["title/coverage.html",[1885,3.981]],["body/coverage.html",[0,0.335,1,0.736,9,0.147,10,3.146,11,2.777,12,3.146,36,1.012,57,0.025,59,0.332,79,1.076,89,1.218,92,1.682,96,0.599,103,0.736,112,0.838,204,0.951,271,1.804,312,0.795,318,0.786,320,0.736,322,1.049,324,0.786,328,0.736,330,0.786,333,0.736,335,0.736,338,0.736,340,0.736,342,0.736,344,0.786,346,0.736,347,0.786,348,0.838,349,0.688,351,0.786,354,0.838,355,0.736,357,0.736,359,0.736,361,0.736,363,0.736,365,0.736,367,0.736,370,0.013,371,0.017,372,0.013,373,3.146,503,4.416,528,3.362,552,2.281,555,3.146,560,2.777,567,2.281,573,2.777,589,3.706,594,2.777,611,2.777,613,2.777,615,2.502,616,2.502,619,2.777,633,2.502,635,3.146,642,2.502,646,1.264,648,3.146,652,2.502,654,3.146,662,2.281,665,3.146,666,3.706,713,3.146,714,3.706,781,3.706,782,3.706,785,1.941,789,3.146,863,3.146,874,3.146,875,3.146,951,3.146,957,3.146,964,3.146,1158,3.146,1202,3.706,1203,3.706,1220,2.777,1228,3.146,1250,3.146,1270,3.146,1289,2.502,1290,3.146,1295,3.146,1296,3.146,1396,3.146,1398,3.146,1425,3.146,1442,3.146,1451,3.146,1453,2.281,1455,3.146,1456,3.146,1471,3.146,1472,3.146,1580,3.146,1590,3.146,1823,3.146,1824,3.146,1844,2.777,1846,3.706,1847,3.706,1875,3.146,1883,3.146,1885,3.146,1886,3.707,1887,3.707,1888,3.707,1889,3.707,1890,3.707,1891,3.707,1892,3.707,1893,6.367,1894,6.686,1895,3.707,1896,3.707,1897,5.568,1898,4.947,1899,4.947,1900,3.707,1901,5.94,1902,4.947,1903,3.707,1904,3.707,1905,4.947,1906,3.707,1907,5.568,1908,3.707,1909,3.707,1910,3.707,1911,3.707,1912,4.947,1913,3.707,1914,3.707,1915,5.568,1916,3.707,1917,3.707,1918,4.947,1919,3.707,1920,3.707,1921,3.707,1922,3.146,1923,3.707,1924,4.726,1925,3.707,1926,3.707,1927,3.707,1928,4.199,1929,3.707,1930,3.146,1931,3.707,1932,3.146,1933,4.199,1934,3.146,1935,3.707]],["title/dependencies.html",[533,2.783,1936,2.854]],["body/dependencies.html",[9,0.19,57,0.025,63,2.714,120,0.72,123,2.034,370,0.016,371,0.02,372,0.016,407,1.481,533,3.236,535,3.593,548,4.949,549,3.588,566,2.334,585,2.714,586,4.071,592,3.555,593,3.593,604,2.952,608,4.071,609,3.593,683,2.714,748,3.593,834,4.071,838,4.071,839,4.071,931,3.593,1937,6.955,1938,4.796,1939,4.796,1940,4.796,1941,4.796,1942,4.796,1943,4.796,1944,4.796,1945,4.071,1946,4.796,1947,4.796,1948,4.796,1949,4.796,1950,4.796,1951,4.796,1952,4.796,1953,4.796,1954,4.796,1955,4.796,1956,4.796,1957,4.796,1958,4.796,1959,4.796,1960,4.796,1961,4.796,1962,4.796,1963,4.796,1964,4.796,1965,4.796,1966,4.796,1967,4.796,1968,5.83,1969,4.796,1970,4.796,1971,4.796,1972,4.796,1973,4.796,1974,4.796,1975,4.796,1976,4.796,1977,4.796,1978,4.796]],["title/index.html",[33,0.23,1979,2.854,1980,2.854]],["body/index.html",[0,0.3,4,0.232,27,1.106,57,0.02,58,0.629,72,0.972,89,1.608,90,3.091,159,2.563,187,3.983,189,4.422,370,0.017,371,0.02,372,0.017,389,2.221,437,3.667,440,3.9,455,3.667,471,5.585,585,3.917,636,3.012,1107,4.748,1118,4.145,1120,4.154,1448,5.01,1666,4.154,1731,4.154,1945,5.379,1981,4.894,1982,4.894,1983,6.337,1984,4.894,1985,4.894,1986,4.894,1987,4.154,1988,4.894,1989,4.894,1990,4.894,1991,4.894,1992,4.894,1993,6.337,1994,4.894,1995,6.735,1996,4.894,1997,4.894,1998,4.894,1999,4.894,2000,4.894,2001,4.894,2002,4.154,2003,5.902,2004,5.902,2005,6.58,2006,4.894,2007,4.894,2008,4.894,2009,4.894,2010,4.894]],["title/modules.html",[532,3.514]],["body/modules.html",[57,0.022,370,0.019,371,0.022,372,0.019,531,3.781,532,4.197,549,3.448,2011,5.602,2012,5.602,2013,5.602]],["title/overview.html",[2014,3.981]],["body/overview.html",[1,1.18,2,1.089,36,1.622,57,0.025,112,1.344,222,2.521,232,3.181,309,1.023,318,1.423,320,1.18,322,0.9,324,1.26,328,1.18,330,1.26,333,1.18,335,1.18,338,1.18,340,1.242,342,1.18,344,1.26,346,1.18,347,1.26,348,1.344,351,1.26,354,1.344,355,1.18,357,1.18,358,0.788,359,1.18,361,1.18,363,1.18,365,1.18,367,1.18,370,0.014,371,0.018,372,0.014,389,1.926,530,3.326,531,4.951,533,2.865,534,3.604,535,3.181,536,3.181,537,3.604,538,3.604,539,3.604,540,3.604,541,3.604,542,4.587,633,2.865,642,2.865,647,1.581,2014,3.604,2015,4.246,2016,4.246]],["title/miscellaneous/variables.html",[2017,2.422,2018,3.501]],["body/miscellaneous/variables.html",[0,0.326,1,0.797,15,0.908,27,0.908,28,3.008,33,0.324,46,3.519,56,1.337,57,0.025,59,0.57,83,2.951,89,1.713,96,0.648,97,2.273,134,3.408,166,2.211,204,1.03,320,0.797,321,0.967,322,0.851,333,0.797,335,0.797,338,0.797,340,0.797,342,0.797,346,0.797,355,0.797,357,0.797,370,0.014,371,0.018,372,0.014,396,3.906,406,2.317,407,2.01,408,1.595,439,3.906,530,2.471,552,3.209,567,2.471,589,3.008,615,3.519,625,3.008,630,2.211,638,3.408,645,1.954,650,2.71,658,2.537,668,3.409,683,2.273,709,3.519,929,3.008,1161,3.408,1202,3.008,1203,3.906,1214,3.008,1215,3.408,1216,3.408,1217,4.426,1218,3.008,1219,3.408,1220,3.906,1221,3.906,1222,3.408,1223,3.408,1224,3.408,1225,3.408,1226,3.408,1293,3.008,1528,3.408,1843,4.426,1846,3.008,1847,3.906,1861,3.408,1867,3.408,1922,3.408,1924,4.426,1928,3.408,1930,4.426,1932,3.408,1933,5.525,1934,3.408,1987,3.408,2002,4.915,2017,3.408,2018,3.408,2019,4.015,2020,4.015,2021,4.015,2022,4.015,2023,4.015,2024,4.015,2025,6.85,2026,4.015,2027,4.015,2028,4.015,2029,4.015]],["title/routes.html",[552,2.887]],["body/routes.html",[57,0.022,370,0.019,371,0.022,372,0.019,552,3.477]]],"invertedIndex":[["",{"_index":57,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interfaces/Background.html":{},"interfaces/Block.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"interfaces/ReportContainer.html":{},"components/ReportHistoryComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"interfaces/StepType.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"interfaces/User.html":{},"directives/ViewModeDirective.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["0",{"_index":528,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteScenarioToast.html":{},"components/FeedbackComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"coverage.html":{}}}],["0.11.3",{"_index":1978,"title":{},"body":{"dependencies.html":{}}}],["0.1s",{"_index":1567,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["0.25px",{"_index":1148,"title":{},"body":{"components/LoginComponent.html":{}}}],["0.2s",{"_index":289,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{},"components/StoriesBarComponent.html":{}}}],["0.3s",{"_index":492,"title":{},"body":{"components/AppComponent.html":{}}}],["0.5em",{"_index":1555,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["0.63",{"_index":256,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["0.7.1",{"_index":1944,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1931,"title":{},"body":{"coverage.html":{}}}],["0/72",{"_index":1890,"title":{},"body":{"coverage.html":{}}}],["0/80",{"_index":1925,"title":{},"body":{"coverage.html":{}}}],["0/89",{"_index":1929,"title":{},"body":{"coverage.html":{}}}],["0099cc",{"_index":1140,"title":{},"body":{"components/LoginComponent.html":{}}}],["0px",{"_index":192,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["1",{"_index":222,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/DeleteScenarioToast.html":{},"components/ExampleTableComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"overview.html":{}}}],["1.3.2",{"_index":438,"title":{},"body":{"components/AppComponent.html":{}}}],["1.8.2",{"_index":1946,"title":{},"body":{"dependencies.html":{}}}],["1.don't",{"_index":1409,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["1.don\\'t",{"_index":1423,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["1/1",{"_index":1894,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1902,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1127,"title":{},"body":{"components/LoginComponent.html":{}}}],["10.1.1",{"_index":1965,"title":{},"body":{"dependencies.html":{}}}],["10.2.3",{"_index":1937,"title":{},"body":{"dependencies.html":{}}}],["10/10",{"_index":1916,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":503,"title":{},"body":{"components/AppComponent.html":{},"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{},"components/StoriesBarComponent.html":{},"coverage.html":{}}}],["100px",{"_index":209,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{}}}],["100vh",{"_index":465,"title":{},"body":{"components/AppComponent.html":{}}}],["109",{"_index":1552,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["10pt",{"_index":1145,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["10px",{"_index":227,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/DeleteScenarioToast.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["11",{"_index":2016,"title":{},"body":{"overview.html":{}}}],["11/11",{"_index":1914,"title":{},"body":{"coverage.html":{}}}],["11/12",{"_index":1920,"title":{},"body":{"coverage.html":{}}}],["12/12",{"_index":1917,"title":{},"body":{"coverage.html":{}}}],["12/14",{"_index":1898,"title":{},"body":{"coverage.html":{}}}],["120000",{"_index":632,"title":{},"body":{"modules/AppModule.html":{}}}],["12px",{"_index":473,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["13",{"_index":1808,"title":{},"body":{"components/TermsComponent.html":{}}}],["13.1.0",{"_index":1967,"title":{},"body":{"dependencies.html":{}}}],["13/13",{"_index":1918,"title":{},"body":{"coverage.html":{}}}],["13/26",{"_index":1908,"title":{},"body":{"coverage.html":{}}}],["13px",{"_index":491,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["14px",{"_index":521,"title":{},"body":{"components/AppComponent.html":{}}}],["15/15",{"_index":1906,"title":{},"body":{"coverage.html":{}}}],["15/16",{"_index":1927,"title":{},"body":{"coverage.html":{}}}],["150px",{"_index":1157,"title":{},"body":{"components/LoginComponent.html":{}}}],["153",{"_index":255,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["15px",{"_index":278,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{}}}],["16/19",{"_index":1896,"title":{},"body":{"coverage.html":{}}}],["1600px",{"_index":1155,"title":{},"body":{"components/LoginComponent.html":{}}}],["16px",{"_index":504,"title":{},"body":{"components/AppComponent.html":{}}}],["17px",{"_index":274,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["180px",{"_index":1156,"title":{},"body":{"components/LoginComponent.html":{}}}],["18px",{"_index":301,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{}}}],["1970",{"_index":1267,"title":{},"body":{"interfaces/Report.html":{}}}],["1fr",{"_index":200,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TestAccountComponent.html":{}}}],["1px",{"_index":211,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{}}}],["2",{"_index":220,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{}}}],["2.0.1",{"_index":1957,"title":{},"body":{"dependencies.html":{}}}],["2.0.8",{"_index":1959,"title":{},"body":{"dependencies.html":{}}}],["2.6.1",{"_index":1970,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":1951,"title":{},"body":{"dependencies.html":{}}}],["2.88.2",{"_index":1973,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1905,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":1892,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":2015,"title":{},"body":{"overview.html":{}}}],["20px",{"_index":203,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TermsComponent.html":{}}}],["212529",{"_index":1819,"title":{},"body":{"components/TermsComponent.html":{}}}],["224",{"_index":1130,"title":{},"body":{"components/LoginComponent.html":{}}}],["22pt",{"_index":248,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["22px",{"_index":1390,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["247",{"_index":1150,"title":{},"body":{"components/LoginComponent.html":{}}}],["24px",{"_index":1545,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["255",{"_index":207,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["25px",{"_index":242,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["2em",{"_index":1553,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["2px",{"_index":719,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/ReportHistoryComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{}}}],["3",{"_index":221,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["3.0.1",{"_index":1962,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":1974,"title":{},"body":{"dependencies.html":{}}}],["3.5.1",{"_index":1964,"title":{},"body":{"dependencies.html":{}}}],["3.5.9",{"_index":1976,"title":{},"body":{"dependencies.html":{}}}],["3.7.0",{"_index":1949,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1907,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":1921,"title":{},"body":{"coverage.html":{}}}],["3000",{"_index":626,"title":{},"body":{"modules/AppModule.html":{}}}],["300px",{"_index":753,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["30deg",{"_index":770,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["30em",{"_index":1554,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["30px",{"_index":259,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{}}}],["340px",{"_index":1138,"title":{},"body":{"components/LoginComponent.html":{}}}],["35/59",{"_index":1911,"title":{},"body":{"coverage.html":{}}}],["350px",{"_index":1419,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["388196",{"_index":718,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["3fr",{"_index":467,"title":{},"body":{"components/AppComponent.html":{}}}],["3px",{"_index":699,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{}}}],["4",{"_index":230,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["4.14.1",{"_index":1972,"title":{},"body":{"dependencies.html":{}}}],["4.16.4",{"_index":1955,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1912,"title":{},"body":{"coverage.html":{}}}],["400px",{"_index":1128,"title":{},"body":{"components/LoginComponent.html":{}}}],["40px",{"_index":251,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["45",{"_index":1903,"title":{},"body":{"coverage.html":{}}}],["4px",{"_index":475,"title":{},"body":{"components/AppComponent.html":{}}}],["5",{"_index":232,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{},"overview.html":{}}}],["5.4.0",{"_index":1966,"title":{},"body":{"dependencies.html":{}}}],["5/11",{"_index":1904,"title":{},"body":{"coverage.html":{}}}],["5/5",{"_index":1915,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1901,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":1089,"title":{},"body":{"components/LoginComponent.html":{}}}],["500px",{"_index":1132,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["50px",{"_index":277,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["51px",{"_index":497,"title":{},"body":{"components/AppComponent.html":{}}}],["53d35a",{"_index":702,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{}}}],["56595e",{"_index":1573,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["59",{"_index":1910,"title":{},"body":{"coverage.html":{}}}],["5deg",{"_index":772,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["5px",{"_index":262,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["6",{"_index":233,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["6.2.4",{"_index":1984,"title":{},"body":{"index.html":{}}}],["6/6",{"_index":1899,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":1900,"title":{},"body":{"coverage.html":{}}}],["600px",{"_index":308,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["60px",{"_index":297,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/StoriesBarComponent.html":{}}}],["66",{"_index":1891,"title":{},"body":{"coverage.html":{}}}],["6px",{"_index":752,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["7.2.16",{"_index":1941,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":520,"title":{},"body":{"components/AppComponent.html":{}}}],["70px",{"_index":1134,"title":{},"body":{"components/LoginComponent.html":{}}}],["7px",{"_index":1547,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["8",{"_index":689,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["8.0.0",{"_index":1943,"title":{},"body":{"dependencies.html":{}}}],["8.2.0",{"_index":1953,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":1913,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1561,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["80px",{"_index":695,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["830px",{"_index":1131,"title":{},"body":{"components/LoginComponent.html":{}}}],["84",{"_index":1895,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":1897,"title":{},"body":{"coverage.html":{}}}],["850px",{"_index":1136,"title":{},"body":{"components/LoginComponent.html":{}}}],["88px",{"_index":1139,"title":{},"body":{"components/LoginComponent.html":{}}}],["8px",{"_index":515,"title":{},"body":{"components/AppComponent.html":{}}}],["90",{"_index":296,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["91",{"_index":1919,"title":{},"body":{"coverage.html":{}}}],["92",{"_index":712,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{}}}],["93",{"_index":1926,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":1201,"title":{},"body":{"components/ParentComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["999",{"_index":213,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{}}}],["_id",{"_index":655,"title":{},"body":{"interfaces/Block.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"interfaces/Report.html":{},"interfaces/RepositoryContainer.html":{},"interfaces/StepType.html":{},"interfaces/Story.html":{},"interfaces/User.html":{}}}],["a.notpassed",{"_index":1383,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["a.passed",{"_index":1381,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["a.repolink",{"_index":287,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{}}}],["a.repolink:hover",{"_index":290,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{}}}],["a.reporttime",{"_index":1348,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["a.storylistlink",{"_index":1560,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["a.storylistlink:hover",{"_index":1565,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["a:hover",{"_index":496,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["absolute",{"_index":1135,"title":{},"body":{"components/LoginComponent.html":{},"components/StoriesBarComponent.html":{}}}],["abstractcontrol",{"_index":1212,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{}}}],["access",{"_index":1737,"title":{},"body":{"components/TermsComponent.html":{},"interfaces/User.html":{}}}],["accessed",{"_index":1709,"title":{},"body":{"components/TermsComponent.html":{}}}],["accessible",{"_index":1595,"title":{},"body":{"components/TermsComponent.html":{}}}],["accessors",{"_index":802,"title":{},"body":{"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/ReportHistoryComponent.html":{}}}],["accordion",{"_index":1572,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["account",{"_index":15,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["account.component",{"_index":595,"title":{},"body":{"modules/AppModule.html":{}}}],["account.component.ts",{"_index":1824,"title":{},"body":{"components/TestAccountComponent.html":{},"coverage.html":{}}}],["account.component.ts:16",{"_index":1827,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["account.component.ts:22",{"_index":1836,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["account.component.ts:35",{"_index":1828,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["account/test",{"_index":594,"title":{},"body":{"modules/AppModule.html":{},"components/TestAccountComponent.html":{},"coverage.html":{}}}],["accountmanagement",{"_index":134,"title":{},"body":{"components/AccountManagementComponent.html":{},"miscellaneous/variables.html":{}}}],["accountmanagementcomponent",{"_index":1,"title":{"components/AccountManagementComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["accountname",{"_index":1882,"title":{},"body":{"interfaces/User.html":{}}}],["actionbutton",{"_index":1388,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["activate",{"_index":783,"title":{},"body":{"directives/EditModeDirective.html":{},"directives/EditableOnEnterDirective.html":{}}}],["activatedroute",{"_index":674,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ReportComponent.html":{}}}],["active",{"_index":240,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{}}}],["activities",{"_index":1614,"title":{},"body":{"components/TermsComponent.html":{}}}],["activity",{"_index":1805,"title":{},"body":{"components/TermsComponent.html":{}}}],["actual_component",{"_index":369,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["ad",{"_index":1722,"title":{},"body":{"components/TermsComponent.html":{}}}],["add",{"_index":1113,"title":{},"body":{"components/LoginComponent.html":{}}}],["added",{"_index":896,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["adding",{"_index":1796,"title":{},"body":{"components/TermsComponent.html":{}}}],["additional",{"_index":1607,"title":{},"body":{"components/TermsComponent.html":{}}}],["address",{"_index":1248,"title":{},"body":{"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TermsComponent.html":{},"interfaces/User.html":{}}}],["addresses",{"_index":1680,"title":{},"body":{"components/TermsComponent.html":{}}}],["adesso",{"_index":488,"title":{},"body":{"components/AppComponent.html":{}}}],["adessocucumber/cucumber",{"_index":1069,"title":{},"body":{"components/LoginComponent.html":{}}}],["adessologo",{"_index":478,"title":{},"body":{"components/AppComponent.html":{}}}],["administering",{"_index":1694,"title":{},"body":{"components/TermsComponent.html":{}}}],["advertisements",{"_index":1728,"title":{},"body":{"components/TermsComponent.html":{}}}],["advertisers",{"_index":1739,"title":{},"body":{"components/TermsComponent.html":{}}}],["advertising",{"_index":1716,"title":{},"body":{"components/TermsComponent.html":{}}}],["advising",{"_index":1743,"title":{},"body":{"components/TermsComponent.html":{}}}],["afterviewinit",{"_index":959,"title":{},"body":{"directives/FocusableDirective.html":{},"components/LoginComponent.html":{}}}],["age",{"_index":1807,"title":{},"body":{"components/TermsComponent.html":{}}}],["agree",{"_index":1624,"title":{},"body":{"components/TermsComponent.html":{}}}],["align",{"_index":224,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{}}}],["already",{"_index":1411,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["analytics",{"_index":1675,"title":{},"body":{"components/TermsComponent.html":{}}}],["analyze",{"_index":1648,"title":{},"body":{"components/TermsComponent.html":{}}}],["analyzing",{"_index":1692,"title":{},"body":{"components/TermsComponent.html":{}}}],["and/or",{"_index":1617,"title":{},"body":{"components/TermsComponent.html":{}}}],["angular",{"_index":1945,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":748,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{},"dependencies.html":{}}}],["angular/cdk/drag",{"_index":582,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/common",{"_index":1938,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":559,"title":{},"body":{"modules/AppModule.html":{},"interceptors/TimeoutInterceptor.html":{}}}],["angular/compiler",{"_index":1939,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":120,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"directives/ViewModeDirective.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":566,"title":{},"body":{"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1940,"title":{},"body":{"dependencies.html":{}}}],["angular/material/list",{"_index":572,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/progress",{"_index":597,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/table",{"_index":570,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":548,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":123,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ResetPasswordComponent.html":{},"dependencies.html":{}}}],["animate",{"_index":744,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["animate('400ms",{"_index":766,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["animations",{"_index":761,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["another",{"_index":1792,"title":{},"body":{"components/TermsComponent.html":{}}}],["anymore",{"_index":1589,"title":{},"body":{"interfaces/Story.html":{}}}],["aot",{"_index":734,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["api",{"_index":62,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ConfirmResetPasswordComponent.html":{}}}],["apiservice",{"_index":36,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["app",{"_index":27,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.component",{"_index":554,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":376,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":377,"title":{},"body":{"components/AppComponent.html":{}}}],["app/routes/routes",{"_index":553,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent",{"_index":318,"title":{"components/AppComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":1111,"title":{},"body":{"components/LoginComponent.html":{},"components/TermsComponent.html":{}}}],["applicable",{"_index":1619,"title":{},"body":{"components/TermsComponent.html":{}}}],["application",{"_index":448,"title":{},"body":{"components/AppComponent.html":{}}}],["applies",{"_index":1612,"title":{},"body":{"components/TermsComponent.html":{}}}],["apply",{"_index":1741,"title":{},"body":{"components/TermsComponent.html":{}}}],["appmodule",{"_index":531,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppasswordconfirmed",{"_index":1209,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{}}}],["apppasswordconfirmed]'},{'name",{"_index":366,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["area",{"_index":466,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["areas",{"_index":459,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["array.from(seen",{"_index":942,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["artifacts",{"_index":1996,"title":{},"body":{"index.html":{}}}],["ask",{"_index":1631,"title":{},"body":{"components/TermsComponent.html":{}}}],["asked",{"_index":1626,"title":{},"body":{"components/TermsComponent.html":{}}}],["assets//slide0.png",{"_index":1006,"title":{},"body":{"components/LoginComponent.html":{}}}],["assets//slide01.png",{"_index":1010,"title":{},"body":{"components/LoginComponent.html":{}}}],["assets//slide02.png",{"_index":1013,"title":{},"body":{"components/LoginComponent.html":{}}}],["assets//slide03.png",{"_index":1016,"title":{},"body":{"components/LoginComponent.html":{}}}],["assets//slide04.png",{"_index":1019,"title":{},"body":{"components/LoginComponent.html":{}}}],["assets//slide05.png",{"_index":1022,"title":{},"body":{"components/LoginComponent.html":{}}}],["assets//slide06.png",{"_index":1025,"title":{},"body":{"components/LoginComponent.html":{}}}],["assets//slide07.png",{"_index":1028,"title":{},"body":{"components/LoginComponent.html":{}}}],["assets//slide08.png",{"_index":1031,"title":{},"body":{"components/LoginComponent.html":{}}}],["assets//slide09.png",{"_index":1034,"title":{},"body":{"components/LoginComponent.html":{}}}],["assets//slide10.png",{"_index":1037,"title":{},"body":{"components/LoginComponent.html":{}}}],["assets//slide11.png",{"_index":1040,"title":{},"body":{"components/LoginComponent.html":{}}}],["assigned",{"_index":1585,"title":{},"body":{"interfaces/Story.html":{}}}],["assignee",{"_index":1581,"title":{},"body":{"interfaces/Story.html":{}}}],["assignee_avatar_url",{"_index":1582,"title":{},"body":{"interfaces/Story.html":{}}}],["async",{"_index":981,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["attachments",{"_index":1636,"title":{},"body":{"components/TermsComponent.html":{}}}],["authguard",{"_index":567,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auto",{"_index":198,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["automated",{"_index":1417,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["automatically",{"_index":1731,"title":{},"body":{"components/TermsComponent.html":{},"index.html":{}}}],["available",{"_index":1467,"title":{},"body":{"interfaces/StepType.html":{}}}],["avatar",{"_index":1559,"title":{},"body":{"components/StoriesBarComponent.html":{},"interfaces/Story.html":{}}}],["await",{"_index":1063,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["aware",{"_index":1774,"title":{},"body":{"components/TermsComponent.html":{}}}],["b",{"_index":1347,"title":{},"body":{"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{}}}],["b.issue_number",{"_index":1517,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["b.reporttime",{"_index":1349,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["backbutton",{"_index":276,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ReportHistoryComponent.html":{}}}],["backbutton:focus",{"_index":281,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["backface",{"_index":758,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["background",{"_index":204,"title":{"interfaces/Background.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"interfaces/Background.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/StepDefinitionBackground.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["backimage",{"_index":284,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["bar",{"_index":1160,"title":{},"body":{"components/ParentComponent.html":{},"components/StoriesBarComponent.html":{}}}],["bar'},{'name",{"_index":353,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["bar.component",{"_index":561,"title":{},"body":{"modules/AppModule.html":{}}}],["bar.component.css",{"_index":1473,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar.component.html",{"_index":1474,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar.component.ts",{"_index":1472,"title":{},"body":{"components/StoriesBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:110",{"_index":1492,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar.component.ts:119",{"_index":1494,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar.component.ts:131",{"_index":1490,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar.component.ts:20",{"_index":1502,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar.component.ts:25",{"_index":1501,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar.component.ts:30",{"_index":1500,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar.component.ts:35",{"_index":1497,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar.component.ts:40",{"_index":1496,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar.component.ts:46",{"_index":1486,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar.component.ts:52",{"_index":1484,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar.component.ts:57",{"_index":1483,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar.component.ts:63",{"_index":1495,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar.component.ts:82",{"_index":1489,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar.component.ts:96",{"_index":1487,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar/stories",{"_index":560,"title":{},"body":{"modules/AppModule.html":{},"components/StoriesBarComponent.html":{},"coverage.html":{}}}],["based",{"_index":1714,"title":{},"body":{"components/TermsComponent.html":{}}}],["beacons",{"_index":1704,"title":{},"body":{"components/TermsComponent.html":{}}}],["before",{"_index":1468,"title":{},"body":{"interfaces/StepType.html":{}}}],["believe",{"_index":1781,"title":{},"body":{"components/TermsComponent.html":{}}}],["belongs",{"_index":661,"title":{},"body":{"interfaces/Block.html":{},"interfaces/StepType.html":{}}}],["below",{"_index":461,"title":{},"body":{"components/AppComponent.html":{}}}],["best",{"_index":1814,"title":{},"body":{"components/TermsComponent.html":{}}}],["between",{"_index":305,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ReportHistoryComponent.html":{},"interfaces/Scenario.html":{}}}],["black",{"_index":263,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/DeleteScenarioToast.html":{},"components/LoginComponent.html":{},"components/RunTestToast.html":{}}}],["block",{"_index":271,"title":{"interfaces/Block.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"interfaces/Block.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/StoriesBarComponent.html":{},"coverage.html":{}}}],["blue",{"_index":217,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{}}}],["body",{"_index":1558,"title":{},"body":{"components/StoriesBarComponent.html":{},"interfaces/Story.html":{}}}],["bold",{"_index":250,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["boolean",{"_index":405,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/Background.html":{},"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"interfaces/RepositoryContainer.html":{},"interfaces/Scenario.html":{},"interfaces/StepType.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{}}}],["bootstrap",{"_index":535,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":586,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["border",{"_index":210,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{}}}],["bottom",{"_index":208,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["box",{"_index":513,"title":{},"body":{"components/AppComponent.html":{},"components/StoriesBarComponent.html":{}}}],["browse",{"_index":2013,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":549,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Scenario.html":{},"components/TermsComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":606,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":605,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":547,"title":{},"body":{"modules/AppModule.html":{}}}],["browsers",{"_index":1752,"title":{},"body":{"components/TermsComponent.html":{}}}],["btn",{"_index":756,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["build",{"_index":1995,"title":{},"body":{"index.html":{}}}],["business",{"_index":1759,"title":{},"body":{"components/TermsComponent.html":{}}}],["button",{"_index":741,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{}}}],["california",{"_index":1757,"title":{},"body":{"components/TermsComponent.html":{}}}],["campaigns",{"_index":1735,"title":{},"body":{"components/TermsComponent.html":{}}}],["can't",{"_index":1407,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["can\\'t",{"_index":1422,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["canactivate",{"_index":638,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["cancel",{"_index":740,"title":{},"body":{"components/DeleteScenarioToast.html":{}}}],["cancelstring",{"_index":725,"title":{},"body":{"components/DeleteScenarioToast.html":{}}}],["canedit",{"_index":1397,"title":{},"body":{"interfaces/RepositoryContainer.html":{}}}],["card",{"_index":286,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["carousel",{"_index":609,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["categories",{"_index":1763,"title":{},"body":{"components/TermsComponent.html":{}}}],["ccpa",{"_index":1754,"title":{},"body":{"components/TermsComponent.html":{}}}],["cdr",{"_index":984,"title":{},"body":{"components/LoginComponent.html":{}}}],["cell",{"_index":902,"title":{},"body":{"components/ExampleTableComponent.html":{},"directives/FocusableDirective.html":{},"directives/ViewModeDirective.html":{}}}],["cells",{"_index":791,"title":{},"body":{"components/EditableComponent.html":{}}}],["center",{"_index":225,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["certain",{"_index":1748,"title":{},"body":{"components/TermsComponent.html":{}}}],["change",{"_index":159,"title":{},"body":{"components/AccountManagementComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/ParentComponent.html":{},"components/ReportHistoryComponent.html":{},"components/TestAccountComponent.html":{},"index.html":{}}}],["changed",{"_index":901,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["changedetectorref",{"_index":985,"title":{},"body":{"components/LoginComponent.html":{}}}],["changeeditor",{"_index":1308,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["changes",{"_index":66,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/EditableComponent.html":{}}}],["channels",{"_index":1621,"title":{},"body":{"components/TermsComponent.html":{}}}],["characters",{"_index":690,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["charcoal",{"_index":1392,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["charge",{"_index":1777,"title":{},"body":{"components/TermsComponent.html":{}}}],["check",{"_index":636,"title":{},"body":{"guards/AuthGuard.html":{},"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"index.html":{}}}],["checked",{"_index":1457,"title":{},"body":{"interfaces/StepType.html":{}}}],["checkexample",{"_index":881,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["checkexample(event",{"_index":897,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["checkrowindex",{"_index":890,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["checks",{"_index":641,"title":{},"body":{"guards/AuthGuard.html":{},"components/StoriesBarComponent.html":{}}}],["child",{"_index":1499,"title":{},"body":{"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{}}}],["children",{"_index":1797,"title":{},"body":{"components/TermsComponent.html":{}}}],["children's",{"_index":1794,"title":{},"body":{"components/TermsComponent.html":{}}}],["children\\'s",{"_index":1822,"title":{},"body":{"components/TermsComponent.html":{}}}],["choose",{"_index":1413,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/TermsComponent.html":{}}}],["chosen",{"_index":1485,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["circle",{"_index":1153,"title":{},"body":{"components/LoginComponent.html":{}}}],["class",{"_index":127,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"directives/ViewModeDirective.html":{}}}],["clear",{"_index":1629,"title":{},"body":{"components/TermsComponent.html":{}}}],["cli",{"_index":1983,"title":{},"body":{"index.html":{}}}],["click",{"_index":1121,"title":{},"body":{"components/LoginComponent.html":{}}}],["click').pipe",{"_index":853,"title":{},"body":{"components/EditableComponent.html":{}}}],["clickling",{"_index":1119,"title":{},"body":{"components/LoginComponent.html":{}}}],["clickoutside",{"_index":851,"title":{},"body":{"components/EditableComponent.html":{}}}],["clicks",{"_index":1687,"title":{},"body":{"components/TermsComponent.html":{}}}],["client",{"_index":965,"title":{},"body":{"components/LoginComponent.html":{}}}],["close",{"_index":726,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{}}}],["cluster_appmodule",{"_index":538,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":539,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":541,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":540,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1991,"title":{},"body":{"index.html":{}}}],["collect",{"_index":1618,"title":{},"body":{"components/TermsComponent.html":{}}}],["collected",{"_index":1605,"title":{},"body":{"components/TermsComponent.html":{}}}],["collects",{"_index":1760,"title":{},"body":{"components/TermsComponent.html":{}}}],["color",{"_index":205,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["color:rgb(224",{"_index":1129,"title":{},"body":{"components/LoginComponent.html":{}}}],["color:var",{"_index":245,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["column",{"_index":201,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TestAccountComponent.html":{}}}],["columnindex",{"_index":917,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["columns",{"_index":199,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/ExampleTableComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["comment",{"_index":1443,"title":{},"body":{"interfaces/Scenario.html":{}}}],["communicate",{"_index":1654,"title":{},"body":{"components/TermsComponent.html":{}}}],["companies",{"_index":1673,"title":{},"body":{"components/TermsComponent.html":{}}}],["company",{"_index":1637,"title":{},"body":{"components/TermsComponent.html":{}}}],["complete",{"_index":1783,"title":{},"body":{"components/TermsComponent.html":{}}}],["component",{"_index":0,"title":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["component]'},{'name",{"_index":327,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["component_template",{"_index":313,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"overview.html":{}}}],["conditions",{"_index":1787,"title":{},"body":{"components/TermsComponent.html":{}}}],["confirm",{"_index":321,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"miscellaneous/variables.html":{}}}],["confirmed",{"_index":1219,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{},"miscellaneous/variables.html":{}}}],["confirmed.directive",{"_index":602,"title":{},"body":{"modules/AppModule.html":{}}}],["confirmed.directive.ts",{"_index":1203,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirmed.directive.ts:21",{"_index":1213,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{}}}],["confirmpassword",{"_index":709,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"miscellaneous/variables.html":{}}}],["confirmpassword.value",{"_index":1225,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{},"miscellaneous/variables.html":{}}}],["confirmreset",{"_index":672,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{}}}],["confirmreset(form",{"_index":676,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{}}}],["confirmresetpasswordcomponent",{"_index":320,"title":{"components/ConfirmResetPasswordComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["connect",{"_index":1099,"title":{},"body":{"components/LoginComponent.html":{}}}],["connected",{"_index":1412,"title":{},"body":{"components/ResetPasswordComponent.html":{},"interfaces/User.html":{}}}],["connection",{"_index":61,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["consciously",{"_index":1529,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["consent",{"_index":1622,"title":{},"body":{"components/TermsComponent.html":{}}}],["console.log('repositories",{"_index":428,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('save",{"_index":1440,"title":{},"body":{"components/RunTestToast.html":{}}}],["console.log('stories",{"_index":1512,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["console.log('test",{"_index":1406,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["console.log(resp",{"_index":1078,"title":{},"body":{"components/LoginComponent.html":{},"components/TestAccountComponent.html":{}}}],["console.log(user",{"_index":148,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["const",{"_index":166,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/ReportComponent.html":{},"components/StoriesBarComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":52,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/ReportComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{}}}],["constructor(@inject(default_timeout",{"_index":1868,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["constructor(apiservice",{"_index":53,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/ReportComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["constructor(defaulttimeout",{"_index":1851,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["constructor(private",{"_index":643,"title":{},"body":{"guards/AuthGuard.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"directives/FocusableDirective.html":{}}}],["constructor(public",{"_index":129,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"directives/EditModeDirective.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{},"directives/ViewModeDirective.html":{}}}],["constructor(toastrservice",{"_index":729,"title":{},"body":{"components/DeleteScenarioToast.html":{}}}],["consult",{"_index":1718,"title":{},"body":{"components/TermsComponent.html":{}}}],["consumer",{"_index":1765,"title":{},"body":{"components/TermsComponent.html":{}}}],["consumer's",{"_index":1761,"title":{},"body":{"components/TermsComponent.html":{}}}],["consumer\\'s",{"_index":1821,"title":{},"body":{"components/TermsComponent.html":{}}}],["consumers",{"_index":1758,"title":{},"body":{"components/TermsComponent.html":{}}}],["contact",{"_index":1611,"title":{},"body":{"components/TermsComponent.html":{}}}],["container",{"_index":195,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/ReportContainer.html":{},"interfaces/RepositoryContainer.html":{},"components/TermsComponent.html":{}}}],["containing",{"_index":1159,"title":{},"body":{"components/ParentComponent.html":{}}}],["contains",{"_index":1603,"title":{},"body":{"components/TermsComponent.html":{}}}],["content",{"_index":268,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["contentchild",{"_index":828,"title":{},"body":{"components/EditableComponent.html":{}}}],["contentchild(editmodedirective",{"_index":817,"title":{},"body":{"components/EditableComponent.html":{}}}],["contentchild(viewmodedirective",{"_index":820,"title":{},"body":{"components/EditableComponent.html":{}}}],["contents",{"_index":1635,"title":{},"body":{"components/TermsComponent.html":{}}}],["continue",{"_index":1105,"title":{},"body":{"components/LoginComponent.html":{}}}],["control",{"_index":1214,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{},"components/TermsComponent.html":{},"miscellaneous/variables.html":{}}}],["control.get('confirmpassword",{"_index":1223,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{},"miscellaneous/variables.html":{}}}],["control.get('password",{"_index":1222,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{},"miscellaneous/variables.html":{}}}],["controls",{"_index":697,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["cookie",{"_index":593,"title":{},"body":{"modules/AppModule.html":{},"components/TermsComponent.html":{},"dependencies.html":{}}}],["cookies",{"_index":1702,"title":{},"body":{"components/TermsComponent.html":{}}}],["cookieservice",{"_index":591,"title":{},"body":{"modules/AppModule.html":{}}}],["copies",{"_index":1776,"title":{},"body":{"components/TermsComponent.html":{}}}],["core",{"_index":1947,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":1780,"title":{},"body":{"components/TermsComponent.html":{}}}],["cors",{"_index":1950,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":1885,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":87,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{},"interfaces/Report.html":{},"components/StoriesBarComponent.html":{}}}],["created",{"_index":1104,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Scenario.html":{},"components/TermsComponent.html":{}}}],["createnewstorydiv",{"_index":1556,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["creates",{"_index":737,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/ReportHistoryComponent.html":{}}}],["creation",{"_index":1237,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["creator",{"_index":660,"title":{},"body":{"interfaces/Block.html":{}}}],["cross",{"_index":704,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{}}}],["cucumber",{"_index":1261,"title":{},"body":{"interfaces/Report.html":{}}}],["cucumberfrontend",{"_index":1981,"title":{},"body":{"index.html":{}}}],["current",{"_index":827,"title":{},"body":{"components/EditableComponent.html":{},"components/ParentComponent.html":{},"components/ReportHistoryComponent.html":{},"components/TestAccountComponent.html":{}}}],["currently",{"_index":403,"title":{},"body":{"components/AppComponent.html":{},"components/ParentComponent.html":{},"components/ReportHistoryComponent.html":{},"interfaces/StepType.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TestAccountComponent.html":{}}}],["currentview",{"_index":803,"title":{},"body":{"components/EditableComponent.html":{}}}],["cursor",{"_index":279,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/DeleteScenarioToast.html":{},"components/ReportHistoryComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{}}}],["custom",{"_index":21,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{},"components/StoriesBarComponent.html":{}}}],["custom.repositorycontainer._id).subscribe(respp",{"_index":1510,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["custom.repositorycontainer.value",{"_index":1509,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["custom.story.description",{"_index":1508,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["custom_elements_schema",{"_index":546,"title":{},"body":{"modules/AppModule.html":{}}}],["customer",{"_index":1657,"title":{},"body":{"components/TermsComponent.html":{}}}],["customizing",{"_index":1713,"title":{},"body":{"components/TermsComponent.html":{}}}],["customrepocontainer",{"_index":303,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["d15553",{"_index":707,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{}}}],["daisy",{"_index":1449,"title":{},"body":{"interfaces/Scenario.html":{},"components/StoriesBarComponent.html":{}}}],["daisyautologout",{"_index":1444,"title":{},"body":{"interfaces/Scenario.html":{}}}],["daisyversion",{"_index":1475,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["dark",{"_index":257,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{}}}],["darkred",{"_index":721,"title":{},"body":{"components/DeleteScenarioToast.html":{}}}],["data",{"_index":16,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ExampleTableComponent.html":{},"components/TermsComponent.html":{},"interfaces/User.html":{}}}],["database",{"_index":659,"title":{},"body":{"interfaces/Block.html":{},"interfaces/RepositoryContainer.html":{},"interfaces/StepType.html":{},"interfaces/Story.html":{},"interfaces/User.html":{}}}],["databse",{"_index":1259,"title":{},"body":{"interfaces/Report.html":{}}}],["date",{"_index":1331,"title":{},"body":{"components/ReportHistoryComponent.html":{},"components/TermsComponent.html":{}}}],["date(time).tolocaledatestring(\"de",{"_index":1351,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["date(time).tolocaletimestring(\"de",{"_index":1353,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["db",{"_index":1505,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["dblclick').pipe",{"_index":847,"title":{},"body":{"components/EditableComponent.html":{}}}],["deactivated",{"_index":945,"title":{},"body":{"components/ExampleTableComponent.html":{},"interfaces/StepType.html":{}}}],["declarations",{"_index":534,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decoration",{"_index":468,"title":{},"body":{"components/AppComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["decorators",{"_index":113,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/EditableComponent.html":{},"components/StoriesBarComponent.html":{}}}],["deep",{"_index":1152,"title":{},"body":{"components/LoginComponent.html":{}}}],["def",{"_index":1548,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["def:hover",{"_index":1550,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["default",{"_index":406,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["default_timeout",{"_index":615,"title":{},"body":{"modules/AppModule.html":{},"interceptors/TimeoutInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaulttimeout",{"_index":1853,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["defined",{"_index":54,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{}}}],["definition",{"_index":1452,"title":{},"body":{"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{}}}],["definitions",{"_index":664,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Scenario.html":{}}}],["delete",{"_index":70,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/DeleteScenarioToast.html":{},"components/ReportHistoryComponent.html":{},"components/TermsComponent.html":{}}}],["deleteaccount",{"_index":43,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["deletebutton",{"_index":720,"title":{},"body":{"components/DeleteScenarioToast.html":{}}}],["deleted",{"_index":1315,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["deletereport",{"_index":1299,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["deletereport(report",{"_index":1312,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["deletereport(report._id",{"_index":1354,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["deletes",{"_index":1314,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["deletescenario",{"_index":614,"title":{},"body":{"modules/AppModule.html":{}}}],["deletescenariotoast",{"_index":324,"title":{"components/DeleteScenarioToast.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["deletestring",{"_index":724,"title":{},"body":{"components/DeleteScenarioToast.html":{}}}],["deletetoast",{"_index":728,"title":{},"body":{"components/DeleteScenarioToast.html":{}}}],["deletetoast(event",{"_index":735,"title":{},"body":{"components/DeleteScenarioToast.html":{}}}],["deltes",{"_index":738,"title":{},"body":{"components/DeleteScenarioToast.html":{}}}],["demo",{"_index":446,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["demographic",{"_index":1700,"title":{},"body":{"components/TermsComponent.html":{}}}],["dependencies",{"_index":533,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":1327,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["deposited",{"_index":181,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["describes",{"_index":1525,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["description",{"_index":13,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/Background.html":{},"interfaces/Block.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"interfaces/ReportContainer.html":{},"components/ReportHistoryComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"interfaces/StepType.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"interfaces/User.html":{},"directives/ViewModeDirective.html":{}}}],["destroy",{"_index":839,"title":{},"body":{"components/EditableComponent.html":{},"dependencies.html":{}}}],["detailed",{"_index":1744,"title":{},"body":{"components/TermsComponent.html":{}}}],["dev",{"_index":1987,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["develop",{"_index":1649,"title":{},"body":{"components/TermsComponent.html":{}}}],["development",{"_index":1985,"title":{},"body":{"index.html":{}}}],["direction",{"_index":266,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["directive",{"_index":312,"title":{"directives/EditModeDirective.html":{},"directives/EditableOnEnterDirective.html":{},"directives/FocusableDirective.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"directives/ViewModeDirective.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"directives/ViewModeDirective.html":{},"coverage.html":{}}}],["directives",{"_index":358,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"directives/ViewModeDirective.html":{},"overview.html":{}}}],["directives/edit",{"_index":578,"title":{},"body":{"modules/AppModule.html":{},"components/EditableComponent.html":{}}}],["directives/password",{"_index":601,"title":{},"body":{"modules/AppModule.html":{}}}],["directives/view",{"_index":576,"title":{},"body":{"modules/AppModule.html":{},"components/EditableComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1994,"title":{},"body":{"index.html":{}}}],["directly",{"_index":1632,"title":{},"body":{"components/TermsComponent.html":{}}}],["directory",{"_index":1999,"title":{},"body":{"index.html":{}}}],["disable",{"_index":1749,"title":{},"body":{"components/TermsComponent.html":{}}}],["disclaimer",{"_index":1368,"title":{},"body":{"components/ReportHistoryComponent.html":{},"components/TermsComponent.html":{}}}],["disclaimercontainer",{"_index":1394,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["disclose",{"_index":1762,"title":{},"body":{"components/TermsComponent.html":{}}}],["disconnect",{"_index":186,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["disconnectgithub",{"_index":44,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["display",{"_index":196,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["display:inline",{"_index":270,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{}}}],["displayed",{"_index":924,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["displayedcolumns",{"_index":878,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["dist",{"_index":1998,"title":{},"body":{"index.html":{}}}],["document",{"_index":1602,"title":{},"body":{"components/TermsComponent.html":{}}}],["document.getelementbyid('change",{"_index":157,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["document.getelementbyid('footer",{"_index":422,"title":{},"body":{"components/AppComponent.html":{}}}],["document.getelementbyid('githubhref",{"_index":169,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["document.getelementbyid('loadingspinner",{"_index":1075,"title":{},"body":{"components/LoginComponent.html":{}}}],["document.getelementbyid('repositorieslist",{"_index":1087,"title":{},"body":{"components/LoginComponent.html":{}}}],["document.getelementbyid('testframe",{"_index":1286,"title":{},"body":{"components/ReportComponent.html":{}}}],["documentation",{"_index":1886,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["don't",{"_index":1410,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["don\\'t",{"_index":1424,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["dotenv",{"_index":1952,"title":{},"body":{"dependencies.html":{}}}],["double",{"_index":1420,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["download",{"_index":1373,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["dragdropmodule",{"_index":581,"title":{},"body":{"modules/AppModule.html":{}}}],["drop",{"_index":583,"title":{},"body":{"modules/AppModule.html":{}}}],["dropdown",{"_index":508,"title":{},"body":{"components/AppComponent.html":{}}}],["dropdown:hover",{"_index":523,"title":{},"body":{"components/AppComponent.html":{}}}],["during",{"_index":400,"title":{},"body":{"components/AppComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["dynamic",{"_index":1942,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1096,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["e2e",{"_index":2007,"title":{},"body":{"index.html":{}}}],["each",{"_index":1719,"title":{},"body":{"components/TermsComponent.html":{}}}],["ease",{"_index":767,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["edit",{"_index":106,"title":{},"body":{"components/AccountManagementComponent.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"interfaces/RepositoryContainer.html":{}}}],["editable",{"_index":790,"title":{},"body":{"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{}}}],["editable'},{'name",{"_index":329,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["editable.component.css",{"_index":793,"title":{},"body":{"components/EditableComponent.html":{}}}],["editable.component.html",{"_index":794,"title":{},"body":{"components/EditableComponent.html":{}}}],["editable/editable.component",{"_index":575,"title":{},"body":{"modules/AppModule.html":{},"directives/EditableOnEnterDirective.html":{}}}],["editable/focusable.directive",{"_index":580,"title":{},"body":{"modules/AppModule.html":{}}}],["editablecomponent",{"_index":328,"title":{"components/EditableComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editableonenter",{"_index":864,"title":{},"body":{"directives/EditableOnEnterDirective.html":{}}}],["editableonenter]'},{'name",{"_index":360,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["editableonenterdirective",{"_index":359,"title":{"directives/EditableOnEnterDirective.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editmode",{"_index":786,"title":{},"body":{"directives/EditModeDirective.html":{},"components/EditableComponent.html":{}}}],["editmode]'},{'name",{"_index":362,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["editmodedirective",{"_index":361,"title":{"directives/EditModeDirective.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editmodehandler",{"_index":797,"title":{},"body":{"components/EditableComponent.html":{}}}],["editmodetpl",{"_index":795,"title":{},"body":{"components/EditableComponent.html":{}}}],["editor",{"_index":97,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/ReportHistoryComponent.html":{},"components/TestAccountComponent.html":{},"miscellaneous/variables.html":{}}}],["editor'},{'name",{"_index":350,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["editor.component",{"_index":556,"title":{},"body":{"modules/AppModule.html":{}}}],["editor.component.ts",{"_index":1924,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["editor/scenario",{"_index":555,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["editor/story",{"_index":589,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editrepobutton",{"_index":302,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["effectiveness",{"_index":1734,"title":{},"body":{"components/TermsComponent.html":{}}}],["efforts",{"_index":1815,"title":{},"body":{"components/TermsComponent.html":{}}}],["elem._id",{"_index":1083,"title":{},"body":{"components/LoginComponent.html":{}}}],["elem.source",{"_index":1081,"title":{},"body":{"components/LoginComponent.html":{}}}],["element",{"_index":311,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["element[column",{"_index":944,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["elementref",{"_index":829,"title":{},"body":{"components/EditableComponent.html":{},"directives/FocusableDirective.html":{}}}],["ellipsis",{"_index":1563,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["em",{"_index":1389,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["email",{"_index":37,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{},"components/TermsComponent.html":{},"interfaces/User.html":{}}}],["emaillabel",{"_index":241,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["emails",{"_index":1662,"title":{},"body":{"components/TermsComponent.html":{}}}],["emiter",{"_index":1311,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["emits",{"_index":900,"title":{},"body":{"components/ExampleTableComponent.html":{},"components/StoriesBarComponent.html":{}}}],["emitter",{"_index":894,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["emptybackground",{"_index":1930,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["enable",{"_index":667,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/EditableComponent.html":{}}}],["encourage",{"_index":1798,"title":{},"body":{"components/TermsComponent.html":{}}}],["end",{"_index":471,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["english",{"_index":443,"title":{},"body":{"components/AppComponent.html":{}}}],["enter",{"_index":1112,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["enter.directive",{"_index":579,"title":{},"body":{"modules/AppModule.html":{}}}],["enter.directive.ts",{"_index":863,"title":{},"body":{"directives/EditableOnEnterDirective.html":{},"coverage.html":{}}}],["enter.directive.ts:21",{"_index":867,"title":{},"body":{"directives/EditableOnEnterDirective.html":{}}}],["enters",{"_index":868,"title":{},"body":{"directives/EditableOnEnterDirective.html":{}}}],["entitled",{"_index":1775,"title":{},"body":{"components/TermsComponent.html":{}}}],["entries",{"_index":922,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["entrycomponents",{"_index":544,"title":{},"body":{"modules/AppModule.html":{}}}],["environment",{"_index":1933,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["erase",{"_index":1786,"title":{},"body":{"components/TermsComponent.html":{}}}],["erasure",{"_index":1785,"title":{},"body":{"components/TermsComponent.html":{}}}],["err",{"_index":429,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["err.error",{"_index":431,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["error",{"_index":378,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["event",{"_index":131,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/DeleteScenarioToast.html":{},"components/ExampleTableComponent.html":{},"components/ParentComponent.html":{},"components/ReportHistoryComponent.html":{},"components/RunTestToast.html":{},"components/TestAccountComponent.html":{}}}],["event.stoppropagation",{"_index":778,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["eventemitter",{"_index":804,"title":{},"body":{"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{}}}],["events",{"_index":755,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["example",{"_index":331,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/StepDefinition.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"directives/ViewModeDirective.html":{}}}],["examples",{"_index":1454,"title":{},"body":{"interfaces/StepDefinition.html":{}}}],["exampletablecomponent",{"_index":330,"title":{"components/ExampleTableComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["examplethere",{"_index":879,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["execute",{"_index":1448,"title":{},"body":{"interfaces/Scenario.html":{},"index.html":{}}}],["executed",{"_index":1268,"title":{},"body":{"interfaces/Report.html":{}}}],["exercise",{"_index":1769,"title":{},"body":{"components/TermsComponent.html":{}}}],["existing",{"_index":1100,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["expand",{"_index":1646,"title":{},"body":{"components/TermsComponent.html":{}}}],["expendable",{"_index":479,"title":{},"body":{"components/AppComponent.html":{}}}],["experience",{"_index":1712,"title":{},"body":{"components/TermsComponent.html":{}}}],["export",{"_index":126,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interfaces/Background.html":{},"interfaces/Block.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"interfaces/ReportContainer.html":{},"components/ReportHistoryComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"interfaces/StepType.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"interfaces/User.html":{},"directives/ViewModeDirective.html":{}}}],["exports",{"_index":537,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["express",{"_index":1954,"title":{},"body":{"dependencies.html":{}}}],["expressionchangedafterithasbeencheckederror",{"_index":997,"title":{},"body":{"components/LoginComponent.html":{}}}],["extends",{"_index":716,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{},"components/TestAccountComponent.html":{}}}],["f1f1f1",{"_index":1569,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["false",{"_index":408,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":292,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ExampleTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TermsComponent.html":{}}}],["feature",{"_index":1264,"title":{},"body":{"interfaces/Report.html":{}}}],["features",{"_index":1652,"title":{},"body":{"components/TermsComponent.html":{}}}],["fee",{"_index":1778,"title":{},"body":{"components/TermsComponent.html":{}}}],["feedback",{"_index":439,"title":{},"body":{"components/AppComponent.html":{},"components/FeedbackComponent.html":{},"miscellaneous/variables.html":{}}}],["feedback'},{'name",{"_index":334,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["feedback.component.css",{"_index":952,"title":{},"body":{"components/FeedbackComponent.html":{}}}],["feedback.component.html",{"_index":953,"title":{},"body":{"components/FeedbackComponent.html":{}}}],["feedback/feedback.component",{"_index":587,"title":{},"body":{"modules/AppModule.html":{}}}],["feedbackcomponent",{"_index":333,"title":{"components/FeedbackComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":1969,"title":{},"body":{"dependencies.html":{}}}],["ff69b4",{"_index":750,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["ffffff",{"_index":754,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["field",{"_index":870,"title":{},"body":{"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"interfaces/StepType.html":{}}}],["fieldname",{"_index":905,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["fields",{"_index":1470,"title":{},"body":{"interfaces/StepType.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interfaces/Background.html":{},"interfaces/Block.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"interfaces/ReportContainer.html":{},"components/ReportHistoryComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"interfaces/StepType.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"interfaces/User.html":{},"directives/ViewModeDirective.html":{},"coverage.html":{},"dependencies.html":{}}}],["files",{"_index":1666,"title":{},"body":{"components/TermsComponent.html":{},"index.html":{}}}],["fill",{"_index":1469,"title":{},"body":{"interfaces/StepType.html":{}}}],["fills",{"_index":102,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["filter",{"_index":833,"title":{},"body":{"components/EditableComponent.html":{}}}],["filters",{"_index":1318,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["filterscenarioreports",{"_index":1300,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["filterscenarioreports(scenario",{"_index":1316,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["find",{"_index":1663,"title":{},"body":{"components/TermsComponent.html":{}}}],["first",{"_index":1098,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/StepType.html":{}}}],["fixed",{"_index":512,"title":{},"body":{"components/AppComponent.html":{}}}],["flag",{"_index":2001,"title":{},"body":{"index.html":{}}}],["flex",{"_index":265,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ReportHistoryComponent.html":{}}}],["float",{"_index":501,"title":{},"body":{"components/AppComponent.html":{},"components/StoriesBarComponent.html":{}}}],["focues",{"_index":962,"title":{},"body":{"directives/FocusableDirective.html":{}}}],["focusable",{"_index":958,"title":{},"body":{"directives/FocusableDirective.html":{}}}],["focusable]'},{'name",{"_index":364,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["focusabledirective",{"_index":363,"title":{"directives/FocusableDirective.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["following",{"_index":1537,"title":{},"body":{"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{}}}],["follows",{"_index":1667,"title":{},"body":{"components/TermsComponent.html":{}}}],["font",{"_index":246,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{}}}],["footer",{"_index":420,"title":{},"body":{"components/AppComponent.html":{},"components/StoriesBarComponent.html":{}}}],["footer.scrollintoview",{"_index":423,"title":{},"body":{"components/AppComponent.html":{}}}],["footercenter",{"_index":477,"title":{},"body":{"components/AppComponent.html":{}}}],["forgot",{"_index":1122,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["form",{"_index":680,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["form.value.password",{"_index":1065,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["form.value.password).topromise",{"_index":688,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{}}}],["form.value.stayloggedin).topromise",{"_index":1066,"title":{},"body":{"components/LoginComponent.html":{}}}],["formarray",{"_index":919,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["format",{"_index":1263,"title":{},"body":{"interfaces/Report.html":{}}}],["formcontrol",{"_index":908,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["formgroup",{"_index":929,"title":{},"body":{"components/ExampleTableComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"miscellaneous/variables.html":{}}}],["formsmodule",{"_index":564,"title":{},"body":{"modules/AppModule.html":{}}}],["formular",{"_index":693,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["found",{"_index":1753,"title":{},"body":{"components/TermsComponent.html":{}}}],["fraud",{"_index":1665,"title":{},"body":{"components/TermsComponent.html":{}}}],["fromevent",{"_index":831,"title":{},"body":{"components/EditableComponent.html":{}}}],["fromevent(document",{"_index":852,"title":{},"body":{"components/EditableComponent.html":{}}}],["fromevent(this.element",{"_index":846,"title":{},"body":{"components/EditableComponent.html":{}}}],["frontend.herokuapp.com",{"_index":1597,"title":{},"body":{"components/TermsComponent.html":{}}}],["fully",{"_index":1773,"title":{},"body":{"components/TermsComponent.html":{}}}],["functionality",{"_index":1653,"title":{},"body":{"components/TermsComponent.html":{}}}],["further",{"_index":1120,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["gap",{"_index":202,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["gathering",{"_index":1699,"title":{},"body":{"components/TermsComponent.html":{}}}],["gdpr",{"_index":1770,"title":{},"body":{"components/TermsComponent.html":{}}}],["geladen",{"_index":955,"title":{},"body":{"components/FeedbackComponent.html":{}}}],["general",{"_index":509,"title":{},"body":{"components/AppComponent.html":{},"components/TermsComponent.html":{}}}],["generate",{"_index":1993,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1982,"title":{},"body":{"index.html":{}}}],["generator",{"_index":1701,"title":{},"body":{"components/TermsComponent.html":{}}}],["german",{"_index":442,"title":{},"body":{"components/AppComponent.html":{}}}],["getcontrol",{"_index":882,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["getcontrol(rowindex",{"_index":903,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["getcurrentview",{"_index":825,"title":{},"body":{"components/EditableComponent.html":{}}}],["getelement",{"_index":822,"title":{},"body":{"components/EditableComponent.html":{}}}],["getreport",{"_index":1274,"title":{},"body":{"components/ReportComponent.html":{}}}],["getreport(reportname",{"_index":1276,"title":{},"body":{"components/ReportComponent.html":{}}}],["getreports",{"_index":1301,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["getrepositories",{"_index":381,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["gets",{"_index":387,"title":{},"body":{"components/AppComponent.html":{},"components/EditableComponent.html":{},"components/ReportComponent.html":{}}}],["getsortedstories",{"_index":1477,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["getstories(repository",{"_index":1192,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["getting",{"_index":1979,"title":{"index.html":{}},"body":{}}],["github",{"_index":19,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"interfaces/User.html":{}}}],["github['login",{"_index":185,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["github[\\'login",{"_index":314,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["githubaccountname",{"_index":1880,"title":{},"body":{"interfaces/User.html":{}}}],["githubhref",{"_index":526,"title":{},"body":{"components/AppComponent.html":{}}}],["githubhref:hover",{"_index":527,"title":{},"body":{"components/AppComponent.html":{}}}],["githublogin",{"_index":261,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{}}}],["githublogincontainer",{"_index":269,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{}}}],["githubrepo",{"_index":1881,"title":{},"body":{"interfaces/User.html":{}}}],["githubtoken",{"_index":1879,"title":{},"body":{"interfaces/User.html":{}}}],["given",{"_index":651,"title":{},"body":{"interfaces/Background.html":{},"components/LoginComponent.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepType.html":{}}}],["go",{"_index":2009,"title":{},"body":{"index.html":{}}}],["gobacktostoryeditor",{"_index":1302,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["grape",{"_index":507,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ReportHistoryComponent.html":{}}}],["gray",{"_index":946,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["green",{"_index":1382,"title":{},"body":{"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{}}}],["grey",{"_index":258,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ParentComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["grid",{"_index":194,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["grid_customrepos",{"_index":229,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["grid_eraseaccount",{"_index":231,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["grid_github",{"_index":234,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["grid_githubrepos",{"_index":236,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["grid_jira",{"_index":237,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["grid_jirarepos",{"_index":239,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["grid_seedtest",{"_index":218,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["guard",{"_index":633,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"overview.html":{}}}],["guardians",{"_index":1800,"title":{},"body":{"components/TermsComponent.html":{}}}],["guards",{"_index":634,"title":{},"body":{"guards/AuthGuard.html":{}}}],["guards/auth.guard",{"_index":568,"title":{},"body":{"modules/AppModule.html":{}}}],["guide",{"_index":1804,"title":{},"body":{"components/TermsComponent.html":{}}}],["h1",{"_index":244,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["h2",{"_index":252,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["hammerjs",{"_index":1958,"title":{},"body":{"dependencies.html":{}}}],["handle",{"_index":64,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{}}}],["handles",{"_index":807,"title":{},"body":{"components/EditableComponent.html":{}}}],["hashed",{"_index":1878,"title":{},"body":{"interfaces/User.html":{}}}],["header",{"_index":1557,"title":{},"body":{"components/StoriesBarComponent.html":{},"interceptors/TimeoutInterceptor.html":{}}}],["headerfont",{"_index":692,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["headline",{"_index":1391,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["height",{"_index":275,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{}}}],["help",{"_index":440,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"index.html":{}}}],["here",{"_index":1123,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["hereby",{"_index":1623,"title":{},"body":{"components/TermsComponent.html":{}}}],["hesitate",{"_index":1610,"title":{},"body":{"components/TermsComponent.html":{}}}],["hidden",{"_index":751,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{}}}],["higher",{"_index":1465,"title":{},"body":{"interfaces/StepType.html":{}}}],["history",{"_index":1177,"title":{},"body":{"components/ParentComponent.html":{},"interfaces/ReportContainer.html":{},"components/ReportHistoryComponent.html":{},"components/TestAccountComponent.html":{}}}],["history'},{'name",{"_index":345,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["history.component",{"_index":620,"title":{},"body":{"modules/AppModule.html":{}}}],["history.component.css",{"_index":1297,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["history.component.html",{"_index":1298,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["history.component.ts",{"_index":1296,"title":{},"body":{"components/ReportHistoryComponent.html":{},"coverage.html":{}}}],["history.component.ts:105",{"_index":1313,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["history.component.ts:120",{"_index":1333,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["history.component.ts:132",{"_index":1323,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["history.component.ts:21",{"_index":1335,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["history.component.ts:26",{"_index":1334,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["history.component.ts:32",{"_index":1310,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["history.component.ts:48",{"_index":1309,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["history.component.ts:58",{"_index":1320,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["history.component.ts:70",{"_index":1317,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["history.component.ts:79",{"_index":1325,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["history.component.ts:86",{"_index":1321,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["history.component.ts:95",{"_index":1330,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["history/report",{"_index":619,"title":{},"body":{"modules/AppModule.html":{},"components/ReportHistoryComponent.html":{},"coverage.html":{}}}],["host",{"_index":749,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/RunTestToast.html":{},"interfaces/User.html":{}}}],["hosting",{"_index":1672,"title":{},"body":{"components/TermsComponent.html":{}}}],["hostlistener",{"_index":869,"title":{},"body":{"directives/EditableOnEnterDirective.html":{}}}],["hostlistener('keyup.enter",{"_index":871,"title":{},"body":{"directives/EditableOnEnterDirective.html":{}}}],["hostlisteners",{"_index":865,"title":{},"body":{"directives/EditableOnEnterDirective.html":{}}}],["howtostart",{"_index":1126,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["html",{"_index":310,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["htmlbuttonelement).innerhtml",{"_index":158,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["htmlelement",{"_index":421,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["htmliframeelement",{"_index":1285,"title":{},"body":{"components/ReportComponent.html":{}}}],["htmllinkelement",{"_index":168,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["http://localhost:4200",{"_index":1989,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":558,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclientmodule",{"_index":557,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":1865,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["httphandler",{"_index":1857,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["httpinterceptor",{"_index":1866,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["httprequest",{"_index":1855,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["https://github.com",{"_index":171,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["https://github.com/adessoag/seed",{"_index":445,"title":{},"body":{"components/AppComponent.html":{}}}],["https://seed",{"_index":1596,"title":{},"body":{"components/TermsComponent.html":{}}}],["https://stackoverflow.com/questions/45938931/default",{"_index":1849,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["id",{"_index":38,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Block.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/Report.html":{},"interfaces/RepositoryContainer.html":{},"interfaces/StepType.html":{},"interfaces/Story.html":{},"interfaces/User.html":{}}}],["id).subscribe((resp",{"_index":1056,"title":{},"body":{"components/LoginComponent.html":{}}}],["identifiable",{"_index":1690,"title":{},"body":{"components/TermsComponent.html":{}}}],["identifier",{"_index":1887,"title":{},"body":{"coverage.html":{}}}],["if(!localstorage.getitem('url_backend",{"_index":1281,"title":{},"body":{"components/ReportComponent.html":{}}}],["if(!this.apiservice.urlreceived",{"_index":415,"title":{},"body":{"components/AppComponent.html":{}}}],["if(a.issue_number",{"_index":1516,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["if(elem.value",{"_index":1080,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(params.reportname",{"_index":1280,"title":{},"body":{"components/ReportComponent.html":{}}}],["if(resp.length",{"_index":1079,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(this.apiservice.urlreceived",{"_index":1189,"title":{},"body":{"components/ParentComponent.html":{}}}],["if(this.router.url",{"_index":432,"title":{},"body":{"components/AppComponent.html":{}}}],["if(this.showimpressum",{"_index":424,"title":{},"body":{"components/AppComponent.html":{}}}],["if(this.showterms",{"_index":419,"title":{},"body":{"components/AppComponent.html":{}}}],["if(userid",{"_index":1048,"title":{},"body":{"components/LoginComponent.html":{}}}],["iframe",{"_index":956,"title":{},"body":{"components/FeedbackComponent.html":{},"components/ReportComponent.html":{}}}],["iframe.srcdoc",{"_index":1288,"title":{},"body":{"components/ReportComponent.html":{}}}],["ignore",{"_index":161,"title":{},"body":{"components/AccountManagementComponent.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"directives/ViewModeDirective.html":{}}}],["image0",{"_index":1005,"title":{},"body":{"components/LoginComponent.html":{}}}],["image01",{"_index":1009,"title":{},"body":{"components/LoginComponent.html":{}}}],["image02",{"_index":1012,"title":{},"body":{"components/LoginComponent.html":{}}}],["image03",{"_index":1015,"title":{},"body":{"components/LoginComponent.html":{}}}],["image04",{"_index":1018,"title":{},"body":{"components/LoginComponent.html":{}}}],["image05",{"_index":1021,"title":{},"body":{"components/LoginComponent.html":{}}}],["image06",{"_index":1024,"title":{},"body":{"components/LoginComponent.html":{}}}],["image07",{"_index":1027,"title":{},"body":{"components/LoginComponent.html":{}}}],["image08",{"_index":1030,"title":{},"body":{"components/LoginComponent.html":{}}}],["image09",{"_index":1033,"title":{},"body":{"components/LoginComponent.html":{}}}],["image10",{"_index":1036,"title":{},"body":{"components/LoginComponent.html":{}}}],["image11",{"_index":1039,"title":{},"body":{"components/LoginComponent.html":{}}}],["img",{"_index":272,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{}}}],["immediately",{"_index":1813,"title":{},"body":{"components/TermsComponent.html":{}}}],["implements",{"_index":23,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{}}}],["import",{"_index":119,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interfaces/Background.html":{},"interfaces/Block.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"interfaces/ReportContainer.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"directives/ViewModeDirective.html":{}}}],["importance",{"_index":1463,"title":{},"body":{"interfaces/StepType.html":{}}}],["important",{"_index":283,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["imports",{"_index":621,"title":{},"body":{"modules/AppModule.html":{}}}],["impressum",{"_index":393,"title":{},"body":{"components/AppComponent.html":{}}}],["impressum:hover",{"_index":482,"title":{},"body":{"components/AppComponent.html":{}}}],["impressumcontent",{"_index":485,"title":{},"body":{"components/AppComponent.html":{}}}],["improve",{"_index":1644,"title":{},"body":{"components/TermsComponent.html":{}}}],["inaccurate",{"_index":1782,"title":{},"body":{"components/TermsComponent.html":{}}}],["include",{"_index":1676,"title":{},"body":{"components/TermsComponent.html":{}}}],["included",{"_index":653,"title":{},"body":{"interfaces/Background.html":{},"interfaces/Block.html":{},"interfaces/Report.html":{},"interfaces/ReportContainer.html":{}}}],["includes",{"_index":1535,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["including",{"_index":17,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/TermsComponent.html":{}}}],["incomplete",{"_index":1784,"title":{},"body":{"components/TermsComponent.html":{}}}],["index",{"_index":33,"title":{"index.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/Background.html":{},"interfaces/Block.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"interfaces/ReportContainer.html":{},"components/ReportHistoryComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"interfaces/StepType.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["individual",{"_index":1750,"title":{},"body":{"components/TermsComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interfaces/Background.html":{},"interfaces/Block.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"interfaces/ReportContainer.html":{},"components/ReportHistoryComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"interfaces/StepType.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"interfaces/User.html":{},"directives/ViewModeDirective.html":{}}}],["infoicon",{"_index":1249,"title":{},"body":{"components/RegistrationComponent.html":{},"components/StoriesBarComponent.html":{}}}],["information",{"_index":456,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/TermsComponent.html":{}}}],["inherit",{"_index":500,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["inherited",{"_index":1830,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["init",{"_index":810,"title":{},"body":{"components/EditableComponent.html":{},"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["initializes",{"_index":910,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["initializetable",{"_index":883,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["initializetablecontrols",{"_index":884,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["inject",{"_index":1863,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["injectable",{"_index":642,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/TimeoutInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["injectiontoken",{"_index":1864,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["injectiontoken('defaulttimeout",{"_index":1867,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["inline",{"_index":511,"title":{},"body":{"components/AppComponent.html":{},"components/StoriesBarComponent.html":{}}}],["input",{"_index":706,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/ExampleTableComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"interfaces/StepType.html":{}}}],["input.wrongemail",{"_index":708,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{}}}],["inputchange",{"_index":885,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["inputs",{"_index":888,"title":{},"body":{"components/ExampleTableComponent.html":{},"components/ReportHistoryComponent.html":{}}}],["instanceof",{"_index":132,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["instructions",{"_index":1746,"title":{},"body":{"components/TermsComponent.html":{}}}],["instructiontext",{"_index":1418,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["intercept",{"_index":1850,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["intercept(req",{"_index":1854,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["interceptor",{"_index":1844,"title":{"interceptors/TimeoutInterceptor.html":{}},"body":{"interceptors/TimeoutInterceptor.html":{},"coverage.html":{}}}],["interceptor.interceptor",{"_index":618,"title":{},"body":{"modules/AppModule.html":{}}}],["interceptor.interceptor.ts",{"_index":1847,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptor.interceptor.ts:16",{"_index":1852,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["interceptor.interceptor.ts:26",{"_index":1858,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["interceptors",{"_index":1845,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["intercepts",{"_index":1859,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["interface",{"_index":646,"title":{"interfaces/Background.html":{},"interfaces/Block.html":{},"interfaces/Report.html":{},"interfaces/ReportContainer.html":{},"interfaces/RepositoryContainer.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"interfaces/StepType.html":{},"interfaces/Story.html":{},"interfaces/User.html":{}},"body":{"interfaces/Background.html":{},"interfaces/Block.html":{},"interfaces/Report.html":{},"interfaces/ReportContainer.html":{},"interfaces/RepositoryContainer.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"interfaces/StepType.html":{},"interfaces/Story.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":647,"title":{},"body":{"interfaces/Background.html":{},"interfaces/Block.html":{},"interfaces/Report.html":{},"interfaces/ReportContainer.html":{},"interfaces/RepositoryContainer.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"interfaces/StepType.html":{},"interfaces/Story.html":{},"interfaces/User.html":{},"overview.html":{}}}],["internet",{"_index":1677,"title":{},"body":{"components/TermsComponent.html":{}}}],["invalid:not(form",{"_index":703,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{}}}],["invert",{"_index":1960,"title":{},"body":{"dependencies.html":{}}}],["ip",{"_index":1679,"title":{},"body":{"components/TermsComponent.html":{}}}],["iscustomstory",{"_index":1476,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["isloadingrepositories",{"_index":968,"title":{},"body":{"components/LoginComponent.html":{}}}],["isp",{"_index":1682,"title":{},"body":{"components/TermsComponent.html":{}}}],["issaved",{"_index":1251,"title":{},"body":{"interfaces/Report.html":{}}}],["isstoryeditoractive",{"_index":1164,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["issue",{"_index":1108,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Story.html":{}}}],["issue_number",{"_index":1488,"title":{},"body":{"components/StoriesBarComponent.html":{},"interfaces/Story.html":{}}}],["italic",{"_index":947,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["item",{"_index":524,"title":{},"body":{"components/AppComponent.html":{},"components/ExampleTableComponent.html":{}}}],["items",{"_index":235,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TermsComponent.html":{}}}],["javascript",{"_index":1726,"title":{},"body":{"components/TermsComponent.html":{}}}],["jira",{"_index":20,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["jira['accountname",{"_index":188,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["jira['host",{"_index":190,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["jira[\\'accountname",{"_index":315,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["jira[\\'host",{"_index":316,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["jiralogin",{"_index":45,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["jquery",{"_index":1963,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":1948,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":1262,"title":{},"body":{"interfaces/Report.html":{}}}],["json.parse(json.stringify(this.reports",{"_index":1357,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["jsonreport",{"_index":1252,"title":{},"body":{"interfaces/Report.html":{}}}],["justify",{"_index":267,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/ReportHistoryComponent.html":{},"components/TestAccountComponent.html":{}}}],["k",{"_index":938,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["karma",{"_index":2006,"title":{},"body":{"index.html":{}}}],["keep",{"_index":1371,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["kept",{"_index":1530,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["keyframes",{"_index":745,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["keyup.enter",{"_index":866,"title":{},"body":{"directives/EditableOnEnterDirective.html":{}}}],["kind",{"_index":1811,"title":{},"body":{"components/TermsComponent.html":{}}}],["klavika",{"_index":293,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ExampleTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TermsComponent.html":{}}}],["know",{"_index":1751,"title":{},"body":{"components/TermsComponent.html":{}}}],["knowingly",{"_index":1806,"title":{},"body":{"components/TermsComponent.html":{}}}],["kv",{"_index":1961,"title":{},"body":{"dependencies.html":{}}}],["label",{"_index":260,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{}}}],["last",{"_index":1369,"title":{},"body":{"components/ReportHistoryComponent.html":{},"interfaces/Scenario.html":{},"interfaces/Story.html":{},"interceptors/TimeoutInterceptor.html":{},"interfaces/User.html":{}}}],["lasttestpassed",{"_index":1445,"title":{},"body":{"interfaces/Scenario.html":{},"interfaces/Story.html":{}}}],["leads",{"_index":1172,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["left",{"_index":228,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{}}}],["left:38",{"_index":1151,"title":{},"body":{"components/LoginComponent.html":{}}}],["legend",{"_index":309,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"overview.html":{}}}],["li",{"_index":522,"title":{},"body":{"components/AppComponent.html":{}}}],["liable",{"_index":450,"title":{},"body":{"components/AppComponent.html":{}}}],["licence",{"_index":454,"title":{},"body":{"components/AppComponent.html":{}}}],["licenced",{"_index":451,"title":{},"body":{"components/AppComponent.html":{}}}],["light",{"_index":458,"title":{},"body":{"components/AppComponent.html":{},"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["lightgrey",{"_index":1386,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["linkbutton",{"_index":1144,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["linkbutton:hover",{"_index":1146,"title":{},"body":{"components/LoginComponent.html":{}}}],["linked",{"_index":1688,"title":{},"body":{"components/TermsComponent.html":{}}}],["links",{"_index":1729,"title":{},"body":{"components/TermsComponent.html":{}}}],["list",{"_index":398,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ReportHistoryComponent.html":{},"interfaces/StepType.html":{},"components/TermsComponent.html":{}}}],["literal",{"_index":1876,"title":{},"body":{"interfaces/User.html":{}}}],["loading",{"_index":1003,"title":{},"body":{"components/LoginComponent.html":{}}}],["loadingspinner",{"_index":1074,"title":{},"body":{"components/LoginComponent.html":{}}}],["loadingspinner.scrollintoview",{"_index":1076,"title":{},"body":{"components/LoginComponent.html":{}}}],["loads",{"_index":1829,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["loadstories",{"_index":1166,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["localstorage.getitem('id",{"_index":1073,"title":{},"body":{"components/LoginComponent.html":{},"components/ParentComponent.html":{}}}],["localstorage.getitem('repository",{"_index":1071,"title":{},"body":{"components/LoginComponent.html":{},"components/ParentComponent.html":{}}}],["localstorage.getitem('source",{"_index":1072,"title":{},"body":{"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/StoriesBarComponent.html":{}}}],["localstorage.getitem('userid",{"_index":1046,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["localstorage.getitem('version",{"_index":1513,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["localstorage.removeitem('userid",{"_index":1047,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["localstorage.setitem('id",{"_index":176,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["localstorage.setitem('login",{"_index":1044,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.setitem('repository",{"_index":173,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["localstorage.setitem('repositorytype",{"_index":1060,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.setitem('source",{"_index":174,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["localstorage.setitem('userid",{"_index":138,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["log",{"_index":1408,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/TermsComponent.html":{}}}],["logged",{"_index":637,"title":{},"body":{"guards/AuthGuard.html":{}}}],["loggs",{"_index":78,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["login",{"_index":46,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["login'},{'name",{"_index":336,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["login(form",{"_index":989,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.css",{"_index":966,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":967,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":563,"title":{},"body":{"modules/AppModule.html":{}}}],["logincomponent",{"_index":335,"title":{"components/LoginComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["loginfont",{"_index":1142,"title":{},"body":{"components/LoginComponent.html":{}}}],["logingithubtoken",{"_index":982,"title":{},"body":{"components/LoginComponent.html":{}}}],["logingithubtoken(login",{"_index":991,"title":{},"body":{"components/LoginComponent.html":{}}}],["logingrid",{"_index":1125,"title":{},"body":{"components/LoginComponent.html":{}}}],["logintestaccount",{"_index":983,"title":{},"body":{"components/LoginComponent.html":{}}}],["logo",{"_index":489,"title":{},"body":{"components/AppComponent.html":{}}}],["logout",{"_index":382,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Scenario.html":{}}}],["long",{"_index":691,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{},"interceptors/TimeoutInterceptor.html":{}}}],["longer",{"_index":1372,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["lower",{"_index":1464,"title":{},"body":{"interfaces/StepType.html":{}}}],["made",{"_index":1628,"title":{},"body":{"components/TermsComponent.html":{}}}],["mail",{"_index":1097,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["main",{"_index":1599,"title":{},"body":{"components/TermsComponent.html":{}}}],["maintain",{"_index":1642,"title":{},"body":{"components/TermsComponent.html":{}}}],["make",{"_index":1110,"title":{},"body":{"components/LoginComponent.html":{},"components/TermsComponent.html":{},"interceptors/TimeoutInterceptor.html":{}}}],["maker",{"_index":449,"title":{},"body":{"components/AppComponent.html":{}}}],["makes",{"_index":1860,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["manage",{"_index":183,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management",{"_index":28,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/TermsComponent.html":{},"miscellaneous/variables.html":{}}}],["management'},{'name",{"_index":317,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["management.component",{"_index":590,"title":{},"body":{"modules/AppModule.html":{}}}],["management.component.css",{"_index":30,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.html",{"_index":32,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts",{"_index":12,"title":{},"body":{"components/AccountManagementComponent.html":{},"coverage.html":{}}}],["management.component.ts:126",{"_index":75,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:135",{"_index":81,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:144",{"_index":93,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:21",{"_index":115,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:26",{"_index":118,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:31",{"_index":109,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:32",{"_index":110,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:33",{"_index":111,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:34",{"_index":55,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:41",{"_index":108,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:55",{"_index":80,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:63",{"_index":88,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:70",{"_index":77,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:77",{"_index":67,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:85",{"_index":105,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:93",{"_index":101,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management/account",{"_index":11,"title":{},"body":{"components/AccountManagementComponent.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["margin",{"_index":193,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["marine",{"_index":291,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{}}}],["mark",{"_index":1374,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["marked",{"_index":1260,"title":{},"body":{"interfaces/Report.html":{}}}],["marketing",{"_index":1659,"title":{},"body":{"components/TermsComponent.html":{}}}],["master",{"_index":374,"title":{},"body":{"components/AppComponent.html":{}}}],["mat",{"_index":950,"title":{},"body":{"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{}}}],["matcarouselmodule",{"_index":607,"title":{},"body":{"modules/AppModule.html":{}}}],["matcarouselmodule.forroot",{"_index":623,"title":{},"body":{"modules/AppModule.html":{}}}],["match",{"_index":1218,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":371,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interfaces/Background.html":{},"interfaces/Block.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"interfaces/ReportContainer.html":{},"components/ReportHistoryComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"interfaces/StepType.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"interfaces/User.html":{},"directives/ViewModeDirective.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["matlistmodule",{"_index":571,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressspinnermodule",{"_index":596,"title":{},"body":{"modules/AppModule.html":{}}}],["mattablemodule",{"_index":569,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":300,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["measure",{"_index":1733,"title":{},"body":{"components/TermsComponent.html":{}}}],["media",{"_index":306,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["menu",{"_index":436,"title":{},"body":{"components/AppComponent.html":{}}}],["menubutton",{"_index":498,"title":{},"body":{"components/AppComponent.html":{}}}],["menubutton:hover",{"_index":495,"title":{},"body":{"components/AppComponent.html":{}}}],["menuselection",{"_index":502,"title":{},"body":{"components/AppComponent.html":{}}}],["menuselection#logout:hover",{"_index":506,"title":{},"body":{"components/AppComponent.html":{}}}],["menuselection:hover",{"_index":505,"title":{},"body":{"components/AppComponent.html":{}}}],["message",{"_index":723,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{},"components/TermsComponent.html":{}}}],["metadata",{"_index":25,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"directives/ViewModeDirective.html":{}}}],["methods",{"_index":42,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{}}}],["mid",{"_index":1458,"title":{},"body":{"interfaces/StepType.html":{}}}],["milliseconds",{"_index":1266,"title":{},"body":{"interfaces/Report.html":{}}}],["miminum",{"_index":1414,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["min",{"_index":464,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["minmax(0",{"_index":1198,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["miscellaneous",{"_index":2017,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":453,"title":{},"body":{"components/AppComponent.html":{}}}],["modal",{"_index":69,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/StoriesBarComponent.html":{}}}],["modalcomponent",{"_index":39,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["modals",{"_index":117,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/StoriesBarComponent.html":{}}}],["modals'},{'name",{"_index":337,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["modals/modals.component",{"_index":125,"title":{},"body":{"components/AccountManagementComponent.html":{},"modules/AppModule.html":{},"components/StoriesBarComponent.html":{}}}],["modalscomponent",{"_index":112,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mode",{"_index":784,"title":{},"body":{"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"interfaces/Report.html":{}}}],["mode.directive",{"_index":577,"title":{},"body":{"modules/AppModule.html":{},"components/EditableComponent.html":{}}}],["mode.directive.ts",{"_index":782,"title":{},"body":{"directives/EditModeDirective.html":{},"directives/ViewModeDirective.html":{},"coverage.html":{}}}],["model/report",{"_index":1337,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["model/reportcontainer",{"_index":1338,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["model/repositorycontainer",{"_index":124,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TestAccountComponent.html":{}}}],["model/scenario",{"_index":930,"title":{},"body":{"components/ExampleTableComponent.html":{},"components/ParentComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{}}}],["model/story",{"_index":1186,"title":{},"body":{"components/ParentComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["module",{"_index":530,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"interceptors/TimeoutInterceptor.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":532,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["monitor",{"_index":1803,"title":{},"body":{"components/TermsComponent.html":{}}}],["month",{"_index":1767,"title":{},"body":{"components/TermsComponent.html":{}}}],["more",{"_index":455,"title":{},"body":{"components/AppComponent.html":{},"components/TermsComponent.html":{},"index.html":{}}}],["movement",{"_index":1698,"title":{},"body":{"components/TermsComponent.html":{}}}],["multi",{"_index":629,"title":{},"body":{"modules/AppModule.html":{},"directives/PasswordConfirmedValidatorDirective.html":{}}}],["muted",{"_index":1576,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["name",{"_index":58,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/Background.html":{},"interfaces/Block.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"interfaces/StepType.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"interfaces/User.html":{},"index.html":{}}}],["native",{"_index":824,"title":{},"body":{"components/EditableComponent.html":{},"directives/FocusableDirective.html":{}}}],["navigate",{"_index":1988,"title":{},"body":{"index.html":{}}}],["navigationend",{"_index":122,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/RegistrationComponent.html":{}}}],["navtoregistration",{"_index":47,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["necessary",{"_index":732,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["need",{"_index":180,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["needcustomrepo",{"_index":243,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["needed",{"_index":996,"title":{},"body":{"components/LoginComponent.html":{}}}],["networks",{"_index":1724,"title":{},"body":{"components/TermsComponent.html":{}}}],["new",{"_index":89,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newly",{"_index":1103,"title":{},"body":{"components/LoginComponent.html":{}}}],["newreports",{"_index":1356,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["newreports.scenarioreports",{"_index":1362,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["newreports.scenarioreports.filter((rep",{"_index":1363,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["newreports.storyreports",{"_index":1358,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["newreports.storyreports.filter((rep",{"_index":1359,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["newrepository",{"_index":48,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["newselectedscenario",{"_index":889,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["newselectedscenario(scenario",{"_index":932,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["newselectedstory",{"_index":1307,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["newselectedstory(story",{"_index":1339,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["next",{"_index":1856,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["next.handle(req).pipe(timeout(timeoutvaluenumeric",{"_index":1874,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["ng",{"_index":585,"title":{},"body":{"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"dependencies.html":{},"index.html":{}}}],["ng_validators",{"_index":1207,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{}}}],["ngafterviewinit",{"_index":960,"title":{},"body":{"directives/FocusableDirective.html":{},"components/LoginComponent.html":{}}}],["ngbmodule",{"_index":584,"title":{},"body":{"modules/AppModule.html":{}}}],["ngbmodule/material",{"_index":608,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ngform",{"_index":677,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["ngmodule",{"_index":550,"title":{},"body":{"modules/AppModule.html":{}}}],["ngondestroy",{"_index":842,"title":{},"body":{"components/EditableComponent.html":{}}}],["ngoninit",{"_index":162,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["ngx",{"_index":592,"title":{},"body":{"modules/AppModule.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/RegistrationComponent.html":{},"components/RunTestToast.html":{},"dependencies.html":{}}}],["noaccount",{"_index":1143,"title":{},"body":{"components/LoginComponent.html":{}}}],["noaccountdiv",{"_index":1147,"title":{},"body":{"components/LoginComponent.html":{}}}],["node",{"_index":1968,"title":{},"body":{"dependencies.html":{}}}],["noemail",{"_index":214,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["none",{"_index":264,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/DeleteScenarioToast.html":{},"components/LoginComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{}}}],["normal",{"_index":949,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["normalbutton",{"_index":1564,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["note",{"_index":1736,"title":{},"body":{"components/TermsComponent.html":{}}}],["notpassed",{"_index":1577,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["now",{"_index":86,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{}}}],["nowrap",{"_index":1562,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["null",{"_index":1221,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{},"components/ReportHistoryComponent.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":904,"title":{},"body":{"components/ExampleTableComponent.html":{},"interfaces/Report.html":{},"components/ReportHistoryComponent.html":{},"interfaces/Scenario.html":{},"interfaces/StepType.html":{},"interfaces/Story.html":{},"components/TermsComponent.html":{},"interceptors/TimeoutInterceptor.html":{}}}],["number(timeoutvalue",{"_index":1873,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["object",{"_index":658,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Report.html":{},"interfaces/RepositoryContainer.html":{},"interfaces/StepType.html":{},"interfaces/Story.html":{},"components/TermsComponent.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":1862,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["observe",{"_index":1801,"title":{},"body":{"components/TermsComponent.html":{}}}],["occurs",{"_index":1732,"title":{},"body":{"components/TermsComponent.html":{}}}],["ocean",{"_index":216,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{}}}],["offline",{"_index":1620,"title":{},"body":{"components/TermsComponent.html":{}}}],["ondestroy",{"_index":792,"title":{},"body":{"components/EditableComponent.html":{}}}],["one",{"_index":1598,"title":{},"body":{"components/TermsComponent.html":{}}}],["onenter",{"_index":872,"title":{},"body":{"directives/EditableOnEnterDirective.html":{}}}],["oninit",{"_index":24,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["online",{"_index":1613,"title":{},"body":{"components/TermsComponent.html":{}}}],["opacity",{"_index":764,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["open",{"_index":447,"title":{},"body":{"components/AppComponent.html":{}}}],["opencreatenewscenariomodal",{"_index":1478,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["openimpressum",{"_index":383,"title":{},"body":{"components/AppComponent.html":{}}}],["opens",{"_index":68,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/StoriesBarComponent.html":{}}}],["openterms",{"_index":384,"title":{},"body":{"components/AppComponent.html":{}}}],["operate",{"_index":1641,"title":{},"body":{"components/TermsComponent.html":{}}}],["opt",{"_index":1747,"title":{},"body":{"components/TermsComponent.html":{}}}],["optimize",{"_index":1711,"title":{},"body":{"components/TermsComponent.html":{}}}],["optional",{"_index":60,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/Background.html":{},"interfaces/Block.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"interfaces/StepType.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{}}}],["options",{"_index":1253,"title":{},"body":{"interfaces/Report.html":{},"components/TermsComponent.html":{}}}],["ordered",{"_index":1466,"title":{},"body":{"interfaces/StepType.html":{}}}],["organization",{"_index":1793,"title":{},"body":{"components/TermsComponent.html":{}}}],["out",{"_index":389,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DeleteScenarioToast.html":{},"components/LoginComponent.html":{},"components/ReportHistoryComponent.html":{},"components/RunTestToast.html":{},"components/TermsComponent.html":{},"index.html":{},"overview.html":{}}}],["outdated",{"_index":1459,"title":{},"body":{"interfaces/StepType.html":{}}}],["outline",{"_index":493,"title":{},"body":{"components/AppComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{}}}],["outline:0",{"_index":282,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["output",{"_index":830,"title":{},"body":{"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{}}}],["outputs",{"_index":800,"title":{},"body":{"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{}}}],["over",{"_index":1738,"title":{},"body":{"components/TermsComponent.html":{}}}],["overflow",{"_index":518,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{}}}],["overview",{"_index":2014,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":656,"title":{},"body":{"interfaces/Block.html":{}}}],["p",{"_index":481,"title":{},"body":{"components/AppComponent.html":{}}}],["package",{"_index":1936,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":191,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["page",{"_index":84,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/TermsComponent.html":{}}}],["pages",{"_index":1685,"title":{},"body":{"components/TermsComponent.html":{}}}],["param",{"_index":128,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{}}}],["parameters",{"_index":56,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["params.code",{"_index":1041,"title":{},"body":{"components/LoginComponent.html":{}}}],["params.uuid",{"_index":685,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{}}}],["parent",{"_index":1161,"title":{},"body":{"components/ParentComponent.html":{},"miscellaneous/variables.html":{}}}],["parent'},{'name",{"_index":339,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["parent.component.css",{"_index":1162,"title":{},"body":{"components/ParentComponent.html":{}}}],["parent.component.html",{"_index":1163,"title":{},"body":{"components/ParentComponent.html":{}}}],["parent/parent.component",{"_index":562,"title":{},"body":{"modules/AppModule.html":{},"components/TestAccountComponent.html":{}}}],["parent/parent.component.css",{"_index":1825,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["parent/parent.component.html",{"_index":1826,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["parentcomponent",{"_index":338,"title":{"components/ParentComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["parentcomponent:20",{"_index":1841,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["parentcomponent:25",{"_index":1840,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["parentcomponent:30",{"_index":1839,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["parentcomponent:35",{"_index":1838,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["parentcomponent:41",{"_index":1837,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["parentcomponent:55",{"_index":1832,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["parentcomponent:62",{"_index":1831,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["parentcomponent:78",{"_index":1835,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["parentcomponent:86",{"_index":1834,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["parentcomponent:94",{"_index":1833,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["parents",{"_index":1799,"title":{},"body":{"components/TermsComponent.html":{}}}],["parseint(elem.scenarioid",{"_index":1344,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["part",{"_index":1674,"title":{},"body":{"components/TermsComponent.html":{}}}],["participate",{"_index":1802,"title":{},"body":{"components/TermsComponent.html":{}}}],["partners",{"_index":1656,"title":{},"body":{"components/TermsComponent.html":{}}}],["party",{"_index":1721,"title":{},"body":{"components/TermsComponent.html":{}}}],["passed",{"_index":1574,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["password",{"_index":668,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["password'},{'name",{"_index":323,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["password.component",{"_index":612,"title":{},"body":{"modules/AppModule.html":{}}}],["password.component.css",{"_index":669,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.html",{"_index":670,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts",{"_index":666,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:20",{"_index":682,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{}}}],["password.component.ts:21",{"_index":1404,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:25",{"_index":675,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{}}}],["password.component.ts:33",{"_index":1403,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:34",{"_index":681,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{}}}],["password.component.ts:43",{"_index":1401,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:46",{"_index":678,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{}}}],["password.value",{"_index":1224,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{},"miscellaneous/variables.html":{}}}],["password/confirm",{"_index":613,"title":{},"body":{"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"coverage.html":{}}}],["password/reset",{"_index":611,"title":{},"body":{"modules/AppModule.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["passwordconfirmed",{"_index":1226,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{},"miscellaneous/variables.html":{}}}],["passwordconfirmedvalidator",{"_index":1220,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["passwordconfirmedvalidator(control",{"_index":1227,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{}}}],["passwordconfirmedvalidatordirective",{"_index":365,"title":{"directives/PasswordConfirmedValidatorDirective.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["passwordlengthinfo",{"_index":696,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{}}}],["passwords",{"_index":1204,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{}}}],["path",{"_index":2025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["per",{"_index":1370,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["personal",{"_index":1625,"title":{},"body":{"components/TermsComponent.html":{}}}],["personalize",{"_index":1645,"title":{},"body":{"components/TermsComponent.html":{}}}],["personally",{"_index":1689,"title":{},"body":{"components/TermsComponent.html":{}}}],["phone",{"_index":1634,"title":{},"body":{"components/TermsComponent.html":{}}}],["pieces",{"_index":1764,"title":{},"body":{"components/TermsComponent.html":{}}}],["pink",{"_index":325,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["place",{"_index":694,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["please",{"_index":1246,"title":{},"body":{"components/RegistrationComponent.html":{},"components/TermsComponent.html":{}}}],["point",{"_index":1630,"title":{},"body":{"components/TermsComponent.html":{}}}],["pointer",{"_index":280,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/DeleteScenarioToast.html":{},"components/ReportHistoryComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{}}}],["policies",{"_index":1717,"title":{},"body":{"components/TermsComponent.html":{}}}],["policy",{"_index":1594,"title":{},"body":{"components/TermsComponent.html":{}}}],["portability",{"_index":1790,"title":{},"body":{"components/TermsComponent.html":{}}}],["position",{"_index":476,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteScenarioToast.html":{},"components/LoginComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{}}}],["possibly",{"_index":1686,"title":{},"body":{"components/TermsComponent.html":{}}}],["practices",{"_index":1745,"title":{},"body":{"components/TermsComponent.html":{}}}],["pre",{"_index":1460,"title":{},"body":{"interfaces/StepType.html":{}}}],["preferences",{"_index":1707,"title":{},"body":{"components/TermsComponent.html":{}}}],["preservewhitespaces",{"_index":717,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["press",{"_index":1415,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["prevent",{"_index":1664,"title":{},"body":{"components/TermsComponent.html":{}}}],["priorities",{"_index":1600,"title":{},"body":{"components/TermsComponent.html":{}}}],["priority",{"_index":1795,"title":{},"body":{"components/TermsComponent.html":{}}}],["privacy",{"_index":1593,"title":{},"body":{"components/TermsComponent.html":{}}}],["private",{"_index":644,"title":{},"body":{"guards/AuthGuard.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/EditableComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["procedure",{"_index":1669,"title":{},"body":{"components/TermsComponent.html":{}}}],["processing",{"_index":1789,"title":{},"body":{"components/TermsComponent.html":{}}}],["prod",{"_index":2000,"title":{},"body":{"index.html":{}}}],["production",{"_index":2002,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["products",{"_index":1650,"title":{},"body":{"components/TermsComponent.html":{}}}],["project",{"_index":90,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{},"index.html":{}}}],["projects",{"_index":18,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["promotional",{"_index":1660,"title":{},"body":{"components/TermsComponent.html":{}}}],["promptly",{"_index":1816,"title":{},"body":{"components/TermsComponent.html":{}}}],["properties",{"_index":34,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"interfaces/Background.html":{},"interfaces/Block.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"interfaces/ReportContainer.html":{},"components/ReportHistoryComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"interfaces/StepType.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TestAccountComponent.html":{},"interfaces/User.html":{}}}],["protected",{"_index":776,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{},"interceptors/TimeoutInterceptor.html":{}}}],["protection",{"_index":1771,"title":{},"body":{"components/TermsComponent.html":{}}}],["protocol",{"_index":1678,"title":{},"body":{"components/TermsComponent.html":{}}}],["protractor",{"_index":2008,"title":{},"body":{"index.html":{}}}],["provide",{"_index":627,"title":{},"body":{"modules/AppModule.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/TermsComponent.html":{}}}],["provided",{"_index":1810,"title":{},"body":{"components/TermsComponent.html":{}}}],["provider",{"_index":1681,"title":{},"body":{"components/TermsComponent.html":{}}}],["providers",{"_index":536,"title":{},"body":{"modules/AppModule.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"overview.html":{}}}],["provides",{"_index":462,"title":{},"body":{"components/AppComponent.html":{}}}],["public",{"_index":35,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/ReportComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["purpose",{"_index":1691,"title":{},"body":{"components/TermsComponent.html":{}}}],["purposes",{"_index":1661,"title":{},"body":{"components/TermsComponent.html":{}}}],["questions",{"_index":1608,"title":{},"body":{"components/TermsComponent.html":{}}}],["radius",{"_index":698,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{}}}],["reactiveformsmodule",{"_index":565,"title":{},"body":{"modules/AppModule.html":{}}}],["read",{"_index":1715,"title":{},"body":{"components/TermsComponent.html":{}}}],["readme",{"_index":2010,"title":{},"body":{"index.html":{}}}],["reasons",{"_index":1627,"title":{},"body":{"components/TermsComponent.html":{}}}],["receive",{"_index":1416,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/TermsComponent.html":{}}}],["received",{"_index":1586,"title":{},"body":{"interfaces/Story.html":{}}}],["recommended",{"_index":1538,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["recorded",{"_index":1606,"title":{},"body":{"components/TermsComponent.html":{}}}],["records",{"_index":1818,"title":{},"body":{"components/TermsComponent.html":{}}}],["rectification",{"_index":1779,"title":{},"body":{"components/TermsComponent.html":{}}}],["red",{"_index":1384,"title":{},"body":{"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{}}}],["redirects",{"_index":82,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["redirecttoregister",{"_index":1399,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["ref",{"_index":167,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["ref.href",{"_index":170,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["refactor",{"_index":457,"title":{},"body":{"components/AppComponent.html":{}}}],["referring/exit",{"_index":1684,"title":{},"body":{"components/TermsComponent.html":{}}}],["regarded",{"_index":1319,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["regards",{"_index":1615,"title":{},"body":{"components/TermsComponent.html":{}}}],["register",{"_index":83,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TermsComponent.html":{},"miscellaneous/variables.html":{}}}],["registered",{"_index":1245,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registering.alternatively",{"_index":1091,"title":{},"body":{"components/LoginComponent.html":{}}}],["registers",{"_index":1235,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registeruser",{"_index":1232,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registeruser(form",{"_index":1233,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registration",{"_index":1229,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registration'},{'name",{"_index":341,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["registration.component.css",{"_index":1230,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registration.component.html",{"_index":1231,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registration/registration.component",{"_index":600,"title":{},"body":{"modules/AppModule.html":{}}}],["registrationcomponent",{"_index":340,"title":{"components/RegistrationComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["relating",{"_index":1658,"title":{},"body":{"components/TermsComponent.html":{}}}],["relative",{"_index":510,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteScenarioToast.html":{},"components/LoginComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{}}}],["reload",{"_index":1990,"title":{},"body":{"index.html":{}}}],["remove",{"_index":1817,"title":{},"body":{"components/TermsComponent.html":{}}}],["removed",{"_index":774,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/ExampleTableComponent.html":{},"components/RunTestToast.html":{}}}],["removes",{"_index":76,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["rep._id",{"_index":1360,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["repeat(4",{"_index":1197,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["repo_img",{"_index":299,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["repobutton",{"_index":525,"title":{},"body":{"components/AppComponent.html":{}}}],["report",{"_index":103,"title":{"interfaces/Report.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"interfaces/ReportContainer.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{}}}],["report'},{'name",{"_index":343,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["report._id",{"_index":1361,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["report.component.css",{"_index":1271,"title":{},"body":{"components/ReportComponent.html":{}}}],["report.component.html",{"_index":1272,"title":{},"body":{"components/ReportComponent.html":{}}}],["report.issaved",{"_index":1364,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["report/:reportname",{"_index":2026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["report/report.component",{"_index":599,"title":{},"body":{"modules/AppModule.html":{}}}],["reportbuttons",{"_index":1387,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["reportcomponent",{"_index":342,"title":{"components/ReportComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["reportcontainer",{"_index":1289,"title":{"interfaces/ReportContainer.html":{}},"body":{"interfaces/ReportContainer.html":{},"components/ReportHistoryComponent.html":{},"coverage.html":{}}}],["reporthistorycomponent",{"_index":344,"title":{"components/ReportHistoryComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["reporthistorycontainer",{"_index":1380,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["reporthistorytitlecontainer",{"_index":1393,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["reportname",{"_index":1254,"title":{},"body":{"interfaces/Report.html":{},"components/ReportComponent.html":{}}}],["reportreceived",{"_index":1273,"title":{},"body":{"components/ReportComponent.html":{}}}],["reports",{"_index":1293,"title":{},"body":{"interfaces/ReportContainer.html":{},"components/ReportHistoryComponent.html":{},"miscellaneous/variables.html":{}}}],["reportsheader",{"_index":1395,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["reporttime",{"_index":1255,"title":{},"body":{"interfaces/Report.html":{}}}],["repositories",{"_index":40,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["repositorieslist",{"_index":1086,"title":{},"body":{"components/LoginComponent.html":{}}}],["repositorieslist.scrollintoview",{"_index":1088,"title":{},"body":{"components/LoginComponent.html":{}}}],["repository",{"_index":95,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Block.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/TestAccountComponent.html":{},"interfaces/User.html":{}}}],["repository._id",{"_index":1084,"title":{},"body":{"components/LoginComponent.html":{}}}],["repository.source",{"_index":1082,"title":{},"body":{"components/LoginComponent.html":{}}}],["repository.value",{"_index":182,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["repositorycontainer",{"_index":92,"title":{"interfaces/RepositoryContainer.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/ResetPasswordComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{}}}],["repositoryid",{"_index":657,"title":{},"body":{"interfaces/Block.html":{}}}],["repositorylist",{"_index":1141,"title":{},"body":{"components/LoginComponent.html":{}}}],["reps",{"_index":1328,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["reps.sort((a",{"_index":1346,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["req",{"_index":1421,"title":{},"body":{"components/ResetPasswordComponent.html":{},"interceptors/TimeoutInterceptor.html":{}}}],["req.headers.get('timeout",{"_index":1870,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["request",{"_index":683,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TermsComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["requestreset",{"_index":1400,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["requestreset(form",{"_index":1402,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["requests",{"_index":1174,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{}}}],["require",{"_index":1609,"title":{},"body":{"components/TermsComponent.html":{}}}],["required",{"_index":1124,"title":{},"body":{"components/LoginComponent.html":{}}}],["requirements",{"_index":1526,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["reset",{"_index":322,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["resetpassword",{"_index":2027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resetpasswordcomponent",{"_index":346,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["resetpasswordconfirm",{"_index":2028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resp",{"_index":427,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["resp.error",{"_index":1043,"title":{},"body":{"components/LoginComponent.html":{}}}],["resp.id",{"_index":1053,"title":{},"body":{"components/LoginComponent.html":{}}}],["resp.id).subscribe((respo",{"_index":1051,"title":{},"body":{"components/LoginComponent.html":{}}}],["resp.login",{"_index":1050,"title":{},"body":{"components/LoginComponent.html":{}}}],["resp.message",{"_index":1058,"title":{},"body":{"components/LoginComponent.html":{}}}],["resp.repository",{"_index":1059,"title":{},"body":{"components/LoginComponent.html":{}}}],["resp.status",{"_index":1057,"title":{},"body":{"components/LoginComponent.html":{}}}],["respective",{"_index":1727,"title":{},"body":{"components/TermsComponent.html":{}}}],["respond",{"_index":1768,"title":{},"body":{"components/TermsComponent.html":{}}}],["response",{"_index":1062,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["response.error",{"_index":1240,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["response.error.message",{"_index":1242,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["response.error.status",{"_index":1241,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["response.message",{"_index":1068,"title":{},"body":{"components/LoginComponent.html":{}}}],["response.status",{"_index":1067,"title":{},"body":{"components/LoginComponent.html":{}}}],["restrict",{"_index":1788,"title":{},"body":{"components/TermsComponent.html":{}}}],["result",{"_index":370,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interfaces/Background.html":{},"interfaces/Block.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"interfaces/ReportContainer.html":{},"components/ReportHistoryComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"interfaces/StepType.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"interfaces/User.html":{},"directives/ViewModeDirective.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["results",{"_index":372,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interfaces/Background.html":{},"interfaces/Block.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"interfaces/ReportContainer.html":{},"components/ReportHistoryComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"interfaces/StepType.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"interfaces/User.html":{},"directives/ViewModeDirective.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["retrieved",{"_index":404,"title":{},"body":{"components/AppComponent.html":{}}}],["retrieves",{"_index":391,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{}}}],["retrieving",{"_index":401,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["return",{"_index":645,"title":{},"body":{"guards/AuthGuard.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":73,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{}}}],["rgb(109",{"_index":1551,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["rgb(228",{"_index":711,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{}}}],["rgb(247",{"_index":1149,"title":{},"body":{"components/LoginComponent.html":{}}}],["rgb(255",{"_index":206,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["rgba(0,0,0,0.08",{"_index":1546,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["rgba(0,0,0,0.2",{"_index":516,"title":{},"body":{"components/AppComponent.html":{}}}],["rgba(153",{"_index":254,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["right",{"_index":238,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{}}}],["rightbutton",{"_index":490,"title":{},"body":{"components/AppComponent.html":{}}}],["rightbutton:hover",{"_index":494,"title":{},"body":{"components/AppComponent.html":{}}}],["rights",{"_index":1755,"title":{},"body":{"components/TermsComponent.html":{}}}],["root",{"_index":375,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'name",{"_index":319,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["route",{"_index":673,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ReportComponent.html":{}}}],["router",{"_index":41,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["router.events.foreach((event",{"_index":130,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["router.url",{"_index":133,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["routermodule",{"_index":551,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(routes",{"_index":622,"title":{},"body":{"modules/AppModule.html":{}}}],["routes",{"_index":552,"title":{"routes.html":{}},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"routes.html":{}}}],["routs",{"_index":2029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["row",{"_index":219,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["rowindex",{"_index":898,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["rows",{"_index":197,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["run",{"_index":1118,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Report.html":{},"components/RunTestToast.html":{},"interceptors/TimeoutInterceptor.html":{},"index.html":{}}}],["running",{"_index":2003,"title":{},"body":{"index.html":{}}}],["runs",{"_index":1436,"title":{},"body":{"components/RunTestToast.html":{}}}],["runsave",{"_index":610,"title":{},"body":{"modules/AppModule.html":{}}}],["runstring",{"_index":1427,"title":{},"body":{"components/RunTestToast.html":{}}}],["runtest",{"_index":1428,"title":{},"body":{"components/RunTestToast.html":{}}}],["runtest(event",{"_index":1430,"title":{},"body":{"components/RunTestToast.html":{}}}],["runtesttoast",{"_index":347,"title":{"components/RunTestToast.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["rxjs",{"_index":832,"title":{},"body":{"components/EditableComponent.html":{},"interceptors/TimeoutInterceptor.html":{}}}],["rxjs/operators",{"_index":836,"title":{},"body":{"components/EditableComponent.html":{},"interceptors/TimeoutInterceptor.html":{}}}],["s.issue_number",{"_index":1539,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["s.issue_number}}.{{c+1",{"_index":1541,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["s.title",{"_index":1540,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["same",{"_index":1205,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{}}}],["sans",{"_index":294,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ExampleTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TermsComponent.html":{}}}],["sass",{"_index":1971,"title":{},"body":{"dependencies.html":{}}}],["save",{"_index":1101,"title":{},"body":{"components/LoginComponent.html":{},"components/RunTestToast.html":{}}}],["saveandruntest",{"_index":1429,"title":{},"body":{"components/RunTestToast.html":{}}}],["saveandruntest(event",{"_index":1433,"title":{},"body":{"components/RunTestToast.html":{}}}],["saved",{"_index":649,"title":{},"body":{"interfaces/Background.html":{},"components/ExampleTableComponent.html":{},"interfaces/Report.html":{},"components/ReportHistoryComponent.html":{},"interfaces/Scenario.html":{}}}],["saver",{"_index":1956,"title":{},"body":{"dependencies.html":{}}}],["savereport",{"_index":1303,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["savereport(report",{"_index":1322,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["savereport(report._id",{"_index":1366,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["saverunstring",{"_index":1426,"title":{},"body":{"components/RunTestToast.html":{}}}],["saves",{"_index":1435,"title":{},"body":{"components/RunTestToast.html":{}}}],["saving",{"_index":1432,"title":{},"body":{"components/RunTestToast.html":{}}}],["scaffolding",{"_index":1992,"title":{},"body":{"index.html":{}}}],["scen.name",{"_index":1378,"title":{},"body":{"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{}}}],["scenario",{"_index":349,"title":{"interfaces/Scenario.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{}}}],["scenario.scenario_id",{"_index":1345,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["scenario_id",{"_index":1446,"title":{},"body":{"interfaces/Scenario.html":{}}}],["scenariochosen",{"_index":1481,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["scenarioeditorcomponent",{"_index":348,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["scenarioid",{"_index":1256,"title":{},"body":{"interfaces/Report.html":{}}}],["scenariolistitem",{"_index":1570,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["scenariolistitem:hover",{"_index":1571,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["scenarioreports",{"_index":1291,"title":{},"body":{"interfaces/ReportContainer.html":{}}}],["scenarios",{"_index":1294,"title":{},"body":{"interfaces/ReportContainer.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{}}}],["schemas",{"_index":545,"title":{},"body":{"modules/AppModule.html":{}}}],["screen",{"_index":307,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["section",{"_index":394,"title":{},"body":{"components/AppComponent.html":{}}}],["sectionheader",{"_index":1385,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["see",{"_index":1002,"title":{},"body":{"components/LoginComponent.html":{},"components/TermsComponent.html":{}}}],["seed",{"_index":71,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/TermsComponent.html":{}}}],["seen",{"_index":936,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["seen.add(k",{"_index":940,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["seen.has(k",{"_index":939,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["select",{"_index":1102,"title":{},"body":{"components/LoginComponent.html":{}}}],["selected",{"_index":927,"title":{},"body":{"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/ReportHistoryComponent.html":{},"interfaces/Scenario.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["selectedscenario",{"_index":880,"title":{},"body":{"components/ExampleTableComponent.html":{},"components/ParentComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["selectedstory",{"_index":1165,"title":{},"body":{"components/ParentComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["selection",{"_index":1461,"title":{},"body":{"interfaces/StepType.html":{}}}],["selector",{"_index":26,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"directives/ViewModeDirective.html":{}}}],["selectrepository",{"_index":49,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["selectrepository(userrepository",{"_index":91,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["selects",{"_index":94,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/StoriesBarComponent.html":{}}}],["selectscenario",{"_index":1479,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["selectscenario(scenario",{"_index":1491,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["selectstoryscenario",{"_index":1480,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["selectstoryscenario(story",{"_index":1493,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["self",{"_index":470,"title":{},"body":{"components/AppComponent.html":{}}}],["sell",{"_index":1756,"title":{},"body":{"components/TermsComponent.html":{}}}],["sells",{"_index":1766,"title":{},"body":{"components/TermsComponent.html":{}}}],["send",{"_index":679,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/TermsComponent.html":{}}}],["sent",{"_index":1730,"title":{},"body":{"components/TermsComponent.html":{}}}],["sentences",{"_index":1532,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["serif",{"_index":295,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ExampleTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TermsComponent.html":{}}}],["serve",{"_index":1986,"title":{},"body":{"index.html":{}}}],["server",{"_index":189,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["servers",{"_index":1723,"title":{},"body":{"components/TermsComponent.html":{}}}],["service",{"_index":63,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/TermsComponent.html":{},"dependencies.html":{}}}],["services",{"_index":1651,"title":{},"body":{"components/TermsComponent.html":{}}}],["services/api.service",{"_index":121,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["services/timeout",{"_index":617,"title":{},"body":{"modules/AppModule.html":{}}}],["set",{"_index":931,"title":{},"body":{"components/ExampleTableComponent.html":{},"components/ReportHistoryComponent.html":{},"dependencies.html":{}}}],["seteditor",{"_index":1167,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["seteditor(event",{"_index":1175,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["setnewselectedscenario(scenario",{"_index":928,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["setnewselectedstory(story",{"_index":1336,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["sets",{"_index":892,"title":{},"body":{"components/ExampleTableComponent.html":{},"components/ParentComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/TestAccountComponent.html":{}}}],["setselectedscenario",{"_index":1168,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["setselectedscenario(scenario",{"_index":1178,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["setselectedstory",{"_index":1169,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["setselectedstory(story",{"_index":1180,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["settimeout",{"_index":1085,"title":{},"body":{"components/LoginComponent.html":{}}}],["settings",{"_index":179,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{}}}],["several",{"_index":1536,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["shadow",{"_index":514,"title":{},"body":{"components/AppComponent.html":{},"components/StoriesBarComponent.html":{}}}],["shared",{"_index":1616,"title":{},"body":{"components/TermsComponent.html":{}}}],["short",{"_index":1531,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["show",{"_index":14,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ReportComponent.html":{}}}],["showimpressum",{"_index":379,"title":{},"body":{"components/AppComponent.html":{}}}],["shown",{"_index":410,"title":{},"body":{"components/AppComponent.html":{},"components/ExampleTableComponent.html":{},"components/ParentComponent.html":{},"interfaces/StepType.html":{},"components/TestAccountComponent.html":{}}}],["showterms",{"_index":380,"title":{},"body":{"components/AppComponent.html":{}}}],["similar",{"_index":1588,"title":{},"body":{"interfaces/Story.html":{}}}],["simple",{"_index":1533,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["site",{"_index":1695,"title":{},"body":{"components/TermsComponent.html":{}}}],["size",{"_index":247,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{}}}],["skewx",{"_index":769,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["skewx(20deg",{"_index":771,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["skewx(30deg",{"_index":775,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["slide0",{"_index":969,"title":{},"body":{"components/LoginComponent.html":{}}}],["slide01",{"_index":970,"title":{},"body":{"components/LoginComponent.html":{}}}],["slide02",{"_index":971,"title":{},"body":{"components/LoginComponent.html":{}}}],["slide03",{"_index":972,"title":{},"body":{"components/LoginComponent.html":{}}}],["slide04",{"_index":973,"title":{},"body":{"components/LoginComponent.html":{}}}],["slide05",{"_index":974,"title":{},"body":{"components/LoginComponent.html":{}}}],["slide06",{"_index":975,"title":{},"body":{"components/LoginComponent.html":{}}}],["slide07",{"_index":976,"title":{},"body":{"components/LoginComponent.html":{}}}],["slide08",{"_index":977,"title":{},"body":{"components/LoginComponent.html":{}}}],["slide09",{"_index":978,"title":{},"body":{"components/LoginComponent.html":{}}}],["slide10",{"_index":979,"title":{},"body":{"components/LoginComponent.html":{}}}],["slide11",{"_index":980,"title":{},"body":{"components/LoginComponent.html":{}}}],["slidedescription",{"_index":1137,"title":{},"body":{"components/LoginComponent.html":{}}}],["slides",{"_index":1008,"title":{},"body":{"components/LoginComponent.html":{}}}],["small",{"_index":474,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{}}}],["smaller",{"_index":1566,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["software",{"_index":1527,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["solid",{"_index":212,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{}}}],["sortreportstime",{"_index":1304,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["sortreportstime(reps",{"_index":1324,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["sorts",{"_index":1326,"title":{},"body":{"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interfaces/Background.html":{},"interfaces/Block.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"interfaces/ReportContainer.html":{},"components/ReportHistoryComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"interfaces/StepType.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"interfaces/User.html":{},"directives/ViewModeDirective.html":{},"index.html":{}}}],["sources",{"_index":22,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["space",{"_index":304,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{}}}],["span.notpassed",{"_index":1579,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["span.passed",{"_index":1578,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["span[rel=def",{"_index":1549,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["specific",{"_index":907,"title":{},"body":{"components/ExampleTableComponent.html":{},"components/TermsComponent.html":{},"interceptors/TimeoutInterceptor.html":{}}}],["specified",{"_index":1861,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["specify",{"_index":1848,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["spinner",{"_index":598,"title":{},"body":{"modules/AppModule.html":{}}}],["src/.../environment.prod.ts",{"_index":2021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../password",{"_index":2023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../routes.ts",{"_index":2024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../story",{"_index":2020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../timeout",{"_index":2019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/account",{"_index":10,"title":{},"body":{"components/AccountManagementComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts",{"_index":373,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:102",{"_index":397,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:119",{"_index":388,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:19",{"_index":402,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":409,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":411,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:34",{"_index":385,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:41",{"_index":399,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:53",{"_index":390,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:63",{"_index":395,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:75",{"_index":392,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:87",{"_index":386,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":543,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/confirm",{"_index":665,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/deletescenario",{"_index":713,"title":{},"body":{"components/DeleteScenarioToast.html":{},"coverage.html":{}}}],["src/app/directives/edit",{"_index":781,"title":{},"body":{"directives/EditModeDirective.html":{},"directives/EditableOnEnterDirective.html":{},"coverage.html":{}}}],["src/app/directives/password",{"_index":1202,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/directives/view",{"_index":1883,"title":{},"body":{"directives/ViewModeDirective.html":{},"coverage.html":{}}}],["src/app/editable/editable.component.ts",{"_index":789,"title":{},"body":{"components/EditableComponent.html":{},"coverage.html":{}}}],["src/app/editable/editable.component.ts:19",{"_index":821,"title":{},"body":{"components/EditableComponent.html":{}}}],["src/app/editable/editable.component.ts:20",{"_index":818,"title":{},"body":{"components/EditableComponent.html":{}}}],["src/app/editable/editable.component.ts:21",{"_index":805,"title":{},"body":{"components/EditableComponent.html":{}}}],["src/app/editable/editable.component.ts:23",{"_index":814,"title":{},"body":{"components/EditableComponent.html":{}}}],["src/app/editable/editable.component.ts:24",{"_index":816,"title":{},"body":{"components/EditableComponent.html":{}}}],["src/app/editable/editable.component.ts:26",{"_index":819,"title":{},"body":{"components/EditableComponent.html":{}}}],["src/app/editable/editable.component.ts:36",{"_index":808,"title":{},"body":{"components/EditableComponent.html":{}}}],["src/app/editable/editable.component.ts:49",{"_index":811,"title":{},"body":{"components/EditableComponent.html":{}}}],["src/app/editable/editable.component.ts:57",{"_index":823,"title":{},"body":{"components/EditableComponent.html":{}}}],["src/app/editable/editable.component.ts:64",{"_index":812,"title":{},"body":{"components/EditableComponent.html":{}}}],["src/app/editable/editable.component.ts:76",{"_index":806,"title":{},"body":{"components/EditableComponent.html":{}}}],["src/app/editable/editable.component.ts:90",{"_index":826,"title":{},"body":{"components/EditableComponent.html":{}}}],["src/app/editable/focusable.directive.ts",{"_index":957,"title":{},"body":{"directives/FocusableDirective.html":{},"coverage.html":{}}}],["src/app/editable/focusable.directive.ts:19",{"_index":961,"title":{},"body":{"directives/FocusableDirective.html":{}}}],["src/app/example",{"_index":874,"title":{},"body":{"components/ExampleTableComponent.html":{},"coverage.html":{}}}],["src/app/feedback/feedback.component.ts",{"_index":951,"title":{},"body":{"components/FeedbackComponent.html":{},"coverage.html":{}}}],["src/app/guards/auth.guard.ts",{"_index":635,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/guards/auth.guard.ts:23",{"_index":640,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/guards/auth.guard.ts:9",{"_index":639,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/login/login.component.ts",{"_index":964,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:117",{"_index":990,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:134",{"_index":994,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:143",{"_index":987,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:183",{"_index":998,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:195",{"_index":988,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:20",{"_index":1004,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:25",{"_index":1000,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:30",{"_index":1001,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:35",{"_index":1007,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:36",{"_index":1011,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:37",{"_index":1014,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:38",{"_index":1017,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:39",{"_index":1020,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:40",{"_index":1023,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:41",{"_index":1026,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:42",{"_index":1029,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:43",{"_index":1032,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:44",{"_index":1035,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:45",{"_index":1038,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:46",{"_index":986,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:56",{"_index":999,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:82",{"_index":995,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:97",{"_index":992,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modals/modals.component.ts",{"_index":1909,"title":{},"body":{"coverage.html":{}}}],["src/app/model/background.ts",{"_index":648,"title":{},"body":{"interfaces/Background.html":{},"coverage.html":{}}}],["src/app/model/block.ts",{"_index":654,"title":{},"body":{"interfaces/Block.html":{},"coverage.html":{}}}],["src/app/model/report.ts",{"_index":1250,"title":{},"body":{"interfaces/Report.html":{},"coverage.html":{}}}],["src/app/model/reportcontainer.ts",{"_index":1290,"title":{},"body":{"interfaces/ReportContainer.html":{},"coverage.html":{}}}],["src/app/model/repositorycontainer.ts",{"_index":1396,"title":{},"body":{"interfaces/RepositoryContainer.html":{},"coverage.html":{}}}],["src/app/model/scenario.ts",{"_index":1442,"title":{},"body":{"interfaces/Scenario.html":{},"coverage.html":{}}}],["src/app/model/stepdefinition.ts",{"_index":1451,"title":{},"body":{"interfaces/StepDefinition.html":{},"coverage.html":{}}}],["src/app/model/stepdefinitionbackground.ts",{"_index":1455,"title":{},"body":{"interfaces/StepDefinitionBackground.html":{},"coverage.html":{}}}],["src/app/model/steptype.ts",{"_index":1456,"title":{},"body":{"interfaces/StepType.html":{},"coverage.html":{}}}],["src/app/model/story.ts",{"_index":1580,"title":{},"body":{"interfaces/Story.html":{},"coverage.html":{}}}],["src/app/model/user.ts",{"_index":1875,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/parent/parent.component.ts",{"_index":1158,"title":{},"body":{"components/ParentComponent.html":{},"coverage.html":{}}}],["src/app/parent/parent.component.ts:20",{"_index":1185,"title":{},"body":{"components/ParentComponent.html":{}}}],["src/app/parent/parent.component.ts:25",{"_index":1184,"title":{},"body":{"components/ParentComponent.html":{}}}],["src/app/parent/parent.component.ts:30",{"_index":1183,"title":{},"body":{"components/ParentComponent.html":{}}}],["src/app/parent/parent.component.ts:35",{"_index":1170,"title":{},"body":{"components/ParentComponent.html":{}}}],["src/app/parent/parent.component.ts:41",{"_index":1182,"title":{},"body":{"components/ParentComponent.html":{}}}],["src/app/parent/parent.component.ts:55",{"_index":1173,"title":{},"body":{"components/ParentComponent.html":{}}}],["src/app/parent/parent.component.ts:62",{"_index":1171,"title":{},"body":{"components/ParentComponent.html":{}}}],["src/app/parent/parent.component.ts:78",{"_index":1181,"title":{},"body":{"components/ParentComponent.html":{}}}],["src/app/parent/parent.component.ts:86",{"_index":1179,"title":{},"body":{"components/ParentComponent.html":{}}}],["src/app/parent/parent.component.ts:94",{"_index":1176,"title":{},"body":{"components/ParentComponent.html":{}}}],["src/app/registration/registration.component.ts",{"_index":1228,"title":{},"body":{"components/RegistrationComponent.html":{},"coverage.html":{}}}],["src/app/registration/registration.component.ts:21",{"_index":1236,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/registration/registration.component.ts:38",{"_index":1234,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/report",{"_index":1295,"title":{},"body":{"components/ReportHistoryComponent.html":{},"coverage.html":{}}}],["src/app/report/report.component.ts",{"_index":1270,"title":{},"body":{"components/ReportComponent.html":{},"coverage.html":{}}}],["src/app/report/report.component.ts:14",{"_index":1275,"title":{},"body":{"components/ReportComponent.html":{}}}],["src/app/report/report.component.ts:22",{"_index":1278,"title":{},"body":{"components/ReportComponent.html":{}}}],["src/app/report/report.component.ts:46",{"_index":1277,"title":{},"body":{"components/ReportComponent.html":{}}}],["src/app/reset",{"_index":1398,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/routes/routes.ts",{"_index":1922,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/runsave",{"_index":1425,"title":{},"body":{"components/RunTestToast.html":{},"coverage.html":{}}}],["src/app/scenario",{"_index":1923,"title":{},"body":{"coverage.html":{}}}],["src/app/services/api.service.ts",{"_index":1889,"title":{},"body":{"coverage.html":{}}}],["src/app/services/timeout",{"_index":1846,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/stories",{"_index":1471,"title":{},"body":{"components/StoriesBarComponent.html":{},"coverage.html":{}}}],["src/app/story",{"_index":1928,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/terms/terms.component.ts",{"_index":1590,"title":{},"body":{"components/TermsComponent.html":{},"coverage.html":{}}}],["src/app/test",{"_index":1823,"title":{},"body":{"components/TestAccountComponent.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":1932,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1934,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stamp",{"_index":1683,"title":{},"body":{"components/TermsComponent.html":{}}}],["standard",{"_index":1668,"title":{},"body":{"components/TermsComponent.html":{}}}],["star",{"_index":1376,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["star_border",{"_index":1377,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["start",{"_index":480,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ReportHistoryComponent.html":{}}}],["started",{"_index":1980,"title":{"index.html":{}},"body":{}}],["state",{"_index":746,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{},"interfaces/Story.html":{}}}],["state('inactive",{"_index":763,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["statements",{"_index":1888,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":913,"title":{},"body":{"components/ExampleTableComponent.html":{},"interfaces/Report.html":{}}}],["step",{"_index":663,"title":{},"body":{"interfaces/Block.html":{},"components/LoginComponent.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"interfaces/StepType.html":{}}}],["stepdefinition",{"_index":662,"title":{"interfaces/StepDefinition.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"coverage.html":{}}}],["stepdefinitionbackground",{"_index":652,"title":{"interfaces/StepDefinitionBackground.html":{}},"body":{"interfaces/Background.html":{},"interfaces/StepDefinitionBackground.html":{},"coverage.html":{}}}],["stepdefinitions",{"_index":650,"title":{},"body":{"interfaces/Background.html":{},"interfaces/Block.html":{},"interfaces/Scenario.html":{},"miscellaneous/variables.html":{}}}],["steps",{"_index":1114,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"interfaces/StepType.html":{}}}],["steptype",{"_index":1453,"title":{"interfaces/StepType.html":{}},"body":{"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"interfaces/StepType.html":{},"coverage.html":{}}}],["stepwaittime",{"_index":1447,"title":{},"body":{"interfaces/Scenario.html":{}}}],["sticky",{"_index":463,"title":{},"body":{"components/AppComponent.html":{}}}],["store",{"_index":1706,"title":{},"body":{"components/TermsComponent.html":{}}}],["stored",{"_index":1997,"title":{},"body":{"index.html":{}}}],["stories",{"_index":352,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["stories.if",{"_index":1106,"title":{},"body":{"components/LoginComponent.html":{}}}],["storiesbar",{"_index":1199,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["storiesbarcomponent",{"_index":351,"title":{"components/StoriesBarComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["story",{"_index":96,"title":{"interfaces/Story.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"interfaces/ReportContainer.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["story_id",{"_index":1583,"title":{},"body":{"interfaces/Story.html":{}}}],["storychosen",{"_index":1482,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["storyeditor",{"_index":1200,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["storyeditorcomponent",{"_index":354,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["storyheader",{"_index":1543,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["storyid",{"_index":1257,"title":{},"body":{"interfaces/Report.html":{}}}],["storyindex",{"_index":1520,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["storylist",{"_index":1544,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["storylist:hover",{"_index":1568,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["storyreports",{"_index":1292,"title":{},"body":{"interfaces/ReportContainer.html":{}}}],["storysource",{"_index":1584,"title":{},"body":{"interfaces/Story.html":{}}}],["string",{"_index":100,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"interfaces/Background.html":{},"interfaces/Block.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"interfaces/StepType.html":{},"interfaces/Story.html":{},"interfaces/User.html":{}}}],["stringifyreporttime",{"_index":1305,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["stringifyreporttime(rep.reporttime",{"_index":1375,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["stringifyreporttime(reps.reporttime",{"_index":1379,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["stringifyreporttime(time",{"_index":1329,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["stroke",{"_index":1154,"title":{},"body":{"components/LoginComponent.html":{}}}],["strongly",{"_index":1812,"title":{},"body":{"components/TermsComponent.html":{}}}],["style",{"_index":499,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteScenarioToast.html":{},"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["styleurls",{"_index":29,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["subject",{"_index":813,"title":{},"body":{"components/EditableComponent.html":{}}}],["subscribe",{"_index":849,"title":{},"body":{"components/EditableComponent.html":{}}}],["subscribe((resp",{"_index":1193,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["subscribe(_resp",{"_index":1355,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["subscribe(event",{"_index":859,"title":{},"body":{"components/EditableComponent.html":{}}}],["successful",{"_index":145,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Story.html":{}}}],["successfull",{"_index":1269,"title":{},"body":{"interfaces/Report.html":{},"interfaces/Scenario.html":{}}}],["such",{"_index":1633,"title":{},"body":{"components/TermsComponent.html":{}}}],["super(apiservice",{"_index":1842,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["super(toastrservice",{"_index":777,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["support",{"_index":2011,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":1772,"title":{},"body":{"components/TermsComponent.html":{}}}],["svg",{"_index":2012,"title":{},"body":{"modules.html":{}}}],["switchmapto",{"_index":835,"title":{},"body":{"components/EditableComponent.html":{}}}],["switchmapto(clickoutside",{"_index":858,"title":{},"body":{"components/EditableComponent.html":{}}}],["system",{"_index":1528,"title":{},"body":{"components/StoriesBarComponent.html":{},"miscellaneous/variables.html":{}}}],["t",{"_index":1352,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["table",{"_index":785,"title":{},"body":{"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"directives/FocusableDirective.html":{},"directives/ViewModeDirective.html":{},"coverage.html":{}}}],["table'},{'name",{"_index":332,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["table.component",{"_index":574,"title":{},"body":{"modules/AppModule.html":{}}}],["table.component.css",{"_index":876,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["table.component.html",{"_index":877,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["table.component.ts",{"_index":875,"title":{},"body":{"components/ExampleTableComponent.html":{},"coverage.html":{}}}],["table.component.ts:116",{"_index":915,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["table.component.ts:132",{"_index":906,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["table.component.ts:139",{"_index":918,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["table.component.ts:154",{"_index":899,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["table.component.ts:18",{"_index":923,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["table.component.ts:22",{"_index":921,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["table.component.ts:27",{"_index":920,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["table.component.ts:32",{"_index":926,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["table.component.ts:37",{"_index":925,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["table.component.ts:43",{"_index":893,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["table.component.ts:59",{"_index":891,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["table.component.ts:67",{"_index":912,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["table.component.ts:74",{"_index":911,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["table.component.ts:99",{"_index":909,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["table/example",{"_index":573,"title":{},"body":{"modules/AppModule.html":{},"components/ExampleTableComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1935,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":1109,"title":{},"body":{"components/LoginComponent.html":{}}}],["take",{"_index":834,"title":{},"body":{"components/EditableComponent.html":{},"dependencies.html":{}}}],["take(1",{"_index":856,"title":{},"body":{"components/EditableComponent.html":{}}}],["target",{"_index":854,"title":{},"body":{"components/EditableComponent.html":{}}}],["team",{"_index":184,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["technologies",{"_index":1725,"title":{},"body":{"components/TermsComponent.html":{}}}],["telephone",{"_index":1638,"title":{},"body":{"components/TermsComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["templateref",{"_index":787,"title":{},"body":{"directives/EditModeDirective.html":{},"directives/ViewModeDirective.html":{}}}],["templateurl",{"_index":31,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["terms",{"_index":396,"title":{},"body":{"components/AppComponent.html":{},"components/TermsComponent.html":{},"miscellaneous/variables.html":{}}}],["terms'},{'name",{"_index":356,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["terms.component.css",{"_index":1591,"title":{},"body":{"components/TermsComponent.html":{}}}],["terms.component.html",{"_index":1592,"title":{},"body":{"components/TermsComponent.html":{}}}],["terms/terms.component",{"_index":588,"title":{},"body":{"modules/AppModule.html":{}}}],["terms:hover",{"_index":483,"title":{},"body":{"components/AppComponent.html":{}}}],["termscomponent",{"_index":355,"title":{"components/TermsComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["termscontent",{"_index":486,"title":{},"body":{"components/AppComponent.html":{}}}],["test",{"_index":72,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"index.html":{}}}],["test!usually",{"_index":1115,"title":{},"body":{"components/LoginComponent.html":{}}}],["test's",{"_index":1740,"title":{},"body":{"components/TermsComponent.html":{}}}],["test@adesso.de",{"_index":444,"title":{},"body":{"components/AppComponent.html":{}}}],["test\\'s",{"_index":1820,"title":{},"body":{"components/TermsComponent.html":{}}}],["testaccount",{"_index":1843,"title":{},"body":{"components/TestAccountComponent.html":{},"miscellaneous/variables.html":{}}}],["testaccountcomponent",{"_index":357,"title":{"components/TestAccountComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["tests",{"_index":2005,"title":{},"body":{"index.html":{}}}],["teststatus",{"_index":1258,"title":{},"body":{"interfaces/Report.html":{}}}],["text",{"_index":223,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/StepType.html":{},"components/StoriesBarComponent.html":{}}}],["think",{"_index":1809,"title":{},"body":{"components/TermsComponent.html":{}}}],["third",{"_index":1720,"title":{},"body":{"components/TermsComponent.html":{}}}],["this.apiservice",{"_index":1191,"title":{},"body":{"components/ParentComponent.html":{},"components/ReportHistoryComponent.html":{},"components/TestAccountComponent.html":{}}}],["this.apiservice.confirmreset(this.uuid",{"_index":687,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{}}}],["this.apiservice.createcustomstoryemitter.subscribe(custom",{"_index":1506,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["this.apiservice.createstory(custom.story.title",{"_index":1507,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["this.apiservice.deletescenarioemitter",{"_index":779,"title":{},"body":{"components/DeleteScenarioToast.html":{}}}],["this.apiservice.disconnectgithub().subscribe((resp",{"_index":163,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["this.apiservice.getbackendinfo",{"_index":416,"title":{},"body":{"components/AppComponent.html":{},"components/ParentComponent.html":{}}}],["this.apiservice.getbackendinfo().then((value",{"_index":1282,"title":{},"body":{"components/ReportComponent.html":{}}}],["this.apiservice.getbackendurlevent.subscribe",{"_index":1187,"title":{},"body":{"components/ParentComponent.html":{}}}],["this.apiservice.getreport(reportname).subscribe((resp",{"_index":1284,"title":{},"body":{"components/ReportComponent.html":{}}}],["this.apiservice.getreporthistory(this.selectedstory._id).subscribe(resp",{"_index":1342,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["this.apiservice.getrepositories().subscribe",{"_index":1190,"title":{},"body":{"components/ParentComponent.html":{}}}],["this.apiservice.getrepositories().subscribe((repositories",{"_index":160,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["this.apiservice.getrepositories().subscribe((resp",{"_index":1077,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.apiservice.getrepositoriesevent.subscribe((repositories",{"_index":136,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{}}}],["this.apiservice.getstories(custom.repositorycontainer).subscribe((resp",{"_index":1511,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["this.apiservice.getstories(userrepository).subscribe((resp",{"_index":433,"title":{},"body":{"components/AppComponent.html":{}}}],["this.apiservice.getstoriesevent.subscribe(stories",{"_index":1503,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["this.apiservice.getuserdata().subscribe(user",{"_index":146,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["this.apiservice.githubcallback(params.code).subscribe(resp",{"_index":1042,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.apiservice.githublogin",{"_index":140,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{}}}],["this.apiservice.isloggedin",{"_index":425,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{}}}],["this.apiservice.logingithubtoken(login",{"_index":1055,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.apiservice.loginuser(form.value.email",{"_index":1064,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.apiservice.logoutevent.subscribe(_",{"_index":412,"title":{},"body":{"components/AppComponent.html":{}}}],["this.apiservice.logoutuser().subscribe(resp",{"_index":434,"title":{},"body":{"components/AppComponent.html":{}}}],["this.apiservice.mergeaccountgithub(userid",{"_index":1049,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.apiservice.registeruser(form.value.email",{"_index":1238,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.apiservice.requestreset(form.value.email).subscribe(res",{"_index":1405,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.apiservice.runsaveoption('run",{"_index":1439,"title":{},"body":{"components/RunTestToast.html":{}}}],["this.apiservice.runsaveoption('saverun",{"_index":1441,"title":{},"body":{"components/RunTestToast.html":{}}}],["this.cdr.detectchanges",{"_index":1054,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.changeeditor.emit",{"_index":1350,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["this.daisyversion",{"_index":1514,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["this.defaulttimeout",{"_index":1871,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["this.displayedcolumns",{"_index":943,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["this.editable.toviewmode",{"_index":873,"title":{},"body":{"directives/EditableOnEnterDirective.html":{}}}],["this.editmode$.pipe",{"_index":857,"title":{},"body":{"components/EditableComponent.html":{}}}],["this.editmode.asobservable",{"_index":815,"title":{},"body":{"components/EditableComponent.html":{}}}],["this.editmode.next(true",{"_index":850,"title":{},"body":{"components/EditableComponent.html":{}}}],["this.editmodehandler",{"_index":841,"title":{},"body":{"components/EditableComponent.html":{}}}],["this.editmodetpl.tpl",{"_index":862,"title":{},"body":{"components/EditableComponent.html":{}}}],["this.element.contains(target",{"_index":855,"title":{},"body":{"components/EditableComponent.html":{}}}],["this.email",{"_index":152,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["this.error",{"_index":430,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["this.getreport(params.reportname",{"_index":1283,"title":{},"body":{"components/ReportComponent.html":{}}}],["this.getreports",{"_index":1340,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["this.getrepositories",{"_index":414,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["this.github",{"_index":154,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["this.host.nativeelement",{"_index":845,"title":{},"body":{"components/EditableComponent.html":{}}}],["this.host.nativeelement.focus",{"_index":963,"title":{},"body":{"directives/FocusableDirective.html":{}}}],["this.id",{"_index":139,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["this.iscustomstory",{"_index":1504,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["this.isloadingrepositories",{"_index":1061,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.isstoryeditoractive",{"_index":1196,"title":{},"body":{"components/ParentComponent.html":{}}}],["this.jira",{"_index":156,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["this.loadstories",{"_index":1188,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["this.logingithubtoken(resp.login",{"_index":1052,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.logout",{"_index":413,"title":{},"body":{"components/AppComponent.html":{}}}],["this.modalcomponent.openchangejiraaccountmodal('jira",{"_index":142,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["this.modalcomponent.opencreatecustomprojectmodal",{"_index":141,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["this.modalcomponent.opendeleteaccountmodal(this.email",{"_index":143,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["this.modalcomponent.openworkgroupeditmodal(project",{"_index":144,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["this.modalscomponent.opencreatenewstorymodal",{"_index":1524,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["this.mode",{"_index":844,"title":{},"body":{"components/EditableComponent.html":{}}}],["this.remove",{"_index":780,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["this.reportreceived",{"_index":1287,"title":{},"body":{"components/ReportComponent.html":{}}}],["this.reports",{"_index":1341,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["this.reports.scenarioreports.filter((elem",{"_index":1343,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["this.repositories",{"_index":137,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["this.repositories.length",{"_index":426,"title":{},"body":{"components/AppComponent.html":{}}}],["this.route.params.subscribe((params",{"_index":1279,"title":{},"body":{"components/ReportComponent.html":{}}}],["this.route.queryparams.subscribe((params",{"_index":684,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.router.navigate",{"_index":178,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["this.router.navigate(['/login",{"_index":435,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.router.navigate(['/register",{"_index":165,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.router.navigate(['/testaccount",{"_index":1070,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.scenariochosen.emit(scenario",{"_index":1518,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["this.selectedscenario",{"_index":933,"title":{},"body":{"components/ExampleTableComponent.html":{},"components/ParentComponent.html":{},"components/StoriesBarComponent.html":{}}}],["this.selectedscenario.saved",{"_index":935,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["this.selectedscenario.stepdefinitions.example[0].values",{"_index":941,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["this.selectedscenario.stepdefinitions.example[0].values.filter(item",{"_index":937,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["this.selectedstory",{"_index":1195,"title":{},"body":{"components/ParentComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{}}}],["this.selectedstory.title",{"_index":1367,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["this.selectscenario(this.stories[storyindex].scenarios[0",{"_index":1523,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["this.showimpressum",{"_index":417,"title":{},"body":{"components/AppComponent.html":{}}}],["this.showterms",{"_index":418,"title":{},"body":{"components/AppComponent.html":{}}}],["this.stories",{"_index":1194,"title":{},"body":{"components/ParentComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["this.stories.indexof(this.selectedstory",{"_index":1521,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["this.stories.sort(function(a",{"_index":1515,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["this.stories[storyindex].scenarios[0",{"_index":1522,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["this.storychosen.emit(story",{"_index":1519,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["this.toastr.error(response.error.message",{"_index":1243,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.toastr.success('successfully",{"_index":1244,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.toviewmode",{"_index":860,"title":{},"body":{"components/EditableComponent.html":{}}}],["this.update.emit",{"_index":843,"title":{},"body":{"components/EditableComponent.html":{}}}],["this.updatesite('successful",{"_index":135,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["this.updatetable",{"_index":934,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["this.uuid",{"_index":686,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{}}}],["this.viewmodehandler",{"_index":840,"title":{},"body":{"components/EditableComponent.html":{}}}],["this.viewmodetpl.tpl",{"_index":861,"title":{},"body":{"components/EditableComponent.html":{}}}],["through",{"_index":1655,"title":{},"body":{"components/TermsComponent.html":{}}}],["ththe",{"_index":895,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["thus",{"_index":1742,"title":{},"body":{"components/TermsComponent.html":{}}}],["time",{"_index":1265,"title":{},"body":{"interfaces/Report.html":{},"components/ReportHistoryComponent.html":{},"interfaces/Scenario.html":{},"components/TermsComponent.html":{},"interceptors/TimeoutInterceptor.html":{}}}],["timeout",{"_index":625,"title":{},"body":{"modules/AppModule.html":{},"interceptors/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["timeoutinterceptor",{"_index":616,"title":{"interceptors/TimeoutInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/TimeoutInterceptor.html":{},"coverage.html":{}}}],["timeoutvalue",{"_index":1869,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["timeoutvaluenumeric",{"_index":1872,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["title",{"_index":722,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{}}}],["title.uk",{"_index":1575,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["titlecase",{"_index":1542,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["toast",{"_index":326,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["toast.ts",{"_index":714,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{},"coverage.html":{}}}],["toast.ts:118",{"_index":1438,"title":{},"body":{"components/RunTestToast.html":{}}}],["toast.ts:121",{"_index":742,"title":{},"body":{"components/DeleteScenarioToast.html":{}}}],["toast.ts:123",{"_index":1437,"title":{},"body":{"components/RunTestToast.html":{}}}],["toast.ts:125",{"_index":731,"title":{},"body":{"components/DeleteScenarioToast.html":{}}}],["toast.ts:136",{"_index":743,"title":{},"body":{"components/DeleteScenarioToast.html":{}}}],["toast.ts:137",{"_index":739,"title":{},"body":{"components/DeleteScenarioToast.html":{}}}],["toast.ts:141",{"_index":1431,"title":{},"body":{"components/RunTestToast.html":{}}}],["toast.ts:146",{"_index":736,"title":{},"body":{"components/DeleteScenarioToast.html":{}}}],["toast.ts:152",{"_index":1434,"title":{},"body":{"components/RunTestToast.html":{}}}],["toastpackage",{"_index":727,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["toastr",{"_index":604,"title":{},"body":{"modules/AppModule.html":{},"components/DeleteScenarioToast.html":{},"components/RegistrationComponent.html":{},"components/RunTestToast.html":{},"dependencies.html":{}}}],["toastrmodule",{"_index":603,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrmodule.forroot",{"_index":624,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrservice",{"_index":730,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RegistrationComponent.html":{},"components/RunTestToast.html":{}}}],["toasts",{"_index":715,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["token",{"_index":993,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/User.html":{}}}],["top",{"_index":226,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{}}}],["topnav",{"_index":460,"title":{},"body":{"components/AppComponent.html":{}}}],["topnavcenter",{"_index":472,"title":{},"body":{"components/AppComponent.html":{}}}],["topnavright",{"_index":469,"title":{},"body":{"components/AppComponent.html":{}}}],["toviewmode",{"_index":798,"title":{},"body":{"components/EditableComponent.html":{}}}],["tpl",{"_index":788,"title":{},"body":{"directives/EditModeDirective.html":{},"directives/ViewModeDirective.html":{}}}],["tracking",{"_index":1696,"title":{},"body":{"components/TermsComponent.html":{}}}],["transfer",{"_index":1791,"title":{},"body":{"components/TermsComponent.html":{}}}],["transform",{"_index":529,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["transition",{"_index":288,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/DeleteScenarioToast.html":{},"components/LoginComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{}}}],["transition('active",{"_index":773,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["transition('inactive",{"_index":765,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["translate3d(100",{"_index":768,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["translatez(0",{"_index":760,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["transparent",{"_index":298,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["trends",{"_index":1693,"title":{},"body":{"components/TermsComponent.html":{}}}],["trigger",{"_index":747,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["trigger('flyinout",{"_index":762,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["true",{"_index":630,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":1092,"title":{},"body":{"components/LoginComponent.html":{}}}],["trying",{"_index":1094,"title":{},"body":{"components/LoginComponent.html":{}}}],["tutorial",{"_index":441,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["type",{"_index":59,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/Background.html":{},"interfaces/Block.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"interfaces/ReportContainer.html":{},"components/ReportHistoryComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"interfaces/StepType.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":149,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{}}}],["types",{"_index":1604,"title":{},"body":{"components/TermsComponent.html":{}}}],["uikit",{"_index":1975,"title":{},"body":{"dependencies.html":{}}}],["uk",{"_index":285,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{}}}],["undefined",{"_index":151,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["under",{"_index":452,"title":{},"body":{"components/AppComponent.html":{},"components/TermsComponent.html":{}}}],["underline",{"_index":484,"title":{},"body":{"components/AppComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["understand",{"_index":1647,"title":{},"body":{"components/TermsComponent.html":{}}}],["unit",{"_index":2004,"title":{},"body":{"index.html":{}}}],["unsavereport",{"_index":1306,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["unsavereport(report",{"_index":1332,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["unsavereport(report._id",{"_index":1365,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["until",{"_index":838,"title":{},"body":{"components/EditableComponent.html":{},"dependencies.html":{}}}],["untildestroyed",{"_index":837,"title":{},"body":{"components/EditableComponent.html":{}}}],["untildestroyed(this",{"_index":848,"title":{},"body":{"components/EditableComponent.html":{}}}],["update",{"_index":801,"title":{},"body":{"components/EditableComponent.html":{}}}],["updatefield",{"_index":886,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["updatefield(columnindex",{"_index":914,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["updates",{"_index":916,"title":{},"body":{"components/ExampleTableComponent.html":{},"components/TermsComponent.html":{}}}],["updatesite",{"_index":50,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["updatesite(report",{"_index":99,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["updatetable",{"_index":887,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["url",{"_index":65,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Story.html":{}}}],["use",{"_index":1107,"title":{},"body":{"components/LoginComponent.html":{},"components/TermsComponent.html":{},"index.html":{}}}],["useclass",{"_index":628,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":85,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ReportHistoryComponent.html":{},"interfaces/StepType.html":{},"interfaces/Story.html":{},"components/TermsComponent.html":{},"interfaces/User.html":{}}}],["useexisting",{"_index":1208,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{}}}],["user",{"_index":79,"title":{"interfaces/User.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/ResetPasswordComponent.html":{},"interfaces/StepType.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TermsComponent.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["user's",{"_index":1217,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{},"miscellaneous/variables.html":{}}}],["user._id",{"_index":147,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["user['email",{"_index":150,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["user['github",{"_index":153,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["user['jira",{"_index":155,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["userid",{"_index":1045,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["userid).topromise",{"_index":1239,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["userrepository",{"_index":98,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["userrepository._id",{"_index":177,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["userrepository.source",{"_index":175,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["userrepository.value",{"_index":172,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["users",{"_index":1697,"title":{},"body":{"components/TermsComponent.html":{}}}],["uses",{"_index":1705,"title":{},"body":{"components/TermsComponent.html":{}}}],["usevalue",{"_index":631,"title":{},"body":{"modules/AppModule.html":{}}}],["using",{"_index":733,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/LoginComponent.html":{},"components/RunTestToast.html":{},"components/TermsComponent.html":{}}}],["usually",{"_index":1877,"title":{},"body":{"interfaces/User.html":{}}}],["uuid",{"_index":671,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{}}}],["valid",{"_index":1247,"title":{},"body":{"components/RegistrationComponent.html":{},"components/TermsComponent.html":{}}}],["valid.required",{"_index":701,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{}}}],["valid[required",{"_index":700,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{}}}],["validate",{"_index":1210,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{}}}],["validate(control",{"_index":1211,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{}}}],["validation",{"_index":705,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{}}}],["validationerrors",{"_index":1215,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":1206,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{}}}],["validatorfn",{"_index":1216,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{},"miscellaneous/variables.html":{}}}],["value",{"_index":407,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["valuerow",{"_index":948,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["values",{"_index":1462,"title":{},"body":{"interfaces/StepType.html":{}}}],["var",{"_index":215,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["variable",{"_index":1893,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2018,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":1639,"title":{},"body":{"components/TermsComponent.html":{}}}],["version",{"_index":437,"title":{},"body":{"components/AppComponent.html":{},"components/StoriesBarComponent.html":{},"index.html":{}}}],["very",{"_index":1587,"title":{},"body":{"interfaces/Story.html":{}}}],["via",{"_index":187,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{},"components/TermsComponent.html":{},"index.html":{}}}],["view",{"_index":809,"title":{},"body":{"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/StoriesBarComponent.html":{}}}],["viewable",{"_index":1884,"title":{},"body":{"directives/ViewModeDirective.html":{}}}],["viewchild",{"_index":116,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/RegistrationComponent.html":{},"components/StoriesBarComponent.html":{}}}],["viewchild('modalcomponent",{"_index":114,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["viewchild('modalscomponent",{"_index":1498,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["viewmode",{"_index":368,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"directives/ViewModeDirective.html":{}}}],["viewmodedirective",{"_index":367,"title":{"directives/ViewModeDirective.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"directives/ViewModeDirective.html":{},"coverage.html":{},"overview.html":{}}}],["viewmodehandler",{"_index":799,"title":{},"body":{"components/EditableComponent.html":{}}}],["viewmodetpl",{"_index":796,"title":{},"body":{"components/EditableComponent.html":{}}}],["visibility",{"_index":759,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["visit",{"_index":1670,"title":{},"body":{"components/TermsComponent.html":{}}}],["visited",{"_index":1710,"title":{},"body":{"components/TermsComponent.html":{}}}],["visitor",{"_index":1708,"title":{},"body":{"components/TermsComponent.html":{}}}],["visitors",{"_index":1601,"title":{},"body":{"components/TermsComponent.html":{}}}],["void",{"_index":74,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["wait",{"_index":1450,"title":{},"body":{"interfaces/Scenario.html":{}}}],["want",{"_index":1116,"title":{},"body":{"components/LoginComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{}}}],["ways",{"_index":1640,"title":{},"body":{"components/TermsComponent.html":{}}}],["web",{"_index":1703,"title":{},"body":{"components/TermsComponent.html":{}}}],["webkit",{"_index":757,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["website",{"_index":1117,"title":{},"body":{"components/LoginComponent.html":{},"components/TermsComponent.html":{}}}],["websites",{"_index":1671,"title":{},"body":{"components/TermsComponent.html":{}}}],["webste",{"_index":1643,"title":{},"body":{"components/TermsComponent.html":{}}}],["weight",{"_index":249,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["welcome",{"_index":1090,"title":{},"body":{"components/LoginComponent.html":{}}}],["welcomeslide",{"_index":1133,"title":{},"body":{"components/LoginComponent.html":{}}}],["white",{"_index":253,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{}}}],["width",{"_index":273,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/DeleteScenarioToast.html":{},"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["window.location.reload",{"_index":164,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["wird",{"_index":954,"title":{},"body":{"components/FeedbackComponent.html":{}}}],["without",{"_index":1093,"title":{},"body":{"components/LoginComponent.html":{},"components/RunTestToast.html":{}}}],["words",{"_index":1534,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["workgroup",{"_index":107,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["workgroupedit",{"_index":51,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["workgroupedit(project",{"_index":104,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["wronglogin",{"_index":710,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["x",{"_index":487,"title":{},"body":{"components/AppComponent.html":{}}}],["y",{"_index":519,"title":{},"body":{"components/AppComponent.html":{}}}],["yourself",{"_index":1095,"title":{},"body":{"components/LoginComponent.html":{}}}],["z",{"_index":517,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/StoriesBarComponent.html":{}}}],["zone.js",{"_index":1977,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":542,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AccountManagementComponent.html":{"url":"components/AccountManagementComponent.html","title":"component - AccountManagementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AccountManagementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/account-management/account-management.component.ts\n\n\n    \n        Description\n    \n    \n        Component to show all account data including the projects of Github, Jira and custom sources\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-account-management\n            \n\n            \n                styleUrls\n                ./account-management.component.css\n            \n\n\n\n            \n                templateUrl\n                ./account-management.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiService\n                            \n                            \n                                email\n                            \n                            \n                                github\n                            \n                            \n                                id\n                            \n                            \n                                jira\n                            \n                            \n                                modalComponent\n                            \n                            \n                                repositories\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteAccount\n                            \n                            \n                                disconnectGithub\n                            \n                            \n                                jiraLogin\n                            \n                            \n                                login\n                            \n                            \n                                navToRegistration\n                            \n                            \n                                newRepository\n                            \n                            \n                                selectRepository\n                            \n                            \n                                updateSite\n                            \n                            \n                                workGroupEdit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/account-management/account-management.component.ts:34\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Connection to the api service\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                router to handle url changes\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteAccount\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteAccount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/account-management/account-management.component.ts:77\n                \n            \n\n\n            \n                \n                    Opens Modal to delete the Seed-Test account\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            disconnectGithub\n                        \n                        \n                    \n                \n            \n            \n                \ndisconnectGithub()\n                \n            \n\n\n            \n                \n                    Defined in src/app/account-management/account-management.component.ts:126\n                \n            \n\n\n            \n                \n                    Removes Github connection from Seed-Test Account\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            jiraLogin\n                        \n                        \n                    \n                \n            \n            \n                \njiraLogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/account-management/account-management.component.ts:70\n                \n            \n\n\n            \n                \n                    Loggs in the user to Jira\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/account-management/account-management.component.ts:55\n                \n            \n\n\n            \n                \n                    Loggs in the user to Github\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navToRegistration\n                        \n                        \n                    \n                \n            \n            \n                \nnavToRegistration()\n                \n            \n\n\n            \n                \n                    Defined in src/app/account-management/account-management.component.ts:135\n                \n            \n\n\n            \n                \n                    Redirects user to Register page if the user only used a Github account and now wants to create a Seed-Test account\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            newRepository\n                        \n                        \n                    \n                \n            \n            \n                \nnewRepository()\n                \n            \n\n\n            \n                \n                    Defined in src/app/account-management/account-management.component.ts:63\n                \n            \n\n\n            \n                \n                    Opens Modal to create a new custom project\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectRepository\n                        \n                        \n                    \n                \n            \n            \n                \nselectRepository(userRepository: RepositoryContainer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/account-management/account-management.component.ts:144\n                \n            \n\n\n            \n                \n                    Selects the repository and redirects the user to the story editor\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userRepository\n                                    \n                                                RepositoryContainer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateSite\n                        \n                        \n                    \n                \n            \n            \n                \nupdateSite(report: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/account-management/account-management.component.ts:93\n                \n            \n\n\n            \n                \n                    Fills the Account data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    report\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            workGroupEdit\n                        \n                        \n                    \n                \n            \n            \n                \nworkGroupEdit(project: RepositoryContainer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/account-management/account-management.component.ts:85\n                \n            \n\n\n            \n                \n                    Opens Modal to edit the workgroup\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                RepositoryContainer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApiService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/account-management/account-management.component.ts:41\n                            \n                        \n\n                \n                    \n                        Connection to the api service\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/account-management/account-management.component.ts:31\n                            \n                        \n\n                \n                    \n                        Data of the user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            github\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/account-management/account-management.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/account-management/account-management.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jira\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/account-management/account-management.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalsComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('modalComponent')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/account-management/account-management.component.ts:21\n                            \n                        \n\n                \n                    \n                        Viewchild to create the modals\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            repositories\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RepositoryContainer[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/account-management/account-management.component.ts:26\n                            \n                        \n\n                \n                    \n                        Repositories or projects of this user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/account-management/account-management.component.ts:41\n                            \n                        \n\n                \n                    \n                        router to handle url changes\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ApiService} from '../Services/api.service';\nimport {NavigationEnd, Router} from '@angular/router';\nimport { RepositoryContainer } from '../model/RepositoryContainer';\nimport { ModalsComponent } from \"../modals/modals.component\";\n\n/**\n * Component to show all account data including the projects of Github, Jira and custom sources\n */\n@Component({\n    selector: 'app-account-management',\n    templateUrl: './account-management.component.html',\n    styleUrls: ['./account-management.component.css']\n})\n\n\nexport class AccountManagementComponent implements OnInit {\n    /**\n     * Viewchild to create the modals\n     */\n    @ViewChild('modalComponent') modalComponent: ModalsComponent;\n\n    /**\n     * Repositories or projects of this user\n     */\n    repositories: RepositoryContainer[];\n\n    /**\n     * Data of the user\n     */\n    email: string;\n    github: any;\n    jira: any;\n    id: string;\n\n    /**\n     * Constructor\n     * @param apiService Connection to the api service\n     * @param router router to handle url changes\n     */\n    constructor(public apiService: ApiService, public router: Router) {\n        router.events.forEach((event) => {\n            if (event instanceof NavigationEnd && router.url === '/accountManagement') {\n                this.updateSite('Successful');\n            }\n        });\n        this.apiService.getRepositoriesEvent.subscribe((repositories) => {\n            this.repositories = repositories;\n        });\n    }\n\n    /**\n     * Loggs in the user to Github\n     */\n    login() {\n        localStorage.setItem('userId', this.id);\n        this.apiService.githubLogin();\n    }\n    \n    /**\n     * Opens Modal to create a new custom project\n     */\n    newRepository() {\n        this.modalComponent.openCreateCustomProjectModal();\n    }\n\n    /**\n     * Loggs in the user to Jira\n     */\n    jiraLogin() {\n        this.modalComponent.openChangeJiraAccountModal('Jira');\n    }\n \n    /**\n     * Opens Modal to delete the Seed-Test account\n     */\n    deleteAccount() {\n        this.modalComponent.openDeleteAccountModal(this.email);\n    }\n\n    /**\n     * Opens Modal to edit the workgroup\n     * @param project\n     */\n    workGroupEdit(project: RepositoryContainer){\n        this.modalComponent.openWorkgroupEditModal(project);\n    }\n    \n    /**\n     * Fills the Account data\n     * @param report \n     */\n    updateSite(report: String) {\n        if (report === 'Successful') {\n            this.apiService.getUserData().subscribe(user => {\n                this.id = user._id;\n                console.log(user)\n                if (typeof user['email'] !== 'undefined') {\n                    this.email = user['email'];\n                }\n                if (typeof user['github'] !== 'undefined') {\n                    this.github = user['github'];\n                }\n                if (typeof user['jira'] !== 'undefined') {\n                    this.jira = user['jira'];\n                    (document.getElementById('change-jira') as HTMLButtonElement).innerHTML = 'Change Jira-Account';\n                }\n            });\n\n            this.apiService.getRepositories().subscribe((repositories) => {\n                this.repositories = repositories;\n            });\n        }\n    }\n\n   \n    /**\n     * @ignore\n     */\n    ngOnInit() {\n    }\n\n    /**\n     * Removes Github connection from Seed-Test Account\n     */\n    disconnectGithub() {\n        this.apiService.disconnectGithub().subscribe((resp) => {\n            window.location.reload();\n        });\n    }\n\n    /**\n     * Redirects user to Register page if the user only used a Github account and now wants to create a Seed-Test account\n     */\n    navToRegistration() {\n        localStorage.setItem('userId', this.id);\n        this.router.navigate(['/register']);\n    }\n\n    /**\n     * Selects the repository and redirects the user to the story editor\n     * @param userRepository \n     */\n    selectRepository(userRepository: RepositoryContainer) {\n        const ref: HTMLLinkElement = document.getElementById('githubHref') as HTMLLinkElement;\n        ref.href = 'https://github.com/' + userRepository.value;\n        localStorage.setItem('repository', userRepository.value)\n        localStorage.setItem('source', userRepository.source)\n        localStorage.setItem('id', userRepository._id)\n        this.router.navigate(['']);\n    }\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n            \n        \n    \n    \n        Account Settings\n    \n    \n        Seed-Test Account\n        \n            Email: \n            {{email}}\n            \n            Need a new Custom Project?\n            Create Custom Project\n        \n        \n            - no email deposited -\n            Register\n        \n        \n        \n            \n                Custom Projects:\n                \n                    \n                        \n                            \n                                \n                                    \n                                        \n                                        {{repository.value}}\n                                    \n                                    Manage Team\n                                \n                            \n                        \n                    \n                \n            \n        \n        \n        \n            \n                Delete Seed-Test Account\n            \n        \n    \n    \n    \n    \n        Github\n        \n            Github-Account: \n            {{github['login']}}\n            \n                \n                    \n                       \n                       Disconnect GitHub\n                    \n                 \n            \n        \n        \n            \n                \n                   \n                   Login via GitHub\n                \n             \n        \n        \n        \n            \n                Github Projects:\n                \n                    \n                        \n                            \n                                \n                                {{repository.value}}\n                            \n                        \n                    \n                \n            \n        \n     \n    \n    \n        Jira\n        \n            \n                \n                    Jira-Name: \n                    {{jira['AccountName']}}\n                \n                \n                    Jira-Server: \n                    {{jira['Host']}}\n                \n            \n            \n                Login to Jira\n            \n          \n        \n        \n            \n                Jira Projects:\n                \n                    \n                        \n                            \n                                \n                                {{repository.value}}\n                            \n                        \n                    \n                \n            \n        \n        \n    \n\n\n\n    \n\n    \n                \n                    ./account-management.component.css\n                \n                * {\n    padding: 0px;\n    margin: 0px;\n}\n\n.grid-container {\n    display: grid;\n    grid-template-rows: auto;\n    grid-template-columns: 1fr 1fr 1fr;\n    grid-column-gap: 20px;\n    background-color: rgb(255, 255, 255);\n    padding-bottom: 100px;\n    border: 1px solid #999;\n}\n\n#noEmail{\n    color: var(--ocean-blue);\n}\n\n.grid_seedTest{\n    grid-row: 2 / 3;\n    grid-column: 1 / 2;\n    text-align: center;\n    margin-top: 10px;\n    margin-left: 20px;\n}\n\n.grid_customRepos {\n    grid-row: 3 / 4;\n    grid-column: 1 / 2;\n}\n\n.grid_eraseAccount {\n    grid-row: 5 / 6;\n    grid-column: 1 / 2;\n}\n\n.grid_github{\n    grid-row: 2 / 3;\n    grid-column: 2 / 3;\n    text-align: center;\n    align-items: center;\n    margin-top: 10px;\n}\n\n.grid_githubRepos {\n    grid-row: 3 / 4;\n    grid-column: 2 / 3;\n}\n\n.grid_jira{\n    grid-row: 2 / 3;\n    grid-column: 3 / 4;\n    text-align: center;\n    margin-top: 10px;\n    margin-right: 20px;\n}\n\n.grid_jiraRepos {\n    grid-row: 3 / 4;\n    grid-column: 3 / 4;\n}\n\n.active{\n    color: var(--ocean-blue);\n}\n\n#emailLabel{\n    margin-bottom: 25px;\n}\n\n#needCustomRepo{\n    margin-top: 25px;\n}\n\nh1{\n    color:var(--ocean-blue);\n    font-size: 22pt;\n    font-weight: bold;\n    text-align: center;\n    margin-top: 40px;\n    margin-bottom: 20px;\n}\n\nh2{\n    padding-top: 10px;\n    color: var(--white);\n    font-size: 20px;\n    /*background-color: rgba(153, 153, 153, 0.63);*/\n    background-color: var(--dark-grey);\n    padding-bottom: 10px;\n    margin-bottom: 30px;\n}\n\nlabel{\n    text-align: center;\n    font-weight: bold;\n}\n\n.githubLogin{\n    color: var(--white);\n    padding: 5px 10px;\n    background-color: black;\n    border: none;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n}\n\n.githubLoginContainer{\n    margin: 10px;\n    display:inline-block;\n}\n\n.githubLogin img{\n    margin-right: 5px;\n    width: 17px;\n    height: 17px;\n}\n\n.backButton{\n    background: none;\n    width: 50px;\n    height: 50px;\n    margin-top: 30px;\n    margin-left: 20px;\n    font-size: 15px;\n    cursor: pointer;\n    border: none;\n}\n\n.backButton:focus {\n    outline:0 !important;\n}\n\n\n#backImage{\n    width: 40px;\n}\n\n#change-jira{\n    margin-top: 30px;\n}\n\n.uk-card{\n    border: 1px solid grey;\n}\n\na.repoLink{\n    color: var(--ocean-blue);\n    transition: 0.2s;\n}\n\na.repoLink:hover{\n    color: var(--marine-blue);\n}\n\nh2, h1{\n    font-family: Klavika, sans-serif;\n}\n\n.repositories{\n    width: 90%;\n    text-align: center;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 60px;\n    margin-top: 60px;\n    padding: 15px;\n    background-color: transparent;\n    border-top: 1px solid #999;\n}\n\n.repo_img{\n    margin-left: 5px;\n    margin-right: 5px;\n    max-height: 18px;\n}\n\n.editRepoButton{\n    margin-left: 5px;;\n}\n\n.customRepoContainer{\n    display: flex;\n    justify-content: space-between;\n}\n\n@media screen and (max-width: 600px) {\n    .grid{\n        display: grid;\n        grid-template-rows: auto;\n        grid-template-columns: 1fr;\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                            Account Settings                Seed-Test Account                    Email:             {{email}}                        Need a new Custom Project?            Create Custom Project                            - no email deposited -            Register                                                    Custom Projects:                                                                                                                                                                                                                                            {{repository.value}}                                                                        Manage Team                                                                                                                                                                                        Delete Seed-Test Account                                            Github                    Github-Account:             {{github[\\'login\\']}}                                                                                              Disconnect GitHub                                                                                                                                   Login via GitHub                                                                                 Github Projects:                                                                                                                                                        {{repository.value}}                                                                                                                                 Jira                                                        Jira-Name:                     {{jira[\\'AccountName\\']}}                                                    Jira-Server:                     {{jira[\\'Host\\']}}                                                        Login to Jira                                                                  Jira Projects:                                                                                                                                                        {{repository.value}}                                                                                                                        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmResetPasswordComponent', 'selector': 'app-confirm-reset-password'},{'name': 'DeleteScenarioToast', 'selector': '[pink-toast-component]'},{'name': 'EditableComponent', 'selector': 'editable'},{'name': 'ExampleTableComponent', 'selector': 'app-example-table'},{'name': 'FeedbackComponent', 'selector': 'app-feedback'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalsComponent', 'selector': 'app-modals'},{'name': 'ParentComponent', 'selector': 'app-parent'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'ReportHistoryComponent', 'selector': 'app-report-history'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RunTestToast', 'selector': '[pink-toast-component]'},{'name': 'ScenarioEditorComponent', 'selector': 'app-scenario-editor'},{'name': 'StoriesBarComponent', 'selector': 'app-stories-bar'},{'name': 'StoryEditorComponent', 'selector': 'app-story-editor'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'TestAccountComponent', 'selector': 'app-test-account'}];\n    var DIRECTIVES = [{'name': 'EditableOnEnterDirective', 'selector': '[editableOnEnter]'},{'name': 'EditModeDirective', 'selector': '[editMode]'},{'name': 'FocusableDirective', 'selector': '[focusable]'},{'name': 'PasswordConfirmedValidatorDirective', 'selector': '[appPasswordConfirmed]'},{'name': 'ViewModeDirective', 'selector': '[viewMode]'}];\n    var ACTUAL_COMPONENT = {'name': 'AccountManagementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Master Component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiService\n                            \n                            \n                                error\n                            \n                            \n                                repositories\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                showImpressum\n                            \n                            \n                                showTerms\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRepositories\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openImpressum\n                            \n                            \n                                openTerms\n                            \n                            \n                                selectRepository\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:34\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRepositories\n                        \n                        \n                    \n                \n            \n            \n                \ngetRepositories()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:87\n                \n            \n\n\n            \n                \n                    Gets the repositories\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:119\n                \n            \n\n\n            \n                \n                    Loggs out the user and redirects it to the login page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:53\n                \n            \n\n\n            \n                \n                    Retrieves Repositories\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openImpressum\n                        \n                        \n                    \n                \n            \n            \n                \nopenImpressum()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:75\n                \n            \n\n\n            \n                \n                    Opens the impressum section\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openTerms\n                        \n                        \n                    \n                \n            \n            \n                \nopenTerms()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:63\n                \n            \n\n\n            \n                \n                    Opens the terms section\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectRepository\n                        \n                        \n                    \n                \n            \n            \n                \nselectRepository(userRepository: RepositoryContainer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:102\n                \n            \n\n\n            \n                \n                    Selects a project from the project list\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userRepository\n                                    \n                                                RepositoryContainer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApiService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:34\n                            \n                        \n\n                \n                    \n                        Error during retrieving the projects\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            repositories\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RepositoryContainer[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:19\n                            \n                        \n\n                \n                    \n                        Currently retrieved projects\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showImpressum\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:24\n                            \n                        \n\n                \n                    \n                        If the impressum is shown\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showTerms\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:29\n                            \n                        \n\n                \n                    \n                        If the terms are shown\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {ApiService} from './Services/api.service';\nimport { Router } from '@angular/router';\nimport { RepositoryContainer } from './model/RepositoryContainer';\n\n/**\n * Master Component\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  /**\n   * Currently retrieved projects\n   */\n  repositories: RepositoryContainer[];\n\n  /**\n   * If the impressum is shown\n   */\n  showImpressum: boolean = false;\n\n  /**\n   * If the terms are shown\n   */\n  showTerms: boolean = false;\n\n  /**\n   * Error during retrieving the projects\n   */\n  error: string;\n\n  /**\n   * Constructor\n   * @param apiService \n   * @param router \n   */\n  constructor(public apiService: ApiService, public router: Router) {\n    this.apiService.getRepositoriesEvent.subscribe((repositories) => {\n      this.repositories = repositories;\n    });\n    this.apiService.logoutEvent.subscribe(_ => {\n      this.logout();\n  });\n  }\n\n  /**\n   * Retrieves Repositories\n   */\n  ngOnInit() {\n    this.getRepositories();\n    if(!this.apiService.urlReceived) {\n      this.apiService.getBackendInfo()\n    }\n  }\n\n  /**\n   * Opens the terms section\n   */\n  openTerms(){\n    this.showImpressum = false;\n    this.showTerms = !this.showTerms;\n    if(this.showTerms) {\n      const footer: HTMLElement = document.getElementById('footer');\n      footer.scrollIntoView();\n    }\n  }\n\n  /**\n   * Opens the impressum section\n   */\n  openImpressum(){\n    this.showTerms = false;\n    this.showImpressum = !this.showImpressum;\n    if(this.showImpressum) {\n      const footer: HTMLElement = document.getElementById('footer');\n      footer.scrollIntoView();\n    }\n  }\n\n  /**\n   * Gets the repositories\n   */\n  getRepositories() {\n    if (this.apiService.isLoggedIn() && (typeof this.repositories === 'undefined' || this.repositories.length  {\n        this.repositories = resp;\n        console.log('repositories', this.repositories);\n      }, (err) => {\n        this.error = err.error;\n      });\n    }\n  }\n\n  /**\n   * Selects a project from the project list\n   * @param userRepository \n   */\n  selectRepository(userRepository: RepositoryContainer) {\n    const ref: HTMLLinkElement = document.getElementById('githubHref') as HTMLLinkElement;\n    ref.href = 'https://github.com/' + userRepository.value;\n    localStorage.setItem('repository', userRepository.value)\n    localStorage.setItem('source', userRepository.source)\n    localStorage.setItem('id', userRepository._id)\n    if(this.router.url !== '/'){\n      this.router.navigate(['']);\n    } else {\n      this.apiService.getStories(userRepository).subscribe((resp) => {\n      });\n    }\n  }\n\n  /**\n   * Loggs out the user and redirects it to the login page\n   */\n  logout() {\n    this.repositories = undefined;\n    this.apiService.logoutUser().subscribe(resp => {\n    });\n    this.router.navigate(['/login']);\n  }\n  \n}\n    \n\n    \n        \n  \n    \n    \n      menu\n      \n        \n          \n            \n              Projects\n                \n                  \n                   \n                     \n                     \n                     \n                     {{repository.value}}\n                   \n                  \n                \n            \n          \n          \n            Account Settings\n          \n          \n            Logout\n          \n        \n      \n      Version 1.3.2\n    \n\n\n    \n    \n      \n        \n          \n        \n      \n    \n    \n    \n      \n        \n          Feedback\n        \n        \n          Help\n            \n              Tutorial (german)\n              Tutorial (english)\n            \n        \n        \n      \n    \n  \n\n  \n    \n  \n\n  \n    \n      Impressum\n      Terms\n    \n    \n      \n        \n      \n    -->\n    \n      \n        Seed-Test\n        Email: seed-test@adesso.de\n        https://github.com/adessoAG/Seed-Test\n      \n      \n        This is only a demo version of an open source application\n        The maker of this service is not liable for the user and its data\n        It is licenced under the MIT Licence\n        For more information\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                *{\n  padding: 0px;\n  margin: 0px;\n}\n/* Refactor this*/\n.grid{\n  background-color: var(--light-grey);\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: auto 1fr auto;\n  grid-template-areas:\n  \"topnav\"\n  \"router\"\n  \"footer\";\n\n  /*Below provides sticky footer*/\n  min-height: 100vh;\n}\n\n.router{\n  grid-area: router;\n  background-color: var(--light-grey);\n}\n\n\n.topnav{\n  /*background-color: #999;*/\n  background-color: var(--dark-grey);\n  grid-area: topnav;\n  display: grid;\n  grid-template-columns: 3fr auto 1fr auto 3fr;\n  grid-template-areas:\n  \"left . center . right\";\n}\n\n.topnav a {\n  text-align: center;\n  text-decoration: none;\n  font-size: 17px;\n}\n\n.topnavRight{\n  grid-area: right;\n  align-self: center;\n  justify-self: right;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  align-content: center;\n}\n\n.topnavCenter{\n  grid-area: center;\n  align-self: center;\n}\n\n.topnavRight a{\n  padding: 12px;\n}\n\n\n#version {\n  color: var(--light-grey);\n  padding: 17px;\n}\n\n.impressum, .terms {\n  text-align: center;\n  color: var(--white);\n  font-size: small;\n  padding: 4px;\n  position: center;\n\n}\n\n.footer{\n  grid-area: footer;\n  display: grid;\n  background-color: var(--dark-grey);\n  grid-template-rows: auto auto;\n  grid-template-columns: 1fr auto 1fr;\n  grid-template-areas:\n  \". footerCenter adessoLogo\"\n  \"expendable expendable expendable\";\n  justify-items: center;\n}\n\n.footerCenter{\n  grid-area: footerCenter;\n  grid-column-start: 2;\n  margin-left: auto;\n  display: flex;\n  flex-direction: row;\n}\n\n.expendable {\n  grid-area: expendable;\n}\n\n.footerCenter > p {\n  padding: 0px 15px;\n  align-self: center;\n  justify-content: center;\n\n}\n\n.adessoLogo{\n  grid-area: adessoLogo;\n  justify-self: flex-end;\n}\n\n.impressum:hover,\n.terms:hover{\n  text-decoration: underline;\n  cursor: pointer;\n}\n\n.impressumContent,\n.termsContent{\n  display: block;\n  text-align: center;\n}\n\n.impressumContent p,\n.impressumContent a,\n.termsContent a,\n.termsContent p{\n  color: var(--white);\n  text-align: center;\n  font-size: x-small;\n}\n\n#adesso-logo {\n  padding: 5px;\n  height: 40px;\n}\n\n.rightButton {\n  background-color: transparent;\n  color: var(--white);\n  padding: 13px;\n  font-size: 15px;\n  border: none;\n  cursor: pointer;\n  transition: 0.3s;\n  outline: none;\n}\n\n.rightButton:hover, .menuButton:hover {\n  color: var(--light-grey);\n}\n\na:hover{\n  color: var(--ocean-blue);\n}\n\n#logo {\n  height: 51px;\n}\n\n.menuButton{\n  color: var(--white);\n  outline: none;\n  font-style: inherit;\n  padding: 12px 20px;\n  border: 0px;\n  background: transparent;\n  float: left;\n  transition: 0.3s;\n}\n\n.menuSelection{\n  font-size: 100%;\n  font-style: inherit;\n  padding: 12px 16px;\n  border: 0px;\n  background-color: transparent;\n  color: var(--black);\n  outline: none;\n}\n\n.menuSelection:hover{\n  color: var(--ocean-blue);\n}\n\n.menuSelection#logout:hover{\n  color: var(--grape);\n}\n\n/*dropdown general*/\n\n.dropdown{\n  position: relative;\n  display: inline-block;\n}\n\n.dropdown-list{\n  display: none;\n  position: fixed;\n  background-color: var(--light-grey);\n  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n  z-index: 1;\n  list-style-type: none;\n  overflow-y: auto;\n  max-height: 70%;\n  height: auto;\n}\n\n.dropdown-list a{\n  overflow: auto;\n  color: var(--black);\n  padding: 12px 16px;\n  display: block;\n  list-style-type: none;\n  text-decoration: none;\n  margin-left: auto;\n  margin-right: auto;\n  font-size: 14px;\n}\n.dropdown-list li{\n  text-align: center;\n}\n\n.dropdown-list a:hover{\n  color: var(--ocean-blue);\n}\n\n.dropdown:hover .dropdown-list{\n  display: block;\n}\n\n.list-item{\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.repo_img{\n  margin-left: 10px;\n  margin-right: 5px;\n  max-height: 20px;\n}\n.repoButton{\n  margin-right: 10px;\n  margin-left: 5px;\n  outline: none;\n}\n\n#githubHref{\n  color: var(--white);\n  transition: 0.3s;\n}\n\n#githubHref:hover{\n  color: var(--light-grey);\n}\n\n@media screen and (max-width: 600px) {\n  .topnav a, .topnavRight {\n    float: none;\n    display: block;\n  }\n\n  .topnavCenter a {\n    position: relative;\n    top: 0;\n    left: 0;\n    transform: none;\n  }\n\n  .topnavRight{\n    text-align: center;\n  }\n\n  .topnavRight{\n    text-align: center;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                menu                                                  Projects                                                                                                                                         {{repository.value}}                                                                                                 Account Settings                                Logout                              Version 1.3.2                                                                                      Feedback                          Help                          Tutorial (german)              Tutorial (english)                                                            Impressum      Terms                                -->                  Seed-Test        Email: seed-test@adesso.de        https://github.com/adessoAG/Seed-Test                    This is only a demo version of an open source application        The maker of this service is not liable for the user and its data        It is licenced under the MIT Licence        For more information            '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmResetPasswordComponent', 'selector': 'app-confirm-reset-password'},{'name': 'DeleteScenarioToast', 'selector': '[pink-toast-component]'},{'name': 'EditableComponent', 'selector': 'editable'},{'name': 'ExampleTableComponent', 'selector': 'app-example-table'},{'name': 'FeedbackComponent', 'selector': 'app-feedback'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalsComponent', 'selector': 'app-modals'},{'name': 'ParentComponent', 'selector': 'app-parent'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'ReportHistoryComponent', 'selector': 'app-report-history'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RunTestToast', 'selector': '[pink-toast-component]'},{'name': 'ScenarioEditorComponent', 'selector': 'app-scenario-editor'},{'name': 'StoriesBarComponent', 'selector': 'app-stories-bar'},{'name': 'StoryEditorComponent', 'selector': 'app-story-editor'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'TestAccountComponent', 'selector': 'app-test-account'}];\n    var DIRECTIVES = [{'name': 'EditableOnEnterDirective', 'selector': '[editableOnEnter]'},{'name': 'EditModeDirective', 'selector': '[editMode]'},{'name': 'FocusableDirective', 'selector': '[focusable]'},{'name': 'PasswordConfirmedValidatorDirective', 'selector': '[appPasswordConfirmed]'},{'name': 'ViewModeDirective', 'selector': '[viewMode]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAccountManagementComponent\n\nAccountManagementComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccountManagementComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nConfirmResetPasswordComponent\n\nConfirmResetPasswordComponent\n\nAppModule -->\n\nConfirmResetPasswordComponent->AppModule\n\n\n\n\n\nDeleteScenarioToast\n\nDeleteScenarioToast\n\nAppModule -->\n\nDeleteScenarioToast->AppModule\n\n\n\n\n\nEditModeDirective\n\nEditModeDirective\n\nAppModule -->\n\nEditModeDirective->AppModule\n\n\n\n\n\nEditableComponent\n\nEditableComponent\n\nAppModule -->\n\nEditableComponent->AppModule\n\n\n\n\n\nEditableOnEnterDirective\n\nEditableOnEnterDirective\n\nAppModule -->\n\nEditableOnEnterDirective->AppModule\n\n\n\n\n\nExampleTableComponent\n\nExampleTableComponent\n\nAppModule -->\n\nExampleTableComponent->AppModule\n\n\n\n\n\nFeedbackComponent\n\nFeedbackComponent\n\nAppModule -->\n\nFeedbackComponent->AppModule\n\n\n\n\n\nFocusableDirective\n\nFocusableDirective\n\nAppModule -->\n\nFocusableDirective->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nModalsComponent\n\nModalsComponent\n\nAppModule -->\n\nModalsComponent->AppModule\n\n\n\n\n\nParentComponent\n\nParentComponent\n\nAppModule -->\n\nParentComponent->AppModule\n\n\n\n\n\nPasswordConfirmedValidatorDirective\n\nPasswordConfirmedValidatorDirective\n\nAppModule -->\n\nPasswordConfirmedValidatorDirective->AppModule\n\n\n\n\n\nRegistrationComponent\n\nRegistrationComponent\n\nAppModule -->\n\nRegistrationComponent->AppModule\n\n\n\nAppModule -->\n\nRegistrationComponent->AppModule\n\n\n\n\n\nReportComponent\n\nReportComponent\n\nAppModule -->\n\nReportComponent->AppModule\n\n\n\n\n\nReportHistoryComponent\n\nReportHistoryComponent\n\nAppModule -->\n\nReportHistoryComponent->AppModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAppModule -->\n\nResetPasswordComponent->AppModule\n\n\n\n\n\nRunTestToast\n\nRunTestToast\n\nAppModule -->\n\nRunTestToast->AppModule\n\n\n\n\n\nScenarioEditorComponent\n\nScenarioEditorComponent\n\nAppModule -->\n\nScenarioEditorComponent->AppModule\n\n\n\n\n\nStoriesBarComponent\n\nStoriesBarComponent\n\nAppModule -->\n\nStoriesBarComponent->AppModule\n\n\n\n\n\nStoryEditorComponent\n\nStoryEditorComponent\n\nAppModule -->\n\nStoryEditorComponent->AppModule\n\n\n\n\n\nTermsComponent\n\nTermsComponent\n\nAppModule -->\n\nTermsComponent->AppModule\n\n\n\n\n\nTestAccountComponent\n\nTestAccountComponent\n\nAppModule -->\n\nTestAccountComponent->AppModule\n\n\n\n\n\nViewModeDirective\n\nViewModeDirective\n\nAppModule -->\n\nViewModeDirective->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nApiService\n\nApiService\n\nAppModule -->\n\nApiService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AccountManagementComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            ConfirmResetPasswordComponent\n                        \n                        \n                            DeleteScenarioToast\n                        \n                        \n                            EditModeDirective\n                        \n                        \n                            EditableComponent\n                        \n                        \n                            EditableOnEnterDirective\n                        \n                        \n                            ExampleTableComponent\n                        \n                        \n                            FeedbackComponent\n                        \n                        \n                            FocusableDirective\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            ModalsComponent\n                        \n                        \n                            ParentComponent\n                        \n                        \n                            PasswordConfirmedValidatorDirective\n                        \n                        \n                            RegistrationComponent\n                        \n                        \n                            RegistrationComponent\n                        \n                        \n                            ReportComponent\n                        \n                        \n                            ReportHistoryComponent\n                        \n                        \n                            ResetPasswordComponent\n                        \n                        \n                            RunTestToast\n                        \n                        \n                            ScenarioEditorComponent\n                        \n                        \n                            StoriesBarComponent\n                        \n                        \n                            StoryEditorComponent\n                        \n                        \n                            TermsComponent\n                        \n                        \n                            TestAccountComponent\n                        \n                        \n                            ViewModeDirective\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            RunTestToast\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ApiService\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule, CUSTOM_ELEMENTS_SCHEMA} from '@angular/core';\nimport {RouterModule} from '@angular/router';\nimport {ROUTES} from '../app/routes/routes';\nimport {AppComponent} from './app.component';\nimport {ScenarioEditorComponent} from './scenario-editor/scenario-editor.component';\nimport {HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\nimport {ApiService} from './Services/api.service';\nimport {StoriesBarComponent} from './stories-bar/stories-bar.component';\nimport {ParentComponent} from './parent/parent.component';\nimport {LoginComponent} from './login/login.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {AuthGuard} from './guards/auth.guard';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatListModule} from '@angular/material/list'\nimport {ExampleTableComponent} from './example-table/example-table.component';\nimport {EditableComponent} from './editable/editable.component';\nimport {ViewModeDirective} from './directives/view-mode.directive';\nimport {EditModeDirective} from './directives/edit-mode.directive';\nimport {EditableOnEnterDirective} from './directives/edit-on-enter.directive';\nimport {FocusableDirective} from './editable/focusable.directive';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { FeedbackComponent } from './feedback/feedback.component';\nimport { TermsComponent } from './terms/terms.component';\nimport { StoryEditorComponent } from './story-editor/story-editor.component';\nimport { AccountManagementComponent } from './account-management/account-management.component';\nimport {CookieService } from 'ngx-cookie-service';\nimport { TestAccountComponent } from './test-account/test-account.component'\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport { ReportComponent } from './report/report.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { PasswordConfirmedValidatorDirective } from './directives/password-confirmed.directive';\nimport { ToastrModule } from \"ngx-toastr\";\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { MatCarouselModule } from '@ngbmodule/material-carousel';\nimport {RunTestToast} from './runSave-toast'\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\nimport { ConfirmResetPasswordComponent } from './confirm-reset-password/confirm-reset-password.component';\nimport { ModalsComponent } from './modals/modals.component'\nimport { DeleteScenarioToast } from './deleteScenario-toast';\nimport { DEFAULT_TIMEOUT, TimeoutInterceptor } from './Services/timeout-interceptor.interceptor';\nimport { ReportHistoryComponent } from './report-history/report-history.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ScenarioEditorComponent,\n    StoriesBarComponent,\n    ParentComponent,\n    LoginComponent,\n    ExampleTableComponent,\n    ViewModeDirective,\n    EditModeDirective,\n    EditableComponent,\n    FocusableDirective,\n    EditableOnEnterDirective,\n    FeedbackComponent,\n    TermsComponent,\n    AccountManagementComponent,\n    TestAccountComponent,\n    StoryEditorComponent,\n    RegistrationComponent,\n    RegistrationComponent,\n    PasswordConfirmedValidatorDirective,\n    ReportComponent,\n    RunTestToast,\n    DeleteScenarioToast,\n    ResetPasswordComponent,\n    ConfirmResetPasswordComponent,\n    ModalsComponent,\n    ReportHistoryComponent\n  ],\n  imports: [\n      NgbModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    MatTableModule,\n    MatListModule,\n    RouterModule.forRoot(ROUTES),\n    FormsModule,\n    DragDropModule,\n    MatProgressSpinnerModule,\n    MatCarouselModule.forRoot(),\n    ToastrModule.forRoot({\n      timeOut: 3000\n    })\n  ],\n  entryComponents: [RunTestToast],\n  providers: [ApiService, AuthGuard, CookieService,[{ provide: HTTP_INTERCEPTORS, useClass: TimeoutInterceptor, multi: true }], [{ provide: DEFAULT_TIMEOUT, useValue: 120000 }]],\n  bootstrap: [AppComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/auth.guard.ts\n            \n\n                \n                Description\n                \n                \n                    Guard to check if the user is logged in\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/auth.guard.ts:9\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/guards/auth.guard.ts:23\n                \n            \n\n\n            \n                \n                    Checks if the user is logged in\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        boolean if the user is logged in\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { ApiService } from '../Services/api.service';\n\n/**\n * Guard to check if the user is logged in\n */\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n    /**\n     * Constructor\n     * @param apiService \n     * @param router \n     */\n    constructor(private apiService: ApiService,\n                private router: Router) {}\n\n    /**\n     * Checks if the user is logged in\n     * @returns boolean if the user is logged in\n     */\n    canActivate(): boolean {\n        if (this.apiService.isLoggedIn()) { return true; }\n        this.router.navigate(['/login']);\n        return false;\n    }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Background.html":{"url":"interfaces/Background.html","title":"interface - Background","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Background\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/Background.ts\n        \n\n            \n                Description\n            \n            \n                Interface of the Background \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        saved\n                                \n                                \n                                        stepDefinitions\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Given name of the background\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        saved\n                                    \n                                \n                                \n                                    \n                                        saved:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the background is saved\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stepDefinitions\n                                    \n                                \n                                \n                                    \n                                        stepDefinitions:         StepDefinitionBackground\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StepDefinitionBackground\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Stepdefinitions included in the background\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { StepDefinitionBackground } from './StepDefinitionBackground';\n\n/**\n * Interface of the Background \n */\nexport interface Background {\n    /**\n     * Given name of the background\n     */\n    name?: string;\n\n    /**\n     * Stepdefinitions included in the background\n     */\n    stepDefinitions: StepDefinitionBackground;\n\n    /**\n     * If the background is saved\n     */\n    saved?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Block.html":{"url":"interfaces/Block.html","title":"interface - Block","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Block\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/Block.ts\n        \n\n            \n                Description\n            \n            \n                Interface of a block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        _id\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        owner\n                                \n                                \n                                            Optional\n                                        repository\n                                \n                                \n                                            Optional\n                                        repositoryId\n                                \n                                \n                                            Optional\n                                        source\n                                \n                                \n                                        stepDefinitions\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Object id of the block from the database\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Name of the block\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                    \n                                \n                                \n                                    \n                                        owner:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Creator of the block\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        repository\n                                    \n                                \n                                \n                                    \n                                        repository:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Name of the repository which the block belongs to\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        repositoryId\n                                    \n                                \n                                \n                                    \n                                        repositoryId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Id of the repository which the block belongs to\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Source of the repository the block belongs to\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stepDefinitions\n                                    \n                                \n                                \n                                    \n                                        stepDefinitions:         StepDefinition\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StepDefinition\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Step definitions included in the block\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { StepDefinition } from \"./StepDefinition\";\n\n/**\n * Interface of a block\n */\nexport interface Block {\n    /**\n     * Object id of the block from the database\n     */\n    _id?: any;\n\n    /**\n     * Creator of the block\n     */\n    owner?: any;\n\n    /**\n     * Name of the block\n     */\n    name?: string;\n\n    /**\n     * Step definitions included in the block\n     */\n    stepDefinitions: StepDefinition;\n\n    /**\n     * Id of the repository which the block belongs to\n     */\n    repositoryId?: string;\n\n    /**\n     * Name of the repository which the block belongs to\n     */\n    repository?: string;\n\n    /**\n     * Source of the repository the block belongs to\n     */\n    source?: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmResetPasswordComponent.html":{"url":"components/ConfirmResetPasswordComponent.html","title":"component - ConfirmResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfirmResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/confirm-reset-password/confirm-reset-password.component.ts\n\n\n    \n        Description\n    \n    \n        Component to enable to reset the password\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirm-reset-password\n            \n\n            \n                styleUrls\n                ./confirm-reset-password.component.css\n            \n\n\n\n            \n                templateUrl\n                ./confirm-reset-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiService\n                            \n                            \n                                password\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmReset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/confirm-reset-password/confirm-reset-password.component.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                api service\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            confirmReset\n                        \n                        \n                    \n                \n            \n            \n                \nconfirmReset(form: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/confirm-reset-password/confirm-reset-password.component.ts:46\n                \n            \n\n\n            \n                \n                    Confirm the reset and send new password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        form with the new password value\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApiService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/confirm-reset-password/confirm-reset-password.component.ts:34\n                            \n                        \n\n                \n                    \n                        api service\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/confirm-reset-password/confirm-reset-password.component.ts:25\n                            \n                        \n\n                \n                    \n                        New Password of the user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uuid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/confirm-reset-password/confirm-reset-password.component.ts:20\n                            \n                        \n\n                \n                    \n                        Id of the reset password request\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component} from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport {ApiService} from '../Services/api.service';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n/**\n * Component to enable to reset the password\n */\n@Component({\n  selector: 'app-confirm-reset-password',\n  templateUrl: './confirm-reset-password.component.html',\n  styleUrls: ['./confirm-reset-password.component.css']\n})\n\nexport class ConfirmResetPasswordComponent {\n \n  /**\n   * Id of the reset password request\n   */\n  uuid: string;\n\n  /**\n   * New Password of the user\n   */\n  password: string; \n\n \n  /**\n   * Constructor\n   * @param apiService api service\n   * @param router \n   * @param route \n   */\n  constructor(public apiService: ApiService, private router: Router, private route: ActivatedRoute) {\n    this.route.queryParams.subscribe((params) => {\n      if (params.uuid){\n           this.uuid = params.uuid;\n       }\n   })\n  }\n\n  /**\n   * Confirm the reset and send new password\n   * @param form form with the new password value\n   */\n  confirmReset(form : NgForm) {\n    this.apiService.confirmReset(this.uuid, form.value.password).toPromise()\n    this.router.navigate(['/login']);\n  }\n\n}\n\n    \n\n    \n        \n \n   \n    \n    Reset Your Password\n     \n      \n      \n      \n    \n      \n      \n      \n    -->\n    \n      \n      \n      Password must be at least 8 characters long\n      \n        \n      \n      \n      \n\n    \n      Confirm New Password\n    \n  \n\n    \n\n    \n                \n                    ./confirm-reset-password.component.css\n                \n                * {\n    padding: 0px;\n    margin: 0px;\n}\n\n\n#headerFont{\n    color:var(--ocean-blue);\n}\n\n.grid{\n    display: grid;\n    grid-template-rows: auto;\n    grid-template-columns: 1fr 1fr 1fr;\n    grid-template-areas: \"formular\";\n    background-color: var(--white);\n    place-items: center;\n}\n\n.formular{\n    grid-area: formular;\n    grid-column: 2 / 3;\n    text-align: center;\n    background-color: var(--white);\n    padding: 80px 50px 20px;\n    margin-bottom: 80px;\n}\n\n\n#passwordLengthInfo{\n    font-size: small;\n}\n\n#headerFont{\n    color:var(--ocean-blue);\n}\n\n.uk-form-controls{\n    border-radius: 3px;\n    padding: 5px 5px 5px 5px;\n}\n\n.ng-valid[required], .ng-valid.required  {\n    border-left: 5px solid #53d35a; \n  }\n  \n.ng-invalid:not(form)  {\n    border-left: 5px solid var(--ocean-blue); \n  }\n\n.cross-validation-error input {\n    border-left: 5px solid #d15553;\n  }\n\ninput.wrongEmail {\n  border-left: 5px solid #d15553;\n}\n\n#email, #confirmPassword{\n    margin: 25px;\n}\n\n.wrongLogin{\n    background-color: rgb(228, 92, 92);\n    text-align: center;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Reset Your Password                                                 -->                      Password must be at least 8 characters long                                          Confirm New Password      '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmResetPasswordComponent', 'selector': 'app-confirm-reset-password'},{'name': 'DeleteScenarioToast', 'selector': '[pink-toast-component]'},{'name': 'EditableComponent', 'selector': 'editable'},{'name': 'ExampleTableComponent', 'selector': 'app-example-table'},{'name': 'FeedbackComponent', 'selector': 'app-feedback'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalsComponent', 'selector': 'app-modals'},{'name': 'ParentComponent', 'selector': 'app-parent'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'ReportHistoryComponent', 'selector': 'app-report-history'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RunTestToast', 'selector': '[pink-toast-component]'},{'name': 'ScenarioEditorComponent', 'selector': 'app-scenario-editor'},{'name': 'StoriesBarComponent', 'selector': 'app-stories-bar'},{'name': 'StoryEditorComponent', 'selector': 'app-story-editor'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'TestAccountComponent', 'selector': 'app-test-account'}];\n    var DIRECTIVES = [{'name': 'EditableOnEnterDirective', 'selector': '[editableOnEnter]'},{'name': 'EditModeDirective', 'selector': '[editMode]'},{'name': 'FocusableDirective', 'selector': '[focusable]'},{'name': 'PasswordConfirmedValidatorDirective', 'selector': '[appPasswordConfirmed]'},{'name': 'ViewModeDirective', 'selector': '[viewMode]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DeleteScenarioToast.html":{"url":"components/DeleteScenarioToast.html","title":"component - DeleteScenarioToast","body":"\n                   \n\n\n\n\n\n  Components\n  DeleteScenarioToast\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/deleteScenario-toast.ts\n\n\n    \n        Description\n    \n    \n        Component of the Delete Scenario toasts\n\n    \n\n    \n        Extends\n    \n    \n            Toast\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n            \n                preserveWhitespaces\n                false\n            \n\n\n\n            \n                selector\n                [pink-toast-component]\n            \n\n\n            \n                styles\n                \n        a {\n            background: #388196;\n            margin: 2px;\n        }\n\n        .deleteButton{\n          background: darkred;\n        }\n        \n        a:hover {\n            color: black;\n        }\n    \n            \n\n            \n                template\n                \n  \n    \n      {{ title }}\n    \n    \n    \n    \n      {{ message }}\n    \n  \n  \n    \n        {{ deleteString }}\n    \n    \n    {{ cancelString }}\n    \n    \n      close\n    \n  \n\n\n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiService\n                            \n                            \n                                cancelString\n                            \n                            \n                                deleteString\n                            \n                            \n                                    Public\n                                toastPackage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteToast\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toastrService: ToastrService, toastPackage: ToastPackage, apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/deleteScenario-toast.ts:125\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toastrService\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        toastPackage\n                                                  \n                                                        \n                                                                    ToastPackage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                constructor is only necessary when not using AoT\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteToast\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteToast(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/deleteScenario-toast.ts:146\n                \n            \n\n\n            \n                \n                    Creates a toast and deltes the scenario\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApiService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/deleteScenario-toast.ts:137\n                            \n                        \n\n                \n                    \n                        constructor is only necessary when not using AoT\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cancelString\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Cancel'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/deleteScenario-toast.ts:125\n                            \n                        \n\n                \n                    \n                        Name of the cancel button\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteString\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Delete'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/deleteScenario-toast.ts:121\n                            \n                        \n\n                \n                    \n                        Name of the delete button\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toastPackage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ToastPackage\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/deleteScenario-toast.ts:136\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n    animate,\n    keyframes,\n    state,\n    style,\n    transition,\n    trigger\n  } from '@angular/animations';\nimport { Component} from '@angular/core';\nimport { Toast, ToastrService, ToastPackage } from 'ngx-toastr';\nimport { ApiService } from './Services/api.service';\n  \n/**\n * Component of the Delete Scenario toasts\n */\n  @Component({\n    selector: '[pink-toast-component]',\n    //styles: [`\n    //  :host {\n    //    background-color: #FF69B4;\n    //    position: relative;\n    //    overflow: hidden;\n    //    margin: 0 0 6px;\n    //    padding: 10px 10px 10px 10px;\n    //    width: 300px;\n    //    border-radius: 3px 3px 3px 3px;\n    //    color: #FFFFFF;\n    //    pointer-events: all;\n    //    cursor: pointer;\n    //  }\n    //  .btn-pink {\n    //    -webkit-backface-visibility: hidden;\n    //    -webkit-transform: translateZ(0);\n    //  }\n    //`],\n    styles:[`\n        a {\n            background: #388196;\n            margin: 2px;\n        }\n\n        .deleteButton{\n          background: darkred;\n        }\n        \n        a:hover {\n            color: black;\n        }\n    `],\n    template: `\n    \n      \n        \n          {{ title }}\n        \n        \n        \n        \n          {{ message }}\n        \n      \n      \n        \n            {{ deleteString }}\n        \n        \n        {{ cancelString }}\n        \n        \n          close\n        \n      \n    \n    \n      \n    \n    `,\n    animations: [\n      trigger('flyInOut', [\n        state('inactive', style({\n          opacity: 0,\n        })),\n        transition('inactive => active', animate('400ms ease-out', keyframes([\n          style({\n            transform: 'translate3d(100%, 0, 0) skewX(-30deg)',\n            opacity: 0,\n          }),\n          style({\n            transform: 'skewX(20deg)',\n            opacity: 1,\n          }),\n          style({\n            transform: 'skewX(-5deg)',\n            opacity: 1,\n          }),\n          style({\n            transform: 'none',\n            opacity: 1,\n          }),\n        ]))),\n        transition('active => removed', animate('400ms ease-out', keyframes([\n          style({\n            opacity: 1,\n          }),\n          style({\n            transform: 'translate3d(100%, 0, 0) skewX(30deg)',\n            opacity: 0,\n          }),\n        ]))),\n      ]),\n    ],\n    preserveWhitespaces: false,\n  })\n  export class DeleteScenarioToast extends Toast {\n    \n    /**\n     * Name of the delete button\n     */\n    deleteString = 'Delete';\n    /**\n     * Name of the cancel button\n     */\n    cancelString = 'Cancel';\n\n    /**\n     * Constructor\n     * @param toastrService \n     * @param toastPackage \n     * @param apiService \n     * constructor is only necessary when not using AoT\n     */\n    constructor(\n      protected toastrService: ToastrService,\n      public toastPackage: ToastPackage,\n      public apiService: ApiService\n    ) {\n      super(toastrService, toastPackage);\n    }\n    \n    /**\n     * Creates a toast and deltes the scenario\n     * @param event \n     */\n    deleteToast(event: Event){\n        event.stopPropagation();\n        this.apiService.deleteScenarioEmitter()\n        this.remove();\n    }\n  }\n    \n\n\n    \n            \n        a {\n            background: #388196;\n            margin: 2px;\n        }\n\n        .deleteButton{\n          background: darkred;\n        }\n        \n        a:hover {\n            color: black;\n        }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ title }}                      {{ message }}                    {{ deleteString }}            {{ cancelString }}              close        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmResetPasswordComponent', 'selector': 'app-confirm-reset-password'},{'name': 'DeleteScenarioToast', 'selector': '[pink-toast-component]'},{'name': 'EditableComponent', 'selector': 'editable'},{'name': 'ExampleTableComponent', 'selector': 'app-example-table'},{'name': 'FeedbackComponent', 'selector': 'app-feedback'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalsComponent', 'selector': 'app-modals'},{'name': 'ParentComponent', 'selector': 'app-parent'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'ReportHistoryComponent', 'selector': 'app-report-history'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RunTestToast', 'selector': '[pink-toast-component]'},{'name': 'ScenarioEditorComponent', 'selector': 'app-scenario-editor'},{'name': 'StoriesBarComponent', 'selector': 'app-stories-bar'},{'name': 'StoryEditorComponent', 'selector': 'app-story-editor'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'TestAccountComponent', 'selector': 'app-test-account'}];\n    var DIRECTIVES = [{'name': 'EditableOnEnterDirective', 'selector': '[editableOnEnter]'},{'name': 'EditModeDirective', 'selector': '[editMode]'},{'name': 'FocusableDirective', 'selector': '[focusable]'},{'name': 'PasswordConfirmedValidatorDirective', 'selector': '[appPasswordConfirmed]'},{'name': 'ViewModeDirective', 'selector': '[viewMode]'}];\n    var ACTUAL_COMPONENT = {'name': 'DeleteScenarioToast'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/EditModeDirective.html":{"url":"directives/EditModeDirective.html","title":"directive - EditModeDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  EditModeDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/directives/edit-mode.directive.ts\n        \n\n            \n                Description\n            \n            \n                Directive to activate Edit Mode for the example table\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [editMode]\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive, TemplateRef } from '@angular/core';\n\n/**\n * Directive to activate Edit Mode for the example table\n */\n\n@Directive({\n  selector: '[editMode]'\n})\n\nexport class EditModeDirective {\n  /**\n   * @ignore\n   */\n  constructor(public tpl: TemplateRef) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditableComponent.html":{"url":"components/EditableComponent.html","title":"component - EditableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/editable/editable.component.ts\n\n\n    \n        Description\n    \n    \n        Component to enable editable cells in the example table\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                editable\n            \n\n            \n                styleUrls\n                ./editable.component.css\n            \n\n\n\n            \n                templateUrl\n                ./editable.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editMode\n                            \n                            \n                                editMode$\n                            \n                            \n                                editModeTpl\n                            \n                            \n                                mode\n                            \n                            \n                                viewModeTpl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                editModeHandler\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toViewMode\n                            \n                            \n                                    Private\n                                viewModeHandler\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    element\n                                \n                                \n                                    currentView\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        update\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/editable/editable.component.ts:21\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            editModeHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editModeHandler()\n                \n            \n\n\n            \n                \n                    Defined in src/app/editable/editable.component.ts:76\n                \n            \n\n\n            \n                \n                    Handles the edit mode\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/editable/editable.component.ts:36\n                \n            \n\n\n            \n                \n                    handles the edit and view mode on init\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toViewMode\n                        \n                        \n                    \n                \n            \n            \n                \ntoViewMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/editable/editable.component.ts:49\n                \n            \n\n\n            \n                \n                    Changes to the view mode\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            viewModeHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    viewModeHandler()\n                \n            \n\n\n            \n                \n                    Defined in src/app/editable/editable.component.ts:64\n                \n            \n\n\n            \n                \n                    handles the view mode\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/editable/editable.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editMode$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.editMode.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/editable/editable.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editModeTpl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EditModeDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChild(EditModeDirective)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/editable/editable.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"view\" | \"edit\"\n\n                        \n                    \n                    \n                        \n                            Default value : 'view'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/editable/editable.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewModeTpl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ViewModeDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChild(ViewModeDirective)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/editable/editable.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n\n                \n                    \n                        getelement()\n                    \n                \n                            \n                                \n                                    Defined in src/app/editable/editable.component.ts:57\n                                \n                            \n                    \n                        \n                                Gets the native element\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        currentView\n                    \n                \n\n                \n                    \n                        getcurrentView()\n                    \n                \n                            \n                                \n                                    Defined in src/app/editable/editable.component.ts:90\n                                \n                            \n                    \n                        \n                                Gets the current mode\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, ContentChild, ElementRef, EventEmitter,\n   Output, OnInit, OnDestroy } from '@angular/core';\nimport { ViewModeDirective } from '../directives/view-mode.directive';\nimport { EditModeDirective } from '../directives/edit-mode.directive';\nimport { fromEvent, Subject } from 'rxjs';\nimport { filter, take, switchMapTo } from 'rxjs/operators';\nimport { untilDestroyed } from 'ngx-take-until-destroy';\n\n/**\n * Component to enable editable cells in the example table\n */\n@Component({\n  selector: 'editable',\n  templateUrl: './editable.component.html',\n  styleUrls: ['./editable.component.css']\n})\n\nexport class EditableComponent implements OnInit, OnDestroy {\n  @ContentChild(ViewModeDirective) viewModeTpl: ViewModeDirective;\n  @ContentChild(EditModeDirective) editModeTpl: EditModeDirective;\n  @Output() update = new EventEmitter();\n\n  editMode = new Subject();\n  editMode$ = this.editMode.asObservable();\n\n  mode: 'view' | 'edit' = 'view';\n\n  /**\n   * @ignore\n   */\n  constructor(private host: ElementRef) {}\n\n  /**\n   * handles the edit and view mode on init\n   */\n  ngOnInit() {\n    this.viewModeHandler();\n    this.editModeHandler();\n  }\n\n  /**\n   * @ignore\n   */\n  ngOnDestroy() {}\n\n  /**\n   * Changes to the view mode\n   */\n  toViewMode() {\n    this.update.emit();\n    this.mode = 'view';\n  }\n\n  /**\n   * Gets the native element\n   */\n  private get element() {\n    return this.host.nativeElement;\n  }\n\n  /**\n   * handles the view mode\n   */\n  private viewModeHandler() {\n    fromEvent(this.element, 'dblclick').pipe(\n      untilDestroyed(this)\n    ).subscribe(() => {\n      this.mode = 'edit';\n      this.editMode.next(true);\n    });\n  }\n\n  /**\n   * Handles the edit mode\n   */\n  private editModeHandler() {\n    const clickOutside$ = fromEvent(document, 'click').pipe(\n      filter(({ target }) => this.element.contains(target) === false),\n      take(1)\n    );\n    this.editMode$.pipe(\n      switchMapTo(clickOutside$),\n      untilDestroyed(this)\n    ).subscribe(event => this.toViewMode());\n  }\n\n  /**\n   * Gets the current mode\n   */\n  get currentView() {\n    return this.mode === 'view' ? this.viewModeTpl.tpl : this.editModeTpl.tpl;\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./editable.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmResetPasswordComponent', 'selector': 'app-confirm-reset-password'},{'name': 'DeleteScenarioToast', 'selector': '[pink-toast-component]'},{'name': 'EditableComponent', 'selector': 'editable'},{'name': 'ExampleTableComponent', 'selector': 'app-example-table'},{'name': 'FeedbackComponent', 'selector': 'app-feedback'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalsComponent', 'selector': 'app-modals'},{'name': 'ParentComponent', 'selector': 'app-parent'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'ReportHistoryComponent', 'selector': 'app-report-history'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RunTestToast', 'selector': '[pink-toast-component]'},{'name': 'ScenarioEditorComponent', 'selector': 'app-scenario-editor'},{'name': 'StoriesBarComponent', 'selector': 'app-stories-bar'},{'name': 'StoryEditorComponent', 'selector': 'app-story-editor'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'TestAccountComponent', 'selector': 'app-test-account'}];\n    var DIRECTIVES = [{'name': 'EditableOnEnterDirective', 'selector': '[editableOnEnter]'},{'name': 'EditModeDirective', 'selector': '[editMode]'},{'name': 'FocusableDirective', 'selector': '[focusable]'},{'name': 'PasswordConfirmedValidatorDirective', 'selector': '[appPasswordConfirmed]'},{'name': 'ViewModeDirective', 'selector': '[viewMode]'}];\n    var ACTUAL_COMPONENT = {'name': 'EditableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/EditableOnEnterDirective.html":{"url":"directives/EditableOnEnterDirective.html","title":"directive - EditableOnEnterDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  EditableOnEnterDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/directives/edit-on-enter.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [editableOnEnter]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                keyup.enter\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            keyup.enter\n                        \n                        \n                    \n                \n            \n            \n                \nkeyup.enter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/directives/edit-on-enter.directive.ts:21\n                \n            \n\n\n            \n                \n                    Enters the view mode\n\n\n                \n            \n        \n    \n\n\n\n\n    \n\n\n    \n        import { Directive, HostListener } from '@angular/core';\nimport { EditableComponent } from '../editable/editable.component';\n\n@Directive({\n  selector: '[editableOnEnter]'\n})\n\n/**\n * Directive to activate change the editable field for the example table\n */\nexport class EditableOnEnterDirective {\n  /**\n   * @ignore\n   */\n  constructor(private editable: EditableComponent) {}\n\n  /**\n   * Enters the view mode\n   */\n  @HostListener('keyup.enter')\n  onEnter() {\n    this.editable.toViewMode();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExampleTableComponent.html":{"url":"components/ExampleTableComponent.html","title":"component - ExampleTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ExampleTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/example-table/example-table.component.ts\n\n\n    \n        Description\n    \n    \n        Component of for the Example Table\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-example-table\n            \n\n            \n                styleUrls\n                ./example-table.component.css\n            \n\n\n\n            \n                templateUrl\n                ./example-table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                controls\n                            \n                            \n                                data\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                exampleThere\n                            \n                            \n                                selectedScenario\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkExample\n                            \n                            \n                                getControl\n                            \n                            \n                                initializeTable\n                            \n                            \n                                initializeTableControls\n                            \n                            \n                                inputChange\n                            \n                            \n                                updateField\n                            \n                            \n                                updateTable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                newSelectedScenario\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                checkRowIndex\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    newSelectedScenario\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        newSelectedScenario\n                    \n                \n                        \n                            \n                                    Defined in src/app/example-table/example-table.component.ts:59\n                            \n                        \n                \n                    \n                        Sets the new scenario\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        checkRowIndex\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/example-table/example-table.component.ts:43\n                            \n                        \n                \n                    \n                        Event emitter to check if ththe example table should be removed or added to\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkExample\n                        \n                        \n                    \n                \n            \n            \n                \ncheckExample(event, rowIndex)\n                \n            \n\n\n            \n                \n                    Defined in src/app/example-table/example-table.component.ts:154\n                \n            \n\n\n            \n                \n                    Emits an event to check if the example table should be removed\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        change event\n\n                                    \n                                \n                                \n                                    rowIndex\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        row index of the changed cell\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getControl\n                        \n                        \n                    \n                \n            \n            \n                \ngetControl(rowIndex: number, fieldName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/example-table/example-table.component.ts:132\n                \n            \n\n\n            \n                \n                    Get the controls of a specific cell\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    rowIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        index of the row\n\n                                    \n                                \n                                \n                                    fieldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        name of the cell column\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        FormControl of the cell\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeTable\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/example-table/example-table.component.ts:99\n                \n            \n\n\n            \n                \n                    Initializes the data of the table\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeTableControls\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeTableControls()\n                \n            \n\n\n            \n                \n                    Defined in src/app/example-table/example-table.component.ts:74\n                \n            \n\n\n            \n                \n                    Initializes the controls of the table\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            inputChange\n                        \n                        \n                    \n                \n            \n            \n                \ninputChange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/example-table/example-table.component.ts:67\n                \n            \n\n\n            \n                \n                    Sets the status of the scenario to not saved\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateField\n                        \n                        \n                    \n                \n            \n            \n                \nupdateField(columnIndex: number, rowIndex: number, field: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/example-table/example-table.component.ts:116\n                \n            \n\n\n            \n                \n                    Updates a field of the table\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    columnIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        index of the column of the changed value\n\n                                    \n                                \n                                \n                                    rowIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        index of the row of the changed value\n\n                                    \n                                \n                                \n                                    field\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        name of the changed value column\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateTable\n                        \n                        \n                    \n                \n            \n            \n                \nupdateTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/example-table/example-table.component.ts:139\n                \n            \n\n\n            \n                \n                    Updates the table controls and data\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controls\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormArray\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/example-table/example-table.component.ts:27\n                            \n                        \n\n                \n                    \n                        Controls of the table\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/example-table/example-table.component.ts:22\n                            \n                        \n\n                \n                    \n                        Data of the table entries\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/example-table/example-table.component.ts:18\n                            \n                        \n\n                \n                    \n                        Columns which are displayed in the table\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            exampleThere\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/example-table/example-table.component.ts:37\n                            \n                        \n\n                \n                    \n                        Boolean if the example table should be shown or not\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedScenario\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Scenario\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/example-table/example-table.component.ts:32\n                            \n                        \n\n                \n                    \n                        selected Scenario\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        newSelectedScenario\n                    \n                \n\n\n                \n                    \n                        setnewSelectedScenario(scenario)\n                    \n                \n                            \n                                \n                                    Defined in src/app/example-table/example-table.component.ts:59\n                                \n                            \n                    \n                        \n                                Sets the new scenario\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            scenario\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormArray, FormControl } from '@angular/forms';\nimport { Scenario } from '../model/Scenario';\n\n/**\n * Component of for the Example Table\n */\n@Component({\n  selector: 'app-example-table',\n  templateUrl: './example-table.component.html',\n  styleUrls: ['./example-table.component.css']\n})\nexport class ExampleTableComponent implements OnInit {\n\n  /**\n   * Columns which are displayed in the table\n   */\n  displayedColumns: string[] = [];\n  /**\n   * Data of the table entries\n   */\n  data = [];\n\n  /**\n   * Controls of the table\n   */\n  controls: FormArray;\n\n  /**\n   * selected Scenario\n   */\n  selectedScenario: Scenario;\n\n  /**\n   * Boolean if the example table should be shown or not\n   */\n  exampleThere: boolean = false;\n\n  /**\n   * Event emitter to check if ththe example table should be removed or added to\n   */\n  @Output()\n  checkRowIndex: EventEmitter = new EventEmitter();\n\n  /**\n   * @ignore\n   */\n  constructor() {}\n\n    /**\n   * @ignore\n   */\n  ngOnInit() {}\n\n  /**\n   * Sets the new scenario\n   */\n  @Input()\n  set newSelectedScenario(scenario: Scenario) {\n    this.selectedScenario = scenario;\n    this.updateTable();\n  }\n\n  /**\n   * Sets the status of the scenario to not saved\n   */\n  inputChange(){\n    this.selectedScenario.saved = false;\n  }\n\n  /**\n   * Initializes the controls of the table\n   */\n  initializeTableControls() {\n    //let seen = new Set();\n    //this.selectedScenario.stepDefinitions.example[0].values.filter(item => {\n    //    let k = item;\n    //    return seen.has(k) ? false : seen.add(k);\n    //});\n    //this.selectedScenario.stepDefinitions.example[0].values = Array.from(seen);\n    this.displayedColumns = this.selectedScenario.stepDefinitions.example[0].values;\n    const formArray: FormGroup[] = [];\n    for (let i = 1 ; i \n    \n\n    \n        \n\n\t\n\n\n\t \n\t\t\t {{column}}\n\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t{{element[column]}}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t \n\t\t\t\n\t\t\t\t\n\t\n\t\n\t\n\n\n\n\n    \n\n    \n                \n                    ./example-table.component.css\n                \n                table {\n    margin-top: 5px;\n    width: 100%;\n}\n\n.deactivated{\n  color: gray;\n  font-style: italic;\n}\n\n.valueRow{\n  font-weight: normal;\n}\n\n.mat-table{\n  font-family: Klavika, sans-serif;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t \t\t\t {{column}}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{element[column]}}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmResetPasswordComponent', 'selector': 'app-confirm-reset-password'},{'name': 'DeleteScenarioToast', 'selector': '[pink-toast-component]'},{'name': 'EditableComponent', 'selector': 'editable'},{'name': 'ExampleTableComponent', 'selector': 'app-example-table'},{'name': 'FeedbackComponent', 'selector': 'app-feedback'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalsComponent', 'selector': 'app-modals'},{'name': 'ParentComponent', 'selector': 'app-parent'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'ReportHistoryComponent', 'selector': 'app-report-history'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RunTestToast', 'selector': '[pink-toast-component]'},{'name': 'ScenarioEditorComponent', 'selector': 'app-scenario-editor'},{'name': 'StoriesBarComponent', 'selector': 'app-stories-bar'},{'name': 'StoryEditorComponent', 'selector': 'app-story-editor'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'TestAccountComponent', 'selector': 'app-test-account'}];\n    var DIRECTIVES = [{'name': 'EditableOnEnterDirective', 'selector': '[editableOnEnter]'},{'name': 'EditModeDirective', 'selector': '[editMode]'},{'name': 'FocusableDirective', 'selector': '[focusable]'},{'name': 'PasswordConfirmedValidatorDirective', 'selector': '[appPasswordConfirmed]'},{'name': 'ViewModeDirective', 'selector': '[viewMode]'}];\n    var ACTUAL_COMPONENT = {'name': 'ExampleTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FeedbackComponent.html":{"url":"components/FeedbackComponent.html","title":"component - FeedbackComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FeedbackComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/feedback/feedback.component.ts\n\n\n    \n        Description\n    \n    \n        Component for the feedback of the user\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-feedback\n            \n\n            \n                styleUrls\n                ./feedback.component.css\n            \n\n\n\n            \n                templateUrl\n                ./feedback.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Component for the feedback of the user\n */\n@Component({\n  selector: 'app-feedback',\n  templateUrl: './feedback.component.html',\n  styleUrls: ['./feedback.component.css']\n})\nexport class FeedbackComponent implements OnInit {\n  /**\n   * @ignore\n   */\n  constructor() {\n   }\n  /**\n   * @ignore\n   */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n         \n  Wird geladen…\n\n\n\n    \n\n    \n                \n                    ./feedback.component.css\n                \n                iframe{\n    display: block;\n    margin: 0 auto;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   Wird geladen…'\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmResetPasswordComponent', 'selector': 'app-confirm-reset-password'},{'name': 'DeleteScenarioToast', 'selector': '[pink-toast-component]'},{'name': 'EditableComponent', 'selector': 'editable'},{'name': 'ExampleTableComponent', 'selector': 'app-example-table'},{'name': 'FeedbackComponent', 'selector': 'app-feedback'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalsComponent', 'selector': 'app-modals'},{'name': 'ParentComponent', 'selector': 'app-parent'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'ReportHistoryComponent', 'selector': 'app-report-history'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RunTestToast', 'selector': '[pink-toast-component]'},{'name': 'ScenarioEditorComponent', 'selector': 'app-scenario-editor'},{'name': 'StoriesBarComponent', 'selector': 'app-stories-bar'},{'name': 'StoryEditorComponent', 'selector': 'app-story-editor'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'TestAccountComponent', 'selector': 'app-test-account'}];\n    var DIRECTIVES = [{'name': 'EditableOnEnterDirective', 'selector': '[editableOnEnter]'},{'name': 'EditModeDirective', 'selector': '[editMode]'},{'name': 'FocusableDirective', 'selector': '[focusable]'},{'name': 'PasswordConfirmedValidatorDirective', 'selector': '[appPasswordConfirmed]'},{'name': 'ViewModeDirective', 'selector': '[viewMode]'}];\n    var ACTUAL_COMPONENT = {'name': 'FeedbackComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/FocusableDirective.html":{"url":"directives/FocusableDirective.html","title":"directive - FocusableDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  FocusableDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/editable/focusable.directive.ts\n        \n\n            \n                Description\n            \n            \n                Directive for an table cell to be focusable\n\n            \n\n            \n                Implements\n            \n            \n                            AfterViewInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [focusable]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/editable/focusable.directive.ts:19\n                \n            \n\n\n            \n                \n                    focues the native element\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, AfterViewInit } from '@angular/core';\n\n/**\n * Directive for an table cell to be focusable\n */\n@Directive({\n  selector: '[focusable]'\n})\nexport class FocusableDirective implements AfterViewInit {\n\n  /**\n   * @ignore\n   */\n  constructor(private host: ElementRef) { }\n\n  /**\n   * focues the native element\n   */\n  ngAfterViewInit() {\n    this.host.nativeElement.focus();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        Component to handle the client login\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiService\n                            \n                            \n                                error\n                            \n                            \n                                isLoadingRepositories\n                            \n                            \n                                repositories\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                slide0\n                            \n                            \n                                slide01\n                            \n                            \n                                slide02\n                            \n                            \n                                slide03\n                            \n                            \n                                slide04\n                            \n                            \n                                slide05\n                            \n                            \n                                slide06\n                            \n                            \n                                slide07\n                            \n                            \n                                slide08\n                            \n                            \n                                slide09\n                            \n                            \n                                slide10\n                            \n                            \n                                slide11\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRepositories\n                            \n                            \n                                githubLogin\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                loginGithubToken\n                            \n                            \n                                    Async\n                                loginTestAccount\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                selectRepository\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, router: Router, route: ActivatedRoute, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:46\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRepositories\n                        \n                        \n                    \n                \n            \n            \n                \ngetRepositories()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:143\n                \n            \n\n\n            \n                \n                    Retrieves the repositories / projects of the user\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            githubLogin\n                        \n                        \n                    \n                \n            \n            \n                \ngithubLogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:195\n                \n            \n\n\n            \n                \n                    Loggs in the user with Github\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(form: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:117\n                \n            \n\n\n            \n                \n                    Loggs in the user with a Seed-Test account\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loginGithubToken\n                        \n                        \n                    \n                \n            \n            \n                \nloginGithubToken(login: string, id: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:97\n                \n            \n\n\n            \n                \n                    Loggs in the user with github after retrieving the github token\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    login\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loginTestAccount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loginTestAccount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:134\n                \n            \n\n\n            \n                \n                    Redirects the user to the Test account\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:82\n                \n            \n\n\n            \n                \n                    Needed for ExpressionChangedAfterItHasBeenCheckedError mat-carousel error\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectRepository\n                        \n                        \n                    \n                \n            \n            \n                \nselectRepository(userRepository: RepositoryContainer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:183\n                \n            \n\n\n            \n                \n                    Selects a repository and redirects the user to the story editor\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    userRepository\n                                    \n                                                RepositoryContainer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        selected repository\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApiService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:25\n                            \n                        \n\n                \n                    \n                        Login error\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoadingRepositories\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:30\n                            \n                        \n\n                \n                    \n                        Boolean to see if the repository is loading\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            repositories\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RepositoryContainer[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:20\n                            \n                        \n\n                \n                    \n                        Repositories / projects of the user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slide0\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{'image0': '/assets//slide0.png'}]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:35\n                            \n                        \n\n                \n                    \n                        Tutorial slides\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slide01\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{'image01': '/assets//slide01.PNG'}]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slide02\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{'image02': '/assets//slide02.png'}]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slide03\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{'image03': '/assets//slide03.PNG'}]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slide04\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{'image04': '/assets//slide04.PNG'}]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slide05\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{'image05': '/assets//slide05.PNG'}]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slide06\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{'image06': '/assets//slide06.PNG'}]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slide07\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{'image07': '/assets//slide07.png'}]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slide08\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{'image08': '/assets//slide08.PNG'}]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slide09\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{'image09': '/assets//slide09.PNG'}]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slide10\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{'image10': '/assets//slide10.PNG'}]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slide11\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{'image11': '/assets//slide11.png'}]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:46\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {AfterViewInit, ChangeDetectorRef, Component, OnInit} from '@angular/core';\nimport {ApiService} from '../Services/api.service';\nimport {Router, ActivatedRoute} from '@angular/router';\nimport {NgForm} from '@angular/forms';\nimport { RepositoryContainer } from '../model/RepositoryContainer';\n\n/**\n * Component to handle the client login\n */\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit, AfterViewInit {\n\n    /**\n     * Repositories / projects of the user\n     */\n    repositories: RepositoryContainer[];\n    \n    /**\n     * Login error\n     */\n    error: string;\n\n    /**\n     * Boolean to see if the repository is loading\n     */\n    isLoadingRepositories: boolean;\n\n    /**\n     * Tutorial slides\n     */\n    slide0 = [{'image0': '/assets//slide0.png'}];\n    slide01 = [{'image01': '/assets//slide01.PNG'}];\n    slide02 = [{'image02': '/assets//slide02.png'}];\n    slide03 = [{'image03': '/assets//slide03.PNG'}];\n    slide04 = [{'image04': '/assets//slide04.PNG'}];\n    slide05 = [{'image05': '/assets//slide05.PNG'}];\n    slide06 = [{'image06': '/assets//slide06.PNG'}];\n    slide07 = [{'image07': '/assets//slide07.png'}];\n    slide08 = [{'image08': '/assets//slide08.PNG'}];\n    slide09 = [{'image09': '/assets//slide09.PNG'}];\n    slide10 = [{'image10': '/assets//slide10.PNG'}];\n    slide11 = [{'image11': '/assets//slide11.png'}];\n\n\n    /**\n     * Constructor\n     * @param apiService \n     * @param router \n     * @param route \n     * @param cdr \n     */\n    constructor(public apiService: ApiService, public router: Router, private route: ActivatedRoute, private cdr: ChangeDetectorRef) {\n        this.error = undefined;\n        this.route.queryParams.subscribe((params) => {\n           if (params.code){\n                this.apiService.githubCallback(params.code).subscribe(resp => {\n                    if (resp.error){\n                        this.error = resp.error\n                    }else{\n                        localStorage.setItem('login', 'true')\n                        this.getRepositories()\n                        let userId = localStorage.getItem('userId');\n                        localStorage.removeItem('userId');\n                        if(userId){\n                            this.apiService.mergeAccountGithub(userId, resp.login, resp.id).subscribe((respo) => {\n                                this.loginGithubToken(resp.login, resp.id);\n                            })\n                        }\n                    }\n                })\n            }\n        })\n    }\n\n    /**\n     * Needed for ExpressionChangedAfterItHasBeenCheckedError mat-carousel error\n     */\n    ngAfterViewInit(): void {\n        this.cdr.detectChanges();\n    }\n\n    /**\n     * @ignore\n     */\n    ngOnInit() {\n    }\n\n    /**\n     * Loggs in the user with github after retrieving the github token\n     * @param login \n     * @param id \n     */\n    loginGithubToken(login: string, id: any){\n        this.apiService.loginGithubToken(login, id).subscribe((resp) => {\n            if (resp.status === 'error') {\n                this.error = resp.message;\n            } else if (resp.message === 'repository') {\n                let repository = resp.repository;\n                localStorage.setItem('repositoryType', 'github');\n                localStorage.setItem('repository', repository);\n                this.isLoadingRepositories = false;\n                this.router.navigate(['/']);\n            } else {\n                this.getRepositories()\n            }\n        })\n    }\n\n    /**\n     * Loggs in the user with a Seed-Test account\n     * @param form \n     */\n    async login(form: NgForm) {\n        this.isLoadingRepositories = true;\n        this.error = undefined;\n        const response = await this.apiService.loginUser(form.value.email, form.value.password, form.value.stayLoggedIn).toPromise()\n        if (response.status === 'error') {\n            this.isLoadingRepositories = false;\n            this.error = response.message;\n        } else {\n            localStorage.setItem('login', 'true');\n            this.getRepositories();\n        }\n    }\n\n\n    /**\n     * Redirects the user to the Test account\n     */\n    async loginTestAccount() {\n        localStorage.setItem('repository', 'adessoCucumber/Cucumber')\n        localStorage.setItem('source', 'github')\n        this.router.navigate(['/testaccount']);\n    }\n\n    /**\n     * Retrieves the repositories / projects of the user\n     */\n     getRepositories() {\n        let value = localStorage.getItem('repository')\n        let source = localStorage.getItem('source')\n        let _id = localStorage.getItem('id');\n        let repository: RepositoryContainer = {value, source, _id}\n        this.isLoadingRepositories = true;\n        const loadingSpinner: HTMLElement = document.getElementById('loadingSpinner');\n        if (loadingSpinner){\n            loadingSpinner.scrollIntoView();\n        }\n        this.apiService.getRepositories().subscribe((resp: RepositoryContainer[]) => {\n            console.log(resp)\n            if(resp.length  {\n                if(elem.value == repository.value && elem.source == repository.source && elem._id == repository._id){\n                    this.router.navigate(['']);\n                }\n            })\n            this.repositories = resp;\n            this.isLoadingRepositories = false;\n            setTimeout(() => {\n                const repositoriesList: HTMLElement = document.getElementById('repositoriesList');\n                if (repositoriesList){\n                    repositoriesList.scrollIntoView();\n                }\n            }, 500)\n\n        }, (err) => {\n            this.error = err.error;\n            this.isLoadingRepositories = false;\n        });\n    }\n\n    /**\n     * Selects a repository and redirects the user to the story editor\n     * @param userRepository selected repository\n     */\n    selectRepository(userRepository: RepositoryContainer) {\n        const ref: HTMLLinkElement = document.getElementById('githubHref') as HTMLLinkElement;\n        ref.href = 'https://github.com/' + userRepository.value;\n        localStorage.setItem('repository', userRepository.value)\n        localStorage.setItem('source', userRepository.source)\n        localStorage.setItem('id', userRepository._id)\n        this.router.navigate(['']);\n    }\n\n    /**\n     * Loggs in the user with Github\n     */\n    githubLogin() {\n        this.error = undefined;\n        this.isLoadingRepositories = true;\n        this.apiService.githubLogin();\n    }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n            \n              Welcome to seed-test!\n              HOW TO START\n              \n            \n        -->\n        \n        \n        \n          Login to Seed-Test via GitHub or create a new Seed-Test Account by registering.Alternatively you can try Seed-Test without an account, by trying our Demo.\n        \n        \n            After the login via GitHub you can see your repositories.\n        \n        \n            Else you can just register yourself using your E-Mail.\n        \n        \n          After the first Login of your Seed-Test account, you can create your own custom Repositories or connect an existing GitHub Account or Jira Server.\n        \n        \n          Name your custom Project and save it.\n        \n        \n          Select your newly created Project to continue.\n        \n        \n          With a new Custom Project you can create your own stories.If you use a Github or Jira repository, you have to create an issue with the tag or label „story“, to make it appear in Seed-Test.\n        \n        \n          Enter a name and description for your new story.\n        \n        \n          Now you can add steps to create your first Test!Usually you want to start by using the Given-Step: \"Website\".\n        \n        \n          Run your Test by clickling on \"Run Scenario\".\n        \n        \n          For help and further information click on Help and check out our Tutorial.\n        \n      \n    \n  \n  \n    {{error}}\n    \n    Login\n    \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      Login\n      \n        \n      \n    \n    \n      Forgot Password?\n    \n    or\n    \n    No account?\n      Register here.\n    -->\n    Login via Github-->\n    \n      \n         \n         Login via GitHub\n      \n   \n   \n   \n    No account yet? \n    Register\n    or\n    Try Our Demo\n       (no account required)\n    \n    \n\n   \n  \n  \n  \n    \n      Select Your Project:\n      \n      \n        \n          \n          \n          \n          {{repository.value}}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                * {\n    padding: 0px;\n    margin: 0px;\n}\n\nh1{\n    margin: 5px;\n}\n\n\n.loginGrid{\n    display: grid;\n    grid-template:\n    \"howToStart formular\"\n    \"howToStart repositories\"\n    / 1fr 1fr;\n    background-color: var(--white);\n    place-items: center;\n}\n\n.formular{\n    grid-area: formular;\n    grid-row: 2 / 3;\n    grid-column: 3 / 4;\n    text-align: center;\n    background-color: var(--white);\n    margin-top: auto;\n    margin-right: auto;\n    margin-left: 10%;\n    margin-bottom: auto;\n    text-align: center;\n    padding: 40px 20px 40px 40px;\n}\n\n.repositories{\n    grid-area: repositories;\n    grid-row: 3 / 4;\n    grid-column: 3 / 4;\n    /*width: 400px;*/\n    text-align: center;\n    margin-right: auto;\n    margin-bottom: 5%;\n    margin-left: auto;\n    padding: 25px;\n    background-color:rgb(224, 224, 224);\n    border: 1px solid #999;\n}\n\n\n.howToStart {\n    grid-area: howToStart;\n    grid-row: 2 / 3;\n    grid-column: 2 / 3;\n    background-color: var(--white);\n    text-align: center;\n    font-size: small;\n    margin-top: auto;\n    margin-bottom: 10%;\n    margin-right: auto;\n    margin-left: auto;\n    width: 830px;\n    height: 500px;\n    position: relative;\n}\n\n.welcomeSlide{\n    background-color: var(--white);\n    height: 100%;\n    text-align: center;\n    margin: auto;\n    padding: 70px;\n}\n\n.welcomeSlide h1{\n    margin-bottom: 50px;\n}\n\n.mat-carousel{\n    z-index: auto;\n    position: absolute;\n    width: 100%; \n    height: 100px;\n}\n\n.mat{\n    width: 850px;\n    margin-top: 70px;\n    border: 12px solid #999;\n}\n\n.slideDescription{\n    margin-top: 340px;\n    background-color: #999;\n    color: var(--white);\n    height: 88px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.repo_img{\n    margin-left: 5px;\n    margin-right: 5px;\n    max-height: 18px;\n}\n\n/*\n#info{\n    color: #0099CC;\n    font-weight: bold;\n}*/\n.repositoryList{\n    list-style: none;\n}\n\na.repoLink{\n    color: var(--ocean-blue);\n    transition: 0.2s;\n}\n\na.repoLink:hover{\n    color: var(--marine-blue);\n}\n\n.wrongLogin{\n    background-color: var(--grape);\n    text-align: center;\n}\n\n.loginFont{\n    color:var(--ocean-blue);\n}\n\n.noAccount{\n    font-size: 13px;\n    padding: 5px;\n}\n\n.githubLogin{\n    color: var(--white);\n    padding: 5px 10px;\n    background-color: black;\n    border: none;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n}\n\n.githubLoginContainer{\n    margin: 10px;\n    display:inline-block;\n}\n\n.githubLogin img{\n    margin-right: 5px;\n    width: 17px;\n    height: 17px;\n}\n\n.uk-form-controls{\n    border-radius: 3px;\n    padding: 5px 5px 5px 5px;\n}\n\n.linkButton{\n    font-style: inherit;\n    border: none;\n    background-color: transparent;\n    color: var(--ocean-blue);\n    transition: 0.2s;\n    font-size: 10pt;\n}\n\n.linkButton:hover{\n    color: var(--marine-blue);\n}\n\n#noAccountDiv{\n    margin-top: 30px;\n    border: 0.25px solid #999;\n    padding: 10px;\n    background-color: rgb(247, 247, 247);\n  }\n\n#loadingSpinner{\n    margin-left:38%;\n}\n\n:host ::ng-deep .loadingSpinner circle{\n    stroke: var(--marine-blue);\n}\n\n@media screen and (max-width: 600px) {\n    .grid{\n        display: grid;\n        grid-template-rows: auto;\n        grid-template-areas: \"formular\" \"repositories\";\n    }\n}\n\n@media screen and (min-width: 1600px) {\n    .howToStart {\n        grid-area: howToStart;\n        grid-row: 2 / 3;\n        grid-column: 2 / 3;\n        background-color: var(--white);\n        text-align: center;\n        font-size: small;\n        margin-top: 80px;\n        margin-bottom: 180px;\n        margin-right: 150px;\n        margin-left: 100px;\n        width: 830px;\n        height: 500px;\n        position: relative;\n    }\n\n    .formular{\n        grid-area: formular;\n        grid-row: 2 / 3;\n        grid-column: 3 / 4;\n        text-align: center;\n        background-color: var(--white);\n        margin-top: 80px;\n        margin-right: 100px;\n        margin-bottom: 100px;\n        text-align: center;\n        padding: 40px;\n    }\n    \n    .repositories{\n        grid-area: repositories;\n        grid-row: 3 / 4;\n        grid-column: 3 / 4;\n        width: 400px;\n        text-align: center;\n        margin-right: 100px;\n        margin-bottom: 80px;\n        padding: 15px;\n        background-color:rgb(224, 224, 224);\n        border: 1px solid #999;\n    }\n    \n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              Welcome to seed-test!              HOW TO START                                  -->                                  Login to Seed-Test via GitHub or create a new Seed-Test Account by registering.Alternatively you can try Seed-Test without an account, by trying our Demo.                            After the login via GitHub you can see your repositories.                            Else you can just register yourself using your E-Mail.                          After the first Login of your Seed-Test account, you can create your own custom Repositories or connect an existing GitHub Account or Jira Server.                          Name your custom Project and save it.                          Select your newly created Project to continue.                          With a new Custom Project you can create your own stories.If you use a Github or Jira repository, you have to create an issue with the tag or label „story“, to make it appear in Seed-Test.                          Enter a name and description for your new story.                          Now you can add steps to create your first Test!Usually you want to start by using the Given-Step: \"Website\".                          Run your Test by clickling on \"Run Scenario\".                          For help and further information click on Help and check out our Tutorial.                          {{error}}        Login                                                                                              Login                                  Forgot Password?        or        No account?      Register here.    -->    Login via Github-->                            Login via GitHub                   No account yet?     Register    or    Try Our Demo       (no account required)                           Select Your Project:                                                            {{repository.value}}                    '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmResetPasswordComponent', 'selector': 'app-confirm-reset-password'},{'name': 'DeleteScenarioToast', 'selector': '[pink-toast-component]'},{'name': 'EditableComponent', 'selector': 'editable'},{'name': 'ExampleTableComponent', 'selector': 'app-example-table'},{'name': 'FeedbackComponent', 'selector': 'app-feedback'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalsComponent', 'selector': 'app-modals'},{'name': 'ParentComponent', 'selector': 'app-parent'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'ReportHistoryComponent', 'selector': 'app-report-history'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RunTestToast', 'selector': '[pink-toast-component]'},{'name': 'ScenarioEditorComponent', 'selector': 'app-scenario-editor'},{'name': 'StoriesBarComponent', 'selector': 'app-stories-bar'},{'name': 'StoryEditorComponent', 'selector': 'app-story-editor'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'TestAccountComponent', 'selector': 'app-test-account'}];\n    var DIRECTIVES = [{'name': 'EditableOnEnterDirective', 'selector': '[editableOnEnter]'},{'name': 'EditModeDirective', 'selector': '[editMode]'},{'name': 'FocusableDirective', 'selector': '[focusable]'},{'name': 'PasswordConfirmedValidatorDirective', 'selector': '[appPasswordConfirmed]'},{'name': 'ViewModeDirective', 'selector': '[viewMode]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ParentComponent.html":{"url":"components/ParentComponent.html","title":"component - ParentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ParentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/parent/parent.component.ts\n\n\n    \n        Description\n    \n    \n        Component containing the Story-Bar and Story Editor\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-parent\n            \n\n            \n                styleUrls\n                ./parent.component.css\n            \n\n\n\n            \n                templateUrl\n                ./parent.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiService\n                            \n                            \n                                isStoryEditorActive\n                            \n                            \n                                selectedScenario\n                            \n                            \n                                selectedStory\n                            \n                            \n                                stories\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadStories\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setEditor\n                            \n                            \n                                setSelectedScenario\n                            \n                            \n                                setSelectedStory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/parent/parent.component.ts:35\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadStories\n                        \n                        \n                    \n                \n            \n            \n                \nloadStories()\n                \n            \n\n\n            \n                \n                    Defined in src/app/parent/parent.component.ts:62\n                \n            \n\n\n            \n                \n                    Leads the stories of the current selected repository\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/parent/parent.component.ts:55\n                \n            \n\n\n            \n                \n                    Requests the repositories on init\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setEditor\n                        \n                        \n                    \n                \n            \n            \n                \nsetEditor(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/parent/parent.component.ts:94\n                \n            \n\n\n            \n                \n                    Change the editor to report history or story editor\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSelectedScenario\n                        \n                        \n                    \n                \n            \n            \n                \nsetSelectedScenario(scenario: Scenario)\n                \n            \n\n\n            \n                \n                    Defined in src/app/parent/parent.component.ts:86\n                \n            \n\n\n            \n                \n                    Sets the currently selected scenario\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scenario\n                                    \n                                                Scenario\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSelectedStory\n                        \n                        \n                    \n                \n            \n            \n                \nsetSelectedStory(story: Story)\n                \n            \n\n\n            \n                \n                    Defined in src/app/parent/parent.component.ts:78\n                \n            \n\n\n            \n                \n                    Sets the currently selected story\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    story\n                                    \n                                                Story\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApiService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/parent/parent.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isStoryEditorActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/parent/parent.component.ts:35\n                            \n                        \n\n                \n                    \n                        If the story Editor is shown or the report history\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedScenario\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Scenario\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/parent/parent.component.ts:30\n                            \n                        \n\n                \n                    \n                        Currently selected Scenario\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedStory\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Story\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/parent/parent.component.ts:25\n                            \n                        \n\n                \n                    \n                        Currently selected story\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stories\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Story[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/parent/parent.component.ts:20\n                            \n                        \n\n                \n                    \n                        Stories in the selected project\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../Services/api.service';\nimport { Story } from '../model/Story';\nimport { Scenario } from '../model/Scenario';\nimport { RepositoryContainer } from '../model/RepositoryContainer';\n\n/**\n * Component containing the Story-Bar and Story Editor\n */\n@Component({\n  selector: 'app-parent',\n  templateUrl: './parent.component.html',\n  styleUrls: ['./parent.component.css']\n})\nexport class ParentComponent implements OnInit {\n\n  /**\n   * Stories in the selected project\n   */\n  stories: Story[];\n\n  /**\n   * Currently selected story\n   */\n  selectedStory: Story;\n\n  /**\n   * Currently selected Scenario\n   */\n  selectedScenario: Scenario;\n\n  /**\n   * If the story Editor is shown or the report history\n   */\n  isStoryEditorActive = true;\n\n  /**\n   * Constructor\n   * @param apiService \n   */\n  constructor(public apiService: ApiService) {\n    this.apiService.getBackendUrlEvent.subscribe(() => {\n      this.loadStories();\n    });\n    if(this.apiService.urlReceived) {\n      this.loadStories();\n    }else {\n      this.apiService.getBackendInfo()\n    }\n   }\n\n  /**\n   * Requests the repositories on init\n   */\n  ngOnInit() {\n    this.apiService.getRepositories().subscribe();\n  }\n\n  /**\n   * Leads the stories of the current selected repository\n   */\n  loadStories() {\n    let value: string = localStorage.getItem('repository');\n    let source: string = localStorage.getItem('source');\n    let _id: string = localStorage.getItem('id');\n    let repository: RepositoryContainer = {value, source, _id};\n    this.apiService\n      .getStories(repository)\n      .subscribe((resp: Story[]) => {\n        this.stories = resp;\n    });\n  }\n\n  /**\n   * Sets the currently selected story\n   * @param story \n   */\n  setSelectedStory(story: Story){\n    this.selectedStory = story;\n  }\n\n  /**\n   * Sets the currently selected scenario\n   * @param scenario \n   */\n  setSelectedScenario(scenario: Scenario){\n    this.selectedScenario = scenario;\n  }\n\n  /**\n   * Change the editor to report history or story editor\n   * @param event event\n   */\n  setEditor(event){\n    this.isStoryEditorActive = !this.isStoryEditorActive;\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        \n        \n    \n\n\n    \n\n    \n                \n                    ./parent.component.css\n                \n                * {\n    padding: 0px;\n    margin: 0px;\n}\n\n.grid{\n    background-color: var(--light-grey);\n    display: grid;\n    grid-template-columns: repeat(4, minmax(0, 1fr));\n    grid-template-rows: auto;\n    grid-template-areas:\n    \"storiesBar storyEditor storyEditor storyEditor\";\n    grid-column-gap: 10px;\n    padding-bottom: 5px;\n}\n\n.storiesBar{\n    grid-area: storiesBar;\n}\n\n.storyEditor{\n    grid-area: storyEditor;\n}\n\n\n\n@media screen and (max-width: 600px) {\n    .grid{\n        display: grid;\n        grid-template-columns: 94%;\n        grid-template-rows: auto auto;\n        grid-template-areas:\n        \"storiesBar\"\n        \"storyEditor\";\n        justify-content: center;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmResetPasswordComponent', 'selector': 'app-confirm-reset-password'},{'name': 'DeleteScenarioToast', 'selector': '[pink-toast-component]'},{'name': 'EditableComponent', 'selector': 'editable'},{'name': 'ExampleTableComponent', 'selector': 'app-example-table'},{'name': 'FeedbackComponent', 'selector': 'app-feedback'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalsComponent', 'selector': 'app-modals'},{'name': 'ParentComponent', 'selector': 'app-parent'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'ReportHistoryComponent', 'selector': 'app-report-history'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RunTestToast', 'selector': '[pink-toast-component]'},{'name': 'ScenarioEditorComponent', 'selector': 'app-scenario-editor'},{'name': 'StoriesBarComponent', 'selector': 'app-stories-bar'},{'name': 'StoryEditorComponent', 'selector': 'app-story-editor'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'TestAccountComponent', 'selector': 'app-test-account'}];\n    var DIRECTIVES = [{'name': 'EditableOnEnterDirective', 'selector': '[editableOnEnter]'},{'name': 'EditModeDirective', 'selector': '[editMode]'},{'name': 'FocusableDirective', 'selector': '[focusable]'},{'name': 'PasswordConfirmedValidatorDirective', 'selector': '[appPasswordConfirmed]'},{'name': 'ViewModeDirective', 'selector': '[viewMode]'}];\n    var ACTUAL_COMPONENT = {'name': 'ParentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/PasswordConfirmedValidatorDirective.html":{"url":"directives/PasswordConfirmedValidatorDirective.html","title":"directive - PasswordConfirmedValidatorDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  PasswordConfirmedValidatorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/directives/password-confirmed.directive.ts\n        \n\n            \n                Description\n            \n            \n                Directive to check if the passwords are the same\n\n            \n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: PasswordConfirmedValidatorDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [appPasswordConfirmed]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/directives/password-confirmed.directive.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidationErrors\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { AbstractControl, FormGroup, NG_VALIDATORS, ValidationErrors, Validator, ValidatorFn } from '@angular/forms';\n\n/** \n * A user's password has to match the user's confirmed password \n*/\nexport const passwordConfirmedValidator: ValidatorFn = (control: FormGroup): ValidationErrors | null => {\n  const password = control.get('password');\n  const confirmPassword = control.get('confirmPassword');\n  return password && confirmPassword && password.value !== confirmPassword.value ? { 'passwordConfirmed': true } : null;\n};\n\n/**\n * Directive to check if the passwords are the same\n */\n@Directive({\n  selector: '[appPasswordConfirmed]',\n  providers: [{ provide: NG_VALIDATORS, useExisting: PasswordConfirmedValidatorDirective, multi: true }]\n})\nexport class PasswordConfirmedValidatorDirective implements Validator {\n  validate(control: AbstractControl): ValidationErrors {\n    return passwordConfirmedValidator(control)\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegistrationComponent.html":{"url":"components/RegistrationComponent.html","title":"component - RegistrationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegistrationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/registration/registration.component.ts\n\n\n    \n        Description\n    \n    \n        Component to register a new user\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-registration\n            \n\n            \n                styleUrls\n                ./registration.component.css\n            \n\n\n\n            \n                templateUrl\n                ./registration.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                registerUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            registerUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerUser(form: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/registration/registration.component.ts:38\n                \n            \n\n\n            \n                \n                    Registers a user to Seed-Test\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user form\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/registration/registration.component.ts:21\n                            \n                        \n\n                \n                    \n                        Error during user creation\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ApiService} from '../Services/api.service';\nimport {NavigationEnd, Router} from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\n\n/**\n * Component to register a new user\n */\n@Component({\n    selector: 'app-registration',\n    templateUrl: './registration.component.html',\n    styleUrls: ['./registration.component.css']\n})\n\nexport class RegistrationComponent implements OnInit {\n\n    /**\n     * Error during user creation\n     */\n    error: string;\n\n    /**\n     * @ignore\n     */\n    constructor(public apiService: ApiService, private router: Router, private toastr: ToastrService) {}\n\n    /**\n     * @ignore\n     */\n    ngOnInit() {\n    }\n\n    /**\n     * Registers a user to Seed-Test\n     * @param form user form\n     */\n    async registerUser(form: NgForm){\n        let userId = localStorage.getItem('userId');\n        localStorage.removeItem('userId')\n        this.error = undefined;\n        let response = await this.apiService.registerUser(form.value.email, form.value.password, userId).toPromise()\n        if (response.error && response.error.status === 'error') {\n            this.error = response.error.message;\n            //this.toastr.error(response.error.message, 'Registration')\n        } else {\n            this.toastr.success('successfully registered', 'Registration')\n            this.router.navigate([\"/\"]);\n        } \n    }\n}\n\n    \n\n    \n        \n  \n    Registration\n     \n    \n    \n     \n      \n      {{error}}\n      \n      \n      \n\n      \n        \n          \n            \n            \n              \n              Password must be at least 8 characters long\n          \n            \n                  \n          \n          \n              Password and Confirm Password do not match.\n          \n          \n            Please enter a valid Email address.\n        \n        \n        Register\n    \n  \n\n    \n    \n\n    \n                \n                    ./registration.component.css\n                \n                .grid{\n    display: grid;\n    grid-template-rows: 1;\n    grid-template-columns: 3;\n    grid-template-areas: \"formular\";\n    background-color: var(--white);\n}\n\n.formular{\n    grid-area: formular;\n    grid-column: 2;\n    text-align: center;\n    width: 500px;\n    background-color: var(--white);\n    padding: 80px 50px;\n}\n\n#infoIcon{\n    color: #999;\n    padding: 5px;\n  }\n\n#passwordLengthInfo{\n    font-size: small;\n}\n\n#headerFont{\n    color:var(--ocean-blue);\n}\n\n.uk-form-controls{\n    border-radius: 3px;\n    padding: 5px 5px 5px 5px;\n}\n\n.ng-valid[required], .ng-valid.required  {\n    border-left: 5px solid #53d35a; \n  }\n  \n.ng-invalid:not(form)  {\n    border-left: 5px solid var(--ocean-blue); \n  }\n\n.cross-validation-error input {\n    border-left: 5px solid #d15553;\n  }\n\ninput.wrongEmail {\n  border-left: 5px solid #d15553;\n}\n\n#email, #confirmPassword{\n    margin: 25px;\n}\n\n.wrongLogin{\n    background-color: rgb(228, 92, 92);\n    text-align: center;\n}\n\n\n@media screen and (max-width: 600px) {\n    .grid{\n        display: grid;\n        grid-template-rows: auto;\n        grid-template-areas: \"formular\";\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Registration                              {{error}}                                                                                              Password must be at least 8 characters long                                                                          Password and Confirm Password do not match.                                Please enter a valid Email address.                        Register          '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmResetPasswordComponent', 'selector': 'app-confirm-reset-password'},{'name': 'DeleteScenarioToast', 'selector': '[pink-toast-component]'},{'name': 'EditableComponent', 'selector': 'editable'},{'name': 'ExampleTableComponent', 'selector': 'app-example-table'},{'name': 'FeedbackComponent', 'selector': 'app-feedback'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalsComponent', 'selector': 'app-modals'},{'name': 'ParentComponent', 'selector': 'app-parent'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'ReportHistoryComponent', 'selector': 'app-report-history'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RunTestToast', 'selector': '[pink-toast-component]'},{'name': 'ScenarioEditorComponent', 'selector': 'app-scenario-editor'},{'name': 'StoriesBarComponent', 'selector': 'app-stories-bar'},{'name': 'StoryEditorComponent', 'selector': 'app-story-editor'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'TestAccountComponent', 'selector': 'app-test-account'}];\n    var DIRECTIVES = [{'name': 'EditableOnEnterDirective', 'selector': '[editableOnEnter]'},{'name': 'EditModeDirective', 'selector': '[editMode]'},{'name': 'FocusableDirective', 'selector': '[focusable]'},{'name': 'PasswordConfirmedValidatorDirective', 'selector': '[appPasswordConfirmed]'},{'name': 'ViewModeDirective', 'selector': '[viewMode]'}];\n    var ACTUAL_COMPONENT = {'name': 'RegistrationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Report.html":{"url":"interfaces/Report.html","title":"interface - Report","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Report\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/Report.ts\n        \n\n            \n                Description\n            \n            \n                Interface of a report\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        _id\n                                \n                                \n                                            Optional\n                                        isSaved\n                                \n                                \n                                        jsonReport\n                                \n                                \n                                        mode\n                                \n                                \n                                        options\n                                \n                                \n                                        reportName\n                                \n                                \n                                        reportTime\n                                \n                                \n                                            Optional\n                                        scenarioId\n                                \n                                \n                                        storyId\n                                \n                                \n                                        testStatus\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Object id of the report of the databse\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isSaved\n                                    \n                                \n                                \n                                    \n                                        isSaved:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Status of the report if it is marked as saved or not\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jsonReport\n                                    \n                                \n                                \n                                    \n                                        jsonReport:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Cucumber report in json format\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                    \n                                \n                                \n                                    \n                                        mode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Mode: either feature, scenario\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    included options to create html\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reportName\n                                    \n                                \n                                \n                                    \n                                        reportName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the report\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reportTime\n                                    \n                                \n                                \n                                    \n                                        reportTime:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Time of the run test in milliseconds since 1970\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenarioId\n                                    \n                                \n                                \n                                    \n                                        scenarioId:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    scenario id of the executed test\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        storyId\n                                    \n                                \n                                \n                                    \n                                        storyId:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Story id of the executed test\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        testStatus\n                                    \n                                \n                                \n                                    \n                                        testStatus:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Status if the test was successfull or not\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Report {\n\n    /**\n     * Object id of the report of the databse\n     */\n    _id?: any,\n\n    /**\n     * Time of the run test in milliseconds since 1970\n     */\n    reportTime: number;\n\n    /**\n     * Name of the report\n     */\n    reportName: string;\n\n    /**\n     * Cucumber report in json format\n     */\n    jsonReport: any;\n\n    /**\n     * included options to create html\n     */\n    options: any;\n\n    /**\n     * Story id of the executed test\n     */\n    storyId: any;\n\n    /**\n     * Mode: either feature, scenario\n     */\n    mode: string;\n\n    /**\n     * scenario id of the executed test\n     */\n    scenarioId?: any;\n\n    /**\n     * Status if the test was successfull or not\n     */\n    testStatus: boolean;\n\n    /**\n     * Status of the report if it is marked as saved or not\n     */\n    isSaved?: boolean;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReportComponent.html":{"url":"components/ReportComponent.html","title":"component - ReportComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ReportComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/report/report.component.ts\n\n\n    \n        Description\n    \n    \n        Component to show the report\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-report\n            \n\n            \n                styleUrls\n                ./report.component.css\n            \n\n\n\n            \n                templateUrl\n                ./report.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiService\n                            \n                            \n                                reportReceived\n                            \n                            \n                                    Public\n                                route\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getReport\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/report/report.component.ts:14\n                            \n                        \n\n                \n                    \n                            Retrieves the report\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getReport\n                        \n                        \n                    \n                \n            \n            \n                \ngetReport(reportName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/report/report.component.ts:46\n                \n            \n\n\n            \n                \n                    Gets the report and sets the iframe to it\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    reportName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        name of the report\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApiService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/report/report.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reportReceived\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/report/report.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ActivatedRoute\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/report/report.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../Services/api.service';\nimport { ActivatedRoute } from '@angular/router';\n\n/**\n * Component to show the report\n */\n@Component({\n  selector: 'app-report',\n  templateUrl: './report.component.html',\n  styleUrls: ['./report.component.css']\n})\nexport class ReportComponent implements OnInit {\n  reportReceived: Boolean = false;\n\n\n  /**\n   * Retrieves the report\n   * @param apiService \n   * @param route \n   */\n  constructor(public apiService: ApiService, public route: ActivatedRoute) { \n    this.route.params.subscribe((params) => {\n      if(params.reportName){\n        if(!localStorage.getItem('url_backend')){\n          this.apiService.getBackendInfo().then((value) => {\n            this.getReport(params.reportName);\n          })\n        }else {\n          this.getReport(params.reportName);\n        }\n      }\n    });\n  }\n\n  /**\n   * @ignore\n   */\n  ngOnInit() {\n  }\n\n  /**\n   * Gets the report and sets the iframe to it\n   * @param reportName name of the report\n   */\n  getReport(reportName: string){\n    this.apiService.getReport(reportName).subscribe((resp) => {\n      const iframe: HTMLIFrameElement = document.getElementById('testFrame') as HTMLIFrameElement;\n      this.reportReceived = true;\n      iframe.srcdoc = resp;\n    })\n  }\n\n}\n\n    \n\n    \n        \n    \n\n\n\n    \n\n    \n                \n                    ./report.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmResetPasswordComponent', 'selector': 'app-confirm-reset-password'},{'name': 'DeleteScenarioToast', 'selector': '[pink-toast-component]'},{'name': 'EditableComponent', 'selector': 'editable'},{'name': 'ExampleTableComponent', 'selector': 'app-example-table'},{'name': 'FeedbackComponent', 'selector': 'app-feedback'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalsComponent', 'selector': 'app-modals'},{'name': 'ParentComponent', 'selector': 'app-parent'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'ReportHistoryComponent', 'selector': 'app-report-history'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RunTestToast', 'selector': '[pink-toast-component]'},{'name': 'ScenarioEditorComponent', 'selector': 'app-scenario-editor'},{'name': 'StoriesBarComponent', 'selector': 'app-stories-bar'},{'name': 'StoryEditorComponent', 'selector': 'app-story-editor'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'TestAccountComponent', 'selector': 'app-test-account'}];\n    var DIRECTIVES = [{'name': 'EditableOnEnterDirective', 'selector': '[editableOnEnter]'},{'name': 'EditModeDirective', 'selector': '[editMode]'},{'name': 'FocusableDirective', 'selector': '[focusable]'},{'name': 'PasswordConfirmedValidatorDirective', 'selector': '[appPasswordConfirmed]'},{'name': 'ViewModeDirective', 'selector': '[viewMode]'}];\n    var ACTUAL_COMPONENT = {'name': 'ReportComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReportContainer.html":{"url":"interfaces/ReportContainer.html","title":"interface - ReportContainer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ReportContainer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/ReportContainer.ts\n        \n\n            \n                Description\n            \n            \n                Interface of a Report container for the report history\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        scenarioReports\n                                \n                                \n                                        storyReports\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        scenarioReports\n                                    \n                                \n                                \n                                    \n                                        scenarioReports:         Report[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Report[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Reports of the scenarios included in the story\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        storyReports\n                                    \n                                \n                                \n                                    \n                                        storyReports:         Report[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Report[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Reports of the story\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Report } from \"./Report\";\n\n/**\n * Interface of a Report container for the report history\n */\nexport interface ReportContainer {\n    /**\n     * Reports of the story\n     */\n    storyReports: Report[],\n\n    /**\n     * Reports of the scenarios included in the story\n     */\n    scenarioReports: Report[]\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReportHistoryComponent.html":{"url":"components/ReportHistoryComponent.html","title":"component - ReportHistoryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ReportHistoryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/report-history/report-history.component.ts\n\n\n    \n        Description\n    \n    \n        Component of the report history\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-report-history\n            \n\n            \n                styleUrls\n                ./report-history.component.css\n            \n\n\n\n            \n                templateUrl\n                ./report-history.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                reports\n                            \n                            \n                                selectedStory\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteReport\n                            \n                            \n                                filterScenarioReports\n                            \n                            \n                                getReports\n                            \n                            \n                                goBackToStoryEditor\n                            \n                            \n                                saveReport\n                            \n                            \n                                sortReportsTime\n                            \n                            \n                                stringifyReportTime\n                            \n                            \n                                unsaveReport\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                newSelectedStory\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changeEditor\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    newSelectedStory\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        newSelectedStory\n                    \n                \n                        \n                            \n                                    Defined in src/app/report-history/report-history.component.ts:48\n                            \n                        \n                \n                    \n                        Sets a new currently used story\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changeEditor\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/report-history/report-history.component.ts:32\n                            \n                        \n                \n                    \n                        Event emiter to change the editor to story editor\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteReport\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteReport(report: Report)\n                \n            \n\n\n            \n                \n                    Defined in src/app/report-history/report-history.component.ts:105\n                \n            \n\n\n            \n                \n                    Deletes a report of the list\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    report\n                                    \n                                                Report\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        report to be deleted\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filterScenarioReports\n                        \n                        \n                    \n                \n            \n            \n                \nfilterScenarioReports(scenario: Scenario)\n                \n            \n\n\n            \n                \n                    Defined in src/app/report-history/report-history.component.ts:70\n                \n            \n\n\n            \n                \n                    Filters the scenario reports to only the reports of the current scenario\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    scenario\n                                    \n                                                Scenario\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        currently regarded scenario\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        list of reports of this scenario\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getReports\n                        \n                        \n                    \n                \n            \n            \n                \ngetReports()\n                \n            \n\n\n            \n                \n                    Defined in src/app/report-history/report-history.component.ts:58\n                \n            \n\n\n            \n                \n                    Retrieves the reports of the story\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            goBackToStoryEditor\n                        \n                        \n                    \n                \n            \n            \n                \ngoBackToStoryEditor()\n                \n            \n\n\n            \n                \n                    Defined in src/app/report-history/report-history.component.ts:86\n                \n            \n\n\n            \n                \n                    Returns to story editor\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveReport\n                        \n                        \n                    \n                \n            \n            \n                \nsaveReport(report: Report)\n                \n            \n\n\n            \n                \n                    Defined in src/app/report-history/report-history.component.ts:132\n                \n            \n\n\n            \n                \n                    Sets the report to be saved\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    report\n                                    \n                                                Report\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortReportsTime\n                        \n                        \n                    \n                \n            \n            \n                \nsortReportsTime(reps)\n                \n            \n\n\n            \n                \n                    Defined in src/app/report-history/report-history.component.ts:79\n                \n            \n\n\n            \n                \n                    Sorts the reports depending on their report time\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    reps\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        reports\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            stringifyReportTime\n                        \n                        \n                    \n                \n            \n            \n                \nstringifyReportTime(time: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/report-history/report-history.component.ts:95\n                \n            \n\n\n            \n                \n                    Creates a date out of the report time\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    time\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        report time\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Name of the report with the date\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unsaveReport\n                        \n                        \n                    \n                \n            \n            \n                \nunsaveReport(report: Report)\n                \n            \n\n\n            \n                \n                    Defined in src/app/report-history/report-history.component.ts:120\n                \n            \n\n\n            \n                \n                    Set the report to not be saved\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    report\n                                    \n                                                Report\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reports\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ReportContainer\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/report-history/report-history.component.ts:26\n                            \n                        \n\n                \n                    \n                        Reports of the selected story\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedStory\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Story\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/report-history/report-history.component.ts:21\n                            \n                        \n\n                \n                    \n                        Currently selected story\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        newSelectedStory\n                    \n                \n\n\n                \n                    \n                        setnewSelectedStory(story)\n                    \n                \n                            \n                                \n                                    Defined in src/app/report-history/report-history.component.ts:48\n                                \n                            \n                    \n                        \n                                Sets a new currently used story\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            story\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Report } from '../model/Report';\nimport { ReportContainer } from '../model/ReportContainer';\nimport { Scenario } from '../model/Scenario';\nimport { Story } from '../model/Story';\nimport { ApiService } from '../Services/api.service';\n\n/**\n * Component of the report history\n */\n@Component({\n  selector: 'app-report-history',\n  templateUrl: './report-history.component.html',\n  styleUrls: ['./report-history.component.css']\n})\n\nexport class ReportHistoryComponent implements OnInit {\n  /**\n   * Currently selected story\n   */\n  selectedStory: Story = null;\n\n  /**\n   * Reports of the selected story\n   */\n  reports: ReportContainer = null;\n\n  /**\n   * Event emiter to change the editor to story editor\n   */\n  @Output()\n  changeEditor: EventEmitter = new EventEmitter();\n\n  /**\n   * @ignore\n   */\n  constructor(public apiService: ApiService) { }\n\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {}\n\n  /**\n   * Sets a new currently used story\n   */\n  @Input()\n  set newSelectedStory(story: Story) {\n      this.selectedStory = story;\n      if (this.selectedStory){\n        this.getReports();\n      }\n  }\n\n  /**\n   * Retrieves the reports of the story\n   */\n  getReports(){\n    this.reports = null;\n    this.apiService.getReportHistory(this.selectedStory._id).subscribe(resp => {\n        this.reports = resp;\n    });\n  }\n\n  /**\n   * Filters the scenario reports to only the reports of the current scenario\n   * @param scenario currently regarded scenario\n   * @returns list of reports of this scenario\n   */\n   filterScenarioReports(scenario: Scenario){\n    return this.reports.scenarioReports.filter((elem) => parseInt(elem.scenarioId) == scenario.scenario_id)\n  }\n\n  /**\n   * Sorts the reports depending on their report time\n   * @param reps reports\n   * @returns \n   */\n  sortReportsTime(reps){\n    return reps.sort((a, b) => a.reportTime > b.reportTime)\n  }\n\n  /**\n   * Returns to story editor\n   */\n  goBackToStoryEditor(){\n    this.changeEditor.emit();\n  }\n\n  /**\n   * Creates a date out of the report time\n   * @param time report time\n   * @returns Name of the report with the date\n   */\n  stringifyReportTime(time: number){\n    let date = new Date(time).toLocaleDateString(\"de\")\n    let t = new Date(time).toLocaleTimeString(\"de\")\n    return \"Report: \" + date + \" \" + t\n  }\n\n  /**\n   * Deletes a report of the list\n   * @param report report to be deleted\n   */\n  deleteReport(report: Report){\n    this.apiService\n      .deleteReport(report._id)\n      .subscribe(_resp => {\n          let newReports = JSON.parse(JSON.stringify(this.reports));\n          newReports.storyReports = newReports.storyReports.filter((rep) => rep._id != report._id);\n          newReports.scenarioReports = newReports.scenarioReports.filter((rep) => rep._id != report._id);\n          this.reports = newReports;\n      });\n  }\n\n  /**\n   * Set the report to not be saved\n   * @param report \n   */\n  unsaveReport(report: Report){\n    report.isSaved = false;\n    this.apiService\n      .unsaveReport(report._id)\n      .subscribe(_resp => {\n      });\n  }\n\n  /**\n   * Sets the report to be saved\n   * @param report \n   */\n  saveReport(report: Report){\n    report.isSaved = true;\n    this.apiService\n      .saveReport(report._id)\n      .subscribe(_resp => {\n      });\n  }\n\n}\n\n    \n\n    \n        \n\n    \n        \n            \n                \n                    \n                \n            \n        \n        \n            Reports: {{this.selectedStory.title}}\n        \n    \n    \n        Disclaimer: Currently only the last 1 report per scenario and story will be saved. If you want to keep the reports longer, you have to download the report or mark it as saved.\n    \n    \n        \n            Story Reports:\n        \n        \n            \n                {{stringifyReportTime(rep.reportTime)}}\n                \n                    \n                      delete\n                    \n                    \n                      star\n                    \n                    \n                      star_border\n                    \n                \n            \n        \n    \n    \n        \n            \n                Scenario {{i + 1}} Reports: {{scen.name}}\n            \n            \n                \n                    {{stringifyReportTime(reps.reportTime)}}\n                    \n                        \n                          delete\n                        \n                        \n                          star\n                        \n                        \n                          star_border\n                        \n                    \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./report-history.component.css\n                \n                * {\n  padding: 0px;\n  margin: 0px;\n}\n\n.reportHistoryContainer{\n  border-left: 1px solid #999;\n  border-top: 1px solid #999;\n  border-bottom: 1px solid #999;\n  background: var(--white);\n}\n\na.passed{\n    color: green;\n  }\n\n  a.notPassed{\n    color: red;\n  }\n\n  .backButton{\n    background: none;\n    width: 50px;\n    height: 50px;\n    margin-left: 20px;\n    margin-right: 20px;\n    font-size: 15px;\n    cursor: pointer;\n    border: none;\n}\n\n.sectionHeader {\n  background-color: lightgrey;\n  margin: 5px;\n}\n\n.report{\n  display: flex;\n  justify-content: space-between;\n  margin: 3px 30px;\n  align-items: center;\n}\n\n.reportButtons{\n  margin-right: 10px;\n}\n\n.actionButton{\n  margin-left: 10px;\n  background: none;\n  border: none;\n}\n\n.actionButton > em{\n  color: var(--ocean-blue);\n  font-size: 22px;\n\n}\n\n.headline{\n  color: var(--charcoal-grey);\n}\n\n.reportHistoryTitleContainer{\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  margin: 10px;\n}\n\n.disclaimerContainer{\n  margin: 20px;\n  padding: 5px;\n  border: 1px solid var(--grape);\n  text-align: center;\n}\n\n.reportsHeader{\n  padding:  2px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                    Reports: {{this.selectedStory.title}}                        Disclaimer: Currently only the last 1 report per scenario and story will be saved. If you want to keep the reports longer, you have to download the report or mark it as saved.                            Story Reports:                                            {{stringifyReportTime(rep.reportTime)}}                                                          delete                                                              star                                                              star_border                                                                                                    Scenario {{i + 1}} Reports: {{scen.name}}                                                            {{stringifyReportTime(reps.reportTime)}}                                                                      delete                                                                          star                                                                          star_border                                                                                    '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmResetPasswordComponent', 'selector': 'app-confirm-reset-password'},{'name': 'DeleteScenarioToast', 'selector': '[pink-toast-component]'},{'name': 'EditableComponent', 'selector': 'editable'},{'name': 'ExampleTableComponent', 'selector': 'app-example-table'},{'name': 'FeedbackComponent', 'selector': 'app-feedback'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalsComponent', 'selector': 'app-modals'},{'name': 'ParentComponent', 'selector': 'app-parent'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'ReportHistoryComponent', 'selector': 'app-report-history'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RunTestToast', 'selector': '[pink-toast-component]'},{'name': 'ScenarioEditorComponent', 'selector': 'app-scenario-editor'},{'name': 'StoriesBarComponent', 'selector': 'app-stories-bar'},{'name': 'StoryEditorComponent', 'selector': 'app-story-editor'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'TestAccountComponent', 'selector': 'app-test-account'}];\n    var DIRECTIVES = [{'name': 'EditableOnEnterDirective', 'selector': '[editableOnEnter]'},{'name': 'EditModeDirective', 'selector': '[editMode]'},{'name': 'FocusableDirective', 'selector': '[focusable]'},{'name': 'PasswordConfirmedValidatorDirective', 'selector': '[appPasswordConfirmed]'},{'name': 'ViewModeDirective', 'selector': '[viewMode]'}];\n    var ACTUAL_COMPONENT = {'name': 'ReportHistoryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RepositoryContainer.html":{"url":"interfaces/RepositoryContainer.html","title":"interface - RepositoryContainer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RepositoryContainer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/RepositoryContainer.ts\n        \n\n            \n                Description\n            \n            \n                Interface of the repository container\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        _id\n                                \n                                \n                                            Optional\n                                        canEdit\n                                \n                                \n                                        source\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Object id of the repository container from the database\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        canEdit\n                                    \n                                \n                                \n                                    \n                                        canEdit:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the user can edit the repository\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Source of the repository\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the repository\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface RepositoryContainer {\n    /**\n     * Object id of the repository container from the database\n     */\n    _id?: any;\n\n    /**\n     * Name of the repository\n     */\n    value: string;\n\n    /**\n     * Source of the repository\n     */\n    source: string;\n\n    /**\n     * If the user can edit the repository\n     */\n    canEdit?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/reset-password/reset-password.component.ts\n\n\n    \n        Description\n    \n    \n        Component to reset the password\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-password\n            \n\n            \n                styleUrls\n                ./reset-password.component.css\n            \n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                redirectToRegister\n                            \n                            \n                                requestReset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            redirectToRegister\n                        \n                        \n                    \n                \n            \n            \n                \nredirectToRegister()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reset-password/reset-password.component.ts:43\n                \n            \n\n\n            \n                \n                    Redirects the user to the register component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            requestReset\n                        \n                        \n                    \n                \n            \n            \n                \nrequestReset(form: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/reset-password/reset-password.component.ts:33\n                \n            \n\n\n            \n                \n                    Request a reset of the password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-password/reset-password.component.ts:21\n                            \n                        \n\n                \n                    \n                        Error during reset password\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport {ApiService} from '../Services/api.service';\nimport {Router} from '@angular/router';\nimport { RepositoryContainer } from '../model/RepositoryContainer';\n\n/**\n * Component to reset the password\n */\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\n\nexport class ResetPasswordComponent{\n\n  /**\n   * Error during reset password\n   */\n  error: string;\n\n  /**\n   * @ignore\n   */\n  constructor(public apiService: ApiService, private router: Router) {    \n  }\n\n  /**\n   * Request a reset of the password\n   * @param form \n   */\n  requestReset(form : NgForm) {\n    this.apiService.requestReset(form.value.email).subscribe(res => {\n      //console.log('test')\n    })\n    this.router.navigate(['/login']);\n  }\n\n  /**\n   * Redirects the user to the register component\n   */\n  redirectToRegister(){\n    this.router.navigate(['/register']);\n  }\n}\n\n    \n\n    \n        \n \n  \n    \n        Can't log in?\n        \n        \n        \n        1.Don't have an account yet?\n        If you don't have an account yet you can register an new account \n        here.\n        \n        \n        2. Reset password for an existing account\n        If you already have an account but forgot your password you can reset your password here.\n        \n        \n        1. Type in the e-mail address connected to your account.\n        \n        2. Choose a new password of miminum 8 characters.\n        \n        3. Press the 'reset' button and you will receive an automated e-mail with a reset-token.\n        \n    \n  \n\n   \n    \n    Reset Your Password\n     \n      \n      \n      \n    \n      \n      \n      \n      \n    \n    \n      Reset Password\n    \n  \n\n  \n    \n\n    \n                \n                    ./reset-password.component.css\n                \n                * {\n    padding: 0px;\n    margin: 0px;\n    font-family: Klavika, sans-serif;\n}\n\nh1{\n    margin: 5px;\n}\n\n.grid{\n    display: grid;\n    grid-template-rows: auto;\n    grid-template-columns: 1fr 1fr 1fr 1fr;\n    grid-template-areas: \"howToStart\" \"formular\";\n    background-color: var(--white);\n    place-items: center;\n}\n\n.formular{\n    grid-area: formular;\n    grid-row: 2 / 3;\n    grid-column: 3 / 4;\n    text-align: center;\n    background-color: var(--white);\n    padding: 80px 50px 20px;\n    margin-bottom: 80px;\n}\n\n.howToStart {\n    grid-area: howToStart;\n    grid-row: 2 / 3;\n    grid-column: 2 / 3;\n    background-color: var(--white);\n    padding: 50px 10px 50px;\n    text-align: center;\n    font-size: small;\n}\n\n.instructionText{\n    width: 350px;\n    border: double 5px var(--dark-grey);\n    padding: 30px;\n}\n\n.req{\n    text-decoration: underline;\n}\n\n#headerFont{\n    color:var(--ocean-blue);\n}\n\n.uk-form-controls{\n    border-radius: 3px;\n    padding: 5px 5px 5px 5px;\n}\n\n.linkButton{\n    font-style: inherit;\n    border: 0px;\n    background-color: transparent;\n    color:var(--ocean-blue);\n    font-size: 10pt;\n    font-weight: bold;\n    outline: none;\n}\n\n@media screen and (max-width: 600px) {\n    .grid{\n        display: grid;\n        grid-template-rows: auto;\n        grid-template-areas: \"howToStart\" \"formular\";\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '               Can\\'t log in?                                1.Don\\'t have an account yet?        If you don\\'t have an account yet you can register an new account         here.                        2. Reset password for an existing account        If you already have an account but forgot your password you can reset your password here.                        1. Type in the e-mail address connected to your account.                2. Choose a new password of miminum 8 characters.                3. Press the \\'reset\\' button and you will receive an automated e-mail with a reset-token.                         Reset Your Password                                                                 Reset Password        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmResetPasswordComponent', 'selector': 'app-confirm-reset-password'},{'name': 'DeleteScenarioToast', 'selector': '[pink-toast-component]'},{'name': 'EditableComponent', 'selector': 'editable'},{'name': 'ExampleTableComponent', 'selector': 'app-example-table'},{'name': 'FeedbackComponent', 'selector': 'app-feedback'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalsComponent', 'selector': 'app-modals'},{'name': 'ParentComponent', 'selector': 'app-parent'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'ReportHistoryComponent', 'selector': 'app-report-history'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RunTestToast', 'selector': '[pink-toast-component]'},{'name': 'ScenarioEditorComponent', 'selector': 'app-scenario-editor'},{'name': 'StoriesBarComponent', 'selector': 'app-stories-bar'},{'name': 'StoryEditorComponent', 'selector': 'app-story-editor'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'TestAccountComponent', 'selector': 'app-test-account'}];\n    var DIRECTIVES = [{'name': 'EditableOnEnterDirective', 'selector': '[editableOnEnter]'},{'name': 'EditModeDirective', 'selector': '[editMode]'},{'name': 'FocusableDirective', 'selector': '[focusable]'},{'name': 'PasswordConfirmedValidatorDirective', 'selector': '[appPasswordConfirmed]'},{'name': 'ViewModeDirective', 'selector': '[viewMode]'}];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RunTestToast.html":{"url":"components/RunTestToast.html","title":"component - RunTestToast","body":"\n                   \n\n\n\n\n\n  Components\n  RunTestToast\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/runSave-toast.ts\n\n\n    \n        Description\n    \n    \n        Component of the run save toasts\n\n    \n\n    \n        Extends\n    \n    \n            Toast\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n            \n                preserveWhitespaces\n                false\n            \n\n\n\n            \n                selector\n                [pink-toast-component]\n            \n\n\n            \n                styles\n                \n        a {\n            background: #388196;\n            margin: 2px;\n        }\n\n        a:hover {\n            color: black;\n        }\n    \n            \n\n            \n                template\n                \n  \n    \n      {{ title }}\n    \n    \n    \n    \n      {{ message }}\n    \n  \n  \n    \n      {{ saveRunString }}\n    \n    \n        {{ runString }}\n    \n    \n      close\n    \n  \n\n\n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                runString\n                            \n                            \n                                saveRunString\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                runTest\n                            \n                            \n                                saveAndRunTest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            runTest\n                        \n                        \n                    \n                \n            \n            \n                \nrunTest(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/runSave-toast.ts:141\n                \n            \n\n\n            \n                \n                    Run test without saving it\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveAndRunTest\n                        \n                        \n                    \n                \n            \n            \n                \nsaveAndRunTest(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/runSave-toast.ts:152\n                \n            \n\n\n            \n                \n                    Saves the scenario and then runs the test\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            runString\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Run Test'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/runSave-toast.ts:123\n                            \n                        \n\n                \n                    \n                        Name for the run test button\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveRunString\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Save and Run'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/runSave-toast.ts:118\n                            \n                        \n\n                \n                    \n                        Name for the save run button\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n    animate,\n    keyframes,\n    state,\n    style,\n    transition,\n    trigger\n  } from '@angular/animations';\nimport { Component} from '@angular/core';  \nimport { Toast, ToastrService, ToastPackage } from 'ngx-toastr';\nimport { ApiService } from './Services/api.service';\n  \n  /**\n   * Component of the run save toasts\n   */\n  @Component({\n    selector: '[pink-toast-component]',\n    //styles: [`\n    //  :host {\n    //    background-color: #FF69B4;\n    //    position: relative;\n    //    overflow: hidden;\n    //    margin: 0 0 6px;\n    //    padding: 10px 10px 10px 10px;\n    //    width: 300px;\n    //    border-radius: 3px 3px 3px 3px;\n    //    color: #FFFFFF;\n    //    pointer-events: all;\n    //    cursor: pointer;\n    //  }\n    //  .btn-pink {\n    //    -webkit-backface-visibility: hidden;\n    //    -webkit-transform: translateZ(0);\n    //  }\n    //`],\n    styles:[`\n        a {\n            background: #388196;\n            margin: 2px;\n        }\n\n        a:hover {\n            color: black;\n        }\n    `],\n    template: `\n    \n      \n        \n          {{ title }}\n        \n        \n        \n        \n          {{ message }}\n        \n      \n      \n        \n          {{ saveRunString }}\n        \n        \n            {{ runString }}\n        \n        \n          close\n        \n      \n    \n    \n      \n    \n    `,\n    animations: [\n      trigger('flyInOut', [\n        state('inactive', style({\n          opacity: 0,\n        })),\n        transition('inactive => active', animate('400ms ease-out', keyframes([\n          style({\n            transform: 'translate3d(100%, 0, 0) skewX(-30deg)',\n            opacity: 0,\n          }),\n          style({\n            transform: 'skewX(20deg)',\n            opacity: 1,\n          }),\n          style({\n            transform: 'skewX(-5deg)',\n            opacity: 1,\n          }),\n          style({\n            transform: 'none',\n            opacity: 1,\n          }),\n        ]))),\n        transition('active => removed', animate('400ms ease-out', keyframes([\n          style({\n            opacity: 1,\n          }),\n          style({\n            transform: 'translate3d(100%, 0, 0) skewX(30deg)',\n            opacity: 0,\n          }),\n        ]))),\n      ]),\n    ],\n    preserveWhitespaces: false,\n  })\n\n  export class RunTestToast extends Toast {\n    \n    /**\n     * Name for the save run button\n     */\n    saveRunString = 'Save and Run';\n\n    /**\n     * Name for the run test button\n     */\n    runString = 'Run Test'\n    // constructor is only necessary when not using AoT\n\n    /**\n     * @ignore\n     */\n    constructor(\n      protected toastrService: ToastrService,\n      public toastPackage: ToastPackage,\n      public apiService: ApiService\n    ) {\n      super(toastrService, toastPackage);\n    }\n  \n    /**\n     * Run test without saving it\n     * @param event \n     */\n    runTest(event: Event){\n        event.stopPropagation();\n        this.apiService.runSaveOption('run')\n        this.remove();\n\n    }\n\n    /**\n     * Saves the scenario and then runs the test\n     * @param event \n     */\n    saveAndRunTest(event: Event){\n        console.log('Save and Run Test')\n        event.stopPropagation();\n        this.apiService.runSaveOption('saveRun')\n        this.remove();\n    }\n  }\n    \n\n\n    \n            \n        a {\n            background: #388196;\n            margin: 2px;\n        }\n\n        a:hover {\n            color: black;\n        }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ title }}                      {{ message }}                  {{ saveRunString }}                {{ runString }}              close        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmResetPasswordComponent', 'selector': 'app-confirm-reset-password'},{'name': 'DeleteScenarioToast', 'selector': '[pink-toast-component]'},{'name': 'EditableComponent', 'selector': 'editable'},{'name': 'ExampleTableComponent', 'selector': 'app-example-table'},{'name': 'FeedbackComponent', 'selector': 'app-feedback'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalsComponent', 'selector': 'app-modals'},{'name': 'ParentComponent', 'selector': 'app-parent'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'ReportHistoryComponent', 'selector': 'app-report-history'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RunTestToast', 'selector': '[pink-toast-component]'},{'name': 'ScenarioEditorComponent', 'selector': 'app-scenario-editor'},{'name': 'StoriesBarComponent', 'selector': 'app-stories-bar'},{'name': 'StoryEditorComponent', 'selector': 'app-story-editor'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'TestAccountComponent', 'selector': 'app-test-account'}];\n    var DIRECTIVES = [{'name': 'EditableOnEnterDirective', 'selector': '[editableOnEnter]'},{'name': 'EditModeDirective', 'selector': '[editMode]'},{'name': 'FocusableDirective', 'selector': '[focusable]'},{'name': 'PasswordConfirmedValidatorDirective', 'selector': '[appPasswordConfirmed]'},{'name': 'ViewModeDirective', 'selector': '[viewMode]'}];\n    var ACTUAL_COMPONENT = {'name': 'RunTestToast'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Scenario.html":{"url":"interfaces/Scenario.html","title":"interface - Scenario","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Scenario\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/Scenario.ts\n        \n\n            \n                Description\n            \n            \n                Interface of the Scenario\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        browser\n                                \n                                \n                                        comment\n                                \n                                \n                                            Optional\n                                        daisyAutoLogout\n                                \n                                \n                                            Optional\n                                        lastTestPassed\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        saved\n                                \n                                \n                                        scenario_id\n                                \n                                \n                                        stepDefinitions\n                                \n                                \n                                            Optional\n                                        stepWaitTime\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        browser\n                                    \n                                \n                                \n                                    \n                                        browser:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Selected browser to execute the test on\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                    \n                                \n                                \n                                    \n                                        comment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Comment in this scenario\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        daisyAutoLogout\n                                    \n                                \n                                \n                                    \n                                        daisyAutoLogout:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the daisy Auto Logout is active\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastTestPassed\n                                    \n                                \n                                \n                                    \n                                        lastTestPassed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the last test was successfull or not\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the scenario\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        saved\n                                    \n                                \n                                \n                                    \n                                        saved:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the scenario got saved\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenario_id\n                                    \n                                \n                                \n                                    \n                                        scenario_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Number of scenario created in the story\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stepDefinitions\n                                    \n                                \n                                \n                                    \n                                        stepDefinitions:         StepDefinition\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StepDefinition\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Step definitions in the scenario\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stepWaitTime\n                                    \n                                \n                                \n                                    \n                                        stepWaitTime:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Wait time between the steps\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {StepDefinition} from './StepDefinition';\n\n/**\n * Interface of the Scenario\n */\nexport interface Scenario {\n\n    /**\n     * Number of scenario created in the story\n     */\n    scenario_id: number;\n\n    /**\n     * Name of the scenario\n     */\n    name: string;\n\n    /**\n     * Step definitions in the scenario\n     */\n    stepDefinitions: StepDefinition;\n\n    /**\n     * Comment in this scenario\n     */\n    comment: string;\n\n    /**\n     * If the last test was successfull or not\n     */\n    lastTestPassed?: boolean;\n\n    /**\n     * If the scenario got saved\n     */\n    saved?: boolean;\n\n    /**\n     * If the daisy Auto Logout is active\n     */\n    daisyAutoLogout?: boolean;\n\n    /**\n     * Wait time between the steps\n     */\n    stepWaitTime?: number;\n\n    /**\n     * Selected browser to execute the test on\n     */\n    browser?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StepDefinition.html":{"url":"interfaces/StepDefinition.html","title":"interface - StepDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StepDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/StepDefinition.ts\n        \n\n            \n                Description\n            \n            \n                Interface of a Step definition\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        example\n                                \n                                \n                                        given\n                                \n                                \n                                        then\n                                \n                                \n                                        when\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        example\n                                    \n                                \n                                \n                                    \n                                        example:         StepType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StepType[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Examples\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        given\n                                    \n                                \n                                \n                                    \n                                        given:         StepType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StepType[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Given Steps\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        then\n                                    \n                                \n                                \n                                    \n                                        then:         StepType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StepType[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Then Steps\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        when\n                                    \n                                \n                                \n                                    \n                                        when:         StepType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StepType[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    When Steps\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { StepType } from \"./StepType\";\n\n/**\n * Interface of a Step definition\n */\nexport interface StepDefinition {\n    /**\n     * Given Steps\n     */\n    given: StepType[];\n\n    /**\n     * When Steps\n     */\n    when: StepType[];\n\n    /**\n     * Then Steps\n     */\n    then: StepType[];\n\n    /**\n     * Examples\n     */\n    example: StepType[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StepDefinitionBackground.html":{"url":"interfaces/StepDefinitionBackground.html","title":"interface - StepDefinitionBackground","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StepDefinitionBackground\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/StepDefinitionBackground.ts\n        \n\n            \n                Description\n            \n            \n                Interface of the Step definition of the background\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        when\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        when\n                                    \n                                \n                                \n                                    \n                                        when:         StepType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StepType[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    When Steps\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { StepType } from \"./StepType\";\n\n/**\n * Interface of the Step definition of the background\n */\nexport interface StepDefinitionBackground {\n    /**\n     * When Steps\n     */\n    when: StepType[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StepType.html":{"url":"interfaces/StepType.html","title":"interface - StepType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StepType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/StepType.ts\n        \n\n            \n                Description\n            \n            \n                Interface of the step type\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        _id\n                                \n                                \n                                            Optional\n                                        checked\n                                \n                                \n                                            Optional\n                                        deactivated\n                                \n                                \n                                        id\n                                \n                                \n                                        mid\n                                \n                                \n                                            Optional\n                                        outdated\n                                \n                                \n                                        pre\n                                \n                                \n                                            Optional\n                                        selection\n                                \n                                \n                                        stepType\n                                \n                                \n                                        type\n                                \n                                \n                                        values\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Object id of the step type in the database\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        checked\n                                    \n                                \n                                \n                                    \n                                        checked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    checked currently not used\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deactivated\n                                    \n                                \n                                \n                                    \n                                        deactivated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    deactivated currently not used\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Importance of the step type, the lower, the higher the importance -> the higher the step is the higher ordered it is in the list of available steps\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mid\n                                    \n                                \n                                \n                                    \n                                        mid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Text after the first input field\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outdated\n                                    \n                                \n                                \n                                    \n                                        outdated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Outdated currently not used\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pre\n                                    \n                                \n                                \n                                    \n                                        pre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Text before the first input field\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selection\n                                    \n                                \n                                \n                                    \n                                        selection:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Selection currently not used\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stepType\n                                    \n                                \n                                \n                                    \n                                        stepType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the type to which this step belongs to: given, when, then\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name shown to the user in the available steps list\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        values\n                                    \n                                \n                                \n                                    \n                                        values:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of values to fill the input fields\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface StepType {\n    /**\n     * Object id of the step type in the database\n     */\n    _id?: string;\n\n    /**\n     * Importance of the step type, the lower, the higher the importance -> the higher the step is the higher ordered it is in the list of available steps\n     */\n    id: number;\n\n    /**\n     * Text before the first input field\n     */\n    pre: string\n\n    /**\n     * Text after the first input field\n     */\n    mid: string;\n\n    /**\n     * Selection currently not used\n     */\n    selection?: string[];\n\n    /**\n     * Name of the type to which this step belongs to: given, when, then\n     */\n    stepType: string;\n\n    /**\n     * Name shown to the user in the available steps list\n     */\n    type: string;\n\n    /**\n     * List of values to fill the input fields\n     */\n    values: string[];\n\n    /**\n     * Outdated currently not used\n     */\n    outdated?: boolean;\n\n    /**\n     * checked currently not used\n     */\n    checked?: boolean;\n\n    /**\n     * deactivated currently not used\n     */\n    deactivated?: boolean;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StoriesBarComponent.html":{"url":"components/StoriesBarComponent.html","title":"component - StoriesBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StoriesBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/stories-bar/stories-bar.component.ts\n\n\n    \n        Description\n    \n    \n        Component of the Stories bar\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-stories-bar\n            \n\n            \n                styleUrls\n                ./stories-bar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./stories-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiService\n                            \n                            \n                                daisyVersion\n                            \n                            \n                                isCustomStory\n                            \n                            \n                                modalsComponent\n                            \n                            \n                                selectedScenario\n                            \n                            \n                                selectedStory\n                            \n                            \n                                stories\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getSortedStories\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openCreateNewScenarioModal\n                            \n                            \n                                selectScenario\n                            \n                            \n                                selectStoryScenario\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                scenarioChosen\n                            \n                            \n                                storyChosen\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/stories-bar/stories-bar.component.ts:57\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        scenarioChosen\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/stories-bar/stories-bar.component.ts:52\n                            \n                        \n                \n                    \n                        Emits a new chosen scenario\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        storyChosen\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/stories-bar/stories-bar.component.ts:46\n                            \n                        \n                \n                    \n                        Emits a new chosen story\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSortedStories\n                        \n                        \n                    \n                \n            \n            \n                \ngetSortedStories()\n                \n            \n\n\n            \n                \n                    Defined in src/app/stories-bar/stories-bar.component.ts:96\n                \n            \n\n\n            \n                \n                    Sorts the stories after issue_number\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/stories-bar/stories-bar.component.ts:82\n                \n            \n\n\n            \n                \n                    Checks if this is the daisy version\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openCreateNewScenarioModal\n                        \n                        \n                    \n                \n            \n            \n                \nopenCreateNewScenarioModal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/stories-bar/stories-bar.component.ts:131\n                \n            \n\n\n            \n                \n                    Opens a create New scenario Modal\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectScenario\n                        \n                        \n                    \n                \n            \n            \n                \nselectScenario(scenario: Scenario)\n                \n            \n\n\n            \n                \n                    Defined in src/app/stories-bar/stories-bar.component.ts:110\n                \n            \n\n\n            \n                \n                    Selects a new scenario\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scenario\n                                    \n                                                Scenario\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectStoryScenario\n                        \n                        \n                    \n                \n            \n            \n                \nselectStoryScenario(story: Story)\n                \n            \n\n\n            \n                \n                    Defined in src/app/stories-bar/stories-bar.component.ts:119\n                \n            \n\n\n            \n                \n                    Selects a new Story and with it a new scenario\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    story\n                                    \n                                                Story\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApiService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/stories-bar/stories-bar.component.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            daisyVersion\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/stories-bar/stories-bar.component.ts:40\n                            \n                        \n\n                \n                    \n                        If it is the daisy version\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isCustomStory\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/stories-bar/stories-bar.component.ts:35\n                            \n                        \n\n                \n                    \n                        If it is a custom story\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalsComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalsComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('modalsComponent')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/stories-bar/stories-bar.component.ts:57\n                            \n                        \n\n                \n                    \n                        View Child Modals\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedScenario\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Scenario\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/stories-bar/stories-bar.component.ts:30\n                            \n                        \n\n                \n                    \n                        Currently selected scenario\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedStory\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Story\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/stories-bar/stories-bar.component.ts:25\n                            \n                        \n\n                \n                    \n                        Currently selected story\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stories\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Story[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/stories-bar/stories-bar.component.ts:20\n                            \n                        \n\n                \n                    \n                        Stories in the project\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, EventEmitter, Output, ViewChild } from '@angular/core';\nimport {ApiService} from '../Services/api.service';\nimport { Story } from '../model/Story';\nimport { Scenario } from '../model/Scenario';\nimport { ModalsComponent } from '../modals/modals.component';\n\n/**\n * Component of the Stories bar\n */\n@Component({\n  selector: 'app-stories-bar',\n  templateUrl: './stories-bar.component.html',\n  styleUrls: ['./stories-bar.component.css']\n})\nexport class StoriesBarComponent implements OnInit {\n\n  /**\n   * Stories in the project\n   */\n  stories: Story[];\n\n  /**\n   * Currently selected story\n   */\n  selectedStory: Story;\n\n  /**\n   * Currently selected scenario\n   */\n  selectedScenario: Scenario;\n\n  /**\n   * If it is a custom story\n   */\n  isCustomStory: boolean = false;\n\n  /**\n   * If it is the daisy version\n   */\n  daisyVersion: boolean = true;\n\n  /**\n   * Emits a new chosen story\n   */\n  @Output()\n  storyChosen: EventEmitter = new EventEmitter();\n\n  /**\n   * Emits a new chosen scenario\n   */\n  @Output()\n  scenarioChosen: EventEmitter = new EventEmitter();\n\n  /**\n   * View Child Modals\n   */\n  @ViewChild('modalsComponent') modalsComponent: ModalsComponent;\n  \n  /**\n   * Constructor\n   * @param apiService \n   */\n  constructor(public apiService: ApiService) {\n    this.apiService.getStoriesEvent.subscribe(stories => {\n      this.stories = stories;\n      this.isCustomStory = localStorage.getItem('source') === 'db' ;\n    } );\n\n    this.apiService.createCustomStoryEmitter.subscribe(custom => {\n      this.apiService.createStory(custom.story.title, custom.story.description, custom.repositoryContainer.value, custom.repositoryContainer._id).subscribe(respp => {\n        this.apiService.getStories(custom.repositoryContainer).subscribe((resp: Story[]) => {\n          console.log('stories', resp);\n          this.stories = resp;\n        });\n      });\n    })\n  }\n\n  /**\n   * Checks if this is the daisy version\n   */\n  ngOnInit() {\n    let version = localStorage.getItem('version')\n    if (version == 'DAISY' || !version) {\n      this.daisyVersion = true;\n    } else {\n      this.daisyVersion = false;\n    }\n  }\n\n\n  /**\n   * Sorts the stories after issue_number\n   * @returns \n   */\n  getSortedStories() {\n    if (this.stories) {\n      return this.stories.sort(function(a, b) { \n        if(a.issue_number  b.issue_number) { return 1; }\n        return 0;\n      });\n    }\n  }\n\n  /**\n   * Selects a new scenario\n   * @param scenario \n   */\n  selectScenario(scenario: Scenario) {\n    this.selectedScenario = scenario;\n    this.scenarioChosen.emit(scenario);\n  }\n\n  /**\n   * Selects a new Story and with it a new scenario\n   * @param story \n   */\n  selectStoryScenario(story: Story) {\n    this.selectedStory = story;\n    this.storyChosen.emit(story);\n    const storyIndex = this.stories.indexOf(this.selectedStory);\n    if (this.stories[storyIndex].scenarios[0]) {\n      this.selectScenario(this.stories[storyIndex].scenarios[0]);\n    }\n  }\n\n  /**\n   * Opens a create New scenario Modal\n   */\n  openCreateNewScenarioModal(){\n    this.modalsComponent.openCreateNewStoryModal()\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      Stories\n      \n        A user story describes requirements for a software system.\n          It is consciously kept in short sentences and simple words.\n          A story includes several scenarios.\n          The following template is recommended:\n          As a , I want  so that \n        \n    \n    \n    \n      \n        \n            \n              {{s.issue_number}}. {{s.title}}\n            \n          \n            -->\n            \n            \n          \n        \n\n        \n          \n            #{{s.issue_number}}.{{c+1}} {{scen.name | titlecase}}\n          \n        \n      \n    \n    \n      Create New Story\n    \n  \n\n\n\n    \n\n    \n                \n                    ./stories-bar.component.css\n                \n                  .grid {\n    /*display: grid;\n    grid-template-columns: 100%;\n    grid-template-rows: auto;\n    grid-template-areas: \"storyHeader\" \"storyList\";*/\n    margin-top: 24px;\n    border: 1px solid #999;\n    padding-left: 10px;\n    padding-right: 10px;\n    padding-bottom: 1px;\n    box-shadow: 0px 5px 15px rgba(0,0,0,0.08);\n    background-color: var(--white);\n  }\n\n\n  #storyHeader{\n    grid-area: storyHeader;\n  }\n\n  #infoIcon{\n    grid-area: storyHeader;\n    color: #999;\n    padding-top: 3px;\n    margin-left: 7px;\n  }\n\n  .def {\n    color: #999;\n    cursor: help;\n    position: relative;\n    z-index: 2;\n    top: -2px;\n  }\n  \n  .def span[rel=def] {\n    display: none;\n  }\n  \n  .def:hover span[rel=def] {\n    font-size: small;\n    color: white;\n    background-color: rgb(109, 109, 109);\n    position: absolute;\n    bottom: 2em;\n    left: 2em;\n    width: 30em;\n    padding: 0.5em;\n    display: block;\n  }\n\n \n\n\n  #createNewStoryDiv{\n    text-align: right;\n  }\n\n  .modal-title{\n    color: var(--white);\n  }\n  .modal-header{\n    background-color: var(--ocean-blue);\n  }\n\n  .modal-body{\n    text-align: center;\n    padding-top: 30px;\n    padding-left: 30px;\n    padding-right: 30px;\n    padding-bottom: 15px;\n  }\n\n  .modal-footer{\n    height: 60px;\n  }\n\n  .close{\n    color: white;\n    outline: none;\n  }\n\n  .github-avatar{\n    float: right;\n  }\n\n  a.storyListLink {\n    transition: 0.2s;\n    display: inline-block;\n    max-width: 80%;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n\n  .normalButton{\n    margin-bottom: 10px;\n  }\n\n  a.storyListLink:hover{\n    color: var(--dark-grey);\n  }\n\n  #storyList{\n    grid-area: storyList;\n    font-size: smaller;\n    transition: 0.1s;\n  }\n\n  #storyList:hover{\n    cursor: pointer;\n    background-color: #f1f1f1;\n  }\n  .scenarioListItem{\n    display: block;\n  }\n  .scenarioListItem:hover{\n    background-color: #f1f1f1;\n  }\n\n  .uk-accordion{\n    width: 100%;\n  }\n  \n  .uk-accordion-content {\n    font-size: small;\n  }\n\n  .uk-accordion-content a{\n    color: #56595e;\n  }\n\n  .uk-accordion-content .passed,\n  .uk-accordion-title.uk-background-muted .passed{\n    color: green;\n  }\n  \n  .uk-accordion-content .notPassed,\n  .uk-accordion-title.uk-background-muted .notPassed{\n    color: red;\n  }\n\n  .uk-accordion-title.uk-background-muted span.passed{\n    background-color: green;\n  }\n\n  .uk-accordion-title.uk-background-muted span.notPassed{\n    background-color: red;\n  }\n  \n@media screen and (max-width: 600px) {\n  .grid{\n      display: grid;\n      grid-template-areas:\n      \"storyHeader\"\n      \"storyList\";\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Stories              A user story describes requirements for a software system.          It is consciously kept in short sentences and simple words.          A story includes several scenarios.          The following template is recommended:          As a , I want  so that                                                             {{s.issue_number}}. {{s.title}}                                  -->                                                                        #{{s.issue_number}}.{{c+1}} {{scen.name | titlecase}}                                      Create New Story      '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmResetPasswordComponent', 'selector': 'app-confirm-reset-password'},{'name': 'DeleteScenarioToast', 'selector': '[pink-toast-component]'},{'name': 'EditableComponent', 'selector': 'editable'},{'name': 'ExampleTableComponent', 'selector': 'app-example-table'},{'name': 'FeedbackComponent', 'selector': 'app-feedback'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalsComponent', 'selector': 'app-modals'},{'name': 'ParentComponent', 'selector': 'app-parent'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'ReportHistoryComponent', 'selector': 'app-report-history'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RunTestToast', 'selector': '[pink-toast-component]'},{'name': 'ScenarioEditorComponent', 'selector': 'app-scenario-editor'},{'name': 'StoriesBarComponent', 'selector': 'app-stories-bar'},{'name': 'StoryEditorComponent', 'selector': 'app-story-editor'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'TestAccountComponent', 'selector': 'app-test-account'}];\n    var DIRECTIVES = [{'name': 'EditableOnEnterDirective', 'selector': '[editableOnEnter]'},{'name': 'EditModeDirective', 'selector': '[editMode]'},{'name': 'FocusableDirective', 'selector': '[focusable]'},{'name': 'PasswordConfirmedValidatorDirective', 'selector': '[appPasswordConfirmed]'},{'name': 'ViewModeDirective', 'selector': '[viewMode]'}];\n    var ACTUAL_COMPONENT = {'name': 'StoriesBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Story.html":{"url":"interfaces/Story.html","title":"interface - Story","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Story\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/Story.ts\n        \n\n            \n                Description\n            \n            \n                Interface of the story\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        assignee\n                                \n                                \n                                        assignee_avatar_url\n                                \n                                \n                                        background\n                                \n                                \n                                        body\n                                \n                                \n                                        issue_number\n                                \n                                \n                                            Optional\n                                        lastTestPassed\n                                \n                                \n                                        scenarios\n                                \n                                \n                                        state\n                                \n                                \n                                        story_id\n                                \n                                \n                                        storySource\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Object id of the story in the database\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        assignee\n                                    \n                                \n                                \n                                    \n                                        assignee:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Github user assigned to this issue\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        assignee_avatar_url\n                                    \n                                \n                                \n                                    \n                                        assignee_avatar_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Url of the assignee avatar\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        background\n                                    \n                                \n                                \n                                    \n                                        background:         Background\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Background\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Background of the story\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Description of the story\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issue_number\n                                    \n                                \n                                \n                                    \n                                        issue_number:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Id of the story received from github\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastTestPassed\n                                    \n                                \n                                \n                                    \n                                        lastTestPassed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the last test was successful or not\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenarios\n                                    \n                                \n                                \n                                    \n                                        scenarios:         Scenario[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Scenario[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Scenarios in the story\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                    \n                                \n                                \n                                    \n                                        state:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    State of the github issue\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        story_id\n                                    \n                                \n                                \n                                    \n                                        story_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Id of the story received from github\nvery similar to issue_number but is currently not used anymore\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        storySource\n                                    \n                                \n                                \n                                    \n                                        storySource:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Source of the story\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Title of the story\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {Scenario} from './Scenario';\nimport { Background } from './Background';\n\n/**\n * Interface of the story\n */\nexport interface Story {\n    /**\n     * Object id of the story in the database\n     */\n    _id: any;\n\n    /**\n     * Id of the story received from github\n     */\n    issue_number: any;\n\n    /**\n     * Id of the story received from github\n     * very similar to issue_number but is currently not used anymore\n     */\n    story_id: number;\n\n    /**\n     * Source of the story\n     */\n    storySource: string;\n\n    /**\n     * Background of the story\n     */\n    background: Background;\n\n    /**\n     * Scenarios in the story\n     */\n    scenarios: Scenario[];\n\n    /**\n     * Title of the story\n     */\n    title: string;\n\n    /**\n     * Description of the story\n     */\n    body: string;\n\n    /**\n     * State of the github issue\n     */\n    state: string;\n\n    /**\n     * Github user assigned to this issue\n     */\n    assignee: string;\n\n    /**\n     * Url of the assignee avatar\n     */\n    assignee_avatar_url: string;\n\n    /**\n     * If the last test was successful or not\n     */\n    lastTestPassed?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TermsComponent.html":{"url":"components/TermsComponent.html","title":"component - TermsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TermsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/terms/terms.component.ts\n\n\n    \n        Description\n    \n    \n        Component of the terms\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-terms\n            \n\n            \n                styleUrls\n                ./terms.component.css\n            \n\n\n\n            \n                templateUrl\n                ./terms.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Component of the terms\n */\n@Component({\n  selector: 'app-terms',\n  templateUrl: './terms.component.html',\n  styleUrls: ['./terms.component.css']\n})\nexport class TermsComponent implements OnInit {\n\n  /**\n   * @ignore\n   */\n  constructor() { }\n\n  /**\n   * @ignore\n   */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  Privacy Policy for Seed-Test\n\n  At Seed-Test, accessible from https://seed-test-frontend.herokuapp.com/, one of our main priorities is the privacy of our visitors. This Privacy Policy document contains types of information that is collected and recorded by Seed-Test and how we use it.\n  \n  If you have additional questions or require more information about our Privacy Policy, do not hesitate to contact us.\n  \n  This Privacy Policy applies only to our online activities and is valid for visitors to our website with regards to the information that they shared and/or collect in Seed-Test. This policy is not applicable to any information collected offline or via channels other than this website.\n  \n  Consent\n  \n  By using our website, you hereby consent to our Privacy Policy and agree to its terms.\n  \n  Information we collect\n  \n  The personal information that you are asked to provide, and the reasons why you are asked to provide it, will be made clear to you at the point we ask you to provide your personal information.\n  If you contact us directly, we may receive additional information about you such as your name, email address, phone number, the contents of the message and/or attachments you may send us, and any other information you may choose to provide.\n  When you register for an Account, we may ask for your contact information, including items such as name, company name, address, email address, and telephone number.\n  \n  How we use your information\n  \n  We use the information we collect in various ways, including to:\n  \n  \n  Provide, operate, and maintain our webste\n  Improve, personalize, and expand our webste\n  Understand and analyze how you use our webste\n  Develop new products, services, features, and functionality\n  Communicate with you, either directly or through one of our partners, including for customer service, to provide you with updates and other information relating to the webste, and for marketing and promotional purposes\n  Send you emails\n  Find and prevent fraud\n  \n  \n  Log Files\n  \n  Seed-Test follows a standard procedure of using log files. These files log visitors when they visit websites. All hosting companies do this and a part of hosting services' analytics. The information collected by log files include internet protocol (IP) addresses, browser type, Internet Service Provider (ISP), date and time stamp, referring/exit pages, and possibly the number of clicks. These are not linked to any information that is personally identifiable. The purpose of the information is for analyzing trends, administering the site, tracking users' movement on the website, and gathering demographic information. Our Privacy Policy was created with the help of the Privacy Policy Generator and the Disclaimer Generator.\n  \n  Cookies and Web Beacons\n  \n  Like any other website, Seed-Test uses 'cookies'. These cookies are used to store information including visitors' preferences, and the pages on the website that the visitor accessed or visited. The information is used to optimize the users' experience by customizing our web page content based on visitors' browser type and/or other information.\n  \n  For more general information on cookies, please read \"What Are Cookies\".\n  \n  \n  \n  Advertising Partners Privacy Policies\n  \n  You may consult this list to find the Privacy Policy for each of the advertising partners of Seed-Test.\n  \n  Third-party ad servers or ad networks uses technologies like cookies, JavaScript, or Web Beacons that are used in their respective advertisements and links that appear on Seed-Test, which are sent directly to users' browser. They automatically receive your IP address when this occurs. These technologies are used to measure the effectiveness of their advertising campaigns and/or to personalize the advertising content that you see on websites that you visit.\n  \n  Note that Seed-Test has no access to or control over these cookies that are used by third-party advertisers.\n  \n  Third Party Privacy Policies\n  \n  Seed-Test's Privacy Policy does not apply to other advertisers or websites. Thus, we are advising you to consult the respective Privacy Policies of these third-party ad servers for more detailed information. It may include their practices and instructions about how to opt-out of certain options. \n  \n  You can choose to disable cookies through your individual browser options. To know more detailed information about cookie management with specific web browsers, it can be found at the browsers' respective websites.\n  \n  CCPA Privacy Rights (Do Not Sell My Personal Information)\n  \n  Under the CCPA, among other rights, California consumers have the right to:\n  Request that a business that collects a consumer's personal data disclose the categories and specific pieces of personal data that a business has collected about consumers.\n  Request that a business delete any personal data about the consumer that a business has collected.\n  Request that a business that sells a consumer's personal data, not sell the consumer's personal data.\n  If you make a request, we have one month to respond to you. If you would like to exercise any of these rights, please contact us.\n  \n  GDPR Data Protection Rights\n  \n  We would like to make sure you are fully aware of all of your data protection rights. Every user is entitled to the following:\n  The right to access – You have the right to request copies of your personal data. We may charge you a small fee for this service.\n  The right to rectification – You have the right to request that we correct any information you believe is inaccurate. You also have the right to request that we complete the information you believe is incomplete.\n  The right to erasure – You have the right to request that we erase your personal data, under certain conditions.\n  The right to restrict processing – You have the right to request that we restrict the processing of your personal data, under certain conditions.\n  The right to object to processing – You have the right to object to our processing of your personal data, under certain conditions.\n  The right to data portability – You have the right to request that we transfer the data that we have collected to another organization, or directly to you, under certain conditions.\n  If you make a request, we have one month to respond to you. If you would like to exercise any of these rights, please contact us.\n  \n  Children's Information\n  \n  Another part of our priority is adding protection for children while using the internet. We encourage parents and guardians to observe, participate in, and/or monitor and guide their online activity.\n  \n  Seed-Test does not knowingly collect any Personal Identifiable Information from children under the age of 13. If you think that your child provided this kind of information on our website, we strongly encourage you to contact us immediately and we will do our best efforts to promptly remove such information from our records.\n\n\n\n\n\n\n    \n\n    \n                \n                    ./terms.component.css\n                \n                *{\n    font-family: Klavika, sans-serif;\n}\n\n.container{\n    margin: 20px;\n}\n\na {\n    color: #212529;\n}\n\n@media screen and (max-width: 600px) {\n    .container{\n        width: 94%;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Privacy Policy for Seed-Test  At Seed-Test, accessible from https://seed-test-frontend.herokuapp.com/, one of our main priorities is the privacy of our visitors. This Privacy Policy document contains types of information that is collected and recorded by Seed-Test and how we use it.    If you have additional questions or require more information about our Privacy Policy, do not hesitate to contact us.    This Privacy Policy applies only to our online activities and is valid for visitors to our website with regards to the information that they shared and/or collect in Seed-Test. This policy is not applicable to any information collected offline or via channels other than this website.    Consent    By using our website, you hereby consent to our Privacy Policy and agree to its terms.    Information we collect    The personal information that you are asked to provide, and the reasons why you are asked to provide it, will be made clear to you at the point we ask you to provide your personal information.  If you contact us directly, we may receive additional information about you such as your name, email address, phone number, the contents of the message and/or attachments you may send us, and any other information you may choose to provide.  When you register for an Account, we may ask for your contact information, including items such as name, company name, address, email address, and telephone number.    How we use your information    We use the information we collect in various ways, including to:      Provide, operate, and maintain our webste  Improve, personalize, and expand our webste  Understand and analyze how you use our webste  Develop new products, services, features, and functionality  Communicate with you, either directly or through one of our partners, including for customer service, to provide you with updates and other information relating to the webste, and for marketing and promotional purposes  Send you emails  Find and prevent fraud      Log Files    Seed-Test follows a standard procedure of using log files. These files log visitors when they visit websites. All hosting companies do this and a part of hosting services\\' analytics. The information collected by log files include internet protocol (IP) addresses, browser type, Internet Service Provider (ISP), date and time stamp, referring/exit pages, and possibly the number of clicks. These are not linked to any information that is personally identifiable. The purpose of the information is for analyzing trends, administering the site, tracking users\\' movement on the website, and gathering demographic information. Our Privacy Policy was created with the help of the Privacy Policy Generator and the Disclaimer Generator.    Cookies and Web Beacons    Like any other website, Seed-Test uses \\'cookies\\'. These cookies are used to store information including visitors\\' preferences, and the pages on the website that the visitor accessed or visited. The information is used to optimize the users\\' experience by customizing our web page content based on visitors\\' browser type and/or other information.    For more general information on cookies, please read \"What Are Cookies\".        Advertising Partners Privacy Policies    You may consult this list to find the Privacy Policy for each of the advertising partners of Seed-Test.    Third-party ad servers or ad networks uses technologies like cookies, JavaScript, or Web Beacons that are used in their respective advertisements and links that appear on Seed-Test, which are sent directly to users\\' browser. They automatically receive your IP address when this occurs. These technologies are used to measure the effectiveness of their advertising campaigns and/or to personalize the advertising content that you see on websites that you visit.    Note that Seed-Test has no access to or control over these cookies that are used by third-party advertisers.    Third Party Privacy Policies    Seed-Test\\'s Privacy Policy does not apply to other advertisers or websites. Thus, we are advising you to consult the respective Privacy Policies of these third-party ad servers for more detailed information. It may include their practices and instructions about how to opt-out of certain options.     You can choose to disable cookies through your individual browser options. To know more detailed information about cookie management with specific web browsers, it can be found at the browsers\\' respective websites.    CCPA Privacy Rights (Do Not Sell My Personal Information)    Under the CCPA, among other rights, California consumers have the right to:  Request that a business that collects a consumer\\'s personal data disclose the categories and specific pieces of personal data that a business has collected about consumers.  Request that a business delete any personal data about the consumer that a business has collected.  Request that a business that sells a consumer\\'s personal data, not sell the consumer\\'s personal data.  If you make a request, we have one month to respond to you. If you would like to exercise any of these rights, please contact us.    GDPR Data Protection Rights    We would like to make sure you are fully aware of all of your data protection rights. Every user is entitled to the following:  The right to access – You have the right to request copies of your personal data. We may charge you a small fee for this service.  The right to rectification – You have the right to request that we correct any information you believe is inaccurate. You also have the right to request that we complete the information you believe is incomplete.  The right to erasure – You have the right to request that we erase your personal data, under certain conditions.  The right to restrict processing – You have the right to request that we restrict the processing of your personal data, under certain conditions.  The right to object to processing – You have the right to object to our processing of your personal data, under certain conditions.  The right to data portability – You have the right to request that we transfer the data that we have collected to another organization, or directly to you, under certain conditions.  If you make a request, we have one month to respond to you. If you would like to exercise any of these rights, please contact us.    Children\\'s Information    Another part of our priority is adding protection for children while using the internet. We encourage parents and guardians to observe, participate in, and/or monitor and guide their online activity.    Seed-Test does not knowingly collect any Personal Identifiable Information from children under the age of 13. If you think that your child provided this kind of information on our website, we strongly encourage you to contact us immediately and we will do our best efforts to promptly remove such information from our records.'\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmResetPasswordComponent', 'selector': 'app-confirm-reset-password'},{'name': 'DeleteScenarioToast', 'selector': '[pink-toast-component]'},{'name': 'EditableComponent', 'selector': 'editable'},{'name': 'ExampleTableComponent', 'selector': 'app-example-table'},{'name': 'FeedbackComponent', 'selector': 'app-feedback'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalsComponent', 'selector': 'app-modals'},{'name': 'ParentComponent', 'selector': 'app-parent'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'ReportHistoryComponent', 'selector': 'app-report-history'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RunTestToast', 'selector': '[pink-toast-component]'},{'name': 'ScenarioEditorComponent', 'selector': 'app-scenario-editor'},{'name': 'StoriesBarComponent', 'selector': 'app-stories-bar'},{'name': 'StoryEditorComponent', 'selector': 'app-story-editor'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'TestAccountComponent', 'selector': 'app-test-account'}];\n    var DIRECTIVES = [{'name': 'EditableOnEnterDirective', 'selector': '[editableOnEnter]'},{'name': 'EditModeDirective', 'selector': '[editMode]'},{'name': 'FocusableDirective', 'selector': '[focusable]'},{'name': 'PasswordConfirmedValidatorDirective', 'selector': '[appPasswordConfirmed]'},{'name': 'ViewModeDirective', 'selector': '[viewMode]'}];\n    var ACTUAL_COMPONENT = {'name': 'TermsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TestAccountComponent.html":{"url":"components/TestAccountComponent.html","title":"component - TestAccountComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TestAccountComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/test-account/test-account.component.ts\n\n\n    \n        Description\n    \n    \n        Component of the TestAccountComponent\n\n    \n\n    \n        Extends\n    \n    \n                ParentComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-test-account\n            \n\n            \n                styleUrls\n                ../parent/parent.component.css\n            \n\n\n\n            \n                templateUrl\n                ../parent/parent.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiService\n                            \n                            \n                                    Public\n                                apiService\n                            \n                            \n                                isStoryEditorActive\n                            \n                            \n                                selectedScenario\n                            \n                            \n                                selectedStory\n                            \n                            \n                                stories\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadStories\n                            \n                            \n                                loadStories\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setEditor\n                            \n                            \n                                setSelectedScenario\n                            \n                            \n                                setSelectedStory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/test-account/test-account.component.ts:16\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadStories\n                        \n                        \n                    \n                \n            \n            \n                \nloadStories()\n                \n            \n\n\n            \n                \n                    Defined in src/app/test-account/test-account.component.ts:35\n                \n            \n\n\n            \n                \n                    Loads the stories from the test account\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadStories\n                        \n                        \n                    \n                \n            \n            \n                \nloadStories()\n                \n            \n\n\n            \n                \n                    Inherited from         ParentComponent\n\n                \n            \n            \n                \n                        Defined in         ParentComponent:62\n\n                \n            \n\n\n            \n                \n                    Leads the stories of the current selected repository\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         ParentComponent\n\n                \n            \n            \n                \n                        Defined in         ParentComponent:55\n\n                \n            \n\n\n            \n                \n                    Requests the repositories on init\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setEditor\n                        \n                        \n                    \n                \n            \n            \n                \nsetEditor(event)\n                \n            \n\n\n            \n                \n                    Inherited from         ParentComponent\n\n                \n            \n            \n                \n                        Defined in         ParentComponent:94\n\n                \n            \n\n\n            \n                \n                    Change the editor to report history or story editor\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSelectedScenario\n                        \n                        \n                    \n                \n            \n            \n                \nsetSelectedScenario(scenario: Scenario)\n                \n            \n\n\n            \n                \n                    Inherited from         ParentComponent\n\n                \n            \n            \n                \n                        Defined in         ParentComponent:86\n\n                \n            \n\n\n            \n                \n                    Sets the currently selected scenario\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scenario\n                                    \n                                                Scenario\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSelectedStory\n                        \n                        \n                    \n                \n            \n            \n                \nsetSelectedStory(story: Story)\n                \n            \n\n\n            \n                \n                    Inherited from         ParentComponent\n\n                \n            \n            \n                \n                        Defined in         ParentComponent:78\n\n                \n            \n\n\n            \n                \n                    Sets the currently selected story\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    story\n                                    \n                                                Story\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApiService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/test-account/test-account.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApiService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ParentComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         ParentComponent:41\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isStoryEditorActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                            \n                                \n                                    Inherited from         ParentComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         ParentComponent:35\n\n                            \n                        \n\n                \n                    \n                        If the story Editor is shown or the report history\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedScenario\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Scenario\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ParentComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         ParentComponent:30\n\n                            \n                        \n\n                \n                    \n                        Currently selected Scenario\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedStory\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Story\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ParentComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         ParentComponent:25\n\n                            \n                        \n\n                \n                    \n                        Currently selected story\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stories\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Story[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ParentComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         ParentComponent:20\n\n                            \n                        \n\n                \n                    \n                        Stories in the selected project\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ParentComponent } from '../parent/parent.component';\nimport { ApiService } from '../Services/api.service';\nimport { Story } from '../model/Story';\nimport { RepositoryContainer } from '../model/RepositoryContainer';\n\n\n/**\n * Component of the TestAccountComponent\n */\n@Component({\n  selector: 'app-test-account',\n  templateUrl: '../parent/parent.component.html',\n  styleUrls: ['../parent/parent.component.css']\n})\nexport class TestAccountComponent extends ParentComponent implements OnInit {\n\n  /**\n   * Constructor\n   * @param apiService \n   */\n  constructor(public apiService: ApiService) {\n    super(apiService);\n    this.loadStories()\n  }\n\n  /**\n   * @ignore\n   */\n  ngOnInit() {}\n\n  /**\n   * Loads the stories from the test account\n   */\n  loadStories() {\n    let repository: RepositoryContainer = {value: '', source: 'testaccount'}\n    this.apiService\n        .getStories(repository)\n        .subscribe((resp: Story[]) => {\n          this.stories = resp;\n          console.log(resp);\n    });\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        \n        \n    \n\n\n    \n\n    \n                \n                    ../parent/parent.component.css\n                \n                * {\n    padding: 0px;\n    margin: 0px;\n}\n\n.grid{\n    background-color: var(--light-grey);\n    display: grid;\n    grid-template-columns: repeat(4, minmax(0, 1fr));\n    grid-template-rows: auto;\n    grid-template-areas:\n    \"storiesBar storyEditor storyEditor storyEditor\";\n    grid-column-gap: 10px;\n    padding-bottom: 5px;\n}\n\n.storiesBar{\n    grid-area: storiesBar;\n}\n\n.storyEditor{\n    grid-area: storyEditor;\n}\n\n\n\n@media screen and (max-width: 600px) {\n    .grid{\n        display: grid;\n        grid-template-columns: 94%;\n        grid-template-rows: auto auto;\n        grid-template-areas:\n        \"storiesBar\"\n        \"storyEditor\";\n        justify-content: center;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmResetPasswordComponent', 'selector': 'app-confirm-reset-password'},{'name': 'DeleteScenarioToast', 'selector': '[pink-toast-component]'},{'name': 'EditableComponent', 'selector': 'editable'},{'name': 'ExampleTableComponent', 'selector': 'app-example-table'},{'name': 'FeedbackComponent', 'selector': 'app-feedback'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalsComponent', 'selector': 'app-modals'},{'name': 'ParentComponent', 'selector': 'app-parent'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'ReportHistoryComponent', 'selector': 'app-report-history'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RunTestToast', 'selector': '[pink-toast-component]'},{'name': 'ScenarioEditorComponent', 'selector': 'app-scenario-editor'},{'name': 'StoriesBarComponent', 'selector': 'app-stories-bar'},{'name': 'StoryEditorComponent', 'selector': 'app-story-editor'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'TestAccountComponent', 'selector': 'app-test-account'}];\n    var DIRECTIVES = [{'name': 'EditableOnEnterDirective', 'selector': '[editableOnEnter]'},{'name': 'EditModeDirective', 'selector': '[editMode]'},{'name': 'FocusableDirective', 'selector': '[focusable]'},{'name': 'PasswordConfirmedValidatorDirective', 'selector': '[appPasswordConfirmed]'},{'name': 'ViewModeDirective', 'selector': '[viewMode]'}];\n    var ACTUAL_COMPONENT = {'name': 'TestAccountComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/TimeoutInterceptor.html":{"url":"interceptors/TimeoutInterceptor.html","title":"interceptor - TimeoutInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  TimeoutInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Services/timeout-interceptor.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Interceptor to make run requests last for as long as we specify in the header\nfrom https://stackoverflow.com/questions/45938931/default-and-specific-request-timeout\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(defaultTimeout: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/Services/timeout-interceptor.interceptor.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        defaultTimeout\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Services/timeout-interceptor.interceptor.ts:26\n                \n            \n\n\n            \n                \n                    Intercepts the request and makes the timeout to the specified time\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { timeout } from 'rxjs/operators';\n\n/**\n * Default request timeout specified in the app module\n */\nexport const DEFAULT_TIMEOUT = new InjectionToken('defaultTimeout');\n\n/**\n * Interceptor to make run requests last for as long as we specify in the header\n * from https://stackoverflow.com/questions/45938931/default-and-specific-request-timeout\n */\n@Injectable()\nexport class TimeoutInterceptor implements HttpInterceptor {\n  constructor(@Inject(DEFAULT_TIMEOUT) protected defaultTimeout: number) {\n  }\n\n  /**\n   * Intercepts the request and makes the timeout to the specified time\n   * @param req \n   * @param next \n   * @returns \n   */\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const timeoutValue = req.headers.get('timeout') || this.defaultTimeout;\n    const timeoutValueNumeric = Number(timeoutValue);\n\n    return next.handle(req).pipe(timeout(timeoutValueNumeric));\n  }\n}\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/User.ts\n        \n\n            \n                Description\n            \n            \n                Interface of a user\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        email\n                                \n                                \n                                        github\n                                \n                                \n                                        jira\n                                \n                                \n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Object id of the user in the database\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Email of the user\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        github\n                                    \n                                \n                                \n                                    \n                                        github:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Github object of the user if it is connected to github\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jira\n                                    \n                                \n                                \n                                    \n                                        jira:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Jira object of the user if it is connected to jira\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Password of the user usually hashed\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n    /**\n     * Object id of the user in the database\n     */\n    _id: any;\n\n    /**\n     * Email of the user\n     */\n    email: string;\n\n    /**\n     * Password of the user usually hashed\n     */\n    password: string;\n\n    /**\n     * Github object of the user if it is connected to github\n     */\n    github: {\n        /** \n         * Token to access the github data of the user\n        */\n        githubToken: string;\n\n        /**\n         * Name of the user in github\n         */\n        githubAccountName: string;\n\n        /** \n         * Last used github repository\n        */\n        githubRepo: string;\n    };\n\n    /**\n     * Jira object of the user if it is connected to jira\n     */\n    jira: {\n        /**\n         * Account name of the user\n         */\n        AccountName: string;\n\n        /**\n         * Password of the user usually hashed\n         */\n        Password: string;\n\n        /**\n         * Address of the jira host\n         */\n        Host: string;\n    };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ViewModeDirective.html":{"url":"directives/ViewModeDirective.html","title":"directive - ViewModeDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ViewModeDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/directives/view-mode.directive.ts\n        \n\n            \n                Description\n            \n            \n                Directive of table cell if it is only viewable for the example table\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [viewMode]\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive, TemplateRef } from '@angular/core';\n\n/**\n * Directive of table cell if it is only viewable for the example table\n */\n@Directive({\n  selector: '[viewMode]'\n})\nexport class ViewModeDirective {\n\n  /**\n   * @ignore\n   */\n  constructor(public tpl: TemplateRef) { }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/Services/api.service.ts\n            \n            injectable\n            ApiService\n            \n                0 %\n                (0/72)\n            \n        \n        \n            \n                \n                src/app/Services/timeout-interceptor.interceptor.ts\n            \n            interceptor\n            TimeoutInterceptor\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/Services/timeout-interceptor.interceptor.ts\n            \n            variable\n            DEFAULT_TIMEOUT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/account-management/account-management.component.ts\n            \n            component\n            AccountManagementComponent\n            \n                84 %\n                (16/19)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                85 %\n                (12/14)\n            \n        \n        \n            \n                \n                src/app/confirm-reset-password/confirm-reset-password.component.ts\n            \n            component\n            ConfirmResetPasswordComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/deleteScenario-toast.ts\n            \n            component\n            DeleteScenarioToast\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/directives/edit-mode.directive.ts\n            \n            directive\n            EditModeDirective\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/directives/edit-on-enter.directive.ts\n            \n            directive\n            EditableOnEnterDirective\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/directives/password-confirmed.directive.ts\n            \n            directive\n            PasswordConfirmedValidatorDirective\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/directives/password-confirmed.directive.ts\n            \n            variable\n            passwordConfirmedValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/directives/view-mode.directive.ts\n            \n            directive\n            ViewModeDirective\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/editable/editable.component.ts\n            \n            component\n            EditableComponent\n            \n                45 %\n                (5/11)\n            \n        \n        \n            \n                \n                src/app/editable/focusable.directive.ts\n            \n            directive\n            FocusableDirective\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/example-table/example-table.component.ts\n            \n            component\n            ExampleTableComponent\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                src/app/feedback/feedback.component.ts\n            \n            component\n            FeedbackComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                50 %\n                (13/26)\n            \n        \n        \n            \n                \n                src/app/modals/modals.component.ts\n            \n            component\n            ModalsComponent\n            \n                59 %\n                (35/59)\n            \n        \n        \n            \n                \n                src/app/model/Background.ts\n            \n            interface\n            Background\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/model/Block.ts\n            \n            interface\n            Block\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/model/Report.ts\n            \n            interface\n            Report\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/model/ReportContainer.ts\n            \n            interface\n            ReportContainer\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/model/RepositoryContainer.ts\n            \n            interface\n            RepositoryContainer\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/model/Scenario.ts\n            \n            interface\n            Scenario\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/model/StepDefinition.ts\n            \n            interface\n            StepDefinition\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/model/StepDefinitionBackground.ts\n            \n            interface\n            StepDefinitionBackground\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/model/StepType.ts\n            \n            interface\n            StepType\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/model/Story.ts\n            \n            interface\n            Story\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/model/User.ts\n            \n            interface\n            User\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/parent/parent.component.ts\n            \n            component\n            ParentComponent\n            \n                91 %\n                (11/12)\n            \n        \n        \n            \n                \n                src/app/registration/registration.component.ts\n            \n            component\n            RegistrationComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/report-history/report-history.component.ts\n            \n            component\n            ReportHistoryComponent\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/report/report.component.ts\n            \n            component\n            ReportComponent\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/reset-password/reset-password.component.ts\n            \n            component\n            ResetPasswordComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/routes/routes.ts\n            \n            variable\n            ROUTES\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/runSave-toast.ts\n            \n            component\n            RunTestToast\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/scenario-editor/scenario-editor.component.ts\n            \n            component\n            ScenarioEditorComponent\n            \n                0 %\n                (0/80)\n            \n        \n        \n            \n                \n                src/app/stories-bar/stories-bar.component.ts\n            \n            component\n            StoriesBarComponent\n            \n                93 %\n                (15/16)\n            \n        \n        \n            \n                \n                src/app/story-editor/story-editor.component.ts\n            \n            component\n            StoryEditorComponent\n            \n                0 %\n                (0/89)\n            \n        \n        \n            \n                \n                src/app/story-editor/story-editor.component.ts\n            \n            variable\n            emptyBackground\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/terms/terms.component.ts\n            \n            component\n            TermsComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/test-account/test-account.component.ts\n            \n            component\n            TestAccountComponent\n            \n                85 %\n                (12/14)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^10.2.3\n        \n            @angular/common : ^10.2.3\n        \n            @angular/compiler : ^10.2.3\n        \n            @angular/core : ^10.2.3\n        \n            @angular/forms : ^10.2.3\n        \n            @angular/http : ^7.2.16\n        \n            @angular/platform-browser : ^10.2.3\n        \n            @angular/platform-browser-dynamic : ^10.2.3\n        \n            @angular/router : ^10.2.3\n        \n            @ng-bootstrap/ng-bootstrap : ^8.0.0\n        \n            @ngbmodule/material-carousel : ^0.7.1\n        \n            angular : ^1.8.2\n        \n            core-js : ^3.7.0\n        \n            cors : ^2.8.5\n        \n            dotenv : ^8.2.0\n        \n            express : ^4.16.4\n        \n            file-saver : ^2.0.1\n        \n            hammerjs : ^2.0.8\n        \n            invert-kv : ^3.0.1\n        \n            jquery : ^3.5.1\n        \n            ngx-cookie-service : 10.1.1\n        \n            ngx-take-until-destroy : ^5.4.0\n        \n            ngx-toastr : 13.1.0\n        \n            node-fetch : ^2.6.1\n        \n            node-sass : ^4.14.1\n        \n            request : ^2.88.2\n        \n            set-value : 3.0.2\n        \n            uikit : ^3.5.9\n        \n            zone.js : ~0.11.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCucumberFrontend\nThis project was generated with Angular CLI version 6.2.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAccountManagementComponent\n\nAccountManagementComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccountManagementComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nConfirmResetPasswordComponent\n\nConfirmResetPasswordComponent\n\nAppModule -->\n\nConfirmResetPasswordComponent->AppModule\n\n\n\n\n\nDeleteScenarioToast\n\nDeleteScenarioToast\n\nAppModule -->\n\nDeleteScenarioToast->AppModule\n\n\n\n\n\nEditModeDirective\n\nEditModeDirective\n\nAppModule -->\n\nEditModeDirective->AppModule\n\n\n\n\n\nEditableComponent\n\nEditableComponent\n\nAppModule -->\n\nEditableComponent->AppModule\n\n\n\n\n\nEditableOnEnterDirective\n\nEditableOnEnterDirective\n\nAppModule -->\n\nEditableOnEnterDirective->AppModule\n\n\n\n\n\nExampleTableComponent\n\nExampleTableComponent\n\nAppModule -->\n\nExampleTableComponent->AppModule\n\n\n\n\n\nFeedbackComponent\n\nFeedbackComponent\n\nAppModule -->\n\nFeedbackComponent->AppModule\n\n\n\n\n\nFocusableDirective\n\nFocusableDirective\n\nAppModule -->\n\nFocusableDirective->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nModalsComponent\n\nModalsComponent\n\nAppModule -->\n\nModalsComponent->AppModule\n\n\n\n\n\nParentComponent\n\nParentComponent\n\nAppModule -->\n\nParentComponent->AppModule\n\n\n\n\n\nPasswordConfirmedValidatorDirective\n\nPasswordConfirmedValidatorDirective\n\nAppModule -->\n\nPasswordConfirmedValidatorDirective->AppModule\n\n\n\n\n\nRegistrationComponent\n\nRegistrationComponent\n\nAppModule -->\n\nRegistrationComponent->AppModule\n\n\n\nAppModule -->\n\nRegistrationComponent->AppModule\n\n\n\n\n\nReportComponent\n\nReportComponent\n\nAppModule -->\n\nReportComponent->AppModule\n\n\n\n\n\nReportHistoryComponent\n\nReportHistoryComponent\n\nAppModule -->\n\nReportHistoryComponent->AppModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAppModule -->\n\nResetPasswordComponent->AppModule\n\n\n\n\n\nRunTestToast\n\nRunTestToast\n\nAppModule -->\n\nRunTestToast->AppModule\n\n\n\n\n\nScenarioEditorComponent\n\nScenarioEditorComponent\n\nAppModule -->\n\nScenarioEditorComponent->AppModule\n\n\n\n\n\nStoriesBarComponent\n\nStoriesBarComponent\n\nAppModule -->\n\nStoriesBarComponent->AppModule\n\n\n\n\n\nStoryEditorComponent\n\nStoryEditorComponent\n\nAppModule -->\n\nStoryEditorComponent->AppModule\n\n\n\n\n\nTermsComponent\n\nTermsComponent\n\nAppModule -->\n\nTermsComponent->AppModule\n\n\n\n\n\nTestAccountComponent\n\nTestAccountComponent\n\nAppModule -->\n\nTestAccountComponent->AppModule\n\n\n\n\n\nViewModeDirective\n\nViewModeDirective\n\nAppModule -->\n\nViewModeDirective->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nApiService\n\nApiService\n\nAppModule -->\n\nApiService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    20 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    11 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DEFAULT_TIMEOUT   (src/.../timeout-interceptor.interceptor.ts)\n                        \n                        \n                            emptyBackground   (src/.../story-editor.component.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            passwordConfirmedValidator   (src/.../password-confirmed.directive.ts)\n                        \n                        \n                            ROUTES   (src/.../routes.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/Services/timeout-interceptor.interceptor.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_TIMEOUT\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('defaultTimeout')\n                        \n                    \n\n                \n                    \n                        Default request timeout specified in the app module\n\n                    \n                \n\n            \n        \n\n    src/app/story-editor/story-editor.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            emptyBackground\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Background\n\n                        \n                    \n                    \n                        \n                            Default value : {stepDefinitions: {when: []}}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n}\n                        \n                    \n\n                \n                    \n                        Environment parameters for production\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n}\n                        \n                    \n\n                \n                    \n                        Environment parameters for dev\n\n                    \n                \n\n            \n        \n\n    src/app/directives/password-confirmed.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            passwordConfirmedValidator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ValidatorFn\n\n                        \n                    \n                    \n                        \n                            Default value : (control: FormGroup): ValidationErrors | null => {\n  const password = control.get('password');\n  const confirmPassword = control.get('confirmPassword');\n  return password && confirmPassword && password.value !== confirmPassword.value ? { 'passwordConfirmed': true } : null;\n}\n                        \n                    \n\n                \n                    \n                        A user's password has to match the user's confirmed password \n\n                    \n                \n\n            \n        \n\n    src/app/routes/routes.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ROUTES\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    /**\n     * Login\n     */\n    {\n        path: 'login',\n        component: LoginComponent\n    },\n\n    /**\n     * Account Management\n     */\n    {\n        path: 'accountManagement',\n        component: AccountManagementComponent\n    },\n\n    /**\n     * Parent Component with Story editor\n     */\n    {\n        path: '',\n        component: ParentComponent,\n        canActivate: [AuthGuard]\n    },\n\n    /**\n     * Reports\n     */\n    {\n        path: 'report/:reportName',\n        component: ReportComponent\n    },\n\n    /**\n     * Testaccount\n     */\n    {\n        path: 'testaccount',\n        component: TestAccountComponent\n    },\n\n    /**\n     * Feedback\n     */\n    {\n        path: 'feedback',\n        component: FeedbackComponent\n    },\n\n    /**\n     * Terms\n     */\n    {\n        path: 'terms',\n        component: TermsComponent\n    },\n\n    /**\n     * Register\n     */\n    {\n        path: 'register',\n        component: RegistrationComponent\n    },\n\n    /**\n     * Reset password\n     */\n    {\n        path: 'resetpassword',\n        component: ResetPasswordComponent\n    },\n\n    /**\n     * Confirm the new password\n     */\n    {\n        path: 'resetpasswordconfirm',\n        component: ConfirmResetPasswordComponent\n    },\n]\n                        \n                    \n\n                \n                    \n                        All routs of the system\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
