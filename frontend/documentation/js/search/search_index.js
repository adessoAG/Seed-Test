var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AccountManagementComponent.html",[0,0.139,1,0.657]],["body/components/AccountManagementComponent.html",[0,0.184,1,0.792,2,0.714,3,0.086,4,0.072,5,1.207,6,0.471,7,0.471,8,0.471,9,0.058,10,5.358,11,4.724,12,1.492,13,0.187,14,2.409,15,1.473,16,2.515,17,2.409,18,4.182,19,3.972,20,4.819,21,4.182,22,2.842,23,0.761,24,1.234,25,0.34,26,1.274,27,1.395,28,2.124,29,0.864,30,3.575,31,0.864,32,2.842,33,0.131,34,0.41,35,1.892,36,1.499,37,2.977,38,2.027,39,3.575,40,3.233,41,3.128,42,0.67,43,4.104,44,4.104,45,4.104,46,3.548,47,4.104,48,4.104,49,2.124,50,2.842,51,2.842,52,1.087,53,0.792,54,1.384,55,2.842,56,1.032,57,0.025,58,0.668,59,0.486,60,0.688,61,4.504,62,3.031,63,2.013,64,3.031,65,3.031,66,3.031,67,1.76,68,3.601,69,4.084,70,2.761,71,3.429,72,1.104,73,1.284,74,1.657,75,1.76,76,2.842,77,1.76,78,3.068,79,1.817,80,1.76,81,1.76,82,2.761,83,2.311,84,2.124,85,1.6,86,2.409,87,3.548,88,1.76,89,1.33,90,2.745,91,2.124,92,2.451,93,1.76,94,1.912,95,1.479,96,0.557,97,1.6,98,2.124,99,2.842,100,1.119,101,1.76,102,2.842,103,0.792,104,2.842,105,1.76,106,1.912,107,2.842,108,2.842,109,1.76,110,1.76,111,1.847,112,1.76,113,0.906,114,1.315,115,2.842,116,1.76,117,2.672,118,2.409,119,1.76,120,0.376,121,0.254,122,0.535,123,2.409,124,0.739,125,0.991,126,1.315,127,0.086,128,0.274,129,1.37,130,0.608,131,1.76,132,0.916,133,1.76,134,1.76,135,1.492,136,1.76,137,1.492,138,2.124,139,2.842,140,3.575,141,1.492,142,1.76,143,1.76,144,1.76,145,1.76,146,1.492,147,1.76,148,1.76,149,1.76,150,3.031,151,2.842,152,2.405,153,1.76,154,2.842,155,1.76,156,2.842,157,1.76,158,1.76,159,1.76,160,1.479,161,1.76,162,0.502,163,0.608,164,1.76,165,1.76,166,1.492,167,0.739,168,1.315,169,2.124,170,1.315,171,1.315,172,1.315,173,2.124,174,1.315,175,1.315,176,1.315,177,1.315,178,1.315,179,1.184,180,2.409,181,2.842,182,2.842,183,3.601,184,2.842,185,2.842,186,1.76,187,2.842,188,1.912,189,1.76,190,2.124,191,1.76,192,1.774,193,1.279,194,1.971,195,2.917,196,1.184,197,1.613,198,1.279,199,1.613,200,1.279,201,2.136,202,2.374,203,1.315,204,2.507,205,1.211,206,1.853,207,1.76,208,2.842,209,2.327,210,1.492,211,1.892,212,2.405,213,2.013,214,1.6,215,1.76,216,1.533,217,1.983,218,2.176,219,1.76,220,3.233,221,2.745,222,3.429,223,1.502,224,2.168,225,2.549,226,2.289,227,3.15,228,2.13,229,2.344,230,1.76,231,3.367,232,1.76,233,1.315,234,1.76,235,1.76,236,1.479,237,1.76,238,1.76,239,2.311,240,1.76,241,1.184,242,1.76,243,1.912,244,1.76,245,2.124,246,1.078,247,2.024,248,1.727,249,1.76,250,1.912,251,2.124,252,2.124,253,2.842,254,1.373,255,1.76,256,2.842,257,1.76,258,1.184,259,1.479,260,2.191,261,1.492,262,2.409,263,1.77,264,1.078,265,1.727,266,2.405,267,1.315,268,1.6,269,1.373,270,1.492,271,1.492,272,0.85,273,1.492,274,1.555,275,2.124,276,2.191,277,1.492,278,1.6,279,1.742,280,0.991,281,0.991,282,1.76,283,1.76,284,1.76,285,1.76,286,0.991,287,1.76,288,1.492,289,0.991,290,1.315,291,1.492,292,1.492,293,1.184,294,1.184,295,1.184,296,1.184,297,1.76,298,2.409,299,1.184,300,1.315,301,1.279,302,1.492,303,1.76,304,1.76,305,1.315,306,1.315,307,0.792,308,0.792,309,0.792,310,0.415,311,0.714,312,0.714,313,0.216,314,0.471,315,1.76,316,1.76,317,1.76,318,0.471,319,0.363,320,0.471,321,0.34,322,0.415,323,0.587,324,0.761,325,0.363,326,0.761,327,0.714,328,0.761,329,0.34,330,0.471,331,0.363,332,0.34,333,0.471,334,0.34,335,0.471,336,0.34,337,0.471,338,0.471,339,0.34,340,0.471,341,0.34,342,0.471,343,0.34,344,0.471,345,0.363,346,0.471,347,0.34,348,0.363,349,0.388,350,0.317,351,0.761,352,0.363,353,0.442,354,0.471,355,0.388,356,0.34,357,0.471,358,0.34,359,0.317,360,0.34,361,0.471,362,0.34,363,0.471,364,0.34,365,0.471,366,0.34,367,0.471,368,0.34,369,0.442,370,0.471,371,0.006,372,0.01,373,0.006]],["title/components/AppComponent.html",[0,0.139,319,0.703]],["body/components/AppComponent.html",[0,0.19,1,0.364,2,0.755,3,0.092,4,0.153,5,1.494,6,0.505,7,0.505,8,0.505,9,0.062,13,0.124,15,0.943,16,1.841,18,3.714,23,0.805,24,1.293,25,0.364,26,1.286,27,1.413,29,0.913,31,0.913,33,0.223,34,0.433,35,1.959,36,1.531,37,1.563,40,3.316,41,3.18,42,0.708,46,2.021,49,2.246,52,1.138,53,0.848,54,1.331,56,0.755,57,0.025,58,0.572,59,0.477,60,0.504,63,1.691,68,3.192,71,2.617,72,0.9,73,1.171,74,1.511,78,2.246,79,1.219,82,2.021,84,2.246,90,2.222,91,2.246,92,2.236,94,2.021,96,0.294,98,2.246,100,0.663,103,0.364,113,0.416,120,0.356,121,0.272,122,0.573,124,0.792,125,1.062,127,0.092,128,0.294,129,1.138,130,0.651,137,1.599,138,3.486,150,1.599,152,2.021,163,1.474,167,1.573,168,1.41,169,2.246,170,1.41,171,1.41,172,1.41,173,2.246,174,1.41,175,1.41,176,1.41,177,1.41,178,1.41,179,1.268,180,2.547,183,2.246,192,2.105,193,2.345,194,1.645,195,2.917,197,2.334,198,1.352,199,2.37,200,1.685,201,2.427,202,0.848,204,1.563,205,1.402,206,2.112,211,1.573,214,1.062,216,1.755,217,1.809,218,1.809,220,1.841,221,0.981,223,0.792,224,2.572,225,2.869,226,2.669,227,1.062,228,1.262,229,2.712,236,1.563,239,2.797,247,2.273,248,2.4,252,1.41,254,2.253,258,2.021,259,2.816,263,1.472,264,1.841,265,2.869,266,3.506,267,2.246,268,2.797,269,2.063,272,2.253,274,0.651,275,2.246,276,3.045,279,1.841,280,1.691,281,1.691,289,2.108,299,2.518,300,1.41,301,1.685,307,0.848,308,0.848,309,0.848,310,0.444,311,0.755,312,0.755,313,0.231,314,0.505,318,0.505,319,0.882,320,0.505,321,0.364,322,0.444,323,0.62,324,0.805,325,0.389,326,0.805,327,0.755,328,0.805,329,0.364,330,0.505,331,0.389,332,0.364,333,0.505,334,0.364,335,0.505,336,0.364,337,0.505,338,0.505,339,0.364,340,0.505,341,0.364,342,0.505,343,0.364,344,0.505,345,0.389,346,0.505,347,0.364,348,0.389,349,0.416,350,0.34,351,0.805,352,0.389,353,0.474,354,0.505,355,0.416,356,0.364,357,0.505,358,0.364,359,0.34,360,0.364,361,0.505,362,0.364,363,0.505,364,0.364,365,0.505,366,0.364,367,0.505,368,0.364,369,0.474,370,0.505,371,0.007,372,0.01,373,0.007,374,1.599,375,3.004,376,3.004,377,3.744,378,3.004,379,2.858,380,3.744,381,3.744,382,3.62,383,4.212,384,4.27,385,4.27,386,3.004,387,1.886,388,2.246,389,1.886,390,1.352,391,1.886,392,2.021,393,1.886,394,5.212,395,4.27,396,1.886,397,3.896,398,1.886,399,3.503,400,3.004,401,2.246,402,2.547,403,1.886,404,1.563,405,3.004,406,1.572,407,1.037,408,0.913,409,1.953,410,1.886,411,2.617,412,1.886,413,1.886,414,1.886,415,1.599,416,1.886,417,1.599,418,3.744,419,3.744,420,1.886,421,4.212,422,2.547,423,3.004,424,3.004,425,1.886,426,1.599,427,1.886,428,0.981,429,1.886,430,1.599,431,1.41,432,1.599,433,1.886,434,1.886,435,1.886,436,1.268,437,3.004,438,3.486,439,3.004,440,2.246,441,1.841,442,3.62,443,3.004,444,3.004,445,3.004,446,3.004,447,2.547,448,3.004,449,3.004,450,3.004,451,3.004,452,3.004,453,2.547,454,3.004,455,3.004,456,2.246,457,2.246,458,1.886,459,3.714,460,1.809,461,4.664,462,1.886,463,1.886,464,1.886,465,1.599,466,1.886,467,2.614,468,3.004,469,3.174,470,4.664,471,4.664,472,2.547,473,3.004,474,3.62,475,1.563,476,1.886,477,2.617,478,4.27,479,3.744,480,4.664,481,1.41,482,3.744,483,1.886,484,1.886,485,1.599,486,3.744,487,3.744,488,1.886,489,1.886,490,3.004,491,1.886,492,1.599,493,3.744,494,3.192,495,1.886,496,1.886,497,2.246,498,1.886,499,1.886,500,2.404,501,2.246,502,2.547,503,1.886,504,1.156,505,3.744,506,1.886,507,1.886,508,1.41,509,5.212,510,1.599,511,1.841,512,1.599,513,1.886,514,1.599,515,1.599,516,1.886,517,1.886,518,1.41,519,2.021,520,1.886,521,1.886,522,1.886,523,1.886,524,1.886,525,1.599,526,1.886,527,1.886,528,1.886,529,1.841,530,1.41]],["title/modules/AppModule.html",[531,2.086,532,2.289]],["body/modules/AppModule.html",[1,1.154,3,0.15,4,0.125,9,0.101,11,2.289,15,0.676,36,1.601,57,0.025,63,1.724,72,0.591,96,0.477,103,0.591,113,1.319,120,0.596,121,0.442,122,0.931,124,1.286,126,2.289,127,0.15,128,0.477,310,0.722,319,1.364,321,1.154,322,0.722,323,1.127,325,1.235,327,1.088,329,1.154,331,1.235,332,0.591,334,1.154,336,1.154,339,1.154,341,1.232,343,1.154,345,1.235,347,1.154,348,1.296,349,1.319,350,0.551,352,1.235,353,0.77,355,1.319,356,1.154,358,1.154,360,1.154,362,1.154,364,1.154,366,1.154,368,1.154,371,0.011,372,0.015,373,0.011,390,1.378,531,1.876,532,4.85,533,2.289,534,2.059,535,4.257,536,4.079,537,3.753,538,2.596,539,2.596,540,2.596,541,2.596,542,2.596,543,3.67,544,3.062,545,4.328,546,4.328,547,5.021,548,4.328,549,3.67,550,1.876,551,4.328,552,3.062,553,2.289,554,3.062,555,3.062,556,2.596,557,4.328,558,4.328,559,4.328,560,2.596,561,2.289,562,3.062,563,2.596,564,3.062,565,5.021,566,4.328,567,1.479,568,2.653,569,3.062,570,4.328,571,3.062,572,4.328,573,3.062,574,2.289,575,3.062,576,2.596,577,2.596,578,3.67,579,3.67,580,3.062,581,3.062,582,4.328,583,3.062,584,3.062,585,4.328,586,1.724,587,2.596,588,3.062,589,3.062,590,2.289,591,3.062,592,4.328,593,2.437,594,2.289,595,2.289,596,3.062,597,4.328,598,3.062,599,3.062,600,3.062,601,3.062,602,3.062,603,3.062,604,3.062,605,1.876,606,4.328,607,3.062,608,3.062,609,2.596,610,2.289,611,3.062,612,2.289,613,4.328,614,2.289,615,3.062,616,2.911,617,2.911,618,3.062,619,3.062,620,2.289,621,3.062,622,3.062,623,3.062,624,3.062,625,3.062,626,2.289,627,3.062,628,3.236,629,3.062,630,2.596,631,1.286,632,3.062,633,3.062]],["title/guards/AuthGuard.html",[568,2.086,634,2.289]],["body/guards/AuthGuard.html",[3,0.23,4,0.192,9,0.155,13,0.31,23,1.264,33,0.351,36,1.83,41,3.589,42,1.357,52,1.889,53,2.123,54,1.271,56,1.186,57,0.025,58,0.578,59,0.394,60,0.791,73,1.357,79,1.926,120,0.518,121,0.681,122,1.435,124,1.982,127,0.23,128,0.735,129,1.75,371,0.016,372,0.02,373,0.016,406,2.382,409,1.854,426,4,436,3.173,568,3.528,631,1.982,634,3.872,635,4.718,636,4,637,3.528,638,6.747,639,5.72,640,4.718,641,4.718,642,4.881,643,3.872,644,3.173,645,2.656,646,2.781]],["title/interfaces/Background.html",[205,0.855,647,0.613]],["body/interfaces/Background.html",[3,0.241,4,0.202,9,0.163,13,0.325,33,0.368,34,0.854,57,0.025,58,0.836,59,0.529,60,1.102,100,1.4,120,0.412,127,0.241,205,1.768,371,0.017,372,0.021,373,0.017,406,2.334,647,1.142,648,1.82,649,4.192,650,4.181,651,4.589,652,3.983,653,4.52,654,3.983]],["title/interfaces/Block.html",[272,1.644,647,0.613]],["body/interfaces/Block.html",[3,0.216,4,0.275,9,0.146,13,0.29,33,0.329,34,0.797,38,2.845,57,0.025,58,0.835,59,0.562,60,1.172,95,3.6,100,1.543,111,2.487,120,0.369,127,0.216,272,3.438,371,0.015,372,0.019,373,0.015,647,1.086,648,1.626,651,4.252,654,3.718,655,3.745,656,3.054,657,6.322,658,6.322,659,3.387,660,5.528,661,5.629,662,3.989,663,3.112,664,4.686]],["title/components/ConfirmResetPasswordComponent.html",[0,0.139,321,0.657]],["body/components/ConfirmResetPasswordComponent.html",[0,0.231,1,0.568,2,1.058,3,0.144,4,0.12,5,1.436,6,0.788,7,0.788,8,0.788,9,0.097,13,0.322,15,0.929,25,0.568,26,1.349,27,1.51,29,1.28,31,1.28,33,0.219,34,0.607,35,1.768,36,1.719,37,1.531,38,1.893,41,3.232,42,0.992,52,1.494,53,1.324,54,1.252,56,1.058,57,0.025,58,0.695,59,0.473,60,0.705,62,4.164,63,2.766,72,0.568,73,0.693,74,0.895,79,1.201,89,2.012,96,0.458,100,1.183,103,0.568,113,0.65,120,0.447,121,0.424,122,0.895,124,1.236,127,0.144,128,0.458,129,1.63,130,1.016,192,1.808,193,1.893,194,1.494,195,2.733,197,1.156,198,1.324,199,1.156,200,1.324,201,2.556,202,1.324,204,1.531,205,1.235,206,1.591,209,1.422,211,2.383,213,3.018,216,1.627,217,2.373,218,2.373,221,1.531,222,1.803,224,1.893,225,2.033,226,2.064,229,2.79,236,1.531,243,1.979,246,2.579,247,1.236,248,1.422,254,2.033,263,2.441,278,1.657,286,1.657,310,0.693,311,1.058,312,1.058,313,0.361,314,0.788,318,0.788,319,0.608,320,0.788,321,1.035,322,1.545,323,1.45,324,1.127,325,0.608,326,1.127,327,1.058,328,1.127,329,0.568,330,0.788,331,0.608,332,0.568,333,0.788,334,0.568,335,0.788,336,0.568,337,0.788,338,0.788,339,0.568,340,0.788,341,0.568,342,0.788,343,0.568,344,0.788,345,0.608,346,0.788,347,0.568,348,0.608,349,0.65,350,0.53,351,1.127,352,0.608,353,0.74,354,0.788,355,0.65,356,0.568,357,0.788,358,0.568,359,0.53,360,0.568,361,0.788,362,0.568,363,0.788,364,0.568,365,0.788,366,0.568,367,0.788,368,0.568,369,0.74,370,0.788,371,0.01,372,0.015,373,0.01,379,1.803,408,1.28,436,1.979,460,1.422,467,1.422,475,1.531,567,1.422,586,2.766,614,4.41,645,2.369,665,5.001,666,2.2,667,3.567,668,3.584,669,4.164,670,3.567,671,4.912,672,4.208,673,4.007,674,4.007,675,4.208,676,4.208,677,3.606,678,2.943,679,3.567,680,3.815,681,2.943,682,2.943,683,2.369,684,2.495,685,4.208,686,2.943,687,2.943,688,2.943,689,3.146,690,3.146,691,3.146,692,3.146,693,3.304,694,2.2,695,2.83,696,2.495,697,1.803,698,1.657,699,1.422,700,2.495,701,2.495,702,2.495,703,2.495,704,2.495,705,2.495,706,1.803,707,3.567,708,2.495,709,1.979,710,2.2,711,2.495,712,3.567]],["title/components/DeleteScenarioToast.html",[0,0.139,325,0.703]],["body/components/DeleteScenarioToast.html",[0,0.245,1,0.544,2,1.026,3,0.138,4,0.115,5,1.094,6,1.408,7,0.756,8,0.756,9,0.093,13,0.268,15,0.901,25,0.544,26,1.344,27,1.488,33,0.21,34,0.589,35,2.443,36,1.724,42,0.962,52,1.823,54,1.284,56,1.026,57,0.025,58,0.767,59,0.485,60,0.684,70,3.911,72,0.544,73,0.665,74,0.858,96,0.439,100,0.901,103,0.544,113,0.623,120,0.439,121,0.407,122,0.858,127,0.138,128,0.439,129,1.598,132,2.903,192,1.038,194,1.598,205,1.507,206,1.807,211,1.185,216,1.408,223,2.209,228,2.209,241,1.897,264,2.939,265,1.363,274,0.974,280,1.588,281,2.298,289,1.588,310,0.665,311,1.026,312,1.026,313,0.346,314,0.756,318,0.756,319,0.583,320,0.756,321,0.544,322,0.665,323,0.843,324,1.094,325,1.086,326,1.494,327,1.573,328,1.094,329,0.544,330,0.756,331,0.583,332,0.544,333,0.756,334,0.544,335,0.756,336,0.544,337,0.756,338,0.756,339,0.544,340,0.756,341,0.544,342,0.756,343,0.544,344,0.756,345,0.583,346,0.756,347,0.544,348,0.583,349,0.623,350,1.004,351,1.094,352,0.583,353,0.709,354,0.756,355,0.623,356,0.544,357,0.756,358,0.544,359,0.508,360,0.544,361,0.756,362,0.544,363,0.756,364,0.544,365,0.756,366,0.544,367,0.756,368,0.544,369,0.709,370,0.756,371,0.01,372,0.014,373,0.01,390,1.837,407,1.409,408,1.241,409,1.604,477,1.729,497,3.586,500,3.458,511,1.729,519,1.897,529,3.835,530,4.347,593,1.588,605,1.729,698,1.588,699,2.54,713,5.084,714,2.108,715,3.46,716,3.051,717,3.46,718,4.066,719,3.226,720,4.797,721,4.797,722,3.226,723,3.586,724,5.815,725,5.815,726,3.586,727,5.515,728,4.082,729,2.821,730,4.483,731,4.082,732,4.066,733,3.226,734,4.066,735,4.082,736,2.821,737,3.46,738,4.082,739,2.821,740,5.257,741,3.93,742,2.821,743,2.821,744,2.391,745,4.066,746,2.108,747,2.391,748,2.108,749,1.588,750,2.391,751,3.051,752,2.391,753,2.391,754,2.391,755,2.391,756,2.391,757,3.46,758,2.391,759,2.391,760,2.391,761,2.391,762,2.391,763,2.391,764,5.084,765,2.391,766,3.46,767,3.46,768,3.46,769,3.46,770,2.391,771,2.391,772,2.391,773,2.391,774,2.108,775,2.391,776,2.108,777,2.391,778,2.391,779,2.821,780,2.391]],["title/directives/EditModeDirective.html",[313,0.417,362,0.657]],["body/directives/EditModeDirective.html",[3,0.254,4,0.212,9,0.171,13,0.341,25,1.002,26,1.177,57,0.025,106,4.101,120,0.433,121,0.749,127,0.254,128,0.809,130,1.793,162,1.482,313,0.819,332,1.177,359,0.935,362,1.177,371,0.018,372,0.021,373,0.018,781,3.882,782,3.882,783,5.169,784,4.101,785,3.173,786,5.169,787,5.169,788,4.403]],["title/components/EditableComponent.html",[0,0.139,329,0.657]],["body/components/EditableComponent.html",[0,0.235,1,0.593,2,1.09,3,0.15,4,0.125,5,0.822,6,0.822,7,0.822,8,0.822,9,0.101,13,0.201,15,0.957,23,1.162,24,1.736,25,0.593,26,1.354,27,1.505,29,1.319,31,1.319,33,0.228,34,0.626,42,1.022,54,1.459,57,0.025,58,0.616,59,0.456,66,3.677,72,0.593,73,1.288,74,1.661,89,1.629,96,0.478,103,0.593,106,4.136,113,0.678,114,3.242,120,0.499,121,0.443,127,0.15,128,0.478,162,1.238,163,1.886,167,1.29,216,1.464,310,0.723,311,1.09,312,1.545,313,0.376,314,0.822,318,0.822,319,0.634,320,0.822,321,0.593,322,0.723,323,0.896,324,1.162,325,0.634,326,1.162,327,1.09,328,1.162,329,1.055,330,0.822,331,0.634,332,0.97,333,0.822,334,0.593,335,0.822,336,0.593,337,0.822,338,0.822,339,0.593,340,0.822,341,0.593,342,0.822,343,0.593,344,0.822,345,0.634,346,0.822,347,0.593,348,0.634,349,0.678,350,0.553,351,1.162,352,0.634,353,0.772,354,0.822,355,0.678,356,0.593,357,0.822,358,0.593,359,0.553,360,0.593,361,0.822,362,1.055,363,0.822,364,0.593,365,0.822,366,0.593,367,0.822,368,1.055,369,0.772,370,0.822,371,0.011,372,0.015,373,0.011,388,4.084,407,1.736,408,1.529,409,1.207,577,2.603,578,3.677,579,2.603,593,1.729,644,2.065,645,3.462,646,2.095,667,3.677,749,1.729,784,4.481,785,2.257,786,5.071,789,2.603,790,4.632,791,4.337,792,4.263,793,5.028,794,4.337,795,5.028,796,5.028,797,5.464,798,5.464,799,5.464,800,2.917,801,5.028,802,3.242,803,5.028,804,3.382,805,3.07,806,3.07,807,5.982,808,3.07,809,4.94,810,3.242,811,3.07,812,3.07,813,5.028,814,3.07,815,4.337,816,3.07,817,4.337,818,3.07,819,3.07,820,4.337,821,3.07,822,3.07,823,3.07,824,3.677,825,3.07,826,3.07,827,2.917,828,3.07,829,3.677,830,2.917,831,3.07,832,2.603,833,4.337,834,3.677,835,3.07,836,2.603,837,3.07,838,2.603,839,2.603,840,3.07,841,3.07,842,2.603,843,3.07,844,5.028,845,3.07,846,3.07,847,3.07,848,4.337,849,3.07,850,3.07,851,3.07,852,3.07,853,3.07,854,3.07,855,3.07,856,3.07,857,3.07,858,3.07,859,3.07,860,3.07,861,3.07,862,3.07]],["title/directives/EditableOnEnterDirective.html",[313,0.417,360,0.657]],["body/directives/EditableOnEnterDirective.html",[3,0.246,4,0.205,9,0.166,25,0.971,26,1.155,33,0.374,54,1.111,57,0.025,120,0.499,121,0.726,127,0.246,128,0.784,160,2.619,162,1.436,313,0.783,329,1.155,332,0.971,359,0.906,360,1.155,371,0.018,372,0.021,373,0.018,576,4.266,644,3.385,781,4.474,783,4.266,784,4.025,785,2.619,790,5.074,809,4.474,863,4.266,864,5.985,865,5.985,866,6.388,867,5.032,868,5.985,869,5.032,870,3.762,871,5.032,872,5.032,873,5.032]],["title/components/ExampleTableComponent.html",[0,0.139,331,0.703]],["body/components/ExampleTableComponent.html",[0,0.223,1,0.517,2,0.987,3,0.131,4,0.109,5,0.717,6,0.717,7,0.717,8,0.717,9,0.088,13,0.337,15,0.867,16,3.616,23,1.052,24,1.607,25,0.517,26,1.338,27,1.492,29,1.195,31,1.195,33,0.406,34,0.567,42,0.926,52,0.814,54,1.459,56,1.289,57,0.025,58,0.757,59,0.505,60,0.86,72,0.517,73,1.426,74,1.794,89,1.769,96,0.417,100,1.26,103,0.517,113,0.591,120,0.388,121,0.386,127,0.131,128,0.417,132,2.842,160,1.393,162,1.121,163,0.924,167,1.124,194,0.814,200,1.768,202,2.458,206,0.867,216,1.374,220,2.852,223,1.124,227,1.507,247,1.955,250,1.8,263,1.052,274,0.924,293,1.8,294,1.8,295,1.8,296,1.8,310,0.631,311,0.987,312,0.987,313,0.328,314,0.717,318,0.717,319,0.553,320,0.717,321,0.517,322,0.631,323,0.811,324,1.052,325,0.553,326,1.052,327,0.987,328,1.052,329,0.517,330,0.717,331,1.059,332,1.275,333,0.717,334,0.517,335,0.717,336,0.517,337,0.717,338,0.717,339,0.517,340,0.717,341,0.517,342,0.717,343,0.517,344,0.717,345,0.553,346,0.717,347,0.517,348,0.553,349,0.591,350,1.181,351,1.052,352,0.553,353,0.673,354,0.717,355,0.591,356,0.517,357,0.717,358,0.517,359,0.482,360,0.517,361,0.717,362,0.517,363,0.717,364,0.517,365,0.717,366,0.517,367,0.717,368,0.517,369,0.673,370,0.717,371,0.009,372,0.014,373,0.009,406,1.888,407,1.607,408,1.736,409,2.015,411,2.407,500,1.507,504,1.64,525,2.269,567,1.293,574,4.972,637,2.852,646,1.293,650,2.407,697,3.785,706,2.407,774,3.479,785,3.558,800,2.642,802,2.937,804,3.449,830,2.642,870,3.479,874,5.639,875,2.269,876,4.654,877,3.929,878,4.654,879,4.654,880,3.131,881,3.929,882,3.929,883,4.654,884,5.128,885,5.128,886,3.929,887,4.654,888,3.331,889,5.128,890,4.654,891,3.929,892,3.347,893,2.676,894,3.929,895,3.929,896,3.929,897,2.676,898,5.462,899,2.676,900,2.269,901,5.128,902,3.833,903,2.676,904,2.758,905,3.929,906,2.676,907,2.001,908,4.654,909,2.676,910,4.654,911,2.676,912,2.676,913,3.331,914,2.676,915,2.676,916,3.331,917,2.676,918,2.676,919,5.128,920,2.676,921,2.676,922,3.929,923,2.676,924,3.929,925,2.676,926,2.676,927,2.044,928,2.676,929,2.937,930,1.8,931,2.937,932,2.676,933,2.001,934,2.676,935,2.676,936,2.676,937,2.676,938,2.676,939,2.676,940,2.676,941,3.929,942,2.676,943,2.676,944,3.929,945,2.269,946,2.676,947,2.676,948,2.676,949,2.676,950,2.269]],["title/components/FeedbackComponent.html",[0,0.139,334,0.657]],["body/components/FeedbackComponent.html",[0,0.261,1,0.808,2,1.342,3,0.204,4,0.171,5,1.121,6,1.121,7,1.121,8,1.121,9,0.138,13,0.275,15,1.179,23,1.431,24,2.031,25,0.808,26,1.386,27,1.567,29,1.624,31,1.624,52,1.272,57,0.025,58,0.721,72,0.808,79,1.525,96,0.652,103,0.808,113,0.924,120,0.349,121,0.604,127,0.204,128,0.652,162,1.525,163,1.444,194,1.272,197,1.644,199,1.644,216,1.66,272,2.021,310,0.986,311,1.342,312,1.342,313,0.513,314,1.121,318,1.121,319,0.864,320,1.121,321,0.808,322,0.986,323,1.103,324,1.431,325,0.864,326,1.431,327,1.342,328,1.431,329,0.808,330,1.121,331,0.864,332,0.808,333,1.121,334,1.196,335,1.121,336,0.808,337,1.121,338,1.121,339,0.808,340,1.121,341,0.808,342,1.121,343,0.808,344,1.121,345,0.864,346,1.121,347,0.808,348,0.864,349,0.924,350,0.753,351,1.431,352,0.864,353,1.052,354,1.121,355,0.924,356,0.808,357,1.121,358,0.808,359,0.753,360,0.808,361,1.121,362,0.808,363,1.121,364,0.808,365,1.121,366,0.808,367,1.121,368,0.808,369,1.052,370,1.121,371,0.015,372,0.019,373,0.015,440,4.633,529,2.564,951,3.547,952,5.883,953,5.341,954,5.341,955,5.341,956,3.547]],["title/directives/FocusableDirective.html",[313,0.417,364,0.657]],["body/directives/FocusableDirective.html",[3,0.245,4,0.204,9,0.165,13,0.329,23,1.599,25,0.967,26,1.152,33,0.373,42,1.407,54,1.106,57,0.025,73,1.181,74,1.523,120,0.418,121,0.723,127,0.245,128,0.78,162,1.43,312,1.5,313,0.809,359,0.902,364,1.152,371,0.017,372,0.021,373,0.017,644,3.37,749,2.821,785,3.106,824,5.06,829,5.06,902,4.462,957,4.247,958,6.601,959,5.405,960,5.596,961,5.01,962,5.969,963,5.01]],["title/components/LoginComponent.html",[0,0.139,336,0.657]],["body/components/LoginComponent.html",[0,0.165,1,0.278,2,0.605,3,0.118,4,0.127,5,0.973,6,0.385,7,0.385,8,0.385,9,0.047,13,0.238,15,1.351,18,2.715,19,3.75,20,2.715,21,3.268,23,0.645,24,1.072,25,0.278,26,1.236,27,1.339,29,0.732,31,0.732,33,0.179,34,0.347,35,1.698,36,1.4,37,0.749,38,1.634,40,3.64,41,2.793,42,0.568,46,4.237,49,1.8,52,0.944,53,0.647,54,1.399,56,0.913,57,0.025,58,0.658,59,0.515,60,0.609,64,2.042,71,3.493,72,1.17,73,1.094,74,1.33,78,3.268,79,1.652,82,2.443,83,2.462,86,2.042,87,3.514,89,1.416,90,2.534,91,1.8,92,2.191,94,1.62,95,2.858,96,0.723,97,1.356,98,1.8,100,0.892,103,0.278,113,0.318,120,0.337,121,0.208,122,0.438,124,0.605,125,0.81,127,0.07,128,0.224,129,1.48,130,0.497,138,1.076,141,1.22,152,2.089,162,0.411,163,0.497,167,1.526,168,1.076,169,1.8,170,1.076,171,1.076,172,1.076,173,1.8,174,2.322,175,1.8,176,1.076,177,1.076,178,1.076,179,2.089,183,2.322,188,3.275,190,1.8,192,1.924,193,1.084,194,1.988,195,2.834,197,1.427,198,0.647,199,2.109,201,1.253,202,1.967,204,0.749,205,1.408,206,1.945,209,2.243,210,3.427,211,1.951,212,1.62,213,2.045,214,2.276,216,1.609,217,1.501,218,2.112,220,2.845,221,2.275,222,3.366,224,2.351,225,2.653,226,2.432,227,2.614,228,1.305,229,2.104,231,3.268,233,1.076,236,1.616,239,2.741,243,0.968,245,1.8,246,0.882,247,1.837,248,1.755,250,0.968,251,1.076,252,2.715,254,2.352,260,0.882,261,2.042,262,3.707,263,2.053,264,0.882,265,1.501,266,2.089,267,1.076,268,1.356,269,1.164,270,1.22,271,1.22,272,0.695,273,1.22,274,1.747,275,1.8,276,2.845,278,0.81,279,0.882,286,0.81,288,1.22,289,1.356,290,1.8,291,1.22,292,2.633,299,0.968,300,1.076,301,1.084,302,1.22,307,1.084,308,1.084,309,0.647,310,0.339,311,0.605,312,0.605,313,0.176,314,0.385,318,0.385,319,0.297,320,0.385,321,0.278,322,0.339,323,0.497,324,0.645,325,0.297,326,0.645,327,0.605,328,0.645,329,0.278,330,0.385,331,0.297,332,0.278,333,0.385,334,0.278,335,0.385,336,0.701,337,0.385,338,0.385,339,0.278,340,0.385,341,0.278,342,0.385,343,0.278,344,0.385,345,0.297,346,0.385,347,0.278,348,0.297,349,0.318,350,0.559,351,0.645,352,0.297,353,0.362,354,0.385,355,0.318,356,0.278,357,0.385,358,0.278,359,0.259,360,0.278,361,0.385,362,0.278,363,0.385,364,0.278,365,0.385,366,0.278,367,0.385,368,0.278,369,0.362,370,0.385,371,0.005,372,0.008,373,0.005,379,3.289,382,3.079,390,1.084,392,1.62,399,0.882,402,2.042,406,1.337,407,1.896,408,1.733,409,1.427,415,2.633,422,2.042,428,0.749,430,1.22,431,3.471,432,1.22,441,2.226,442,3.079,447,3.079,457,1.8,460,0.695,465,1.22,467,2.112,474,1.22,475,1.253,477,1.903,481,2.715,492,1.22,500,1.356,501,1.076,504,1.476,508,1.076,511,1.476,518,1.076,567,0.695,586,0.81,610,2.322,631,1.698,637,1.476,645,1.356,652,1.62,656,1.164,663,1.356,668,1.616,673,2.715,674,2.715,677,2.443,680,2.089,684,1.22,693,2.941,694,1.076,695,2.089,697,0.882,698,0.81,699,0.695,710,1.076,733,2.443,749,0.81,927,1.253,950,3.079,959,2.633,960,3.079,964,1.22,965,2.408,966,3.106,967,2.408,968,3.106,969,3.106,970,3.106,971,3.106,972,3.106,973,3.106,974,3.106,975,3.106,976,3.106,977,3.106,978,3.106,979,3.106,980,3.106,981,3.707,982,2.408,983,3.632,984,3.632,985,3.632,986,2.408,987,1.439,988,1.439,989,2.408,990,1.439,991,2.408,992,1.439,993,1.8,994,1.439,995,1.439,996,2.408,997,2.408,998,1.439,999,2.408,1000,1.439,1001,1.439,1002,3.079,1003,2.408,1004,1.439,1005,2.408,1006,2.408,1007,1.439,1008,2.408,1009,2.408,1010,2.408,1011,1.439,1012,2.408,1013,2.408,1014,1.439,1015,2.408,1016,2.408,1017,1.439,1018,2.408,1019,2.408,1020,1.439,1021,2.408,1022,2.408,1023,1.439,1024,2.408,1025,2.408,1026,1.439,1027,2.408,1028,2.408,1029,1.439,1030,2.408,1031,2.408,1032,1.439,1033,2.408,1034,2.408,1035,1.439,1036,2.408,1037,2.408,1038,1.439,1039,2.408,1040,2.408,1041,1.439,1042,1.439,1043,2.408,1044,2.408,1045,1.22,1046,1.22,1047,1.22,1048,1.439,1049,1.439,1050,1.439,1051,1.439,1052,1.439,1053,1.439,1054,1.439,1055,1.439,1056,1.439,1057,1.439,1058,2.408,1059,1.439,1060,1.439,1061,4.643,1062,1.439,1063,1.22,1064,1.439,1065,1.439,1066,1.22,1067,1.22,1068,1.439,1069,1.439,1070,1.439,1071,1.439,1072,1.439,1073,1.22,1074,1.076,1075,1.22,1076,3.632,1077,1.439,1078,1.439,1079,1.439,1080,1.22,1081,1.439,1082,1.439,1083,1.439,1084,1.439,1085,1.439,1086,1.439,1087,1.439,1088,2.408,1089,1.439,1090,1.439,1091,1.439,1092,2.408,1093,2.408,1094,3.632,1095,2.042,1096,2.408,1097,2.408,1098,2.042,1099,2.042,1100,3.079,1101,2.408,1102,2.042,1103,2.042,1104,3.632,1105,2.408,1106,1.62,1107,2.408,1108,2.408,1109,1.8,1110,2.042,1111,2.408,1112,1.8,1113,2.042,1114,2.042,1115,2.408,1116,1.476,1117,2.408,1118,1.8,1119,2.042,1120,2.226,1121,2.408,1122,2.042,1123,2.408,1124,2.042,1125,2.042,1126,2.408,1127,1.439,1128,3.707,1129,2.408,1130,2.408,1131,2.408,1132,3.632,1133,2.408,1134,2.042,1135,2.408,1136,2.408,1137,1.22,1138,1.439,1139,1.439,1140,1.439,1141,1.439,1142,1.439,1143,1.439,1144,1.439,1145,1.439,1146,1.22,1147,1.22,1148,1.439,1149,1.439,1150,1.439,1151,1.439,1152,2.408,1153,1.439,1154,1.439,1155,1.439,1156,1.439,1157,1.439,1158,1.439,1159,1.439]],["title/components/ParentComponent.html",[0,0.139,339,0.657]],["body/components/ParentComponent.html",[0,0.228,1,0.545,2,1.027,3,0.138,4,0.196,5,1.607,6,0.756,7,0.756,8,0.756,9,0.093,13,0.268,15,0.902,23,1.094,24,1.657,25,0.545,26,1.344,27,1.502,29,1.242,31,1.242,33,0.21,34,0.589,35,1.716,36,1.703,40,2.503,42,0.962,52,1.459,53,1.27,54,1.421,56,1.322,57,0.025,58,0.735,59,0.5,60,0.882,72,0.545,73,1.315,74,1.697,90,2.125,92,1.838,95,2.497,96,1.08,97,3.458,100,1.059,103,1.077,113,0.623,120,0.466,121,0.407,122,0.858,125,1.589,127,0.138,128,0.44,129,1.599,130,0.975,132,2.737,160,2.125,163,1.816,192,1.504,193,1.838,194,0.858,195,2.955,197,1.605,198,1.838,199,1.886,200,1.838,201,1.469,202,1.27,203,2.11,205,0.71,206,0.914,209,1.364,216,1.495,226,1.186,228,1.186,259,1.469,263,1.109,268,1.589,269,1.364,274,0.975,301,1.27,307,1.27,308,1.27,309,1.27,310,0.665,311,1.027,312,1.027,313,0.346,314,0.756,318,0.756,319,0.583,320,0.756,321,0.545,322,0.665,323,0.844,324,1.094,325,0.583,326,1.094,327,1.027,328,1.094,329,0.545,330,0.756,331,0.583,332,0.545,333,0.756,334,0.545,335,0.756,336,0.545,337,0.756,338,0.756,339,1.015,340,0.756,341,0.545,342,0.756,343,0.545,344,0.756,345,0.583,346,0.756,347,0.545,348,0.583,349,0.623,350,1.192,351,1.094,352,0.583,353,1.544,354,0.756,355,0.623,356,0.545,357,0.756,358,0.545,359,0.508,360,0.545,361,0.756,362,0.545,363,0.756,364,0.545,365,0.756,366,0.545,367,0.756,368,0.545,369,0.71,370,0.756,371,0.01,372,0.014,373,0.01,404,3.196,407,0.975,408,1.459,411,2.503,417,2.393,428,1.469,459,2.11,460,1.973,467,1.973,631,1.716,656,1.973,810,3.053,827,2.747,880,3.228,892,3.223,927,3.386,930,1.899,933,2.11,1073,2.393,1074,2.11,1075,2.393,1160,2.393,1161,4.084,1162,3.462,1163,3.462,1164,4.799,1165,4.084,1166,4.068,1167,3.228,1168,4.458,1169,3.462,1170,3.462,1171,3.462,1172,4.084,1173,2.823,1174,3.462,1175,2.823,1176,3.053,1177,3.462,1178,2.823,1179,3.537,1180,3.462,1181,2.823,1182,3.462,1183,2.823,1184,2.823,1185,2.823,1186,2.823,1187,2.823,1188,1.899,1189,2.823,1190,3.462,1191,2.823,1192,2.823,1193,2.11,1194,2.393,1195,2.393,1196,2.11,1197,2.11,1198,4.084,1199,2.393,1200,2.393,1201,4.458,1202,4.931,1203,2.11]],["title/directives/PasswordConfirmedValidatorDirective.html",[313,0.417,366,0.657]],["body/directives/PasswordConfirmedValidatorDirective.html",[3,0.223,4,0.186,9,0.15,13,0.3,23,1.512,25,0.881,26,1.089,33,0.34,42,1.33,54,1.008,56,1.148,57,0.025,58,0.56,59,0.381,60,0.765,73,1.076,120,0.471,121,0.659,127,0.276,128,0.711,167,2.573,313,0.784,359,0.822,366,1.235,371,0.016,372,0.02,373,0.016,537,4.218,567,2.206,628,4.218,630,4.783,631,2.573,637,3.458,646,2.726,668,3.329,709,3.795,929,4.218,1204,4.218,1205,3.413,1206,5.642,1207,5.642,1208,6.123,1209,6.123,1210,5.642,1211,5.642,1212,5.642,1213,5.642,1214,6.396,1215,4.566,1216,4.218,1217,5.423,1218,4.783,1219,4.783,1220,3.413,1221,3.871,1222,3.413,1223,4.218,1224,3.871,1225,3.871,1226,3.871,1227,3.871,1228,3.871,1229,4.566]],["title/components/RegistrationComponent.html",[0,0.139,341,0.657]],["body/components/RegistrationComponent.html",[0,0.236,1,0.597,2,1.096,3,0.151,4,0.126,5,1.606,6,0.828,7,0.828,8,0.828,9,0.102,13,0.286,15,0.962,23,1.168,24,1.743,25,0.597,26,1.355,27,1.519,29,1.325,31,1.325,33,0.23,34,0.629,36,1.352,37,2.627,41,2.627,42,1.027,54,0.962,56,0.777,57,0.025,58,0.672,59,0.364,60,0.518,71,2.671,72,0.974,73,0.729,79,1.796,83,3.086,89,1.412,96,0.482,100,0.962,103,0.597,113,0.683,117,2.312,120,0.482,121,0.446,122,0.94,123,2.622,124,1.299,127,0.151,128,0.482,129,0.94,130,1.068,152,2.08,162,1.244,163,1.068,179,2.08,192,1.859,194,0.94,195,2.95,197,1.713,198,1.961,199,1.215,200,1.391,202,1.391,205,1.269,206,1.776,211,2.428,213,3.086,214,1.741,216,1.651,217,2.106,218,2.106,221,1.609,222,1.895,223,1.299,224,1.961,225,2.106,226,1.831,229,2.853,243,2.08,246,1.895,247,1.299,248,1.494,254,2.106,263,2.514,274,1.505,278,1.741,286,1.741,301,1.391,307,1.391,308,1.391,309,1.391,310,0.729,311,1.096,312,1.096,313,0.379,314,0.828,318,0.828,319,0.639,320,0.828,321,0.597,322,1.19,323,0.9,324,1.168,325,0.639,326,1.168,327,1.096,328,1.168,329,0.597,330,0.828,331,0.639,332,0.597,333,0.828,334,0.597,335,0.828,336,0.597,337,0.828,338,0.828,339,0.597,340,0.828,341,1.058,342,0.828,343,0.597,344,0.828,345,0.639,346,0.828,347,0.597,348,0.639,349,0.683,350,0.557,351,1.168,352,0.639,353,0.777,354,0.828,355,0.683,356,0.597,357,0.828,358,0.597,359,0.557,360,0.597,361,0.828,362,0.597,363,0.828,364,0.597,365,0.828,366,0.597,367,0.828,368,0.597,369,0.777,370,0.828,371,0.011,372,0.015,373,0.011,379,3.92,401,3.258,431,3.258,460,2.106,467,1.494,475,1.609,567,1.494,586,2.842,593,1.741,605,2.671,645,2.454,668,3.12,677,3.687,680,3.887,689,3.258,690,3.258,691,3.258,692,2.312,693,3.687,695,2.08,696,2.622,697,1.895,698,1.741,699,1.494,700,2.622,701,2.622,702,2.622,703,2.622,704,2.622,705,2.622,706,1.895,707,3.695,708,2.622,709,2.08,710,2.312,711,2.622,712,3.695,730,3.258,981,4.28,1045,2.622,1046,2.622,1047,2.622,1063,2.622,1066,2.622,1067,2.622,1114,3.695,1134,2.622,1220,3.258,1230,2.622,1231,5.996,1232,5.048,1233,4.359,1234,4.359,1235,4.359,1236,3.092,1237,4.359,1238,3.092,1239,4.359,1240,3.092,1241,3.092,1242,3.092,1243,3.092,1244,3.092,1245,3.092,1246,3.092,1247,3.092,1248,3.695,1249,3.695,1250,2.932,1251,2.622]],["title/interfaces/Report.html",[103,0.657,647,0.613]],["body/interfaces/Report.html",[3,0.206,4,0.172,9,0.139,13,0.277,33,0.314,34,0.774,38,2.952,57,0.025,58,0.658,59,0.573,60,1.1,72,1.303,87,3.61,96,0.836,100,1.448,103,1.334,111,2.415,127,0.206,311,1.349,350,1.119,371,0.015,372,0.019,373,0.015,406,2.416,647,0.966,648,1.552,650,3.289,654,3.61,656,3.002,784,4.413,904,2.852,913,5.269,1120,3.289,1252,3.574,1253,6.215,1254,6.215,1255,5.562,1256,5.269,1257,6.215,1258,6.215,1259,6.215,1260,6.215,1261,5.366,1262,5.366,1263,5.366,1264,5.366,1265,5.366,1266,5.366,1267,3.289,1268,5.366,1269,5.366,1270,6.215,1271,4.55]],["title/components/ReportComponent.html",[0,0.139,343,0.657]],["body/components/ReportComponent.html",[0,0.248,1,0.691,2,1.212,3,0.175,4,0.146,5,0.959,6,0.959,7,0.959,8,0.959,9,0.118,13,0.317,14,4.088,15,1.065,23,1.292,24,1.882,25,0.691,26,1.371,27,1.543,29,1.466,31,1.466,33,0.266,34,0.696,35,2.558,36,1.788,42,1.136,52,1.089,53,1.611,54,1.344,56,1.212,57,0.025,58,0.786,59,0.508,60,0.808,72,0.691,73,0.844,74,1.089,96,0.558,100,1.204,103,1.299,113,0.79,120,0.455,121,0.517,122,1.089,124,1.504,127,0.175,128,0.558,129,1.658,130,1.236,162,1.022,163,1.236,167,1.504,216,1.563,310,0.844,311,1.212,312,1.212,313,0.439,314,0.959,318,0.959,319,0.74,320,0.959,321,0.691,322,0.844,323,0.996,324,1.292,325,0.74,326,1.292,327,1.212,328,1.292,329,0.691,330,0.959,331,0.74,332,0.691,333,0.959,334,0.691,335,0.959,336,0.691,337,0.959,338,0.959,339,0.691,340,0.959,341,0.691,342,0.959,343,1.126,344,0.959,345,0.74,346,0.959,347,0.691,348,0.74,349,0.79,350,0.645,351,1.292,352,0.74,353,0.9,354,0.959,355,0.79,356,0.691,357,0.959,358,0.691,359,0.645,360,0.691,361,0.959,362,0.691,363,0.959,364,0.691,365,0.959,366,0.691,367,0.959,368,0.691,369,0.9,370,0.959,371,0.012,372,0.017,373,0.012,388,3.605,392,3.244,406,1.775,407,1.236,408,1.089,409,1.895,428,1.863,631,1.504,673,4.689,674,4.552,892,2.955,956,4.623,1256,4.088,1272,3.036,1273,5.453,1274,4.822,1275,5.453,1276,4.822,1277,4.822,1278,4.822,1279,3.581,1280,4.822,1281,3.581,1282,3.581,1283,3.581,1284,3.581,1285,4.822,1286,3.581,1287,4.822,1288,3.581,1289,3.581,1290,3.581]],["title/interfaces/ReportContainer.html",[647,0.613,1291,2.289]],["body/interfaces/ReportContainer.html",[3,0.246,4,0.206,9,0.166,13,0.331,33,0.375,34,0.865,57,0.025,59,0.5,96,1.03,103,1.372,120,0.421,127,0.246,196,4.033,371,0.018,372,0.021,373,0.018,647,1.152,648,1.858,654,4.033,1179,4.033,1291,4.033,1292,4.279,1293,6.617,1294,6.617,1295,4.946,1296,4.482]],["title/components/ReportHistoryComponent.html",[0,0.139,345,0.703]],["body/components/ReportHistoryComponent.html",[0,0.203,1,0.419,2,0.844,3,0.106,4,0.089,5,0.582,6,0.582,7,0.582,8,0.582,9,0.072,13,0.327,15,0.741,23,0.899,24,1.416,25,0.419,26,1.309,27,1.447,29,1.021,31,1.021,33,0.162,34,0.484,36,1.099,42,0.791,54,1.376,56,1.382,57,0.025,58,0.754,59,0.474,60,0.922,70,3.104,72,0.419,73,1.485,74,1.672,85,2.31,89,1.708,96,1.045,97,2.97,100,0.48,103,1.357,113,0.48,120,0.44,121,0.313,122,0.66,127,0.106,128,0.338,129,1.604,130,0.75,132,1.747,160,1.747,162,0.958,163,0.75,192,1.51,193,1.51,194,1.772,197,1.319,204,2.135,205,1.16,206,1.616,209,1.049,211,2.216,212,3.104,213,2.598,214,2.31,216,1.522,217,1.049,218,1.049,223,1.939,224,0.977,225,1.982,226,1.724,227,1.223,228,1.724,229,2.135,236,1.747,239,1.89,247,1.41,248,1.622,254,1.049,259,1.13,260,1.331,263,1.319,265,2.23,266,2.759,268,1.89,269,1.622,274,0.75,276,1.331,277,1.842,278,1.89,279,1.331,280,1.223,281,1.223,305,1.624,306,1.624,310,0.512,311,0.844,312,0.844,313,0.266,314,0.582,318,0.582,319,0.449,320,0.582,321,0.419,322,0.512,323,0.693,324,0.899,325,0.449,326,0.899,327,0.844,328,0.899,329,0.419,330,0.582,331,0.449,332,0.419,333,0.582,334,0.419,335,0.582,336,0.419,337,0.582,338,0.582,339,0.419,340,0.582,341,0.419,342,0.582,343,0.419,344,0.582,345,0.953,346,0.582,347,0.419,348,0.449,349,0.48,350,1.18,351,0.899,352,0.449,353,0.546,354,0.582,355,0.48,356,0.419,357,0.582,358,0.419,359,0.391,360,0.419,361,0.582,362,0.419,363,0.582,364,0.419,365,0.582,366,0.419,367,0.582,368,0.419,369,0.546,370,0.582,371,0.008,372,0.012,373,0.008,390,1.51,392,2.258,399,2.828,404,3.033,407,1.159,408,1.021,409,0.854,428,1.13,481,1.624,508,1.624,620,4.711,631,0.913,646,1.982,650,3.481,699,1.049,706,2.057,719,1.461,737,2.846,800,2.258,802,2.509,804,3.104,827,2.258,830,2.258,888,2.846,892,3.057,904,1.982,927,2.402,930,1.461,931,3.067,1118,2.509,1167,2.759,1179,3.104,1188,1.461,1193,3.067,1197,2.509,1223,3.729,1267,3.481,1291,2.759,1295,5.035,1297,5.343,1298,1.842,1299,4.102,1300,3.357,1301,3.357,1302,3.357,1303,4.615,1304,4.615,1305,3.357,1306,3.357,1307,3.357,1308,3.357,1309,4.615,1310,4.102,1311,3.357,1312,2.172,1313,3.357,1314,3.357,1315,2.172,1316,3.357,1317,3.357,1318,3.357,1319,2.172,1320,3.357,1321,3.357,1322,2.172,1323,2.172,1324,3.357,1325,2.172,1326,3.357,1327,2.172,1328,2.846,1329,3.357,1330,3.357,1331,3.357,1332,2.172,1333,4.471,1334,3.357,1335,2.172,1336,2.172,1337,2.172,1338,2.172,1339,2.172,1340,2.172,1341,2.172,1342,2.172,1343,4.102,1344,2.172,1345,2.172,1346,2.172,1347,2.172,1348,2.172,1349,1.842,1350,2.172,1351,2.172,1352,2.172,1353,2.172,1354,3.357,1355,2.172,1356,2.172,1357,4.102,1358,3.357,1359,2.172,1360,2.172,1361,2.172,1362,3.357,1363,3.357,1364,2.172,1365,2.172,1366,3.357,1367,2.172,1368,2.172,1369,3.357,1370,2.846,1371,2.057,1372,3.357,1373,3.357,1374,3.357,1375,3.357,1376,3.357,1377,3.357,1378,4.615,1379,4.615,1380,2.846,1381,3.357,1382,2.172,1383,2.172,1384,1.842,1385,2.172,1386,1.842,1387,2.172,1388,2.172,1389,2.172,1390,3.357,1391,2.172,1392,2.172,1393,2.172,1394,2.172,1395,2.172,1396,2.172,1397,2.172]],["title/interfaces/RepositoryContainer.html",[92,1.532,647,0.613]],["body/interfaces/RepositoryContainer.html",[3,0.239,4,0.281,9,0.161,13,0.321,33,0.364,34,0.848,38,2.646,57,0.025,58,0.721,59,0.546,60,1.097,79,1.679,92,2.646,95,3.636,100,1.502,106,3.956,111,2.646,127,0.239,196,4.244,371,0.017,372,0.02,373,0.017,406,2.323,408,1.991,647,1.059,648,1.799,656,3.163,659,3.604,1398,4.143,1399,6.547]],["title/components/ResetPasswordComponent.html",[0,0.139,347,0.657]],["body/components/ResetPasswordComponent.html",[0,0.246,1,0.552,2,1.036,3,0.14,4,0.117,5,1.565,6,0.766,7,0.766,8,0.766,9,0.094,13,0.188,15,1.464,25,0.552,26,1.346,27,1.505,29,1.254,31,1.254,33,0.213,34,0.595,36,1.295,41,2.516,42,0.972,54,1.067,56,0.719,57,0.025,58,0.649,59,0.441,60,0.48,72,0.552,73,0.972,74,1.254,79,1.177,82,2.774,83,2.979,89,1.714,92,1.287,96,0.445,100,0.91,103,0.552,113,0.632,120,0.468,121,0.413,122,0.87,124,1.202,125,1.611,127,0.14,128,0.445,129,0.87,130,0.988,162,0.817,166,2.425,192,2.065,193,2.176,194,1.47,195,3.005,197,1.621,198,1.856,199,1.621,200,1.287,201,2.754,202,1.856,204,1.489,205,1.33,206,1.714,209,1.382,211,2.031,216,1.652,217,1.992,218,1.992,220,2.527,221,3.134,222,3.581,223,1.733,224,2.176,225,1.992,226,2.031,228,1.202,231,2.139,236,1.489,245,2.139,246,2.527,247,2.357,248,1.992,250,1.924,251,2.139,254,2.336,258,1.924,259,1.489,260,1.753,263,2.297,265,1.382,274,1.424,278,2.722,286,1.611,293,1.924,294,1.924,295,1.924,296,1.924,299,1.924,301,1.287,307,1.287,308,1.287,309,1.287,310,0.674,311,1.036,312,1.036,313,0.351,314,0.766,318,0.766,319,0.591,320,0.766,321,0.552,322,0.674,323,1.441,324,1.105,325,0.591,326,1.105,327,1.036,328,1.105,329,0.552,330,0.766,331,0.591,332,0.552,333,0.766,334,0.552,335,0.766,336,0.552,337,0.766,338,0.766,339,0.552,340,0.766,341,0.552,342,0.766,343,0.552,344,0.766,345,0.591,346,0.766,347,1.021,348,0.591,349,0.632,350,0.515,351,1.105,352,0.591,353,0.719,354,0.766,355,0.632,356,0.552,357,0.766,358,0.552,359,0.515,360,0.552,361,0.766,362,0.552,363,0.766,364,0.552,365,0.766,366,0.552,367,0.766,368,0.552,369,0.719,370,0.766,371,0.01,372,0.014,373,0.01,379,3.438,401,3.083,436,1.924,460,1.992,467,1.992,469,2.425,475,1.489,485,2.425,494,2.139,500,1.611,501,2.139,567,1.382,612,3.956,645,1.611,666,2.139,668,3.56,669,4.099,670,3.496,677,3.559,680,3.252,683,2.322,689,3.083,690,3.083,692,2.139,693,3.559,694,2.139,695,2.774,697,1.753,698,1.611,699,1.382,741,3.083,993,3.083,1098,4.486,1099,4.486,1102,3.496,1124,3.496,1125,4.486,1128,4.486,1146,2.425,1147,2.425,1250,2.774,1400,4.486,1401,5.292,1402,4.124,1403,2.861,1404,4.124,1405,2.861,1406,2.861,1407,2.861,1408,2.861,1409,2.861,1410,3.496,1411,2.861,1412,2.861,1413,4.124,1414,3.496,1415,3.496,1416,4.124,1417,4.124,1418,3.496,1419,4.124,1420,2.861,1421,2.861,1422,2.861,1423,2.425,1424,2.861,1425,2.861,1426,2.861]],["title/components/RunTestToast.html",[0,0.139,348,0.703]],["body/components/RunTestToast.html",[0,0.246,1,0.555,2,1.041,3,0.141,4,0.117,5,1.109,6,1.422,7,0.771,8,0.771,9,0.095,13,0.189,15,0.914,25,0.555,26,1.347,27,1.492,33,0.214,34,0.597,35,1.74,36,1.3,42,0.976,52,1.259,54,1.171,56,1.041,57,0.025,58,0.771,59,0.443,60,0.694,72,1.232,73,0.976,74,1.259,96,0.448,100,0.914,103,0.555,113,0.635,120,0.443,121,0.415,122,0.875,127,0.141,128,0.448,129,1.259,132,3.322,162,0.821,192,1.06,194,1.613,205,1.334,206,1.821,211,1.209,216,1.422,223,2.229,228,2.229,241,1.936,264,2.973,265,1.39,274,0.994,280,1.62,281,2.332,289,1.62,310,0.678,311,1.041,312,1.041,313,0.353,314,0.771,318,0.771,319,0.594,320,0.771,321,0.555,322,0.678,323,0.855,324,1.109,325,0.594,326,1.506,327,1.516,328,1.109,329,0.555,330,0.771,331,0.594,332,0.555,333,0.771,334,0.555,335,0.771,336,0.555,337,0.771,338,0.771,339,0.555,340,0.771,341,0.555,342,0.771,343,0.555,344,0.771,345,0.594,346,0.771,347,0.555,348,1.096,349,0.635,350,0.873,351,1.109,352,0.594,353,0.723,354,0.771,355,0.635,356,0.555,357,0.771,358,0.555,359,0.518,360,0.555,361,0.771,362,0.555,363,0.771,364,0.555,365,0.771,366,0.555,367,0.771,368,0.555,369,0.723,370,0.771,371,0.01,372,0.014,373,0.01,390,1.863,407,1.43,408,1.259,409,1.628,477,1.764,497,3.626,500,3.476,511,1.764,519,1.936,529,3.854,530,4.377,593,1.62,605,1.764,698,1.62,699,2.563,714,2.151,715,3.511,716,3.096,717,3.511,718,4.113,719,3.263,722,3.263,723,3.626,726,3.626,727,4.498,730,3.626,732,2.44,733,1.936,734,2.44,741,3.966,744,2.44,745,4.113,746,2.151,747,2.44,748,2.151,749,1.62,750,2.44,751,3.096,752,2.44,753,2.44,754,2.44,755,2.44,756,2.44,757,3.511,758,2.44,759,2.44,760,2.44,761,2.44,762,2.44,763,2.44,764,5.115,765,2.44,766,3.511,767,3.511,768,3.511,769,3.511,770,2.44,771,2.44,772,2.44,773,2.44,774,2.151,775,2.44,776,2.151,777,2.44,778,3.511,780,3.511,1095,3.511,1103,4.964,1120,4.038,1427,4.767,1428,5.855,1429,5.855,1430,4.141,1431,4.141,1432,4.141,1433,2.878,1434,4.141,1435,4.141,1436,2.878,1437,4.141,1438,4.141,1439,2.878,1440,2.878,1441,2.878,1442,2.878,1443,2.878]],["title/interfaces/Scenario.html",[350,0.613,647,0.613]],["body/interfaces/Scenario.html",[3,0.207,4,0.173,9,0.139,13,0.278,33,0.315,34,0.776,57,0.025,58,0.805,59,0.569,60,1.152,72,1.201,96,0.838,100,1.505,120,0.353,127,0.207,199,2.114,241,3.618,306,4.021,350,1.262,371,0.015,372,0.019,373,0.015,383,4.56,406,2.51,550,4.025,647,1.065,648,1.558,650,4.025,651,4.186,662,3.938,663,3.029,664,4.56,904,3.263,927,2.799,1106,3.618,1116,3.296,1267,3.296,1271,4.56,1371,3.296,1444,3.587,1445,6.567,1446,6.224,1447,5.276,1448,6.224,1449,6.224,1450,4.56,1451,4.56,1452,5.379]],["title/interfaces/StepDefinition.html",[647,0.613,662,2.086]],["body/interfaces/StepDefinition.html",[3,0.243,4,0.203,9,0.164,13,0.326,33,0.37,34,0.857,57,0.025,59,0.549,120,0.415,127,0.243,332,1.271,371,0.017,372,0.021,373,0.017,647,1.144,648,1.831,652,4.595,662,3.642,663,3.346,1116,4.186,1453,4.216,1454,5.038,1455,4.373,1456,5.943]],["title/interfaces/StepDefinitionBackground.html",[647,0.613,653,2.289]],["body/interfaces/StepDefinitionBackground.html",[3,0.257,4,0.215,9,0.173,13,0.346,33,0.392,34,0.887,57,0.025,59,0.439,120,0.439,127,0.257,205,1.545,371,0.018,372,0.021,373,0.018,647,1.172,648,1.939,653,4.135,663,3.461,1116,3.767,1454,5.211,1455,4.188,1457,4.464]],["title/interfaces/StepType.html",[647,0.613,1455,2.086]],["body/interfaces/StepType.html",[3,0.189,4,0.158,9,0.128,13,0.255,33,0.289,34,0.734,38,2.887,57,0.025,58,0.738,59,0.592,60,1.135,79,1.452,85,3.735,100,1.562,111,2.288,127,0.189,224,2.71,371,0.014,372,0.018,373,0.014,399,3.932,404,3.452,406,2.47,411,3.117,647,0.916,648,1.428,652,3.421,656,2.909,659,3.117,661,4.311,663,3.778,706,3.932,870,4.502,904,2.741,945,5.44,1100,5.106,1116,3.691,1455,3.932,1458,3.288,1459,6.417,1460,6.023,1461,6.417,1462,6.023,1463,6.417,1464,6.417,1465,6.023,1466,5.086,1467,6.417,1468,5.086,1469,6.023,1470,5.086,1471,5.086,1472,5.086]],["title/components/StoriesBarComponent.html",[0,0.139,352,0.703]],["body/components/StoriesBarComponent.html",[0,0.197,1,0.39,2,0.797,3,0.099,4,0.082,5,1.434,6,0.541,7,0.541,8,0.541,9,0.067,13,0.132,15,0.7,19,1.237,21,3.316,23,0.849,24,1.352,25,0.39,26,1.297,27,1.43,29,0.964,31,0.964,33,0.236,34,0.457,35,1.332,36,1.563,42,0.747,52,1.19,53,0.908,54,1.409,56,0.984,57,0.025,58,0.627,59,0.511,60,0.656,68,2.37,69,4.338,72,0.39,73,1.261,74,1.466,79,0.905,87,2.984,89,2.051,90,1.65,94,2.984,96,1.053,103,0.39,113,1.181,114,1.509,117,1.509,118,2.688,120,0.427,121,0.291,122,0.614,126,1.509,127,0.099,128,0.314,129,1.19,130,0.697,163,1.531,167,0.848,192,2.099,193,0.908,194,1.19,195,2.676,197,2.011,198,0.908,199,0.793,200,0.908,205,1.495,206,2.051,209,2.143,211,0.848,212,2.133,213,1.137,214,2.204,216,1.485,217,0.975,218,0.975,221,1.051,223,0.848,224,1.762,225,1.532,226,0.848,227,2.498,228,1.645,229,2.308,239,2.498,247,1.645,248,1.891,254,2.329,258,1.358,259,1.051,260,2.399,263,0.793,265,1.532,269,2.143,272,1.891,274,1.531,276,1.237,279,1.943,280,1.785,281,1.137,286,3.209,289,1.785,290,1.509,298,1.711,301,1.427,305,1.509,307,0.908,308,0.908,309,0.908,310,0.476,311,0.797,312,1.115,313,0.247,314,0.541,318,0.541,319,0.417,320,0.541,321,0.39,322,0.476,323,0.655,324,0.849,325,0.417,326,0.849,327,0.797,328,0.849,329,0.39,330,0.541,331,0.417,332,0.39,333,0.541,334,0.39,335,0.541,336,0.39,337,0.541,338,0.541,339,0.39,340,0.541,341,0.39,342,0.541,343,0.39,344,0.541,345,0.417,346,0.541,347,0.39,348,0.417,349,0.446,350,1.173,351,0.849,352,0.916,353,1.638,354,0.541,355,0.446,356,0.39,357,0.541,358,0.39,359,0.363,360,0.39,361,0.541,362,0.39,363,0.541,364,0.39,365,0.541,366,0.39,367,0.541,368,0.39,369,0.507,370,0.541,371,0.007,372,0.011,373,0.007,404,2.308,406,1.633,407,1.095,408,0.964,409,1.539,421,1.711,428,1.051,438,4,441,1.237,460,1.532,467,1.891,475,1.65,477,1.943,494,1.509,502,1.711,504,1.943,511,1.237,512,1.711,514,1.711,515,1.711,518,1.509,519,2.133,529,1.237,561,4.809,631,1.645,642,2.688,646,1.891,699,0.975,719,1.358,722,1.358,726,1.509,751,1.509,792,3.319,800,2.133,804,3.599,809,2.37,830,2.633,842,3.761,880,2.633,900,3.761,927,2.308,930,1.358,933,1.509,1074,1.509,1106,2.133,1118,2.37,1137,1.711,1162,3.761,1167,2.633,1188,1.358,1196,2.927,1197,1.509,1251,1.711,1296,2.37,1328,2.688,1349,1.711,1380,2.688,1384,2.688,1386,2.688,1451,4.087,1473,5.454,1474,1.711,1475,3.915,1476,3.171,1477,3.915,1478,3.915,1479,3.915,1480,4.436,1481,4.436,1482,3.171,1483,3.171,1484,3.915,1485,3.915,1486,3.171,1487,2.019,1488,4.436,1489,2.019,1490,2.019,1491,2.688,1492,2.019,1493,2.019,1494,2.019,1495,3.171,1496,2.019,1497,3.171,1498,2.019,1499,2.019,1500,4.821,1501,2.019,1502,2.019,1503,2.019,1504,3.171,1505,2.688,1506,2.019,1507,2.019,1508,2.019,1509,2.019,1510,2.019,1511,2.019,1512,2.019,1513,2.019,1514,3.171,1515,3.171,1516,2.019,1517,2.019,1518,2.019,1519,2.019,1520,2.019,1521,2.019,1522,2.019,1523,2.019,1524,2.019,1525,2.019,1526,2.019,1527,2.019,1528,2.019,1529,2.019,1530,2.019,1531,2.019,1532,2.019,1533,3.171,1534,3.171,1535,3.171,1536,2.688,1537,3.171,1538,3.171,1539,3.171,1540,3.171,1541,3.171,1542,3.171,1543,3.171,1544,3.171,1545,2.688,1546,3.171,1547,3.171,1548,3.171,1549,3.171,1550,3.171,1551,4.821,1552,4.436,1553,2.019,1554,2.019,1555,2.019,1556,3.171,1557,3.171,1558,2.019,1559,2.019,1560,3.171,1561,3.171,1562,2.019,1563,2.019,1564,2.019,1565,1.711,1566,1.711,1567,1.711,1568,2.019,1569,2.019,1570,2.019,1571,2.019,1572,2.019,1573,2.019,1574,2.019,1575,2.019,1576,2.019,1577,3.171,1578,2.019,1579,2.019,1580,5.7,1581,2.019,1582,3.171,1583,4.436,1584,4.436,1585,3.171,1586,2.019,1587,2.019]],["title/interfaces/Story.html",[96,0.53,647,0.613]],["body/interfaces/Story.html",[3,0.194,4,0.234,9,0.131,13,0.376,19,4.084,33,0.295,34,0.744,38,2.904,57,0.025,59,0.575,60,0.865,65,4.374,72,0.996,79,1.473,85,2.905,96,1.102,100,1.555,111,2.321,120,0.43,127,0.194,146,4.374,205,1.721,350,1.134,371,0.014,372,0.018,373,0.014,404,2.685,406,2.111,647,1.033,648,1.46,656,2.934,659,3.161,722,4.342,746,4.825,904,2.77,1110,5.149,1296,4.825,1371,3.161,1447,5.149,1491,5.472,1566,5.149,1567,4.374,1588,3.361,1589,6.455,1590,6.074,1591,6.074,1592,6.074,1593,5.159,1594,6.074,1595,5.159,1596,5.159,1597,5.159]],["title/components/TermsComponent.html",[0,0.139,356,0.657]],["body/components/TermsComponent.html",[0,0.18,1,0.325,2,0.689,3,0.082,4,0.069,5,0.451,6,0.451,7,0.451,8,0.451,9,0.055,13,0.111,15,0.883,16,4.003,17,4.398,23,0.735,24,1.198,25,0.325,26,1.266,27,1.383,28,2.05,29,0.834,31,0.834,37,2.081,52,0.512,57,0.024,58,0.658,59,0.334,63,2.658,70,1.845,71,3.921,72,1.242,79,0.783,83,1.544,84,2.05,85,3.106,89,0.888,96,0.262,103,0.325,111,1.799,113,0.372,120,0.14,121,0.243,127,0.082,128,0.262,162,0.783,163,0.581,188,1.845,194,0.512,196,1.845,204,0.876,206,0.546,216,1.071,236,1.427,239,3.708,247,0.707,269,1.932,274,0.947,293,1.133,294,1.133,295,1.133,296,1.133,301,0.758,307,0.758,308,0.758,309,0.758,310,0.397,311,0.689,312,0.689,313,0.206,314,0.451,318,0.451,319,0.348,320,0.451,321,0.325,322,0.397,323,0.566,324,0.735,325,0.348,326,0.735,327,0.689,328,0.735,329,0.325,330,0.451,331,0.348,332,0.325,333,0.451,334,0.325,335,0.451,336,0.325,337,0.451,338,0.451,339,0.325,340,0.451,341,0.325,342,0.451,343,0.325,344,0.451,345,0.348,346,0.451,347,0.325,348,0.348,349,0.372,350,0.303,351,0.735,352,0.348,353,0.423,354,0.451,355,0.372,356,0.772,357,0.451,358,0.325,359,0.303,360,0.325,361,0.451,362,0.325,363,0.451,364,0.325,365,0.451,366,0.325,367,0.451,368,0.325,369,0.423,370,0.451,371,0.006,372,0.01,373,0.006,390,1.234,397,3.528,399,1.681,441,1.681,453,4.882,456,3.878,457,5.224,475,1.427,510,2.325,550,3.179,594,2.05,628,4.305,679,3.39,683,3.603,723,2.05,733,3.175,904,2.28,907,2.989,916,2.325,1002,2.325,1106,1.845,1109,3.878,1112,3.528,1113,2.325,1119,5.04,1203,1.259,1216,2.05,1248,4.002,1249,2.325,1250,3.49,1255,3.39,1267,1.681,1333,2.325,1370,2.325,1410,4.398,1415,3.39,1418,3.39,1505,2.325,1545,2.325,1598,1.428,1599,3.469,1600,2.742,1601,6.587,1602,6.314,1603,2.742,1604,2.742,1605,2.742,1606,5.188,1607,2.742,1608,2.742,1609,5.516,1610,2.742,1611,2.742,1612,2.742,1613,5.759,1614,2.742,1615,3.999,1616,2.742,1617,2.742,1618,2.742,1619,5.759,1620,2.742,1621,3.999,1622,2.742,1623,2.742,1624,2.742,1625,5.516,1626,5.188,1627,2.742,1628,2.742,1629,2.742,1630,3.999,1631,2.742,1632,2.742,1633,6.532,1634,3.999,1635,2.742,1636,2.742,1637,2.742,1638,2.742,1639,3.999,1640,5.188,1641,4.72,1642,2.742,1643,2.742,1644,2.742,1645,2.742,1646,2.742,1647,2.742,1648,2.742,1649,2.742,1650,2.742,1651,5.188,1652,2.742,1653,3.999,1654,2.742,1655,2.742,1656,2.742,1657,2.742,1658,2.742,1659,3.999,1660,2.742,1661,2.742,1662,2.742,1663,3.999,1664,4.72,1665,2.742,1666,2.742,1667,2.742,1668,2.742,1669,2.742,1670,2.742,1671,3.999,1672,2.742,1673,2.742,1674,4.398,1675,2.742,1676,2.742,1677,2.742,1678,3.999,1679,5.188,1680,3.999,1681,2.742,1682,3.999,1683,2.742,1684,3.999,1685,4.72,1686,2.742,1687,3.999,1688,2.742,1689,2.742,1690,2.742,1691,2.742,1692,2.742,1693,3.999,1694,2.742,1695,2.742,1696,2.742,1697,2.742,1698,3.999,1699,2.742,1700,2.742,1701,2.742,1702,2.742,1703,2.742,1704,2.742,1705,4.72,1706,2.742,1707,2.742,1708,2.742,1709,3.999,1710,6.094,1711,5.188,1712,3.999,1713,3.999,1714,2.742,1715,2.742,1716,2.742,1717,2.742,1718,2.742,1719,2.742,1720,2.742,1721,2.742,1722,2.742,1723,2.742,1724,5.188,1725,4.72,1726,3.999,1727,2.742,1728,5.188,1729,5.188,1730,4.72,1731,3.999,1732,2.742,1733,3.999,1734,2.742,1735,4.72,1736,2.742,1737,2.742,1738,2.742,1739,2.325,1740,2.742,1741,2.742,1742,2.742,1743,2.742,1744,2.742,1745,3.39,1746,2.742,1747,3.999,1748,1.684,1749,2.742,1750,2.742,1751,2.742,1752,3.999,1753,2.742,1754,2.742,1755,2.742,1756,5.516,1757,2.742,1758,2.742,1759,2.742,1760,3.999,1761,2.742,1762,3.999,1763,5.759,1764,3.999,1765,2.742,1766,3.999,1767,5.516,1768,2.742,1769,3.469,1770,2.742,1771,2.742,1772,2.742,1773,2.742,1774,2.742,1775,3.999,1776,3.999,1777,3.999,1778,2.742,1779,4.72,1780,2.742,1781,2.742,1782,2.742,1783,2.742,1784,2.742,1785,2.742,1786,2.742,1787,2.742,1788,2.742,1789,3.999,1790,2.742,1791,2.742,1792,2.742,1793,2.742,1794,2.742,1795,5.188,1796,3.999,1797,5.188,1798,2.742,1799,2.742,1800,3.999,1801,2.742,1802,1.684,1803,2.742,1804,2.742,1805,3.999,1806,3.999,1807,2.742,1808,2.742,1809,2.742,1810,2.742,1811,2.742,1812,2.742,1813,2.742,1814,2.742,1815,2.742,1816,2.742,1817,2.742,1818,2.742,1819,2.742,1820,2.742,1821,2.742,1822,2.742,1823,2.742,1824,2.742,1825,2.742,1826,2.742,1827,1.684,1828,1.684,1829,3.469,1830,1.684]],["title/components/TestAccountComponent.html",[0,0.139,358,0.657]],["body/components/TestAccountComponent.html",[0,0.232,1,0.574,2,1.066,3,0.145,4,0.173,5,1.632,6,0.797,7,0.797,8,0.797,9,0.098,13,0.278,15,1.307,23,1.136,24,1.706,25,0.574,26,1.351,27,1.512,29,1.29,31,1.29,33,0.221,34,0.612,35,2.264,36,1.776,40,1.824,42,1,52,1.503,53,1.339,54,1.463,56,1.354,57,0.025,58,0.747,59,0.52,60,0.903,72,1.099,73,1.395,74,1.8,90,1.549,92,1.909,95,2.208,96,1.023,97,2.783,103,0.954,113,0.657,120,0.475,121,0.429,122,0.905,125,1.676,127,0.145,128,0.463,129,0.905,130,1.027,132,2.208,160,1.549,162,0.849,163,1.86,192,1.562,193,1.909,194,0.905,195,2.982,197,1.667,198,1.909,199,1.943,200,1.909,201,1.549,202,1.339,203,2.225,205,0.748,206,0.964,209,1.438,216,1.526,226,1.25,228,1.25,259,1.549,263,1.17,268,1.676,269,1.438,274,1.027,301,1.339,307,1.339,308,1.339,309,1.339,310,0.701,311,1.066,312,1.066,313,0.365,314,0.797,318,0.797,319,0.615,320,0.797,321,0.574,322,0.701,323,0.876,324,1.136,325,0.615,326,1.136,327,1.066,328,1.136,329,0.574,330,0.797,331,0.615,332,0.574,333,0.797,334,0.574,335,0.797,336,0.574,337,0.797,338,0.797,339,1.289,340,0.797,341,0.574,342,0.797,343,0.574,344,0.797,345,0.615,346,0.797,347,0.574,348,0.615,349,0.657,350,1.097,351,1.136,352,0.615,353,1.532,354,0.797,355,0.657,356,0.574,357,0.797,358,1.143,359,0.536,360,0.574,361,0.797,362,0.574,363,0.797,364,0.574,365,0.797,366,0.574,367,0.797,368,0.574,369,0.748,370,0.797,371,0.01,372,0.015,373,0.01,404,2.804,407,1.027,408,1.29,411,1.824,428,1.549,459,2.225,460,2.049,467,2.049,563,2.523,595,4.028,631,1.25,716,3.171,810,2.225,827,2.002,880,2.853,892,2.6,927,3.081,1080,2.523,1166,3.596,1167,2.853,1168,5.166,1169,3.596,1170,3.596,1171,3.596,1174,2.523,1176,2.225,1177,2.523,1179,2.853,1180,2.523,1182,2.523,1188,2.002,1190,2.523,1193,2.225,1194,2.523,1195,2.523,1196,2.225,1199,2.523,1200,2.523,1201,4.568,1202,5.02,1203,2.225,1831,4.568,1832,2.523,1833,4.943,1834,4.242,1835,2.976,1836,2.976,1837,4.242,1838,6.43,1839,2.976,1840,2.976,1841,2.976,1842,2.976,1843,2.976,1844,2.976,1845,2.976,1846,2.976,1847,2.976,1848,2.976,1849,2.976,1850,2.976,1851,2.523]],["title/interceptors/TimeoutInterceptor.html",[617,2.289,1852,2.544]],["body/interceptors/TimeoutInterceptor.html",[3,0.215,4,0.179,9,0.145,13,0.288,23,1.177,27,0.97,33,0.327,42,1.298,52,1.336,54,1.216,56,1.385,57,0.025,58,0.675,59,0.46,60,0.924,73,1.298,89,1.424,120,0.526,121,0.634,127,0.269,128,0.684,129,1.675,167,2.529,371,0.015,372,0.019,373,0.015,407,1.517,531,2.693,560,3.726,616,2.956,617,3.706,626,4.957,643,3.706,646,2.123,683,3.659,691,4.119,776,3.285,832,3.726,836,3.726,904,2.908,907,4.119,1112,4.119,1120,3.377,1176,4.119,1267,3.377,1371,3.377,1423,4.671,1565,4.671,1852,4.119,1853,4.395,1854,4.499,1855,3.285,1856,5.51,1857,5.51,1858,5.51,1859,4.395,1860,4.395,1861,5.51,1862,5.51,1863,6.31,1864,6.31,1865,6.31,1866,4.395,1867,5.51,1868,5.51,1869,5.103,1870,6.019,1871,4.395,1872,4.395,1873,4.395,1874,5.51,1875,3.726,1876,4.395,1877,4.395,1878,4.395,1879,4.395,1880,4.395,1881,4.395,1882,4.395]],["title/interfaces/User.html",[79,0.972,647,0.613]],["body/interfaces/User.html",[3,0.214,4,0.179,9,0.144,13,0.287,15,0.966,16,2.683,19,4.258,20,5.128,33,0.326,34,0.793,37,3.448,38,2.473,57,0.025,58,0.674,59,0.572,79,2.025,85,2.465,95,2.278,100,1.542,111,2.981,127,0.214,371,0.015,372,0.019,373,0.015,647,0.99,648,1.612,656,3.044,659,3.368,668,3.538,749,3.095,993,3.273,1250,2.945,1371,2.683,1414,5.342,1745,3.712,1883,3.712,1884,6.301,1885,6.008,1886,6.008,1887,4.378,1888,4.378,1889,4.378,1890,4.378]],["title/directives/ViewModeDirective.html",[313,0.417,368,0.657]],["body/directives/ViewModeDirective.html",[3,0.254,4,0.212,9,0.171,13,0.341,25,1.002,26,1.177,57,0.025,120,0.433,121,0.749,127,0.254,128,0.809,130,1.793,162,1.482,313,0.819,332,1.177,359,0.935,368,1.177,369,1.533,371,0.018,372,0.021,373,0.018,782,3.882,785,3.476,787,5.169,788,4.403,902,4.558,1891,4.403,1892,6.097]],["title/coverage.html",[1893,3.95]],["body/coverage.html",[0,0.287,1,0.718,9,0.122,10,3.152,11,2.779,12,3.152,36,0.996,57,0.025,59,0.31,79,1.061,89,1.204,92,1.673,96,0.579,103,0.718,113,0.821,205,0.934,272,1.796,313,0.756,319,0.768,321,0.718,323,1.021,325,0.768,329,0.718,331,0.768,334,0.718,336,0.718,339,0.718,341,0.718,343,0.718,345,0.768,347,0.718,348,0.768,349,0.821,350,0.669,352,0.768,355,0.821,356,0.718,358,0.718,360,0.718,362,0.718,364,0.718,366,0.718,368,0.718,371,0.013,372,0.017,373,0.013,374,3.152,504,4.385,553,2.779,556,3.152,561,2.779,568,2.278,574,2.779,590,3.697,595,2.779,612,2.779,614,2.779,616,2.501,617,2.501,620,2.779,634,2.501,636,3.152,643,2.501,647,1.22,649,3.152,653,2.501,655,3.152,662,2.278,665,3.152,666,3.697,713,3.152,714,3.697,781,3.697,782,3.697,785,1.935,789,3.152,863,3.152,874,3.152,875,3.152,951,3.152,957,3.152,964,3.152,1160,3.152,1204,3.697,1205,3.697,1222,2.779,1230,3.152,1252,3.152,1272,3.152,1291,2.501,1292,3.152,1297,3.152,1298,3.152,1398,3.152,1400,3.152,1427,3.152,1444,3.152,1453,3.152,1455,2.278,1457,3.152,1458,3.152,1473,3.152,1474,3.152,1588,3.152,1598,3.152,1831,3.152,1832,3.152,1852,2.779,1854,3.697,1855,3.697,1883,3.152,1891,3.152,1893,3.152,1894,3.718,1895,3.718,1896,3.718,1897,3.718,1898,3.718,1899,3.718,1900,3.718,1901,6.341,1902,6.72,1903,3.718,1904,5.557,1905,4.945,1906,4.945,1907,3.718,1908,5.923,1909,4.945,1910,3.718,1911,3.718,1912,4.945,1913,3.718,1914,5.557,1915,3.718,1916,3.718,1917,3.718,1918,3.718,1919,4.945,1920,3.718,1921,3.718,1922,5.557,1923,3.718,1924,3.718,1925,4.945,1926,3.718,1927,3.718,1928,3.718,1929,3.152,1930,3.718,1931,4.711,1932,4.945,1933,3.718,1934,3.718,1935,3.718,1936,4.192,1937,3.718,1938,3.152,1939,3.152,1940,4.192,1941,3.152,1942,3.718]],["title/dependencies.html",[534,2.756,1943,2.836]],["body/dependencies.html",[9,0.158,57,0.025,63,2.694,121,0.69,124,2.01,371,0.017,372,0.02,373,0.017,408,1.455,534,3.218,536,3.576,549,4.922,550,3.558,567,2.311,586,2.694,587,4.056,593,3.52,594,3.576,605,2.932,609,4.056,610,3.576,683,2.694,748,3.576,834,4.056,838,4.056,839,4.056,931,3.576,1944,6.913,1945,4.784,1946,4.784,1947,4.784,1948,4.784,1949,4.784,1950,4.784,1951,4.784,1952,4.056,1953,4.784,1954,4.784,1955,4.784,1956,4.784,1957,4.784,1958,4.784,1959,4.784,1960,4.784,1961,4.784,1962,4.784,1963,4.784,1964,4.784,1965,4.784,1966,4.784,1967,4.784,1968,4.784,1969,4.784,1970,4.784,1971,4.784,1972,4.784,1973,4.784,1974,4.784,1975,5.806,1976,4.784,1977,4.784,1978,4.784,1979,4.784,1980,4.784,1981,4.784,1982,4.784,1983,4.784,1984,4.784,1985,4.784]],["title/index.html",[33,0.211,1986,2.836,1987,2.836]],["body/index.html",[0,0.257,4,0.199,27,1.077,57,0.02,58,0.598,72,0.942,89,1.581,90,3.058,160,2.54,188,3.952,190,4.393,371,0.017,372,0.02,373,0.017,390,2.196,438,3.648,441,3.864,456,3.648,472,5.548,586,3.873,637,2.991,1109,4.713,1120,4.103,1122,4.138,1450,4.982,1674,4.138,1739,4.138,1952,5.345,1988,4.88,1989,4.88,1990,6.305,1991,4.88,1992,4.88,1993,4.88,1994,4.138,1995,4.88,1996,4.88,1997,4.88,1998,4.88,1999,4.88,2000,6.305,2001,4.88,2002,6.696,2003,4.88,2004,4.88,2005,4.88,2006,4.88,2007,4.88,2008,4.88,2009,4.138,2010,5.876,2011,5.876,2012,6.544,2013,4.88,2014,4.88,2015,4.88,2016,4.88,2017,4.88]],["title/modules.html",[533,3.483]],["body/modules.html",[57,0.022,371,0.019,372,0.022,373,0.019,532,3.745,533,4.162,550,3.412,2018,5.567,2019,5.567,2020,5.567]],["title/overview.html",[2021,3.95]],["body/overview.html",[1,1.143,2,1.067,36,1.587,57,0.025,113,1.308,223,2.489,233,3.175,310,1.001,319,1.379,321,1.143,323,0.877,325,1.224,329,1.143,331,1.224,334,1.143,336,1.143,339,1.143,341,1.203,343,1.143,345,1.224,347,1.143,348,1.224,349,1.308,352,1.224,355,1.308,356,1.143,358,1.143,359,0.765,360,1.143,362,1.143,364,1.143,366,1.143,368,1.143,371,0.015,372,0.019,373,0.015,390,1.911,531,3.304,532,4.902,534,2.856,535,3.6,536,3.175,537,3.175,538,3.6,539,3.6,540,3.6,541,3.6,542,3.6,543,4.571,634,2.856,643,2.856,648,1.564,2021,3.6,2022,4.247,2023,4.247]],["title/miscellaneous/variables.html",[2024,2.404,2025,3.474]],["body/miscellaneous/variables.html",[0,0.28,1,0.774,15,0.886,27,0.886,28,2.999,33,0.298,46,3.496,56,1.307,57,0.025,59,0.527,83,2.927,89,1.684,96,0.625,97,2.259,111,2.339,135,3.401,167,2.184,205,1.307,321,0.774,322,0.945,323,0.829,334,0.774,336,0.774,339,0.774,341,0.774,343,0.774,347,0.774,356,0.774,358,0.774,371,0.014,372,0.018,373,0.014,397,3.886,407,2.276,408,1.969,409,1.577,440,3.886,531,2.458,553,3.886,568,2.458,590,2.999,616,3.496,626,2.999,631,2.184,639,3.401,646,1.938,651,2.698,668,3.37,683,2.259,709,3.496,929,2.999,1163,3.401,1204,2.999,1205,3.886,1216,2.999,1217,3.401,1218,3.401,1219,4.407,1220,2.999,1221,3.401,1222,3.886,1223,3.886,1224,3.401,1225,3.401,1226,3.401,1227,3.401,1228,3.401,1295,2.999,1536,3.401,1851,4.407,1854,2.999,1855,3.886,1869,3.401,1875,3.401,1929,3.401,1931,4.407,1936,3.401,1938,4.407,1939,3.401,1940,5.49,1941,3.401,1994,3.401,2009,4.889,2024,3.401,2025,3.401,2026,4.011,2027,4.011,2028,4.011,2029,4.011,2030,4.011,2031,4.011,2032,4.011,2033,6.81,2034,4.011,2035,4.011,2036,4.011,2037,4.011]]],"invertedIndex":[["",{"_index":57,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interfaces/Background.html":{},"interfaces/Block.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"interfaces/ReportContainer.html":{},"components/ReportHistoryComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"interfaces/StepType.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"interfaces/User.html":{},"directives/ViewModeDirective.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":529,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteScenarioToast.html":{},"components/FeedbackComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{}}}],["0.11.3",{"_index":1985,"title":{},"body":{"dependencies.html":{}}}],["0.1s",{"_index":1575,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["0.25px",{"_index":1150,"title":{},"body":{"components/LoginComponent.html":{}}}],["0.2s",{"_index":290,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{},"components/StoriesBarComponent.html":{}}}],["0.3s",{"_index":493,"title":{},"body":{"components/AppComponent.html":{}}}],["0.5em",{"_index":1563,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["0.63",{"_index":257,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["0.7.1",{"_index":1951,"title":{},"body":{"dependencies.html":{}}}],["0099cc",{"_index":1142,"title":{},"body":{"components/LoginComponent.html":{}}}],["0px",{"_index":193,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["1",{"_index":223,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/DeleteScenarioToast.html":{},"components/ExampleTableComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"overview.html":{}}}],["1.3.2",{"_index":439,"title":{},"body":{"components/AppComponent.html":{}}}],["1.8.2",{"_index":1953,"title":{},"body":{"dependencies.html":{}}}],["1.don't",{"_index":1411,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["1.don\\'t",{"_index":1425,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["1/1",{"_index":1902,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":1909,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1129,"title":{},"body":{"components/LoginComponent.html":{}}}],["10.1.1",{"_index":1972,"title":{},"body":{"dependencies.html":{}}}],["10.2.3",{"_index":1944,"title":{},"body":{"dependencies.html":{}}}],["10/10",{"_index":1923,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":504,"title":{},"body":{"components/AppComponent.html":{},"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{},"components/StoriesBarComponent.html":{},"coverage.html":{}}}],["100px",{"_index":210,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{}}}],["100vh",{"_index":466,"title":{},"body":{"components/AppComponent.html":{}}}],["109",{"_index":1560,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["10pt",{"_index":1147,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["10px",{"_index":228,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/DeleteScenarioToast.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["11",{"_index":2023,"title":{},"body":{"overview.html":{}}}],["11/11",{"_index":1921,"title":{},"body":{"coverage.html":{}}}],["11/12",{"_index":1927,"title":{},"body":{"coverage.html":{}}}],["12/12",{"_index":1924,"title":{},"body":{"coverage.html":{}}}],["12/14",{"_index":1905,"title":{},"body":{"coverage.html":{}}}],["120000",{"_index":633,"title":{},"body":{"modules/AppModule.html":{}}}],["12px",{"_index":474,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["13",{"_index":1816,"title":{},"body":{"components/TermsComponent.html":{}}}],["13.1.0",{"_index":1974,"title":{},"body":{"dependencies.html":{}}}],["13/13",{"_index":1925,"title":{},"body":{"coverage.html":{}}}],["13/26",{"_index":1915,"title":{},"body":{"coverage.html":{}}}],["13px",{"_index":492,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["14px",{"_index":522,"title":{},"body":{"components/AppComponent.html":{}}}],["15/15",{"_index":1913,"title":{},"body":{"coverage.html":{}}}],["150px",{"_index":1159,"title":{},"body":{"components/LoginComponent.html":{}}}],["153",{"_index":256,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["15px",{"_index":279,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{}}}],["16/18",{"_index":1935,"title":{},"body":{"coverage.html":{}}}],["1600px",{"_index":1157,"title":{},"body":{"components/LoginComponent.html":{}}}],["16px",{"_index":505,"title":{},"body":{"components/AppComponent.html":{}}}],["17px",{"_index":275,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["180px",{"_index":1158,"title":{},"body":{"components/LoginComponent.html":{}}}],["18px",{"_index":302,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{}}}],["19/19",{"_index":1903,"title":{},"body":{"coverage.html":{}}}],["1970",{"_index":1269,"title":{},"body":{"interfaces/Report.html":{}}}],["1fr",{"_index":201,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TestAccountComponent.html":{}}}],["1px",{"_index":212,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{}}}],["2",{"_index":221,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{}}}],["2.0.1",{"_index":1964,"title":{},"body":{"dependencies.html":{}}}],["2.0.8",{"_index":1966,"title":{},"body":{"dependencies.html":{}}}],["2.6.1",{"_index":1977,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":1958,"title":{},"body":{"dependencies.html":{}}}],["2.88.2",{"_index":1980,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":1912,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":1900,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":2022,"title":{},"body":{"overview.html":{}}}],["20px",{"_index":204,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TermsComponent.html":{}}}],["212529",{"_index":1827,"title":{},"body":{"components/TermsComponent.html":{}}}],["224",{"_index":1132,"title":{},"body":{"components/LoginComponent.html":{}}}],["22pt",{"_index":249,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["22px",{"_index":1392,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["247",{"_index":1152,"title":{},"body":{"components/LoginComponent.html":{}}}],["24px",{"_index":1553,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["255",{"_index":208,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["25px",{"_index":243,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["2em",{"_index":1561,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["2px",{"_index":719,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/ReportHistoryComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{}}}],["3",{"_index":222,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["3.0.1",{"_index":1969,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":1981,"title":{},"body":{"dependencies.html":{}}}],["3.5.1",{"_index":1971,"title":{},"body":{"dependencies.html":{}}}],["3.5.9",{"_index":1983,"title":{},"body":{"dependencies.html":{}}}],["3.7.0",{"_index":1956,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1914,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":1928,"title":{},"body":{"coverage.html":{}}}],["3000",{"_index":627,"title":{},"body":{"modules/AppModule.html":{}}}],["300px",{"_index":753,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["30deg",{"_index":770,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["30em",{"_index":1562,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["30px",{"_index":260,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{}}}],["340px",{"_index":1140,"title":{},"body":{"components/LoginComponent.html":{}}}],["350px",{"_index":1421,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["388196",{"_index":718,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["3fr",{"_index":468,"title":{},"body":{"components/AppComponent.html":{}}}],["3px",{"_index":699,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{}}}],["4",{"_index":231,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["4.14.1",{"_index":1979,"title":{},"body":{"dependencies.html":{}}}],["4.16.4",{"_index":1962,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":1919,"title":{},"body":{"coverage.html":{}}}],["400px",{"_index":1130,"title":{},"body":{"components/LoginComponent.html":{}}}],["40px",{"_index":252,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["45",{"_index":1910,"title":{},"body":{"coverage.html":{}}}],["4px",{"_index":476,"title":{},"body":{"components/AppComponent.html":{}}}],["5",{"_index":233,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{},"overview.html":{}}}],["5.4.0",{"_index":1973,"title":{},"body":{"dependencies.html":{}}}],["5/11",{"_index":1911,"title":{},"body":{"coverage.html":{}}}],["5/5",{"_index":1922,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1908,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":1091,"title":{},"body":{"components/LoginComponent.html":{}}}],["500px",{"_index":1134,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["50px",{"_index":278,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["51/59",{"_index":1918,"title":{},"body":{"coverage.html":{}}}],["51px",{"_index":498,"title":{},"body":{"components/AppComponent.html":{}}}],["53d35a",{"_index":702,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{}}}],["56595e",{"_index":1581,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["5deg",{"_index":772,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["5px",{"_index":263,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["6",{"_index":234,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["6.2.4",{"_index":1991,"title":{},"body":{"index.html":{}}}],["6/6",{"_index":1906,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":1907,"title":{},"body":{"coverage.html":{}}}],["600px",{"_index":309,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["60px",{"_index":298,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/StoriesBarComponent.html":{}}}],["65/65",{"_index":1898,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":1899,"title":{},"body":{"coverage.html":{}}}],["6px",{"_index":752,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["7.2.16",{"_index":1948,"title":{},"body":{"dependencies.html":{}}}],["70",{"_index":521,"title":{},"body":{"components/AppComponent.html":{}}}],["70px",{"_index":1136,"title":{},"body":{"components/LoginComponent.html":{}}}],["76/77",{"_index":1937,"title":{},"body":{"coverage.html":{}}}],["77/78",{"_index":1933,"title":{},"body":{"coverage.html":{}}}],["7px",{"_index":1555,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["8",{"_index":689,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["8.0.0",{"_index":1950,"title":{},"body":{"dependencies.html":{}}}],["8.2.0",{"_index":1960,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":1920,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1569,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["80px",{"_index":695,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["830px",{"_index":1133,"title":{},"body":{"components/LoginComponent.html":{}}}],["85",{"_index":1904,"title":{},"body":{"coverage.html":{}}}],["850px",{"_index":1138,"title":{},"body":{"components/LoginComponent.html":{}}}],["86",{"_index":1917,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":1934,"title":{},"body":{"coverage.html":{}}}],["88px",{"_index":1141,"title":{},"body":{"components/LoginComponent.html":{}}}],["8px",{"_index":516,"title":{},"body":{"components/AppComponent.html":{}}}],["90",{"_index":297,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["91",{"_index":1926,"title":{},"body":{"coverage.html":{}}}],["92",{"_index":712,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{}}}],["94",{"_index":1203,"title":{},"body":{"components/ParentComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["98",{"_index":1932,"title":{},"body":{"coverage.html":{}}}],["999",{"_index":214,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{}}}],["_id",{"_index":656,"title":{},"body":{"interfaces/Block.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"interfaces/Report.html":{},"interfaces/RepositoryContainer.html":{},"interfaces/StepType.html":{},"interfaces/Story.html":{},"interfaces/User.html":{}}}],["a.notpassed",{"_index":1385,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["a.passed",{"_index":1383,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["a.repolink",{"_index":288,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{}}}],["a.repolink:hover",{"_index":291,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{}}}],["a.reporttime",{"_index":1350,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["a.storylistlink",{"_index":1568,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["a.storylistlink:hover",{"_index":1573,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["a:hover",{"_index":497,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["absolute",{"_index":1137,"title":{},"body":{"components/LoginComponent.html":{},"components/StoriesBarComponent.html":{}}}],["abstractcontrol",{"_index":1214,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{}}}],["access",{"_index":1745,"title":{},"body":{"components/TermsComponent.html":{},"interfaces/User.html":{}}}],["accessed",{"_index":1717,"title":{},"body":{"components/TermsComponent.html":{}}}],["accessible",{"_index":1603,"title":{},"body":{"components/TermsComponent.html":{}}}],["accessors",{"_index":802,"title":{},"body":{"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/ReportHistoryComponent.html":{}}}],["accordion",{"_index":1580,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["account",{"_index":15,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["account.component",{"_index":596,"title":{},"body":{"modules/AppModule.html":{}}}],["account.component.ts",{"_index":1832,"title":{},"body":{"components/TestAccountComponent.html":{},"coverage.html":{}}}],["account.component.ts:16",{"_index":1835,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["account.component.ts:22",{"_index":1844,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["account.component.ts:35",{"_index":1836,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["account/test",{"_index":595,"title":{},"body":{"modules/AppModule.html":{},"components/TestAccountComponent.html":{},"coverage.html":{}}}],["accountmanagement",{"_index":135,"title":{},"body":{"components/AccountManagementComponent.html":{},"miscellaneous/variables.html":{}}}],["accountmanagementcomponent",{"_index":1,"title":{"components/AccountManagementComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["accountname",{"_index":1890,"title":{},"body":{"interfaces/User.html":{}}}],["actionbutton",{"_index":1390,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["activate",{"_index":783,"title":{},"body":{"directives/EditModeDirective.html":{},"directives/EditableOnEnterDirective.html":{}}}],["activatedroute",{"_index":674,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ReportComponent.html":{}}}],["active",{"_index":241,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{}}}],["activities",{"_index":1622,"title":{},"body":{"components/TermsComponent.html":{}}}],["activity",{"_index":1813,"title":{},"body":{"components/TermsComponent.html":{}}}],["actual_component",{"_index":370,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["ad",{"_index":1730,"title":{},"body":{"components/TermsComponent.html":{}}}],["add",{"_index":1115,"title":{},"body":{"components/LoginComponent.html":{}}}],["added",{"_index":896,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["adding",{"_index":1804,"title":{},"body":{"components/TermsComponent.html":{}}}],["additional",{"_index":1615,"title":{},"body":{"components/TermsComponent.html":{}}}],["address",{"_index":1250,"title":{},"body":{"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TermsComponent.html":{},"interfaces/User.html":{}}}],["addresses",{"_index":1688,"title":{},"body":{"components/TermsComponent.html":{}}}],["adesso",{"_index":489,"title":{},"body":{"components/AppComponent.html":{}}}],["adessocucumber/cucumber",{"_index":1071,"title":{},"body":{"components/LoginComponent.html":{}}}],["adessologo",{"_index":479,"title":{},"body":{"components/AppComponent.html":{}}}],["administering",{"_index":1702,"title":{},"body":{"components/TermsComponent.html":{}}}],["advertisements",{"_index":1736,"title":{},"body":{"components/TermsComponent.html":{}}}],["advertisers",{"_index":1747,"title":{},"body":{"components/TermsComponent.html":{}}}],["advertising",{"_index":1724,"title":{},"body":{"components/TermsComponent.html":{}}}],["advising",{"_index":1751,"title":{},"body":{"components/TermsComponent.html":{}}}],["afterviewinit",{"_index":959,"title":{},"body":{"directives/FocusableDirective.html":{},"components/LoginComponent.html":{}}}],["age",{"_index":1815,"title":{},"body":{"components/TermsComponent.html":{}}}],["agree",{"_index":1632,"title":{},"body":{"components/TermsComponent.html":{}}}],["align",{"_index":225,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{}}}],["already",{"_index":1413,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["analytics",{"_index":1683,"title":{},"body":{"components/TermsComponent.html":{}}}],["analyze",{"_index":1656,"title":{},"body":{"components/TermsComponent.html":{}}}],["analyzing",{"_index":1700,"title":{},"body":{"components/TermsComponent.html":{}}}],["and/or",{"_index":1625,"title":{},"body":{"components/TermsComponent.html":{}}}],["angular",{"_index":1952,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":748,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{},"dependencies.html":{}}}],["angular/cdk/drag",{"_index":583,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/common",{"_index":1945,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":560,"title":{},"body":{"modules/AppModule.html":{},"interceptors/TimeoutInterceptor.html":{}}}],["angular/compiler",{"_index":1946,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":121,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"directives/ViewModeDirective.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":567,"title":{},"body":{"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1947,"title":{},"body":{"dependencies.html":{}}}],["angular/material/list",{"_index":573,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/progress",{"_index":598,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/table",{"_index":571,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":549,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":124,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ResetPasswordComponent.html":{},"dependencies.html":{}}}],["animate",{"_index":744,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["animate('400ms",{"_index":766,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["animations",{"_index":761,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["another",{"_index":1800,"title":{},"body":{"components/TermsComponent.html":{}}}],["anymore",{"_index":1597,"title":{},"body":{"interfaces/Story.html":{}}}],["aot",{"_index":734,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["api",{"_index":62,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ConfirmResetPasswordComponent.html":{}}}],["apiservice",{"_index":36,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["app",{"_index":27,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.component",{"_index":555,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":377,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":378,"title":{},"body":{"components/AppComponent.html":{}}}],["app/routes/routes",{"_index":554,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent",{"_index":319,"title":{"components/AppComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":1113,"title":{},"body":{"components/LoginComponent.html":{},"components/TermsComponent.html":{}}}],["applicable",{"_index":1627,"title":{},"body":{"components/TermsComponent.html":{}}}],["application",{"_index":449,"title":{},"body":{"components/AppComponent.html":{}}}],["applies",{"_index":1620,"title":{},"body":{"components/TermsComponent.html":{}}}],["apply",{"_index":1749,"title":{},"body":{"components/TermsComponent.html":{}}}],["appmodule",{"_index":532,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppasswordconfirmed",{"_index":1211,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{}}}],["apppasswordconfirmed]'},{'name",{"_index":367,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["area",{"_index":467,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["areas",{"_index":460,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["array.from(seen",{"_index":942,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["artifacts",{"_index":2003,"title":{},"body":{"index.html":{}}}],["ask",{"_index":1639,"title":{},"body":{"components/TermsComponent.html":{}}}],["asked",{"_index":1634,"title":{},"body":{"components/TermsComponent.html":{}}}],["assets//slide0.png",{"_index":1006,"title":{},"body":{"components/LoginComponent.html":{}}}],["assets//slide01.png",{"_index":1010,"title":{},"body":{"components/LoginComponent.html":{}}}],["assets//slide02.png",{"_index":1013,"title":{},"body":{"components/LoginComponent.html":{}}}],["assets//slide03.png",{"_index":1016,"title":{},"body":{"components/LoginComponent.html":{}}}],["assets//slide04.png",{"_index":1019,"title":{},"body":{"components/LoginComponent.html":{}}}],["assets//slide05.png",{"_index":1022,"title":{},"body":{"components/LoginComponent.html":{}}}],["assets//slide06.png",{"_index":1025,"title":{},"body":{"components/LoginComponent.html":{}}}],["assets//slide07.png",{"_index":1028,"title":{},"body":{"components/LoginComponent.html":{}}}],["assets//slide08.png",{"_index":1031,"title":{},"body":{"components/LoginComponent.html":{}}}],["assets//slide09.png",{"_index":1034,"title":{},"body":{"components/LoginComponent.html":{}}}],["assets//slide10.png",{"_index":1037,"title":{},"body":{"components/LoginComponent.html":{}}}],["assets//slide11.png",{"_index":1040,"title":{},"body":{"components/LoginComponent.html":{}}}],["assigned",{"_index":1593,"title":{},"body":{"interfaces/Story.html":{}}}],["assignee",{"_index":1589,"title":{},"body":{"interfaces/Story.html":{}}}],["assignee_avatar_url",{"_index":1590,"title":{},"body":{"interfaces/Story.html":{}}}],["async",{"_index":981,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["attachments",{"_index":1644,"title":{},"body":{"components/TermsComponent.html":{}}}],["authguard",{"_index":568,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auto",{"_index":199,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/Scenario.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["automated",{"_index":1419,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["automatically",{"_index":1739,"title":{},"body":{"components/TermsComponent.html":{},"index.html":{}}}],["available",{"_index":1469,"title":{},"body":{"interfaces/StepType.html":{}}}],["avatar",{"_index":1567,"title":{},"body":{"components/StoriesBarComponent.html":{},"interfaces/Story.html":{}}}],["await",{"_index":1067,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["aware",{"_index":1782,"title":{},"body":{"components/TermsComponent.html":{}}}],["b",{"_index":1349,"title":{},"body":{"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{}}}],["b.issue_number",{"_index":1525,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["b.reporttime",{"_index":1351,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["backbutton",{"_index":277,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ReportHistoryComponent.html":{}}}],["backbutton:focus",{"_index":282,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["backface",{"_index":758,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["background",{"_index":205,"title":{"interfaces/Background.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"interfaces/Background.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/StepDefinitionBackground.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["backimage",{"_index":285,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["bar",{"_index":1162,"title":{},"body":{"components/ParentComponent.html":{},"components/StoriesBarComponent.html":{}}}],["bar'},{'name",{"_index":354,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["bar.component",{"_index":562,"title":{},"body":{"modules/AppModule.html":{}}}],["bar.component.css",{"_index":1475,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar.component.html",{"_index":1476,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar.component.ts",{"_index":1474,"title":{},"body":{"components/StoriesBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:108",{"_index":1490,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar.component.ts:122",{"_index":1496,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar.component.ts:131",{"_index":1498,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar.component.ts:143",{"_index":1494,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar.component.ts:20",{"_index":1508,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar.component.ts:25",{"_index":1507,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar.component.ts:30",{"_index":1506,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar.component.ts:35",{"_index":1503,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar.component.ts:40",{"_index":1502,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar.component.ts:45",{"_index":1501,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar.component.ts:51",{"_index":1489,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar.component.ts:57",{"_index":1487,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar.component.ts:62",{"_index":1486,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar.component.ts:68",{"_index":1499,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar.component.ts:80",{"_index":1493,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar.component.ts:97",{"_index":1492,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["bar/stories",{"_index":561,"title":{},"body":{"modules/AppModule.html":{},"components/StoriesBarComponent.html":{},"coverage.html":{}}}],["based",{"_index":1722,"title":{},"body":{"components/TermsComponent.html":{}}}],["beacons",{"_index":1712,"title":{},"body":{"components/TermsComponent.html":{}}}],["before",{"_index":1470,"title":{},"body":{"interfaces/StepType.html":{}}}],["believe",{"_index":1789,"title":{},"body":{"components/TermsComponent.html":{}}}],["belongs",{"_index":661,"title":{},"body":{"interfaces/Block.html":{},"interfaces/StepType.html":{}}}],["below",{"_index":462,"title":{},"body":{"components/AppComponent.html":{}}}],["best",{"_index":1822,"title":{},"body":{"components/TermsComponent.html":{}}}],["between",{"_index":306,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ReportHistoryComponent.html":{},"interfaces/Scenario.html":{}}}],["black",{"_index":264,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/DeleteScenarioToast.html":{},"components/LoginComponent.html":{},"components/RunTestToast.html":{}}}],["block",{"_index":272,"title":{"interfaces/Block.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"interfaces/Block.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/StoriesBarComponent.html":{},"coverage.html":{}}}],["blue",{"_index":218,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{}}}],["body",{"_index":1566,"title":{},"body":{"components/StoriesBarComponent.html":{},"interfaces/Story.html":{}}}],["bold",{"_index":251,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["boolean",{"_index":406,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/Background.html":{},"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"interfaces/RepositoryContainer.html":{},"interfaces/Scenario.html":{},"interfaces/StepType.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{}}}],["bootstrap",{"_index":536,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":587,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["border",{"_index":211,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{}}}],["bottom",{"_index":209,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["box",{"_index":514,"title":{},"body":{"components/AppComponent.html":{},"components/StoriesBarComponent.html":{}}}],["browse",{"_index":2020,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":550,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Scenario.html":{},"components/TermsComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":607,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":606,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":548,"title":{},"body":{"modules/AppModule.html":{}}}],["browsers",{"_index":1760,"title":{},"body":{"components/TermsComponent.html":{}}}],["btn",{"_index":756,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["build",{"_index":2002,"title":{},"body":{"index.html":{}}}],["business",{"_index":1767,"title":{},"body":{"components/TermsComponent.html":{}}}],["button",{"_index":741,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{}}}],["california",{"_index":1765,"title":{},"body":{"components/TermsComponent.html":{}}}],["campaigns",{"_index":1743,"title":{},"body":{"components/TermsComponent.html":{}}}],["can't",{"_index":1409,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["can\\'t",{"_index":1424,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["canactivate",{"_index":639,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["cancel",{"_index":740,"title":{},"body":{"components/DeleteScenarioToast.html":{}}}],["cancelstring",{"_index":725,"title":{},"body":{"components/DeleteScenarioToast.html":{}}}],["canedit",{"_index":1399,"title":{},"body":{"interfaces/RepositoryContainer.html":{}}}],["card",{"_index":287,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["carousel",{"_index":610,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"dependencies.html":{}}}],["categories",{"_index":1771,"title":{},"body":{"components/TermsComponent.html":{}}}],["ccpa",{"_index":1762,"title":{},"body":{"components/TermsComponent.html":{}}}],["cdr",{"_index":984,"title":{},"body":{"components/LoginComponent.html":{}}}],["cell",{"_index":902,"title":{},"body":{"components/ExampleTableComponent.html":{},"directives/FocusableDirective.html":{},"directives/ViewModeDirective.html":{}}}],["cells",{"_index":791,"title":{},"body":{"components/EditableComponent.html":{}}}],["center",{"_index":226,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["certain",{"_index":1756,"title":{},"body":{"components/TermsComponent.html":{}}}],["change",{"_index":160,"title":{},"body":{"components/AccountManagementComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/ParentComponent.html":{},"components/ReportHistoryComponent.html":{},"components/TestAccountComponent.html":{},"index.html":{}}}],["changed",{"_index":901,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["changedetectorref",{"_index":985,"title":{},"body":{"components/LoginComponent.html":{}}}],["changeeditor",{"_index":1310,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["changes",{"_index":66,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/EditableComponent.html":{}}}],["channels",{"_index":1629,"title":{},"body":{"components/TermsComponent.html":{}}}],["characters",{"_index":690,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["charcoal",{"_index":1394,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["charge",{"_index":1785,"title":{},"body":{"components/TermsComponent.html":{}}}],["check",{"_index":637,"title":{},"body":{"guards/AuthGuard.html":{},"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"index.html":{}}}],["checked",{"_index":1459,"title":{},"body":{"interfaces/StepType.html":{}}}],["checkexample",{"_index":881,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["checkexample(event",{"_index":897,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["checkrowindex",{"_index":890,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["checks",{"_index":642,"title":{},"body":{"guards/AuthGuard.html":{},"components/StoriesBarComponent.html":{}}}],["child",{"_index":1505,"title":{},"body":{"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{}}}],["children",{"_index":1805,"title":{},"body":{"components/TermsComponent.html":{}}}],["children's",{"_index":1802,"title":{},"body":{"components/TermsComponent.html":{}}}],["children\\'s",{"_index":1830,"title":{},"body":{"components/TermsComponent.html":{}}}],["choose",{"_index":1415,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/TermsComponent.html":{}}}],["chosen",{"_index":1488,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["circle",{"_index":1155,"title":{},"body":{"components/LoginComponent.html":{}}}],["class",{"_index":128,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"directives/ViewModeDirective.html":{}}}],["clear",{"_index":1637,"title":{},"body":{"components/TermsComponent.html":{}}}],["cli",{"_index":1990,"title":{},"body":{"index.html":{}}}],["click",{"_index":1123,"title":{},"body":{"components/LoginComponent.html":{}}}],["click').pipe",{"_index":853,"title":{},"body":{"components/EditableComponent.html":{}}}],["clickling",{"_index":1121,"title":{},"body":{"components/LoginComponent.html":{}}}],["clickoutside",{"_index":851,"title":{},"body":{"components/EditableComponent.html":{}}}],["clicks",{"_index":1695,"title":{},"body":{"components/TermsComponent.html":{}}}],["client",{"_index":965,"title":{},"body":{"components/LoginComponent.html":{}}}],["close",{"_index":726,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{}}}],["cluster_appmodule",{"_index":539,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":540,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":542,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":541,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1998,"title":{},"body":{"index.html":{}}}],["collect",{"_index":1626,"title":{},"body":{"components/TermsComponent.html":{}}}],["collected",{"_index":1613,"title":{},"body":{"components/TermsComponent.html":{}}}],["collects",{"_index":1768,"title":{},"body":{"components/TermsComponent.html":{}}}],["color",{"_index":206,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["color:rgb(224",{"_index":1131,"title":{},"body":{"components/LoginComponent.html":{}}}],["color:var",{"_index":246,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["column",{"_index":202,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TestAccountComponent.html":{}}}],["columnindex",{"_index":917,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["columns",{"_index":200,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/ExampleTableComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["comment",{"_index":1445,"title":{},"body":{"interfaces/Scenario.html":{}}}],["communicate",{"_index":1662,"title":{},"body":{"components/TermsComponent.html":{}}}],["companies",{"_index":1681,"title":{},"body":{"components/TermsComponent.html":{}}}],["company",{"_index":1645,"title":{},"body":{"components/TermsComponent.html":{}}}],["complete",{"_index":1791,"title":{},"body":{"components/TermsComponent.html":{}}}],["component",{"_index":0,"title":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["component]'},{'name",{"_index":328,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["component_template",{"_index":314,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"overview.html":{}}}],["conditions",{"_index":1795,"title":{},"body":{"components/TermsComponent.html":{}}}],["confirm",{"_index":322,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"miscellaneous/variables.html":{}}}],["confirmed",{"_index":1221,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{},"miscellaneous/variables.html":{}}}],["confirmed.directive",{"_index":603,"title":{},"body":{"modules/AppModule.html":{}}}],["confirmed.directive.ts",{"_index":1205,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirmed.directive.ts:21",{"_index":1215,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{}}}],["confirmpassword",{"_index":709,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"miscellaneous/variables.html":{}}}],["confirmpassword.value",{"_index":1227,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{},"miscellaneous/variables.html":{}}}],["confirmreset",{"_index":672,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{}}}],["confirmreset(form",{"_index":676,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{}}}],["confirmresetpasswordcomponent",{"_index":321,"title":{"components/ConfirmResetPasswordComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["connect",{"_index":1101,"title":{},"body":{"components/LoginComponent.html":{}}}],["connected",{"_index":1414,"title":{},"body":{"components/ResetPasswordComponent.html":{},"interfaces/User.html":{}}}],["connection",{"_index":61,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["consciously",{"_index":1537,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["consent",{"_index":1630,"title":{},"body":{"components/TermsComponent.html":{}}}],["console.log('repositories",{"_index":429,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log('save",{"_index":1442,"title":{},"body":{"components/RunTestToast.html":{}}}],["console.log('test",{"_index":1408,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["console.log(resp",{"_index":1080,"title":{},"body":{"components/LoginComponent.html":{},"components/TestAccountComponent.html":{}}}],["console.log(user",{"_index":149,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["const",{"_index":167,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/ReportComponent.html":{},"components/StoriesBarComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":52,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/ReportComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{}}}],["constructor(@inject(default_timeout",{"_index":1876,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["constructor(apiservice",{"_index":53,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/ReportComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["constructor(defaulttimeout",{"_index":1859,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["constructor(private",{"_index":644,"title":{},"body":{"guards/AuthGuard.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"directives/FocusableDirective.html":{}}}],["constructor(public",{"_index":130,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"directives/EditModeDirective.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{},"directives/ViewModeDirective.html":{}}}],["constructor(toastrservice",{"_index":729,"title":{},"body":{"components/DeleteScenarioToast.html":{}}}],["consult",{"_index":1726,"title":{},"body":{"components/TermsComponent.html":{}}}],["consumer",{"_index":1773,"title":{},"body":{"components/TermsComponent.html":{}}}],["consumer's",{"_index":1769,"title":{},"body":{"components/TermsComponent.html":{}}}],["consumer\\'s",{"_index":1829,"title":{},"body":{"components/TermsComponent.html":{}}}],["consumers",{"_index":1766,"title":{},"body":{"components/TermsComponent.html":{}}}],["contact",{"_index":1619,"title":{},"body":{"components/TermsComponent.html":{}}}],["container",{"_index":196,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/ReportContainer.html":{},"interfaces/RepositoryContainer.html":{},"components/TermsComponent.html":{}}}],["containing",{"_index":1161,"title":{},"body":{"components/ParentComponent.html":{}}}],["contains",{"_index":1611,"title":{},"body":{"components/TermsComponent.html":{}}}],["content",{"_index":269,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["contentchild",{"_index":828,"title":{},"body":{"components/EditableComponent.html":{}}}],["contentchild(editmodedirective",{"_index":817,"title":{},"body":{"components/EditableComponent.html":{}}}],["contentchild(viewmodedirective",{"_index":820,"title":{},"body":{"components/EditableComponent.html":{}}}],["contents",{"_index":1643,"title":{},"body":{"components/TermsComponent.html":{}}}],["continue",{"_index":1107,"title":{},"body":{"components/LoginComponent.html":{}}}],["control",{"_index":1216,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{},"components/TermsComponent.html":{},"miscellaneous/variables.html":{}}}],["control.get('confirmpassword",{"_index":1225,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{},"miscellaneous/variables.html":{}}}],["control.get('password",{"_index":1224,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{},"miscellaneous/variables.html":{}}}],["controls",{"_index":697,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["cookie",{"_index":594,"title":{},"body":{"modules/AppModule.html":{},"components/TermsComponent.html":{},"dependencies.html":{}}}],["cookies",{"_index":1710,"title":{},"body":{"components/TermsComponent.html":{}}}],["cookieservice",{"_index":592,"title":{},"body":{"modules/AppModule.html":{}}}],["copies",{"_index":1784,"title":{},"body":{"components/TermsComponent.html":{}}}],["core",{"_index":1954,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":1788,"title":{},"body":{"components/TermsComponent.html":{}}}],["cors",{"_index":1957,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":1893,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":87,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{},"interfaces/Report.html":{},"components/StoriesBarComponent.html":{}}}],["created",{"_index":1106,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Scenario.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{}}}],["createnewstorydiv",{"_index":1564,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["creates",{"_index":737,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/ReportHistoryComponent.html":{}}}],["createstoryemitter",{"_index":1477,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["creation",{"_index":1239,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["creator",{"_index":660,"title":{},"body":{"interfaces/Block.html":{}}}],["cross",{"_index":704,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{}}}],["cucumber",{"_index":1263,"title":{},"body":{"interfaces/Report.html":{}}}],["cucumberfrontend",{"_index":1988,"title":{},"body":{"index.html":{}}}],["current",{"_index":827,"title":{},"body":{"components/EditableComponent.html":{},"components/ParentComponent.html":{},"components/ReportHistoryComponent.html":{},"components/TestAccountComponent.html":{}}}],["currently",{"_index":404,"title":{},"body":{"components/AppComponent.html":{},"components/ParentComponent.html":{},"components/ReportHistoryComponent.html":{},"interfaces/StepType.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TestAccountComponent.html":{}}}],["currentview",{"_index":803,"title":{},"body":{"components/EditableComponent.html":{}}}],["cursor",{"_index":280,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/DeleteScenarioToast.html":{},"components/ReportHistoryComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{}}}],["custom",{"_index":21,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{},"components/StoriesBarComponent.html":{}}}],["custom.repositorycontainer._id).subscribe(respp",{"_index":1520,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["custom.repositorycontainer.value",{"_index":1519,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["custom.story.description",{"_index":1518,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["custom_elements_schema",{"_index":547,"title":{},"body":{"modules/AppModule.html":{}}}],["customer",{"_index":1665,"title":{},"body":{"components/TermsComponent.html":{}}}],["customizing",{"_index":1721,"title":{},"body":{"components/TermsComponent.html":{}}}],["customrepocontainer",{"_index":304,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["d15553",{"_index":707,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{}}}],["daisy",{"_index":1451,"title":{},"body":{"interfaces/Scenario.html":{},"components/StoriesBarComponent.html":{}}}],["daisyautologout",{"_index":1446,"title":{},"body":{"interfaces/Scenario.html":{}}}],["daisyversion",{"_index":1478,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["dark",{"_index":258,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{}}}],["darkred",{"_index":721,"title":{},"body":{"components/DeleteScenarioToast.html":{}}}],["data",{"_index":16,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ExampleTableComponent.html":{},"components/TermsComponent.html":{},"interfaces/User.html":{}}}],["database",{"_index":659,"title":{},"body":{"interfaces/Block.html":{},"interfaces/RepositoryContainer.html":{},"interfaces/StepType.html":{},"interfaces/Story.html":{},"interfaces/User.html":{}}}],["databse",{"_index":1261,"title":{},"body":{"interfaces/Report.html":{}}}],["date",{"_index":1333,"title":{},"body":{"components/ReportHistoryComponent.html":{},"components/TermsComponent.html":{}}}],["date(time).tolocaledatestring(\"de",{"_index":1353,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["date(time).tolocaletimestring(\"de",{"_index":1355,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["db",{"_index":1512,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["dblclick').pipe",{"_index":847,"title":{},"body":{"components/EditableComponent.html":{}}}],["deactivated",{"_index":945,"title":{},"body":{"components/ExampleTableComponent.html":{},"interfaces/StepType.html":{}}}],["declarations",{"_index":535,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decoration",{"_index":469,"title":{},"body":{"components/AppComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["decorators",{"_index":114,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/EditableComponent.html":{},"components/StoriesBarComponent.html":{}}}],["deep",{"_index":1154,"title":{},"body":{"components/LoginComponent.html":{}}}],["def",{"_index":1556,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["def:hover",{"_index":1558,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["default",{"_index":407,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["default_timeout",{"_index":616,"title":{},"body":{"modules/AppModule.html":{},"interceptors/TimeoutInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaulttimeout",{"_index":1861,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["defined",{"_index":54,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{}}}],["definition",{"_index":1454,"title":{},"body":{"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{}}}],["definitions",{"_index":664,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Scenario.html":{}}}],["delete",{"_index":70,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/DeleteScenarioToast.html":{},"components/ReportHistoryComponent.html":{},"components/TermsComponent.html":{}}}],["deleteaccount",{"_index":43,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["deletebutton",{"_index":720,"title":{},"body":{"components/DeleteScenarioToast.html":{}}}],["deleted",{"_index":1317,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["deletereport",{"_index":1301,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["deletereport(report",{"_index":1314,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["deletereport(report._id",{"_index":1356,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["deletes",{"_index":1316,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["deletescenario",{"_index":615,"title":{},"body":{"modules/AppModule.html":{}}}],["deletescenariotoast",{"_index":325,"title":{"components/DeleteScenarioToast.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["deletestring",{"_index":724,"title":{},"body":{"components/DeleteScenarioToast.html":{}}}],["deletetoast",{"_index":728,"title":{},"body":{"components/DeleteScenarioToast.html":{}}}],["deletetoast(event",{"_index":735,"title":{},"body":{"components/DeleteScenarioToast.html":{}}}],["deltes",{"_index":738,"title":{},"body":{"components/DeleteScenarioToast.html":{}}}],["demo",{"_index":447,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["demographic",{"_index":1708,"title":{},"body":{"components/TermsComponent.html":{}}}],["dependencies",{"_index":534,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":1329,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["deposited",{"_index":182,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["describes",{"_index":1533,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["description",{"_index":13,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/Background.html":{},"interfaces/Block.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"interfaces/ReportContainer.html":{},"components/ReportHistoryComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"interfaces/StepType.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"interfaces/User.html":{},"directives/ViewModeDirective.html":{}}}],["destroy",{"_index":839,"title":{},"body":{"components/EditableComponent.html":{},"dependencies.html":{}}}],["detailed",{"_index":1752,"title":{},"body":{"components/TermsComponent.html":{}}}],["dev",{"_index":1994,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["develop",{"_index":1657,"title":{},"body":{"components/TermsComponent.html":{}}}],["development",{"_index":1992,"title":{},"body":{"index.html":{}}}],["direction",{"_index":267,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["directive",{"_index":313,"title":{"directives/EditModeDirective.html":{},"directives/EditableOnEnterDirective.html":{},"directives/FocusableDirective.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"directives/ViewModeDirective.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"directives/ViewModeDirective.html":{},"coverage.html":{}}}],["directives",{"_index":359,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"directives/ViewModeDirective.html":{},"overview.html":{}}}],["directives/edit",{"_index":579,"title":{},"body":{"modules/AppModule.html":{},"components/EditableComponent.html":{}}}],["directives/password",{"_index":602,"title":{},"body":{"modules/AppModule.html":{}}}],["directives/view",{"_index":577,"title":{},"body":{"modules/AppModule.html":{},"components/EditableComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":2001,"title":{},"body":{"index.html":{}}}],["directly",{"_index":1640,"title":{},"body":{"components/TermsComponent.html":{}}}],["directory",{"_index":2006,"title":{},"body":{"index.html":{}}}],["disable",{"_index":1757,"title":{},"body":{"components/TermsComponent.html":{}}}],["disclaimer",{"_index":1370,"title":{},"body":{"components/ReportHistoryComponent.html":{},"components/TermsComponent.html":{}}}],["disclaimercontainer",{"_index":1396,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["disclose",{"_index":1770,"title":{},"body":{"components/TermsComponent.html":{}}}],["disconnect",{"_index":187,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["disconnectgithub",{"_index":44,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["display",{"_index":197,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["display:inline",{"_index":271,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{}}}],["displayed",{"_index":924,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["displayedcolumns",{"_index":878,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["dist",{"_index":2005,"title":{},"body":{"index.html":{}}}],["document",{"_index":1610,"title":{},"body":{"components/TermsComponent.html":{}}}],["document.getelementbyid('change",{"_index":158,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["document.getelementbyid('footer",{"_index":423,"title":{},"body":{"components/AppComponent.html":{}}}],["document.getelementbyid('githubhref",{"_index":170,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["document.getelementbyid('loadingspinner",{"_index":1077,"title":{},"body":{"components/LoginComponent.html":{}}}],["document.getelementbyid('repositorieslist",{"_index":1089,"title":{},"body":{"components/LoginComponent.html":{}}}],["document.getelementbyid('testframe",{"_index":1288,"title":{},"body":{"components/ReportComponent.html":{}}}],["documentation",{"_index":1894,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["don't",{"_index":1412,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["don\\'t",{"_index":1426,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["dotenv",{"_index":1959,"title":{},"body":{"dependencies.html":{}}}],["double",{"_index":1422,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["download",{"_index":1375,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["dragdropmodule",{"_index":582,"title":{},"body":{"modules/AppModule.html":{}}}],["drop",{"_index":584,"title":{},"body":{"modules/AppModule.html":{}}}],["dropdown",{"_index":509,"title":{},"body":{"components/AppComponent.html":{}}}],["dropdown:hover",{"_index":524,"title":{},"body":{"components/AppComponent.html":{}}}],["during",{"_index":401,"title":{},"body":{"components/AppComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["dynamic",{"_index":1949,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1098,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["e2e",{"_index":2014,"title":{},"body":{"index.html":{}}}],["each",{"_index":1727,"title":{},"body":{"components/TermsComponent.html":{}}}],["ease",{"_index":767,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["edit",{"_index":106,"title":{},"body":{"components/AccountManagementComponent.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"interfaces/RepositoryContainer.html":{}}}],["editable",{"_index":790,"title":{},"body":{"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{}}}],["editable'},{'name",{"_index":330,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["editable.component.css",{"_index":793,"title":{},"body":{"components/EditableComponent.html":{}}}],["editable.component.html",{"_index":794,"title":{},"body":{"components/EditableComponent.html":{}}}],["editable/editable.component",{"_index":576,"title":{},"body":{"modules/AppModule.html":{},"directives/EditableOnEnterDirective.html":{}}}],["editable/focusable.directive",{"_index":581,"title":{},"body":{"modules/AppModule.html":{}}}],["editablecomponent",{"_index":329,"title":{"components/EditableComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editableonenter",{"_index":864,"title":{},"body":{"directives/EditableOnEnterDirective.html":{}}}],["editableonenter]'},{'name",{"_index":361,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["editableonenterdirective",{"_index":360,"title":{"directives/EditableOnEnterDirective.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editmode",{"_index":786,"title":{},"body":{"directives/EditModeDirective.html":{},"components/EditableComponent.html":{}}}],["editmode]'},{'name",{"_index":363,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["editmodedirective",{"_index":362,"title":{"directives/EditModeDirective.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editmodehandler",{"_index":797,"title":{},"body":{"components/EditableComponent.html":{}}}],["editmodetpl",{"_index":795,"title":{},"body":{"components/EditableComponent.html":{}}}],["editor",{"_index":97,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/ReportHistoryComponent.html":{},"components/TestAccountComponent.html":{},"miscellaneous/variables.html":{}}}],["editor'},{'name",{"_index":351,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["editor.component",{"_index":557,"title":{},"body":{"modules/AppModule.html":{}}}],["editor.component.ts",{"_index":1931,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["editor/scenario",{"_index":556,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["editor/story",{"_index":590,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editrepobutton",{"_index":303,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["effectiveness",{"_index":1742,"title":{},"body":{"components/TermsComponent.html":{}}}],["efforts",{"_index":1823,"title":{},"body":{"components/TermsComponent.html":{}}}],["elem._id",{"_index":1085,"title":{},"body":{"components/LoginComponent.html":{}}}],["elem.source",{"_index":1083,"title":{},"body":{"components/LoginComponent.html":{}}}],["element",{"_index":312,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["element[column",{"_index":944,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["elementref",{"_index":829,"title":{},"body":{"components/EditableComponent.html":{},"directives/FocusableDirective.html":{}}}],["ellipsis",{"_index":1571,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["em",{"_index":1391,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["email",{"_index":37,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/TermsComponent.html":{},"interfaces/User.html":{}}}],["emaillabel",{"_index":242,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["emails",{"_index":1670,"title":{},"body":{"components/TermsComponent.html":{}}}],["emiter",{"_index":1313,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["emits",{"_index":900,"title":{},"body":{"components/ExampleTableComponent.html":{},"components/StoriesBarComponent.html":{}}}],["emitter",{"_index":894,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["empty",{"_index":2032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emptybackground",{"_index":1938,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["enable",{"_index":667,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/EditableComponent.html":{}}}],["encourage",{"_index":1806,"title":{},"body":{"components/TermsComponent.html":{}}}],["end",{"_index":472,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["english",{"_index":444,"title":{},"body":{"components/AppComponent.html":{}}}],["enter",{"_index":1114,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["enter.directive",{"_index":580,"title":{},"body":{"modules/AppModule.html":{}}}],["enter.directive.ts",{"_index":863,"title":{},"body":{"directives/EditableOnEnterDirective.html":{},"coverage.html":{}}}],["enter.directive.ts:21",{"_index":867,"title":{},"body":{"directives/EditableOnEnterDirective.html":{}}}],["enters",{"_index":868,"title":{},"body":{"directives/EditableOnEnterDirective.html":{}}}],["entitled",{"_index":1783,"title":{},"body":{"components/TermsComponent.html":{}}}],["entries",{"_index":922,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["entrycomponents",{"_index":545,"title":{},"body":{"modules/AppModule.html":{}}}],["environment",{"_index":1940,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["erase",{"_index":1794,"title":{},"body":{"components/TermsComponent.html":{}}}],["erasure",{"_index":1793,"title":{},"body":{"components/TermsComponent.html":{}}}],["err",{"_index":430,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["err.error",{"_index":432,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["error",{"_index":379,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["event",{"_index":132,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/DeleteScenarioToast.html":{},"components/ExampleTableComponent.html":{},"components/ParentComponent.html":{},"components/ReportHistoryComponent.html":{},"components/RunTestToast.html":{},"components/TestAccountComponent.html":{}}}],["event.stoppropagation",{"_index":778,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["eventemitter",{"_index":804,"title":{},"body":{"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{}}}],["events",{"_index":755,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["example",{"_index":332,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/StepDefinition.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"directives/ViewModeDirective.html":{}}}],["examples",{"_index":1456,"title":{},"body":{"interfaces/StepDefinition.html":{}}}],["exampletablecomponent",{"_index":331,"title":{"components/ExampleTableComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["examplethere",{"_index":879,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["execute",{"_index":1450,"title":{},"body":{"interfaces/Scenario.html":{},"index.html":{}}}],["executed",{"_index":1270,"title":{},"body":{"interfaces/Report.html":{}}}],["exercise",{"_index":1777,"title":{},"body":{"components/TermsComponent.html":{}}}],["existing",{"_index":1102,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["expand",{"_index":1654,"title":{},"body":{"components/TermsComponent.html":{}}}],["expendable",{"_index":480,"title":{},"body":{"components/AppComponent.html":{}}}],["experience",{"_index":1720,"title":{},"body":{"components/TermsComponent.html":{}}}],["export",{"_index":127,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interfaces/Background.html":{},"interfaces/Block.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"interfaces/ReportContainer.html":{},"components/ReportHistoryComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"interfaces/StepType.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"interfaces/User.html":{},"directives/ViewModeDirective.html":{}}}],["exports",{"_index":538,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["express",{"_index":1961,"title":{},"body":{"dependencies.html":{}}}],["expressionchangedafterithasbeencheckederror",{"_index":997,"title":{},"body":{"components/LoginComponent.html":{}}}],["extends",{"_index":716,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{},"components/TestAccountComponent.html":{}}}],["f1f1f1",{"_index":1577,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["false",{"_index":409,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":293,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ExampleTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TermsComponent.html":{}}}],["feature",{"_index":1266,"title":{},"body":{"interfaces/Report.html":{}}}],["features",{"_index":1660,"title":{},"body":{"components/TermsComponent.html":{}}}],["fee",{"_index":1786,"title":{},"body":{"components/TermsComponent.html":{}}}],["feedback",{"_index":440,"title":{},"body":{"components/AppComponent.html":{},"components/FeedbackComponent.html":{},"miscellaneous/variables.html":{}}}],["feedback'},{'name",{"_index":335,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["feedback.component.css",{"_index":952,"title":{},"body":{"components/FeedbackComponent.html":{}}}],["feedback.component.html",{"_index":953,"title":{},"body":{"components/FeedbackComponent.html":{}}}],["feedback/feedback.component",{"_index":588,"title":{},"body":{"modules/AppModule.html":{}}}],["feedbackcomponent",{"_index":334,"title":{"components/FeedbackComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":1976,"title":{},"body":{"dependencies.html":{}}}],["ff69b4",{"_index":750,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["ffffff",{"_index":754,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["field",{"_index":870,"title":{},"body":{"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"interfaces/StepType.html":{}}}],["fieldname",{"_index":905,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["fields",{"_index":1472,"title":{},"body":{"interfaces/StepType.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interfaces/Background.html":{},"interfaces/Block.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"interfaces/ReportContainer.html":{},"components/ReportHistoryComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"interfaces/StepType.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"interfaces/User.html":{},"directives/ViewModeDirective.html":{},"coverage.html":{},"dependencies.html":{}}}],["files",{"_index":1674,"title":{},"body":{"components/TermsComponent.html":{},"index.html":{}}}],["fill",{"_index":1471,"title":{},"body":{"interfaces/StepType.html":{}}}],["fills",{"_index":102,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["filter",{"_index":833,"title":{},"body":{"components/EditableComponent.html":{}}}],["filters",{"_index":1320,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["filterscenarioreports",{"_index":1302,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["filterscenarioreports(scenario",{"_index":1318,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["find",{"_index":1671,"title":{},"body":{"components/TermsComponent.html":{}}}],["first",{"_index":1100,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/StepType.html":{}}}],["fixed",{"_index":513,"title":{},"body":{"components/AppComponent.html":{}}}],["flag",{"_index":2008,"title":{},"body":{"index.html":{}}}],["flex",{"_index":266,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ReportHistoryComponent.html":{}}}],["float",{"_index":502,"title":{},"body":{"components/AppComponent.html":{},"components/StoriesBarComponent.html":{}}}],["focues",{"_index":962,"title":{},"body":{"directives/FocusableDirective.html":{}}}],["focusable",{"_index":958,"title":{},"body":{"directives/FocusableDirective.html":{}}}],["focusable]'},{'name",{"_index":365,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["focusabledirective",{"_index":364,"title":{"directives/FocusableDirective.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["following",{"_index":1545,"title":{},"body":{"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{}}}],["follows",{"_index":1675,"title":{},"body":{"components/TermsComponent.html":{}}}],["font",{"_index":247,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{}}}],["footer",{"_index":421,"title":{},"body":{"components/AppComponent.html":{},"components/StoriesBarComponent.html":{}}}],["footer.scrollintoview",{"_index":424,"title":{},"body":{"components/AppComponent.html":{}}}],["footercenter",{"_index":478,"title":{},"body":{"components/AppComponent.html":{}}}],["forgot",{"_index":1124,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["form",{"_index":680,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["form.value.email",{"_index":1062,"title":{},"body":{"components/LoginComponent.html":{}}}],["form.value.password",{"_index":1063,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["form.value.password).topromise",{"_index":688,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{}}}],["form.value.stayloggedin",{"_index":1065,"title":{},"body":{"components/LoginComponent.html":{}}}],["formarray",{"_index":919,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["format",{"_index":1265,"title":{},"body":{"interfaces/Report.html":{}}}],["formcontrol",{"_index":908,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["formgroup",{"_index":929,"title":{},"body":{"components/ExampleTableComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"miscellaneous/variables.html":{}}}],["formsmodule",{"_index":565,"title":{},"body":{"modules/AppModule.html":{}}}],["formular",{"_index":693,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["found",{"_index":1761,"title":{},"body":{"components/TermsComponent.html":{}}}],["fraud",{"_index":1673,"title":{},"body":{"components/TermsComponent.html":{}}}],["fromevent",{"_index":831,"title":{},"body":{"components/EditableComponent.html":{}}}],["fromevent(document",{"_index":852,"title":{},"body":{"components/EditableComponent.html":{}}}],["fromevent(this.element",{"_index":846,"title":{},"body":{"components/EditableComponent.html":{}}}],["frontend.herokuapp.com",{"_index":1605,"title":{},"body":{"components/TermsComponent.html":{}}}],["fully",{"_index":1781,"title":{},"body":{"components/TermsComponent.html":{}}}],["functionality",{"_index":1661,"title":{},"body":{"components/TermsComponent.html":{}}}],["further",{"_index":1122,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["gap",{"_index":203,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["gathering",{"_index":1707,"title":{},"body":{"components/TermsComponent.html":{}}}],["gdpr",{"_index":1778,"title":{},"body":{"components/TermsComponent.html":{}}}],["geladen",{"_index":955,"title":{},"body":{"components/FeedbackComponent.html":{}}}],["general",{"_index":510,"title":{},"body":{"components/AppComponent.html":{},"components/TermsComponent.html":{}}}],["generate",{"_index":2000,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1989,"title":{},"body":{"index.html":{}}}],["generator",{"_index":1709,"title":{},"body":{"components/TermsComponent.html":{}}}],["german",{"_index":443,"title":{},"body":{"components/AppComponent.html":{}}}],["getcontrol",{"_index":882,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["getcontrol(rowindex",{"_index":903,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["getcurrentview",{"_index":825,"title":{},"body":{"components/EditableComponent.html":{}}}],["getelement",{"_index":822,"title":{},"body":{"components/EditableComponent.html":{}}}],["getreport",{"_index":1276,"title":{},"body":{"components/ReportComponent.html":{}}}],["getreport(reportname",{"_index":1278,"title":{},"body":{"components/ReportComponent.html":{}}}],["getreports",{"_index":1303,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["getrepositories",{"_index":382,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["gets",{"_index":388,"title":{},"body":{"components/AppComponent.html":{},"components/EditableComponent.html":{},"components/ReportComponent.html":{}}}],["getsortedstories",{"_index":1480,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["getstories(repository",{"_index":1194,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["getting",{"_index":1986,"title":{"index.html":{}},"body":{}}],["github",{"_index":19,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"interfaces/User.html":{}}}],["github['login",{"_index":186,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["github[\\'login",{"_index":315,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["githubaccountname",{"_index":1888,"title":{},"body":{"interfaces/User.html":{}}}],["githubhref",{"_index":527,"title":{},"body":{"components/AppComponent.html":{}}}],["githubhref:hover",{"_index":528,"title":{},"body":{"components/AppComponent.html":{}}}],["githublogin",{"_index":262,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{}}}],["githublogincontainer",{"_index":270,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{}}}],["githubrepo",{"_index":1889,"title":{},"body":{"interfaces/User.html":{}}}],["githubtoken",{"_index":1887,"title":{},"body":{"interfaces/User.html":{}}}],["given",{"_index":652,"title":{},"body":{"interfaces/Background.html":{},"components/LoginComponent.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepType.html":{}}}],["go",{"_index":2016,"title":{},"body":{"index.html":{}}}],["gobacktostoryeditor",{"_index":1304,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["grape",{"_index":508,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ReportHistoryComponent.html":{}}}],["gray",{"_index":946,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["green",{"_index":1384,"title":{},"body":{"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{}}}],["grey",{"_index":259,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ParentComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["grid",{"_index":195,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["grid_customrepos",{"_index":230,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["grid_eraseaccount",{"_index":232,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["grid_github",{"_index":235,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["grid_githubrepos",{"_index":237,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["grid_jira",{"_index":238,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["grid_jirarepos",{"_index":240,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["grid_seedtest",{"_index":219,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["guard",{"_index":634,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"overview.html":{}}}],["guardians",{"_index":1808,"title":{},"body":{"components/TermsComponent.html":{}}}],["guards",{"_index":635,"title":{},"body":{"guards/AuthGuard.html":{}}}],["guards/auth.guard",{"_index":569,"title":{},"body":{"modules/AppModule.html":{}}}],["guide",{"_index":1812,"title":{},"body":{"components/TermsComponent.html":{}}}],["h1",{"_index":245,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["h2",{"_index":253,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["hammerjs",{"_index":1965,"title":{},"body":{"dependencies.html":{}}}],["handle",{"_index":64,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{}}}],["handles",{"_index":807,"title":{},"body":{"components/EditableComponent.html":{}}}],["hashed",{"_index":1886,"title":{},"body":{"interfaces/User.html":{}}}],["header",{"_index":1565,"title":{},"body":{"components/StoriesBarComponent.html":{},"interceptors/TimeoutInterceptor.html":{}}}],["headerfont",{"_index":692,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["headline",{"_index":1393,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["height",{"_index":276,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{}}}],["help",{"_index":441,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"index.html":{}}}],["here",{"_index":1125,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["hereby",{"_index":1631,"title":{},"body":{"components/TermsComponent.html":{}}}],["hesitate",{"_index":1618,"title":{},"body":{"components/TermsComponent.html":{}}}],["hidden",{"_index":751,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{}}}],["higher",{"_index":1467,"title":{},"body":{"interfaces/StepType.html":{}}}],["history",{"_index":1179,"title":{},"body":{"components/ParentComponent.html":{},"interfaces/ReportContainer.html":{},"components/ReportHistoryComponent.html":{},"components/TestAccountComponent.html":{}}}],["history'},{'name",{"_index":346,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["history.component",{"_index":621,"title":{},"body":{"modules/AppModule.html":{}}}],["history.component.css",{"_index":1299,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["history.component.html",{"_index":1300,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["history.component.ts",{"_index":1298,"title":{},"body":{"components/ReportHistoryComponent.html":{},"coverage.html":{}}}],["history.component.ts:105",{"_index":1315,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["history.component.ts:120",{"_index":1335,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["history.component.ts:132",{"_index":1325,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["history.component.ts:21",{"_index":1337,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["history.component.ts:26",{"_index":1336,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["history.component.ts:32",{"_index":1312,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["history.component.ts:48",{"_index":1311,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["history.component.ts:58",{"_index":1322,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["history.component.ts:70",{"_index":1319,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["history.component.ts:79",{"_index":1327,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["history.component.ts:86",{"_index":1323,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["history.component.ts:95",{"_index":1332,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["history/report",{"_index":620,"title":{},"body":{"modules/AppModule.html":{},"components/ReportHistoryComponent.html":{},"coverage.html":{}}}],["host",{"_index":749,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/RunTestToast.html":{},"interfaces/User.html":{}}}],["hosting",{"_index":1680,"title":{},"body":{"components/TermsComponent.html":{}}}],["hostlistener",{"_index":869,"title":{},"body":{"directives/EditableOnEnterDirective.html":{}}}],["hostlistener('keyup.enter",{"_index":871,"title":{},"body":{"directives/EditableOnEnterDirective.html":{}}}],["hostlisteners",{"_index":865,"title":{},"body":{"directives/EditableOnEnterDirective.html":{}}}],["howtostart",{"_index":1128,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["html",{"_index":311,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["htmlbuttonelement).innerhtml",{"_index":159,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["htmlelement",{"_index":422,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["htmliframeelement",{"_index":1287,"title":{},"body":{"components/ReportComponent.html":{}}}],["htmllinkelement",{"_index":169,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["http://localhost:4200",{"_index":1996,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":559,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclientmodule",{"_index":558,"title":{},"body":{"modules/AppModule.html":{}}}],["httpevent",{"_index":1873,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["httphandler",{"_index":1865,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["httpinterceptor",{"_index":1874,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["httprequest",{"_index":1863,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["https://github.com",{"_index":172,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["https://github.com/adessoag/seed",{"_index":446,"title":{},"body":{"components/AppComponent.html":{}}}],["https://seed",{"_index":1604,"title":{},"body":{"components/TermsComponent.html":{}}}],["https://stackoverflow.com/questions/45938931/default",{"_index":1857,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["id",{"_index":38,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Block.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"interfaces/Report.html":{},"interfaces/RepositoryContainer.html":{},"interfaces/StepType.html":{},"interfaces/Story.html":{},"interfaces/User.html":{}}}],["id).subscribe((resp",{"_index":1056,"title":{},"body":{"components/LoginComponent.html":{}}}],["identifiable",{"_index":1698,"title":{},"body":{"components/TermsComponent.html":{}}}],["identifier",{"_index":1895,"title":{},"body":{"coverage.html":{}}}],["if(!localstorage.getitem('url_backend",{"_index":1283,"title":{},"body":{"components/ReportComponent.html":{}}}],["if(!this.apiservice.urlreceived",{"_index":416,"title":{},"body":{"components/AppComponent.html":{}}}],["if(a.issue_number",{"_index":1524,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["if(elem.value",{"_index":1082,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(params.reportname",{"_index":1282,"title":{},"body":{"components/ReportComponent.html":{}}}],["if(resp.length",{"_index":1081,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(this.apiservice.urlreceived",{"_index":1191,"title":{},"body":{"components/ParentComponent.html":{}}}],["if(this.router.url",{"_index":433,"title":{},"body":{"components/AppComponent.html":{}}}],["if(this.showimpressum",{"_index":425,"title":{},"body":{"components/AppComponent.html":{}}}],["if(this.showterms",{"_index":420,"title":{},"body":{"components/AppComponent.html":{}}}],["if(userid",{"_index":1048,"title":{},"body":{"components/LoginComponent.html":{}}}],["iframe",{"_index":956,"title":{},"body":{"components/FeedbackComponent.html":{},"components/ReportComponent.html":{}}}],["iframe.srcdoc",{"_index":1290,"title":{},"body":{"components/ReportComponent.html":{}}}],["ignore",{"_index":162,"title":{},"body":{"components/AccountManagementComponent.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"directives/ViewModeDirective.html":{}}}],["image0",{"_index":1005,"title":{},"body":{"components/LoginComponent.html":{}}}],["image01",{"_index":1009,"title":{},"body":{"components/LoginComponent.html":{}}}],["image02",{"_index":1012,"title":{},"body":{"components/LoginComponent.html":{}}}],["image03",{"_index":1015,"title":{},"body":{"components/LoginComponent.html":{}}}],["image04",{"_index":1018,"title":{},"body":{"components/LoginComponent.html":{}}}],["image05",{"_index":1021,"title":{},"body":{"components/LoginComponent.html":{}}}],["image06",{"_index":1024,"title":{},"body":{"components/LoginComponent.html":{}}}],["image07",{"_index":1027,"title":{},"body":{"components/LoginComponent.html":{}}}],["image08",{"_index":1030,"title":{},"body":{"components/LoginComponent.html":{}}}],["image09",{"_index":1033,"title":{},"body":{"components/LoginComponent.html":{}}}],["image10",{"_index":1036,"title":{},"body":{"components/LoginComponent.html":{}}}],["image11",{"_index":1039,"title":{},"body":{"components/LoginComponent.html":{}}}],["img",{"_index":273,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{}}}],["immediately",{"_index":1821,"title":{},"body":{"components/TermsComponent.html":{}}}],["implements",{"_index":23,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{}}}],["import",{"_index":120,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interfaces/Background.html":{},"interfaces/Block.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"interfaces/ReportContainer.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"directives/ViewModeDirective.html":{}}}],["importance",{"_index":1465,"title":{},"body":{"interfaces/StepType.html":{}}}],["important",{"_index":284,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["imports",{"_index":622,"title":{},"body":{"modules/AppModule.html":{}}}],["impressum",{"_index":394,"title":{},"body":{"components/AppComponent.html":{}}}],["impressum:hover",{"_index":483,"title":{},"body":{"components/AppComponent.html":{}}}],["impressumcontent",{"_index":486,"title":{},"body":{"components/AppComponent.html":{}}}],["improve",{"_index":1652,"title":{},"body":{"components/TermsComponent.html":{}}}],["inaccurate",{"_index":1790,"title":{},"body":{"components/TermsComponent.html":{}}}],["include",{"_index":1684,"title":{},"body":{"components/TermsComponent.html":{}}}],["included",{"_index":654,"title":{},"body":{"interfaces/Background.html":{},"interfaces/Block.html":{},"interfaces/Report.html":{},"interfaces/ReportContainer.html":{}}}],["includes",{"_index":1543,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["including",{"_index":17,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/TermsComponent.html":{}}}],["incomplete",{"_index":1792,"title":{},"body":{"components/TermsComponent.html":{}}}],["index",{"_index":33,"title":{"index.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/Background.html":{},"interfaces/Block.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"interfaces/ReportContainer.html":{},"components/ReportHistoryComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"interfaces/StepType.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["individual",{"_index":1758,"title":{},"body":{"components/TermsComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interfaces/Background.html":{},"interfaces/Block.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"interfaces/ReportContainer.html":{},"components/ReportHistoryComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"interfaces/StepType.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"interfaces/User.html":{},"directives/ViewModeDirective.html":{}}}],["infoicon",{"_index":1251,"title":{},"body":{"components/RegistrationComponent.html":{},"components/StoriesBarComponent.html":{}}}],["information",{"_index":457,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/TermsComponent.html":{}}}],["inherit",{"_index":501,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["inherited",{"_index":1838,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["init",{"_index":810,"title":{},"body":{"components/EditableComponent.html":{},"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["initializes",{"_index":910,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["initializetable",{"_index":883,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["initializetablecontrols",{"_index":884,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["inject",{"_index":1871,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["injectable",{"_index":643,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/TimeoutInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["injectiontoken",{"_index":1872,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["injectiontoken('defaulttimeout",{"_index":1875,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["inline",{"_index":512,"title":{},"body":{"components/AppComponent.html":{},"components/StoriesBarComponent.html":{}}}],["input",{"_index":706,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/ExampleTableComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"interfaces/StepType.html":{}}}],["input.wrongemail",{"_index":708,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{}}}],["inputchange",{"_index":885,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["inputs",{"_index":888,"title":{},"body":{"components/ExampleTableComponent.html":{},"components/ReportHistoryComponent.html":{}}}],["instanceof",{"_index":133,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["instructions",{"_index":1754,"title":{},"body":{"components/TermsComponent.html":{}}}],["instructiontext",{"_index":1420,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["intercept",{"_index":1858,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["intercept(req",{"_index":1862,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["interceptor",{"_index":1852,"title":{"interceptors/TimeoutInterceptor.html":{}},"body":{"interceptors/TimeoutInterceptor.html":{},"coverage.html":{}}}],["interceptor.interceptor",{"_index":619,"title":{},"body":{"modules/AppModule.html":{}}}],["interceptor.interceptor.ts",{"_index":1855,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["interceptor.interceptor.ts:16",{"_index":1860,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["interceptor.interceptor.ts:26",{"_index":1866,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["interceptors",{"_index":1853,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["intercepts",{"_index":1867,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["interface",{"_index":647,"title":{"interfaces/Background.html":{},"interfaces/Block.html":{},"interfaces/Report.html":{},"interfaces/ReportContainer.html":{},"interfaces/RepositoryContainer.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"interfaces/StepType.html":{},"interfaces/Story.html":{},"interfaces/User.html":{}},"body":{"interfaces/Background.html":{},"interfaces/Block.html":{},"interfaces/Report.html":{},"interfaces/ReportContainer.html":{},"interfaces/RepositoryContainer.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"interfaces/StepType.html":{},"interfaces/Story.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":648,"title":{},"body":{"interfaces/Background.html":{},"interfaces/Block.html":{},"interfaces/Report.html":{},"interfaces/ReportContainer.html":{},"interfaces/RepositoryContainer.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"interfaces/StepType.html":{},"interfaces/Story.html":{},"interfaces/User.html":{},"overview.html":{}}}],["internet",{"_index":1685,"title":{},"body":{"components/TermsComponent.html":{}}}],["invalid:not(form",{"_index":703,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{}}}],["invert",{"_index":1967,"title":{},"body":{"dependencies.html":{}}}],["ip",{"_index":1687,"title":{},"body":{"components/TermsComponent.html":{}}}],["iscustomstory",{"_index":1479,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["isloadingrepositories",{"_index":968,"title":{},"body":{"components/LoginComponent.html":{}}}],["isp",{"_index":1690,"title":{},"body":{"components/TermsComponent.html":{}}}],["issaved",{"_index":1253,"title":{},"body":{"interfaces/Report.html":{}}}],["isstoryeditoractive",{"_index":1166,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["issue",{"_index":1110,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Story.html":{}}}],["issue_number",{"_index":1491,"title":{},"body":{"components/StoriesBarComponent.html":{},"interfaces/Story.html":{}}}],["italic",{"_index":947,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["item",{"_index":525,"title":{},"body":{"components/AppComponent.html":{},"components/ExampleTableComponent.html":{}}}],["items",{"_index":236,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TermsComponent.html":{}}}],["javascript",{"_index":1734,"title":{},"body":{"components/TermsComponent.html":{}}}],["jira",{"_index":20,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{},"interfaces/User.html":{}}}],["jira['accountname",{"_index":189,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["jira['host",{"_index":191,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["jira[\\'accountname",{"_index":316,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["jira[\\'host",{"_index":317,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["jiralogin",{"_index":45,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["jquery",{"_index":1970,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":1955,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":1264,"title":{},"body":{"interfaces/Report.html":{}}}],["json.parse(json.stringify(this.reports",{"_index":1359,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["jsonreport",{"_index":1254,"title":{},"body":{"interfaces/Report.html":{}}}],["justify",{"_index":268,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/ReportHistoryComponent.html":{},"components/TestAccountComponent.html":{}}}],["k",{"_index":938,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["karma",{"_index":2013,"title":{},"body":{"index.html":{}}}],["keep",{"_index":1373,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["kept",{"_index":1538,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["keyframes",{"_index":745,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["keyup.enter",{"_index":866,"title":{},"body":{"directives/EditableOnEnterDirective.html":{}}}],["kind",{"_index":1819,"title":{},"body":{"components/TermsComponent.html":{}}}],["klavika",{"_index":294,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ExampleTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TermsComponent.html":{}}}],["know",{"_index":1759,"title":{},"body":{"components/TermsComponent.html":{}}}],["knowingly",{"_index":1814,"title":{},"body":{"components/TermsComponent.html":{}}}],["kv",{"_index":1968,"title":{},"body":{"dependencies.html":{}}}],["label",{"_index":261,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{}}}],["last",{"_index":1371,"title":{},"body":{"components/ReportHistoryComponent.html":{},"interfaces/Scenario.html":{},"interfaces/Story.html":{},"interceptors/TimeoutInterceptor.html":{},"interfaces/User.html":{}}}],["lasttestpassed",{"_index":1447,"title":{},"body":{"interfaces/Scenario.html":{},"interfaces/Story.html":{}}}],["leads",{"_index":1174,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["left",{"_index":229,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{}}}],["left:38",{"_index":1153,"title":{},"body":{"components/LoginComponent.html":{}}}],["legend",{"_index":310,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"overview.html":{}}}],["li",{"_index":523,"title":{},"body":{"components/AppComponent.html":{}}}],["liable",{"_index":451,"title":{},"body":{"components/AppComponent.html":{}}}],["licence",{"_index":455,"title":{},"body":{"components/AppComponent.html":{}}}],["licenced",{"_index":452,"title":{},"body":{"components/AppComponent.html":{}}}],["light",{"_index":459,"title":{},"body":{"components/AppComponent.html":{},"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["lightgrey",{"_index":1388,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["linkbutton",{"_index":1146,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["linkbutton:hover",{"_index":1148,"title":{},"body":{"components/LoginComponent.html":{}}}],["linked",{"_index":1696,"title":{},"body":{"components/TermsComponent.html":{}}}],["links",{"_index":1737,"title":{},"body":{"components/TermsComponent.html":{}}}],["list",{"_index":399,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ReportHistoryComponent.html":{},"interfaces/StepType.html":{},"components/TermsComponent.html":{}}}],["literal",{"_index":1884,"title":{},"body":{"interfaces/User.html":{}}}],["loading",{"_index":1003,"title":{},"body":{"components/LoginComponent.html":{}}}],["loadingspinner",{"_index":1076,"title":{},"body":{"components/LoginComponent.html":{}}}],["loadingspinner.scrollintoview",{"_index":1078,"title":{},"body":{"components/LoginComponent.html":{}}}],["loads",{"_index":1837,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["loadstories",{"_index":1168,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["localstorage.getitem('id",{"_index":1075,"title":{},"body":{"components/LoginComponent.html":{},"components/ParentComponent.html":{}}}],["localstorage.getitem('repository",{"_index":1073,"title":{},"body":{"components/LoginComponent.html":{},"components/ParentComponent.html":{}}}],["localstorage.getitem('source",{"_index":1074,"title":{},"body":{"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/StoriesBarComponent.html":{}}}],["localstorage.getitem('userid",{"_index":1046,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["localstorage.getitem('version",{"_index":1513,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["localstorage.removeitem('userid",{"_index":1047,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["localstorage.setitem('id",{"_index":177,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["localstorage.setitem('login",{"_index":1044,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.setitem('repository",{"_index":174,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["localstorage.setitem('repositorytype",{"_index":1060,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.setitem('source",{"_index":175,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["localstorage.setitem('userid",{"_index":139,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["log",{"_index":1410,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/TermsComponent.html":{}}}],["logged",{"_index":638,"title":{},"body":{"guards/AuthGuard.html":{}}}],["loggs",{"_index":78,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["login",{"_index":46,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["login'},{'name",{"_index":337,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["login(form",{"_index":989,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.css",{"_index":966,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":967,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":564,"title":{},"body":{"modules/AppModule.html":{}}}],["logincomponent",{"_index":336,"title":{"components/LoginComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["loginfont",{"_index":1144,"title":{},"body":{"components/LoginComponent.html":{}}}],["logingithubtoken",{"_index":982,"title":{},"body":{"components/LoginComponent.html":{}}}],["logingithubtoken(login",{"_index":991,"title":{},"body":{"components/LoginComponent.html":{}}}],["logingrid",{"_index":1127,"title":{},"body":{"components/LoginComponent.html":{}}}],["logintestaccount",{"_index":983,"title":{},"body":{"components/LoginComponent.html":{}}}],["logo",{"_index":490,"title":{},"body":{"components/AppComponent.html":{}}}],["logout",{"_index":383,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Scenario.html":{}}}],["long",{"_index":691,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{},"interceptors/TimeoutInterceptor.html":{}}}],["longer",{"_index":1374,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["lower",{"_index":1466,"title":{},"body":{"interfaces/StepType.html":{}}}],["made",{"_index":1636,"title":{},"body":{"components/TermsComponent.html":{}}}],["mail",{"_index":1099,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["main",{"_index":1607,"title":{},"body":{"components/TermsComponent.html":{}}}],["maintain",{"_index":1650,"title":{},"body":{"components/TermsComponent.html":{}}}],["make",{"_index":1112,"title":{},"body":{"components/LoginComponent.html":{},"components/TermsComponent.html":{},"interceptors/TimeoutInterceptor.html":{}}}],["maker",{"_index":450,"title":{},"body":{"components/AppComponent.html":{}}}],["makes",{"_index":1868,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["manage",{"_index":184,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management",{"_index":28,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/TermsComponent.html":{},"miscellaneous/variables.html":{}}}],["management'},{'name",{"_index":318,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["management.component",{"_index":591,"title":{},"body":{"modules/AppModule.html":{}}}],["management.component.css",{"_index":30,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.html",{"_index":32,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts",{"_index":12,"title":{},"body":{"components/AccountManagementComponent.html":{},"coverage.html":{}}}],["management.component.ts:105",{"_index":101,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:138",{"_index":75,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:147",{"_index":81,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:156",{"_index":93,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:21",{"_index":116,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:26",{"_index":119,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:31",{"_index":109,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:36",{"_index":110,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:41",{"_index":112,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:46",{"_index":55,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:53",{"_index":108,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:67",{"_index":80,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:75",{"_index":88,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:82",{"_index":77,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:89",{"_index":67,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management.component.ts:97",{"_index":105,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["management/account",{"_index":11,"title":{},"body":{"components/AccountManagementComponent.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["margin",{"_index":194,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["marine",{"_index":292,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{}}}],["mark",{"_index":1376,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["marked",{"_index":1262,"title":{},"body":{"interfaces/Report.html":{}}}],["marketing",{"_index":1667,"title":{},"body":{"components/TermsComponent.html":{}}}],["master",{"_index":375,"title":{},"body":{"components/AppComponent.html":{}}}],["mat",{"_index":950,"title":{},"body":{"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{}}}],["matcarouselmodule",{"_index":608,"title":{},"body":{"modules/AppModule.html":{}}}],["matcarouselmodule.forroot",{"_index":624,"title":{},"body":{"modules/AppModule.html":{}}}],["match",{"_index":1220,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":372,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interfaces/Background.html":{},"interfaces/Block.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"interfaces/ReportContainer.html":{},"components/ReportHistoryComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"interfaces/StepType.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"interfaces/User.html":{},"directives/ViewModeDirective.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["matlistmodule",{"_index":572,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressspinnermodule",{"_index":597,"title":{},"body":{"modules/AppModule.html":{}}}],["mattablemodule",{"_index":570,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":301,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["measure",{"_index":1741,"title":{},"body":{"components/TermsComponent.html":{}}}],["media",{"_index":307,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["menu",{"_index":437,"title":{},"body":{"components/AppComponent.html":{}}}],["menubutton",{"_index":499,"title":{},"body":{"components/AppComponent.html":{}}}],["menubutton:hover",{"_index":496,"title":{},"body":{"components/AppComponent.html":{}}}],["menuselection",{"_index":503,"title":{},"body":{"components/AppComponent.html":{}}}],["menuselection#logout:hover",{"_index":507,"title":{},"body":{"components/AppComponent.html":{}}}],["menuselection:hover",{"_index":506,"title":{},"body":{"components/AppComponent.html":{}}}],["message",{"_index":723,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{},"components/TermsComponent.html":{}}}],["metadata",{"_index":25,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"directives/ViewModeDirective.html":{}}}],["methods",{"_index":42,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{}}}],["mid",{"_index":1460,"title":{},"body":{"interfaces/StepType.html":{}}}],["milliseconds",{"_index":1268,"title":{},"body":{"interfaces/Report.html":{}}}],["miminum",{"_index":1416,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["min",{"_index":465,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["minmax(0",{"_index":1200,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["miscellaneous",{"_index":2024,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":454,"title":{},"body":{"components/AppComponent.html":{}}}],["modal",{"_index":69,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/StoriesBarComponent.html":{}}}],["modalcomponent",{"_index":39,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["modals",{"_index":118,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/StoriesBarComponent.html":{}}}],["modals'},{'name",{"_index":338,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["modals/modals.component",{"_index":126,"title":{},"body":{"components/AccountManagementComponent.html":{},"modules/AppModule.html":{},"components/StoriesBarComponent.html":{}}}],["modalscomponent",{"_index":113,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mode",{"_index":784,"title":{},"body":{"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"interfaces/Report.html":{}}}],["mode.directive",{"_index":578,"title":{},"body":{"modules/AppModule.html":{},"components/EditableComponent.html":{}}}],["mode.directive.ts",{"_index":782,"title":{},"body":{"directives/EditModeDirective.html":{},"directives/ViewModeDirective.html":{},"coverage.html":{}}}],["model/report",{"_index":1339,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["model/reportcontainer",{"_index":1340,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["model/repositorycontainer",{"_index":125,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TestAccountComponent.html":{}}}],["model/scenario",{"_index":930,"title":{},"body":{"components/ExampleTableComponent.html":{},"components/ParentComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{}}}],["model/story",{"_index":1188,"title":{},"body":{"components/ParentComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["module",{"_index":531,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"interceptors/TimeoutInterceptor.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":533,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["monitor",{"_index":1811,"title":{},"body":{"components/TermsComponent.html":{}}}],["month",{"_index":1775,"title":{},"body":{"components/TermsComponent.html":{}}}],["more",{"_index":456,"title":{},"body":{"components/AppComponent.html":{},"components/TermsComponent.html":{},"index.html":{}}}],["movement",{"_index":1706,"title":{},"body":{"components/TermsComponent.html":{}}}],["multi",{"_index":630,"title":{},"body":{"modules/AppModule.html":{},"directives/PasswordConfirmedValidatorDirective.html":{}}}],["muted",{"_index":1584,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["name",{"_index":58,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/Background.html":{},"interfaces/Block.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"interfaces/StepType.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"interfaces/User.html":{},"index.html":{}}}],["native",{"_index":824,"title":{},"body":{"components/EditableComponent.html":{},"directives/FocusableDirective.html":{}}}],["navigate",{"_index":1995,"title":{},"body":{"index.html":{}}}],["navigationend",{"_index":123,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/RegistrationComponent.html":{}}}],["navtoregistration",{"_index":47,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["necessary",{"_index":732,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["need",{"_index":181,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["needcustomrepo",{"_index":244,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["needed",{"_index":996,"title":{},"body":{"components/LoginComponent.html":{}}}],["networks",{"_index":1732,"title":{},"body":{"components/TermsComponent.html":{}}}],["new",{"_index":89,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newly",{"_index":1105,"title":{},"body":{"components/LoginComponent.html":{}}}],["newreports",{"_index":1358,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["newreports.scenarioreports",{"_index":1364,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["newreports.scenarioreports.filter((rep",{"_index":1365,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["newreports.storyreports",{"_index":1360,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["newreports.storyreports.filter((rep",{"_index":1361,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["newrepository",{"_index":48,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["newselectedscenario",{"_index":889,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["newselectedscenario(scenario",{"_index":932,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["newselectedstory",{"_index":1309,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["newselectedstory(story",{"_index":1341,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["next",{"_index":1864,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["next.handle(req).pipe(timeout(timeoutvaluenumeric",{"_index":1882,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["ng",{"_index":586,"title":{},"body":{"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"dependencies.html":{},"index.html":{}}}],["ng_validators",{"_index":1209,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{}}}],["ngafterviewinit",{"_index":960,"title":{},"body":{"directives/FocusableDirective.html":{},"components/LoginComponent.html":{}}}],["ngbmodule",{"_index":585,"title":{},"body":{"modules/AppModule.html":{}}}],["ngbmodule/material",{"_index":609,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ngform",{"_index":677,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["ngmodule",{"_index":551,"title":{},"body":{"modules/AppModule.html":{}}}],["ngondestroy",{"_index":842,"title":{},"body":{"components/EditableComponent.html":{},"components/StoriesBarComponent.html":{}}}],["ngoninit",{"_index":163,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["ngx",{"_index":593,"title":{},"body":{"modules/AppModule.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/RegistrationComponent.html":{},"components/RunTestToast.html":{},"dependencies.html":{}}}],["noaccount",{"_index":1145,"title":{},"body":{"components/LoginComponent.html":{}}}],["noaccountdiv",{"_index":1149,"title":{},"body":{"components/LoginComponent.html":{}}}],["node",{"_index":1975,"title":{},"body":{"dependencies.html":{}}}],["noemail",{"_index":215,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["none",{"_index":265,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/DeleteScenarioToast.html":{},"components/LoginComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{}}}],["normal",{"_index":949,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["normalbutton",{"_index":1572,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["note",{"_index":1744,"title":{},"body":{"components/TermsComponent.html":{}}}],["notpassed",{"_index":1585,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["now",{"_index":86,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{}}}],["nowrap",{"_index":1570,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["null",{"_index":1223,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{},"components/ReportHistoryComponent.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":904,"title":{},"body":{"components/ExampleTableComponent.html":{},"interfaces/Report.html":{},"components/ReportHistoryComponent.html":{},"interfaces/Scenario.html":{},"interfaces/StepType.html":{},"interfaces/Story.html":{},"components/TermsComponent.html":{},"interceptors/TimeoutInterceptor.html":{}}}],["number(timeoutvalue",{"_index":1881,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["object",{"_index":111,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Block.html":{},"interfaces/Report.html":{},"interfaces/RepositoryContainer.html":{},"interfaces/StepType.html":{},"interfaces/Story.html":{},"components/TermsComponent.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":1870,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["observe",{"_index":1809,"title":{},"body":{"components/TermsComponent.html":{}}}],["occurs",{"_index":1740,"title":{},"body":{"components/TermsComponent.html":{}}}],["ocean",{"_index":217,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{}}}],["offline",{"_index":1628,"title":{},"body":{"components/TermsComponent.html":{}}}],["ondestroy",{"_index":792,"title":{},"body":{"components/EditableComponent.html":{},"components/StoriesBarComponent.html":{}}}],["one",{"_index":1606,"title":{},"body":{"components/TermsComponent.html":{}}}],["onenter",{"_index":872,"title":{},"body":{"directives/EditableOnEnterDirective.html":{}}}],["oninit",{"_index":24,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["online",{"_index":1621,"title":{},"body":{"components/TermsComponent.html":{}}}],["opacity",{"_index":764,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["open",{"_index":448,"title":{},"body":{"components/AppComponent.html":{}}}],["opencreatenewscenariomodal",{"_index":1481,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["openimpressum",{"_index":384,"title":{},"body":{"components/AppComponent.html":{}}}],["opens",{"_index":68,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/StoriesBarComponent.html":{}}}],["openterms",{"_index":385,"title":{},"body":{"components/AppComponent.html":{}}}],["operate",{"_index":1649,"title":{},"body":{"components/TermsComponent.html":{}}}],["opt",{"_index":1755,"title":{},"body":{"components/TermsComponent.html":{}}}],["optimize",{"_index":1719,"title":{},"body":{"components/TermsComponent.html":{}}}],["optional",{"_index":60,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/Background.html":{},"interfaces/Block.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"interfaces/StepType.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{}}}],["options",{"_index":1255,"title":{},"body":{"interfaces/Report.html":{},"components/TermsComponent.html":{}}}],["ordered",{"_index":1468,"title":{},"body":{"interfaces/StepType.html":{}}}],["organization",{"_index":1801,"title":{},"body":{"components/TermsComponent.html":{}}}],["out",{"_index":390,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DeleteScenarioToast.html":{},"components/LoginComponent.html":{},"components/ReportHistoryComponent.html":{},"components/RunTestToast.html":{},"components/TermsComponent.html":{},"index.html":{},"overview.html":{}}}],["outdated",{"_index":1461,"title":{},"body":{"interfaces/StepType.html":{}}}],["outline",{"_index":494,"title":{},"body":{"components/AppComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{}}}],["outline:0",{"_index":283,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["output",{"_index":830,"title":{},"body":{"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{}}}],["outputs",{"_index":800,"title":{},"body":{"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{}}}],["over",{"_index":1746,"title":{},"body":{"components/TermsComponent.html":{}}}],["overflow",{"_index":519,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{}}}],["overview",{"_index":2021,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":657,"title":{},"body":{"interfaces/Block.html":{}}}],["p",{"_index":482,"title":{},"body":{"components/AppComponent.html":{}}}],["package",{"_index":1943,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":192,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["page",{"_index":84,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/TermsComponent.html":{}}}],["pages",{"_index":1693,"title":{},"body":{"components/TermsComponent.html":{}}}],["param",{"_index":129,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{}}}],["parameters",{"_index":56,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["params.code",{"_index":1041,"title":{},"body":{"components/LoginComponent.html":{}}}],["params.uuid",{"_index":685,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{}}}],["parent",{"_index":1163,"title":{},"body":{"components/ParentComponent.html":{},"miscellaneous/variables.html":{}}}],["parent'},{'name",{"_index":340,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["parent.component.css",{"_index":1164,"title":{},"body":{"components/ParentComponent.html":{}}}],["parent.component.html",{"_index":1165,"title":{},"body":{"components/ParentComponent.html":{}}}],["parent/parent.component",{"_index":563,"title":{},"body":{"modules/AppModule.html":{},"components/TestAccountComponent.html":{}}}],["parent/parent.component.css",{"_index":1833,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["parent/parent.component.html",{"_index":1834,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["parentcomponent",{"_index":339,"title":{"components/ParentComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["parentcomponent:20",{"_index":1849,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["parentcomponent:25",{"_index":1848,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["parentcomponent:30",{"_index":1847,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["parentcomponent:35",{"_index":1846,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["parentcomponent:41",{"_index":1845,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["parentcomponent:55",{"_index":1840,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["parentcomponent:62",{"_index":1839,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["parentcomponent:78",{"_index":1843,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["parentcomponent:86",{"_index":1842,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["parentcomponent:94",{"_index":1841,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["parents",{"_index":1807,"title":{},"body":{"components/TermsComponent.html":{}}}],["parseint(elem.scenarioid",{"_index":1346,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["part",{"_index":1682,"title":{},"body":{"components/TermsComponent.html":{}}}],["participate",{"_index":1810,"title":{},"body":{"components/TermsComponent.html":{}}}],["partners",{"_index":1664,"title":{},"body":{"components/TermsComponent.html":{}}}],["party",{"_index":1729,"title":{},"body":{"components/TermsComponent.html":{}}}],["passed",{"_index":1582,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["password",{"_index":668,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["password'},{'name",{"_index":324,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["password.component",{"_index":613,"title":{},"body":{"modules/AppModule.html":{}}}],["password.component.css",{"_index":669,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.html",{"_index":670,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["password.component.ts",{"_index":666,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:20",{"_index":682,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{}}}],["password.component.ts:21",{"_index":1406,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:25",{"_index":675,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{}}}],["password.component.ts:33",{"_index":1405,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:34",{"_index":681,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{}}}],["password.component.ts:43",{"_index":1403,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:46",{"_index":678,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{}}}],["password.value",{"_index":1226,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{},"miscellaneous/variables.html":{}}}],["password/confirm",{"_index":614,"title":{},"body":{"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"coverage.html":{}}}],["password/reset",{"_index":612,"title":{},"body":{"modules/AppModule.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["passwordconfirmed",{"_index":1228,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{},"miscellaneous/variables.html":{}}}],["passwordconfirmedvalidator",{"_index":1222,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["passwordconfirmedvalidator(control",{"_index":1229,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{}}}],["passwordconfirmedvalidatordirective",{"_index":366,"title":{"directives/PasswordConfirmedValidatorDirective.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["passwordlengthinfo",{"_index":696,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{}}}],["passwords",{"_index":1206,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{}}}],["path",{"_index":2033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["per",{"_index":1372,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["personal",{"_index":1633,"title":{},"body":{"components/TermsComponent.html":{}}}],["personalize",{"_index":1653,"title":{},"body":{"components/TermsComponent.html":{}}}],["personally",{"_index":1697,"title":{},"body":{"components/TermsComponent.html":{}}}],["phone",{"_index":1642,"title":{},"body":{"components/TermsComponent.html":{}}}],["pieces",{"_index":1772,"title":{},"body":{"components/TermsComponent.html":{}}}],["pink",{"_index":326,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["place",{"_index":694,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["please",{"_index":1248,"title":{},"body":{"components/RegistrationComponent.html":{},"components/TermsComponent.html":{}}}],["point",{"_index":1638,"title":{},"body":{"components/TermsComponent.html":{}}}],["pointer",{"_index":281,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/DeleteScenarioToast.html":{},"components/ReportHistoryComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{}}}],["policies",{"_index":1725,"title":{},"body":{"components/TermsComponent.html":{}}}],["policy",{"_index":1602,"title":{},"body":{"components/TermsComponent.html":{}}}],["portability",{"_index":1798,"title":{},"body":{"components/TermsComponent.html":{}}}],["position",{"_index":477,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteScenarioToast.html":{},"components/LoginComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{}}}],["possibly",{"_index":1694,"title":{},"body":{"components/TermsComponent.html":{}}}],["practices",{"_index":1753,"title":{},"body":{"components/TermsComponent.html":{}}}],["pre",{"_index":1462,"title":{},"body":{"interfaces/StepType.html":{}}}],["preferences",{"_index":1715,"title":{},"body":{"components/TermsComponent.html":{}}}],["preservewhitespaces",{"_index":717,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["press",{"_index":1417,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["prevent",{"_index":1672,"title":{},"body":{"components/TermsComponent.html":{}}}],["priorities",{"_index":1608,"title":{},"body":{"components/TermsComponent.html":{}}}],["priority",{"_index":1803,"title":{},"body":{"components/TermsComponent.html":{}}}],["privacy",{"_index":1601,"title":{},"body":{"components/TermsComponent.html":{}}}],["private",{"_index":645,"title":{},"body":{"guards/AuthGuard.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/EditableComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["procedure",{"_index":1677,"title":{},"body":{"components/TermsComponent.html":{}}}],["processing",{"_index":1797,"title":{},"body":{"components/TermsComponent.html":{}}}],["prod",{"_index":2007,"title":{},"body":{"index.html":{}}}],["production",{"_index":2009,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["products",{"_index":1658,"title":{},"body":{"components/TermsComponent.html":{}}}],["project",{"_index":90,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{},"index.html":{}}}],["projects",{"_index":18,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["promotional",{"_index":1668,"title":{},"body":{"components/TermsComponent.html":{}}}],["promptly",{"_index":1824,"title":{},"body":{"components/TermsComponent.html":{}}}],["properties",{"_index":34,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"interfaces/Background.html":{},"interfaces/Block.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"interfaces/ReportContainer.html":{},"components/ReportHistoryComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"interfaces/StepType.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TestAccountComponent.html":{},"interfaces/User.html":{}}}],["protected",{"_index":776,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{},"interceptors/TimeoutInterceptor.html":{}}}],["protection",{"_index":1779,"title":{},"body":{"components/TermsComponent.html":{}}}],["protocol",{"_index":1686,"title":{},"body":{"components/TermsComponent.html":{}}}],["protractor",{"_index":2015,"title":{},"body":{"index.html":{}}}],["provide",{"_index":628,"title":{},"body":{"modules/AppModule.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/TermsComponent.html":{}}}],["provided",{"_index":1818,"title":{},"body":{"components/TermsComponent.html":{}}}],["provider",{"_index":1689,"title":{},"body":{"components/TermsComponent.html":{}}}],["providers",{"_index":537,"title":{},"body":{"modules/AppModule.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"overview.html":{}}}],["provides",{"_index":463,"title":{},"body":{"components/AppComponent.html":{}}}],["public",{"_index":35,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/ReportComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["purpose",{"_index":1699,"title":{},"body":{"components/TermsComponent.html":{}}}],["purposes",{"_index":1669,"title":{},"body":{"components/TermsComponent.html":{}}}],["questions",{"_index":1616,"title":{},"body":{"components/TermsComponent.html":{}}}],["radius",{"_index":698,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{}}}],["reactiveformsmodule",{"_index":566,"title":{},"body":{"modules/AppModule.html":{}}}],["read",{"_index":1723,"title":{},"body":{"components/TermsComponent.html":{}}}],["readme",{"_index":2017,"title":{},"body":{"index.html":{}}}],["reasons",{"_index":1635,"title":{},"body":{"components/TermsComponent.html":{}}}],["receive",{"_index":1418,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/TermsComponent.html":{}}}],["received",{"_index":1594,"title":{},"body":{"interfaces/Story.html":{}}}],["recommended",{"_index":1546,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["recorded",{"_index":1614,"title":{},"body":{"components/TermsComponent.html":{}}}],["records",{"_index":1826,"title":{},"body":{"components/TermsComponent.html":{}}}],["rectification",{"_index":1787,"title":{},"body":{"components/TermsComponent.html":{}}}],["red",{"_index":1386,"title":{},"body":{"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{}}}],["redirects",{"_index":82,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["redirecttoregister",{"_index":1401,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["ref",{"_index":168,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["ref.href",{"_index":171,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["refactor",{"_index":458,"title":{},"body":{"components/AppComponent.html":{}}}],["referring/exit",{"_index":1692,"title":{},"body":{"components/TermsComponent.html":{}}}],["regarded",{"_index":1321,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["regards",{"_index":1623,"title":{},"body":{"components/TermsComponent.html":{}}}],["register",{"_index":83,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TermsComponent.html":{},"miscellaneous/variables.html":{}}}],["registered",{"_index":1247,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registering.alternatively",{"_index":1093,"title":{},"body":{"components/LoginComponent.html":{}}}],["registers",{"_index":1237,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registeruser",{"_index":1234,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registeruser(form",{"_index":1235,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registration",{"_index":1231,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registration'},{'name",{"_index":342,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["registration.component.css",{"_index":1232,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registration.component.html",{"_index":1233,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registration/registration.component",{"_index":601,"title":{},"body":{"modules/AppModule.html":{}}}],["registrationcomponent",{"_index":341,"title":{"components/RegistrationComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["relating",{"_index":1666,"title":{},"body":{"components/TermsComponent.html":{}}}],["relative",{"_index":511,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteScenarioToast.html":{},"components/LoginComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{}}}],["reload",{"_index":1997,"title":{},"body":{"index.html":{}}}],["remove",{"_index":1825,"title":{},"body":{"components/TermsComponent.html":{}}}],["removed",{"_index":774,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/ExampleTableComponent.html":{},"components/RunTestToast.html":{}}}],["removes",{"_index":76,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["rep._id",{"_index":1362,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["repeat(4",{"_index":1199,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["repo_img",{"_index":300,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["repobutton",{"_index":526,"title":{},"body":{"components/AppComponent.html":{}}}],["report",{"_index":103,"title":{"interfaces/Report.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"interfaces/ReportContainer.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{}}}],["report'},{'name",{"_index":344,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["report._id",{"_index":1363,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["report.component.css",{"_index":1273,"title":{},"body":{"components/ReportComponent.html":{}}}],["report.component.html",{"_index":1274,"title":{},"body":{"components/ReportComponent.html":{}}}],["report.issaved",{"_index":1366,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["report/:reportname",{"_index":2034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["report/report.component",{"_index":600,"title":{},"body":{"modules/AppModule.html":{}}}],["reportbuttons",{"_index":1389,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["reportcomponent",{"_index":343,"title":{"components/ReportComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["reportcontainer",{"_index":1291,"title":{"interfaces/ReportContainer.html":{}},"body":{"interfaces/ReportContainer.html":{},"components/ReportHistoryComponent.html":{},"coverage.html":{}}}],["reporthistorycomponent",{"_index":345,"title":{"components/ReportHistoryComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["reporthistorycontainer",{"_index":1382,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["reporthistorytitlecontainer",{"_index":1395,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["reportname",{"_index":1256,"title":{},"body":{"interfaces/Report.html":{},"components/ReportComponent.html":{}}}],["reportreceived",{"_index":1275,"title":{},"body":{"components/ReportComponent.html":{}}}],["reports",{"_index":1295,"title":{},"body":{"interfaces/ReportContainer.html":{},"components/ReportHistoryComponent.html":{},"miscellaneous/variables.html":{}}}],["reportsheader",{"_index":1397,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["reporttime",{"_index":1257,"title":{},"body":{"interfaces/Report.html":{}}}],["repositories",{"_index":40,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["repositorieslist",{"_index":1088,"title":{},"body":{"components/LoginComponent.html":{}}}],["repositorieslist.scrollintoview",{"_index":1090,"title":{},"body":{"components/LoginComponent.html":{}}}],["repository",{"_index":95,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Block.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/TestAccountComponent.html":{},"interfaces/User.html":{}}}],["repository._id",{"_index":1086,"title":{},"body":{"components/LoginComponent.html":{}}}],["repository.source",{"_index":1084,"title":{},"body":{"components/LoginComponent.html":{}}}],["repository.value",{"_index":183,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["repositorycontainer",{"_index":92,"title":{"interfaces/RepositoryContainer.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/ResetPasswordComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{}}}],["repositoryid",{"_index":658,"title":{},"body":{"interfaces/Block.html":{}}}],["repositorylist",{"_index":1143,"title":{},"body":{"components/LoginComponent.html":{}}}],["reps",{"_index":1330,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["reps.sort((a",{"_index":1348,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["req",{"_index":1423,"title":{},"body":{"components/ResetPasswordComponent.html":{},"interceptors/TimeoutInterceptor.html":{}}}],["req.headers.get('timeout",{"_index":1878,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["request",{"_index":683,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TermsComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["requestreset",{"_index":1402,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["requestreset(form",{"_index":1404,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["requests",{"_index":1176,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{}}}],["require",{"_index":1617,"title":{},"body":{"components/TermsComponent.html":{}}}],["required",{"_index":1126,"title":{},"body":{"components/LoginComponent.html":{}}}],["requirements",{"_index":1534,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["reset",{"_index":323,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["resetpassword",{"_index":2035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resetpasswordcomponent",{"_index":347,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["resetpasswordconfirm",{"_index":2036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resp",{"_index":428,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["resp.error",{"_index":1043,"title":{},"body":{"components/LoginComponent.html":{}}}],["resp.id",{"_index":1053,"title":{},"body":{"components/LoginComponent.html":{}}}],["resp.id).subscribe((respo",{"_index":1051,"title":{},"body":{"components/LoginComponent.html":{}}}],["resp.login",{"_index":1050,"title":{},"body":{"components/LoginComponent.html":{}}}],["resp.message",{"_index":1058,"title":{},"body":{"components/LoginComponent.html":{}}}],["resp.repository",{"_index":1059,"title":{},"body":{"components/LoginComponent.html":{}}}],["resp.status",{"_index":1057,"title":{},"body":{"components/LoginComponent.html":{}}}],["respective",{"_index":1735,"title":{},"body":{"components/TermsComponent.html":{}}}],["respond",{"_index":1776,"title":{},"body":{"components/TermsComponent.html":{}}}],["response",{"_index":1066,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["response.error",{"_index":1242,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["response.error.message",{"_index":1244,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["response.error.status",{"_index":1243,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["response.message",{"_index":1070,"title":{},"body":{"components/LoginComponent.html":{}}}],["response.status",{"_index":1069,"title":{},"body":{"components/LoginComponent.html":{}}}],["restrict",{"_index":1796,"title":{},"body":{"components/TermsComponent.html":{}}}],["result",{"_index":371,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interfaces/Background.html":{},"interfaces/Block.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"interfaces/ReportContainer.html":{},"components/ReportHistoryComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"interfaces/StepType.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"interfaces/User.html":{},"directives/ViewModeDirective.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":373,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interfaces/Background.html":{},"interfaces/Block.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"interfaces/ReportContainer.html":{},"components/ReportHistoryComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"interfaces/StepType.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"interfaces/User.html":{},"directives/ViewModeDirective.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["retrieved",{"_index":405,"title":{},"body":{"components/AppComponent.html":{}}}],["retrieves",{"_index":392,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{}}}],["retrieving",{"_index":402,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["return",{"_index":646,"title":{},"body":{"guards/AuthGuard.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":73,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{}}}],["rgb(109",{"_index":1559,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["rgb(228",{"_index":711,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{}}}],["rgb(247",{"_index":1151,"title":{},"body":{"components/LoginComponent.html":{}}}],["rgb(255",{"_index":207,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["rgba(0,0,0,0.08",{"_index":1554,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["rgba(0,0,0,0.2",{"_index":517,"title":{},"body":{"components/AppComponent.html":{}}}],["rgba(153",{"_index":255,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["right",{"_index":239,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{}}}],["rightbutton",{"_index":491,"title":{},"body":{"components/AppComponent.html":{}}}],["rightbutton:hover",{"_index":495,"title":{},"body":{"components/AppComponent.html":{}}}],["rights",{"_index":1763,"title":{},"body":{"components/TermsComponent.html":{}}}],["root",{"_index":376,"title":{},"body":{"components/AppComponent.html":{}}}],["root'},{'name",{"_index":320,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["route",{"_index":673,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ReportComponent.html":{}}}],["router",{"_index":41,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["router.events.foreach((event",{"_index":131,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["router.url",{"_index":134,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["routermodule",{"_index":552,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(routes",{"_index":623,"title":{},"body":{"modules/AppModule.html":{}}}],["routes",{"_index":553,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routs",{"_index":2037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["row",{"_index":220,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["rowindex",{"_index":898,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["rows",{"_index":198,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["run",{"_index":1120,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Report.html":{},"components/RunTestToast.html":{},"interceptors/TimeoutInterceptor.html":{},"index.html":{}}}],["running",{"_index":2010,"title":{},"body":{"index.html":{}}}],["runs",{"_index":1438,"title":{},"body":{"components/RunTestToast.html":{}}}],["runsave",{"_index":611,"title":{},"body":{"modules/AppModule.html":{}}}],["runstring",{"_index":1429,"title":{},"body":{"components/RunTestToast.html":{}}}],["runtest",{"_index":1430,"title":{},"body":{"components/RunTestToast.html":{}}}],["runtest(event",{"_index":1432,"title":{},"body":{"components/RunTestToast.html":{}}}],["runtesttoast",{"_index":348,"title":{"components/RunTestToast.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["rxjs",{"_index":832,"title":{},"body":{"components/EditableComponent.html":{},"interceptors/TimeoutInterceptor.html":{}}}],["rxjs/internal/subscription",{"_index":1509,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["rxjs/operators",{"_index":836,"title":{},"body":{"components/EditableComponent.html":{},"interceptors/TimeoutInterceptor.html":{}}}],["s.issue_number",{"_index":1547,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["s.issue_number}}.{{c+1",{"_index":1549,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["s.title",{"_index":1548,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["same",{"_index":1207,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{}}}],["sans",{"_index":295,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ExampleTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TermsComponent.html":{}}}],["sass",{"_index":1978,"title":{},"body":{"dependencies.html":{}}}],["save",{"_index":1103,"title":{},"body":{"components/LoginComponent.html":{},"components/RunTestToast.html":{}}}],["saveandruntest",{"_index":1431,"title":{},"body":{"components/RunTestToast.html":{}}}],["saveandruntest(event",{"_index":1435,"title":{},"body":{"components/RunTestToast.html":{}}}],["saved",{"_index":650,"title":{},"body":{"interfaces/Background.html":{},"components/ExampleTableComponent.html":{},"interfaces/Report.html":{},"components/ReportHistoryComponent.html":{},"interfaces/Scenario.html":{}}}],["saver",{"_index":1963,"title":{},"body":{"dependencies.html":{}}}],["savereport",{"_index":1305,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["savereport(report",{"_index":1324,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["savereport(report._id",{"_index":1368,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["saverunstring",{"_index":1428,"title":{},"body":{"components/RunTestToast.html":{}}}],["saves",{"_index":1437,"title":{},"body":{"components/RunTestToast.html":{}}}],["saving",{"_index":1434,"title":{},"body":{"components/RunTestToast.html":{}}}],["scaffolding",{"_index":1999,"title":{},"body":{"index.html":{}}}],["scen.name",{"_index":1380,"title":{},"body":{"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{}}}],["scenario",{"_index":350,"title":{"interfaces/Scenario.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{}}}],["scenario.scenario_id",{"_index":1347,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["scenario_id",{"_index":1448,"title":{},"body":{"interfaces/Scenario.html":{}}}],["scenariochosen",{"_index":1484,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["scenarioeditorcomponent",{"_index":349,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["scenarioid",{"_index":1258,"title":{},"body":{"interfaces/Report.html":{}}}],["scenariolistitem",{"_index":1578,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["scenariolistitem:hover",{"_index":1579,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["scenarioreports",{"_index":1293,"title":{},"body":{"interfaces/ReportContainer.html":{}}}],["scenarios",{"_index":1296,"title":{},"body":{"interfaces/ReportContainer.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{}}}],["schemas",{"_index":546,"title":{},"body":{"modules/AppModule.html":{}}}],["screen",{"_index":308,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["section",{"_index":395,"title":{},"body":{"components/AppComponent.html":{}}}],["sectionheader",{"_index":1387,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["see",{"_index":1002,"title":{},"body":{"components/LoginComponent.html":{},"components/TermsComponent.html":{}}}],["seed",{"_index":71,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/TermsComponent.html":{}}}],["seen",{"_index":936,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["seen.add(k",{"_index":940,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["seen.has(k",{"_index":939,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["select",{"_index":1104,"title":{},"body":{"components/LoginComponent.html":{}}}],["selected",{"_index":927,"title":{},"body":{"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/ReportHistoryComponent.html":{},"interfaces/Scenario.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["selectedscenario",{"_index":880,"title":{},"body":{"components/ExampleTableComponent.html":{},"components/ParentComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["selectedstory",{"_index":1167,"title":{},"body":{"components/ParentComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["selection",{"_index":1463,"title":{},"body":{"interfaces/StepType.html":{}}}],["selector",{"_index":26,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"directives/ViewModeDirective.html":{}}}],["selectrepository",{"_index":49,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["selectrepository(userrepository",{"_index":91,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["selects",{"_index":94,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/StoriesBarComponent.html":{}}}],["selectscenario",{"_index":1482,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["selectscenario(scenario",{"_index":1495,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["selectstoryscenario",{"_index":1483,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["selectstoryscenario(story",{"_index":1497,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["self",{"_index":471,"title":{},"body":{"components/AppComponent.html":{}}}],["sell",{"_index":1764,"title":{},"body":{"components/TermsComponent.html":{}}}],["sells",{"_index":1774,"title":{},"body":{"components/TermsComponent.html":{}}}],["send",{"_index":679,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/TermsComponent.html":{}}}],["sent",{"_index":1738,"title":{},"body":{"components/TermsComponent.html":{}}}],["sentences",{"_index":1540,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["serif",{"_index":296,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ExampleTableComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TermsComponent.html":{}}}],["serve",{"_index":1993,"title":{},"body":{"index.html":{}}}],["server",{"_index":190,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["servers",{"_index":1731,"title":{},"body":{"components/TermsComponent.html":{}}}],["service",{"_index":63,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/TermsComponent.html":{},"dependencies.html":{}}}],["services",{"_index":1659,"title":{},"body":{"components/TermsComponent.html":{}}}],["services/api.service",{"_index":122,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["services/timeout",{"_index":618,"title":{},"body":{"modules/AppModule.html":{}}}],["set",{"_index":931,"title":{},"body":{"components/ExampleTableComponent.html":{},"components/ReportHistoryComponent.html":{},"dependencies.html":{}}}],["seteditor",{"_index":1169,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["seteditor(event",{"_index":1177,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["setnewselectedscenario(scenario",{"_index":928,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["setnewselectedstory(story",{"_index":1338,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["sets",{"_index":892,"title":{},"body":{"components/ExampleTableComponent.html":{},"components/ParentComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/TestAccountComponent.html":{}}}],["setselectedscenario",{"_index":1170,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["setselectedscenario(scenario",{"_index":1180,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["setselectedstory",{"_index":1171,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["setselectedstory(story",{"_index":1182,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["settimeout",{"_index":1087,"title":{},"body":{"components/LoginComponent.html":{}}}],["settings",{"_index":180,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{}}}],["several",{"_index":1544,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["shadow",{"_index":515,"title":{},"body":{"components/AppComponent.html":{},"components/StoriesBarComponent.html":{}}}],["shared",{"_index":1624,"title":{},"body":{"components/TermsComponent.html":{}}}],["short",{"_index":1539,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["show",{"_index":14,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ReportComponent.html":{}}}],["showimpressum",{"_index":380,"title":{},"body":{"components/AppComponent.html":{}}}],["shown",{"_index":411,"title":{},"body":{"components/AppComponent.html":{},"components/ExampleTableComponent.html":{},"components/ParentComponent.html":{},"interfaces/StepType.html":{},"components/TestAccountComponent.html":{}}}],["showterms",{"_index":381,"title":{},"body":{"components/AppComponent.html":{}}}],["similar",{"_index":1596,"title":{},"body":{"interfaces/Story.html":{}}}],["simple",{"_index":1541,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["site",{"_index":1703,"title":{},"body":{"components/TermsComponent.html":{}}}],["size",{"_index":248,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{}}}],["skewx",{"_index":769,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["skewx(20deg",{"_index":771,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["skewx(30deg",{"_index":775,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["slide0",{"_index":969,"title":{},"body":{"components/LoginComponent.html":{}}}],["slide01",{"_index":970,"title":{},"body":{"components/LoginComponent.html":{}}}],["slide02",{"_index":971,"title":{},"body":{"components/LoginComponent.html":{}}}],["slide03",{"_index":972,"title":{},"body":{"components/LoginComponent.html":{}}}],["slide04",{"_index":973,"title":{},"body":{"components/LoginComponent.html":{}}}],["slide05",{"_index":974,"title":{},"body":{"components/LoginComponent.html":{}}}],["slide06",{"_index":975,"title":{},"body":{"components/LoginComponent.html":{}}}],["slide07",{"_index":976,"title":{},"body":{"components/LoginComponent.html":{}}}],["slide08",{"_index":977,"title":{},"body":{"components/LoginComponent.html":{}}}],["slide09",{"_index":978,"title":{},"body":{"components/LoginComponent.html":{}}}],["slide10",{"_index":979,"title":{},"body":{"components/LoginComponent.html":{}}}],["slide11",{"_index":980,"title":{},"body":{"components/LoginComponent.html":{}}}],["slidedescription",{"_index":1139,"title":{},"body":{"components/LoginComponent.html":{}}}],["slides",{"_index":1008,"title":{},"body":{"components/LoginComponent.html":{}}}],["small",{"_index":475,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{}}}],["smaller",{"_index":1574,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["software",{"_index":1535,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["solid",{"_index":213,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{}}}],["sortreportstime",{"_index":1306,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["sortreportstime(reps",{"_index":1326,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["sorts",{"_index":1328,"title":{},"body":{"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interfaces/Background.html":{},"interfaces/Block.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"interfaces/ReportContainer.html":{},"components/ReportHistoryComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"interfaces/StepType.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"interfaces/User.html":{},"directives/ViewModeDirective.html":{},"index.html":{}}}],["sources",{"_index":22,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["space",{"_index":305,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{}}}],["span.notpassed",{"_index":1587,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["span.passed",{"_index":1586,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["span[rel=def",{"_index":1557,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["specific",{"_index":907,"title":{},"body":{"components/ExampleTableComponent.html":{},"components/TermsComponent.html":{},"interceptors/TimeoutInterceptor.html":{}}}],["specified",{"_index":1869,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["specify",{"_index":1856,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["spinner",{"_index":599,"title":{},"body":{"modules/AppModule.html":{}}}],["src/.../environment.prod.ts",{"_index":2028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../password",{"_index":2030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../routes.ts",{"_index":2031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../story",{"_index":2027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../timeout",{"_index":2026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/account",{"_index":10,"title":{},"body":{"components/AccountManagementComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts",{"_index":374,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:102",{"_index":398,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:119",{"_index":389,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:19",{"_index":403,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":410,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":412,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:34",{"_index":386,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:41",{"_index":400,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:53",{"_index":391,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:63",{"_index":396,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:75",{"_index":393,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:87",{"_index":387,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":544,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/confirm",{"_index":665,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/deletescenario",{"_index":713,"title":{},"body":{"components/DeleteScenarioToast.html":{},"coverage.html":{}}}],["src/app/directives/edit",{"_index":781,"title":{},"body":{"directives/EditModeDirective.html":{},"directives/EditableOnEnterDirective.html":{},"coverage.html":{}}}],["src/app/directives/password",{"_index":1204,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/directives/view",{"_index":1891,"title":{},"body":{"directives/ViewModeDirective.html":{},"coverage.html":{}}}],["src/app/editable/editable.component.ts",{"_index":789,"title":{},"body":{"components/EditableComponent.html":{},"coverage.html":{}}}],["src/app/editable/editable.component.ts:19",{"_index":821,"title":{},"body":{"components/EditableComponent.html":{}}}],["src/app/editable/editable.component.ts:20",{"_index":818,"title":{},"body":{"components/EditableComponent.html":{}}}],["src/app/editable/editable.component.ts:21",{"_index":805,"title":{},"body":{"components/EditableComponent.html":{}}}],["src/app/editable/editable.component.ts:23",{"_index":814,"title":{},"body":{"components/EditableComponent.html":{}}}],["src/app/editable/editable.component.ts:24",{"_index":816,"title":{},"body":{"components/EditableComponent.html":{}}}],["src/app/editable/editable.component.ts:26",{"_index":819,"title":{},"body":{"components/EditableComponent.html":{}}}],["src/app/editable/editable.component.ts:36",{"_index":808,"title":{},"body":{"components/EditableComponent.html":{}}}],["src/app/editable/editable.component.ts:49",{"_index":811,"title":{},"body":{"components/EditableComponent.html":{}}}],["src/app/editable/editable.component.ts:57",{"_index":823,"title":{},"body":{"components/EditableComponent.html":{}}}],["src/app/editable/editable.component.ts:64",{"_index":812,"title":{},"body":{"components/EditableComponent.html":{}}}],["src/app/editable/editable.component.ts:76",{"_index":806,"title":{},"body":{"components/EditableComponent.html":{}}}],["src/app/editable/editable.component.ts:90",{"_index":826,"title":{},"body":{"components/EditableComponent.html":{}}}],["src/app/editable/focusable.directive.ts",{"_index":957,"title":{},"body":{"directives/FocusableDirective.html":{},"coverage.html":{}}}],["src/app/editable/focusable.directive.ts:19",{"_index":961,"title":{},"body":{"directives/FocusableDirective.html":{}}}],["src/app/example",{"_index":874,"title":{},"body":{"components/ExampleTableComponent.html":{},"coverage.html":{}}}],["src/app/feedback/feedback.component.ts",{"_index":951,"title":{},"body":{"components/FeedbackComponent.html":{},"coverage.html":{}}}],["src/app/guards/auth.guard.ts",{"_index":636,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/guards/auth.guard.ts:23",{"_index":641,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/guards/auth.guard.ts:9",{"_index":640,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/login/login.component.ts",{"_index":964,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:117",{"_index":990,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:139",{"_index":994,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:148",{"_index":987,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:188",{"_index":998,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:20",{"_index":1004,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:200",{"_index":988,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:25",{"_index":1000,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:30",{"_index":1001,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:35",{"_index":1007,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:36",{"_index":1011,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:37",{"_index":1014,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:38",{"_index":1017,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:39",{"_index":1020,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:40",{"_index":1023,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:41",{"_index":1026,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:42",{"_index":1029,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:43",{"_index":1032,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:44",{"_index":1035,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:45",{"_index":1038,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:46",{"_index":986,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:56",{"_index":999,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:82",{"_index":995,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:97",{"_index":992,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modals/modals.component.ts",{"_index":1916,"title":{},"body":{"coverage.html":{}}}],["src/app/model/background.ts",{"_index":649,"title":{},"body":{"interfaces/Background.html":{},"coverage.html":{}}}],["src/app/model/block.ts",{"_index":655,"title":{},"body":{"interfaces/Block.html":{},"coverage.html":{}}}],["src/app/model/report.ts",{"_index":1252,"title":{},"body":{"interfaces/Report.html":{},"coverage.html":{}}}],["src/app/model/reportcontainer.ts",{"_index":1292,"title":{},"body":{"interfaces/ReportContainer.html":{},"coverage.html":{}}}],["src/app/model/repositorycontainer.ts",{"_index":1398,"title":{},"body":{"interfaces/RepositoryContainer.html":{},"coverage.html":{}}}],["src/app/model/scenario.ts",{"_index":1444,"title":{},"body":{"interfaces/Scenario.html":{},"coverage.html":{}}}],["src/app/model/stepdefinition.ts",{"_index":1453,"title":{},"body":{"interfaces/StepDefinition.html":{},"coverage.html":{}}}],["src/app/model/stepdefinitionbackground.ts",{"_index":1457,"title":{},"body":{"interfaces/StepDefinitionBackground.html":{},"coverage.html":{}}}],["src/app/model/steptype.ts",{"_index":1458,"title":{},"body":{"interfaces/StepType.html":{},"coverage.html":{}}}],["src/app/model/story.ts",{"_index":1588,"title":{},"body":{"interfaces/Story.html":{},"coverage.html":{}}}],["src/app/model/user.ts",{"_index":1883,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/parent/parent.component.ts",{"_index":1160,"title":{},"body":{"components/ParentComponent.html":{},"coverage.html":{}}}],["src/app/parent/parent.component.ts:20",{"_index":1187,"title":{},"body":{"components/ParentComponent.html":{}}}],["src/app/parent/parent.component.ts:25",{"_index":1186,"title":{},"body":{"components/ParentComponent.html":{}}}],["src/app/parent/parent.component.ts:30",{"_index":1185,"title":{},"body":{"components/ParentComponent.html":{}}}],["src/app/parent/parent.component.ts:35",{"_index":1172,"title":{},"body":{"components/ParentComponent.html":{}}}],["src/app/parent/parent.component.ts:41",{"_index":1184,"title":{},"body":{"components/ParentComponent.html":{}}}],["src/app/parent/parent.component.ts:55",{"_index":1175,"title":{},"body":{"components/ParentComponent.html":{}}}],["src/app/parent/parent.component.ts:62",{"_index":1173,"title":{},"body":{"components/ParentComponent.html":{}}}],["src/app/parent/parent.component.ts:78",{"_index":1183,"title":{},"body":{"components/ParentComponent.html":{}}}],["src/app/parent/parent.component.ts:86",{"_index":1181,"title":{},"body":{"components/ParentComponent.html":{}}}],["src/app/parent/parent.component.ts:94",{"_index":1178,"title":{},"body":{"components/ParentComponent.html":{}}}],["src/app/registration/registration.component.ts",{"_index":1230,"title":{},"body":{"components/RegistrationComponent.html":{},"coverage.html":{}}}],["src/app/registration/registration.component.ts:21",{"_index":1238,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/registration/registration.component.ts:38",{"_index":1236,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/report",{"_index":1297,"title":{},"body":{"components/ReportHistoryComponent.html":{},"coverage.html":{}}}],["src/app/report/report.component.ts",{"_index":1272,"title":{},"body":{"components/ReportComponent.html":{},"coverage.html":{}}}],["src/app/report/report.component.ts:14",{"_index":1277,"title":{},"body":{"components/ReportComponent.html":{}}}],["src/app/report/report.component.ts:22",{"_index":1280,"title":{},"body":{"components/ReportComponent.html":{}}}],["src/app/report/report.component.ts:46",{"_index":1279,"title":{},"body":{"components/ReportComponent.html":{}}}],["src/app/reset",{"_index":1400,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/routes/routes.ts",{"_index":1929,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/runsave",{"_index":1427,"title":{},"body":{"components/RunTestToast.html":{},"coverage.html":{}}}],["src/app/scenario",{"_index":1930,"title":{},"body":{"coverage.html":{}}}],["src/app/services/api.service.ts",{"_index":1897,"title":{},"body":{"coverage.html":{}}}],["src/app/services/timeout",{"_index":1854,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/stories",{"_index":1473,"title":{},"body":{"components/StoriesBarComponent.html":{},"coverage.html":{}}}],["src/app/story",{"_index":1936,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/terms/terms.component.ts",{"_index":1598,"title":{},"body":{"components/TermsComponent.html":{},"coverage.html":{}}}],["src/app/test",{"_index":1831,"title":{},"body":{"components/TestAccountComponent.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":1939,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1941,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stamp",{"_index":1691,"title":{},"body":{"components/TermsComponent.html":{}}}],["standard",{"_index":1676,"title":{},"body":{"components/TermsComponent.html":{}}}],["star",{"_index":1378,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["star_border",{"_index":1379,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["start",{"_index":481,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ReportHistoryComponent.html":{}}}],["started",{"_index":1987,"title":{"index.html":{}},"body":{}}],["state",{"_index":746,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{},"interfaces/Story.html":{}}}],["state('inactive",{"_index":763,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["statements",{"_index":1896,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":913,"title":{},"body":{"components/ExampleTableComponent.html":{},"interfaces/Report.html":{}}}],["stayloggedin",{"_index":1064,"title":{},"body":{"components/LoginComponent.html":{}}}],["step",{"_index":663,"title":{},"body":{"interfaces/Block.html":{},"components/LoginComponent.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"interfaces/StepType.html":{}}}],["stepdefinition",{"_index":662,"title":{"interfaces/StepDefinition.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"coverage.html":{}}}],["stepdefinitionbackground",{"_index":653,"title":{"interfaces/StepDefinitionBackground.html":{}},"body":{"interfaces/Background.html":{},"interfaces/StepDefinitionBackground.html":{},"coverage.html":{}}}],["stepdefinitions",{"_index":651,"title":{},"body":{"interfaces/Background.html":{},"interfaces/Block.html":{},"interfaces/Scenario.html":{},"miscellaneous/variables.html":{}}}],["steps",{"_index":1116,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"interfaces/StepType.html":{}}}],["steptype",{"_index":1455,"title":{"interfaces/StepType.html":{}},"body":{"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"interfaces/StepType.html":{},"coverage.html":{}}}],["stepwaittime",{"_index":1449,"title":{},"body":{"interfaces/Scenario.html":{}}}],["sticky",{"_index":464,"title":{},"body":{"components/AppComponent.html":{}}}],["store",{"_index":1714,"title":{},"body":{"components/TermsComponent.html":{}}}],["stored",{"_index":2004,"title":{},"body":{"index.html":{}}}],["stories",{"_index":353,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["stories.if",{"_index":1108,"title":{},"body":{"components/LoginComponent.html":{}}}],["storiesbar",{"_index":1201,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["storiesbarcomponent",{"_index":352,"title":{"components/StoriesBarComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["story",{"_index":96,"title":{"interfaces/Story.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"interfaces/ReportContainer.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["story_id",{"_index":1591,"title":{},"body":{"interfaces/Story.html":{}}}],["storychosen",{"_index":1485,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["storyeditor",{"_index":1202,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["storyeditorcomponent",{"_index":355,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{}}}],["storyheader",{"_index":1551,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["storyid",{"_index":1259,"title":{},"body":{"interfaces/Report.html":{}}}],["storyindex",{"_index":1528,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["storylist",{"_index":1552,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["storylist:hover",{"_index":1576,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["storyreports",{"_index":1294,"title":{},"body":{"interfaces/ReportContainer.html":{}}}],["storysource",{"_index":1592,"title":{},"body":{"interfaces/Story.html":{}}}],["string",{"_index":100,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"interfaces/Background.html":{},"interfaces/Block.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"interfaces/StepType.html":{},"interfaces/Story.html":{},"interfaces/User.html":{}}}],["stringifyreporttime",{"_index":1307,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["stringifyreporttime(rep.reporttime",{"_index":1377,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["stringifyreporttime(reps.reporttime",{"_index":1381,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["stringifyreporttime(time",{"_index":1331,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["stroke",{"_index":1156,"title":{},"body":{"components/LoginComponent.html":{}}}],["strongly",{"_index":1820,"title":{},"body":{"components/TermsComponent.html":{}}}],["style",{"_index":500,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteScenarioToast.html":{},"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["styleurls",{"_index":29,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["subject",{"_index":813,"title":{},"body":{"components/EditableComponent.html":{}}}],["subscribe",{"_index":849,"title":{},"body":{"components/EditableComponent.html":{}}}],["subscribe((resp",{"_index":1195,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["subscribe(_resp",{"_index":1357,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["subscribe(event",{"_index":859,"title":{},"body":{"components/EditableComponent.html":{}}}],["subscription",{"_index":1500,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["successful",{"_index":146,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Story.html":{}}}],["successfull",{"_index":1271,"title":{},"body":{"interfaces/Report.html":{},"interfaces/Scenario.html":{}}}],["such",{"_index":1641,"title":{},"body":{"components/TermsComponent.html":{}}}],["super(apiservice",{"_index":1850,"title":{},"body":{"components/TestAccountComponent.html":{}}}],["super(toastrservice",{"_index":777,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["support",{"_index":2018,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":1780,"title":{},"body":{"components/TermsComponent.html":{}}}],["svg",{"_index":2019,"title":{},"body":{"modules.html":{}}}],["switchmapto",{"_index":835,"title":{},"body":{"components/EditableComponent.html":{}}}],["switchmapto(clickoutside",{"_index":858,"title":{},"body":{"components/EditableComponent.html":{}}}],["system",{"_index":1536,"title":{},"body":{"components/StoriesBarComponent.html":{},"miscellaneous/variables.html":{}}}],["t",{"_index":1354,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["table",{"_index":785,"title":{},"body":{"directives/EditModeDirective.html":{},"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/ExampleTableComponent.html":{},"directives/FocusableDirective.html":{},"directives/ViewModeDirective.html":{},"coverage.html":{}}}],["table'},{'name",{"_index":333,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["table.component",{"_index":575,"title":{},"body":{"modules/AppModule.html":{}}}],["table.component.css",{"_index":876,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["table.component.html",{"_index":877,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["table.component.ts",{"_index":875,"title":{},"body":{"components/ExampleTableComponent.html":{},"coverage.html":{}}}],["table.component.ts:116",{"_index":915,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["table.component.ts:132",{"_index":906,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["table.component.ts:139",{"_index":918,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["table.component.ts:154",{"_index":899,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["table.component.ts:18",{"_index":923,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["table.component.ts:22",{"_index":921,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["table.component.ts:27",{"_index":920,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["table.component.ts:32",{"_index":926,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["table.component.ts:37",{"_index":925,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["table.component.ts:43",{"_index":893,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["table.component.ts:59",{"_index":891,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["table.component.ts:67",{"_index":912,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["table.component.ts:74",{"_index":911,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["table.component.ts:99",{"_index":909,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["table/example",{"_index":574,"title":{},"body":{"modules/AppModule.html":{},"components/ExampleTableComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1942,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":1111,"title":{},"body":{"components/LoginComponent.html":{}}}],["take",{"_index":834,"title":{},"body":{"components/EditableComponent.html":{},"dependencies.html":{}}}],["take(1",{"_index":856,"title":{},"body":{"components/EditableComponent.html":{}}}],["target",{"_index":854,"title":{},"body":{"components/EditableComponent.html":{}}}],["team",{"_index":185,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["technologies",{"_index":1733,"title":{},"body":{"components/TermsComponent.html":{}}}],["telephone",{"_index":1646,"title":{},"body":{"components/TermsComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["templateref",{"_index":787,"title":{},"body":{"directives/EditModeDirective.html":{},"directives/ViewModeDirective.html":{}}}],["templateurl",{"_index":31,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["terms",{"_index":397,"title":{},"body":{"components/AppComponent.html":{},"components/TermsComponent.html":{},"miscellaneous/variables.html":{}}}],["terms'},{'name",{"_index":357,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["terms.component.css",{"_index":1599,"title":{},"body":{"components/TermsComponent.html":{}}}],["terms.component.html",{"_index":1600,"title":{},"body":{"components/TermsComponent.html":{}}}],["terms/terms.component",{"_index":589,"title":{},"body":{"modules/AppModule.html":{}}}],["terms:hover",{"_index":484,"title":{},"body":{"components/AppComponent.html":{}}}],["termscomponent",{"_index":356,"title":{"components/TermsComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["termscontent",{"_index":487,"title":{},"body":{"components/AppComponent.html":{}}}],["test",{"_index":72,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"index.html":{}}}],["test!usually",{"_index":1117,"title":{},"body":{"components/LoginComponent.html":{}}}],["test's",{"_index":1748,"title":{},"body":{"components/TermsComponent.html":{}}}],["test@adesso.de",{"_index":445,"title":{},"body":{"components/AppComponent.html":{}}}],["test\\'s",{"_index":1828,"title":{},"body":{"components/TermsComponent.html":{}}}],["testaccount",{"_index":1851,"title":{},"body":{"components/TestAccountComponent.html":{},"miscellaneous/variables.html":{}}}],["testaccountcomponent",{"_index":358,"title":{"components/TestAccountComponent.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["tests",{"_index":2012,"title":{},"body":{"index.html":{}}}],["teststatus",{"_index":1260,"title":{},"body":{"interfaces/Report.html":{}}}],["text",{"_index":224,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/StepType.html":{},"components/StoriesBarComponent.html":{}}}],["think",{"_index":1817,"title":{},"body":{"components/TermsComponent.html":{}}}],["third",{"_index":1728,"title":{},"body":{"components/TermsComponent.html":{}}}],["this.apiservice",{"_index":1193,"title":{},"body":{"components/ParentComponent.html":{},"components/ReportHistoryComponent.html":{},"components/TestAccountComponent.html":{}}}],["this.apiservice.confirmreset(this.uuid",{"_index":687,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{}}}],["this.apiservice.createcustomstoryemitter.subscribe(custom",{"_index":1516,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["this.apiservice.createstory(custom.story.title",{"_index":1517,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["this.apiservice.deletescenarioemitter",{"_index":779,"title":{},"body":{"components/DeleteScenarioToast.html":{}}}],["this.apiservice.disconnectgithub().subscribe((resp",{"_index":164,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["this.apiservice.getbackendinfo",{"_index":417,"title":{},"body":{"components/AppComponent.html":{},"components/ParentComponent.html":{}}}],["this.apiservice.getbackendinfo().then((value",{"_index":1284,"title":{},"body":{"components/ReportComponent.html":{}}}],["this.apiservice.getbackendurlevent.subscribe",{"_index":1189,"title":{},"body":{"components/ParentComponent.html":{}}}],["this.apiservice.getreport(reportname).subscribe((resp",{"_index":1286,"title":{},"body":{"components/ReportComponent.html":{}}}],["this.apiservice.getreporthistory(this.selectedstory._id).subscribe(resp",{"_index":1344,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["this.apiservice.getrepositories().subscribe",{"_index":1192,"title":{},"body":{"components/ParentComponent.html":{}}}],["this.apiservice.getrepositories().subscribe((repositories",{"_index":161,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["this.apiservice.getrepositories().subscribe((resp",{"_index":1079,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.apiservice.getrepositoriesevent.subscribe((repositories",{"_index":137,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{}}}],["this.apiservice.getstories(custom.repositorycontainer).subscribe((resp",{"_index":1521,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["this.apiservice.getstories(userrepository).subscribe((resp",{"_index":434,"title":{},"body":{"components/AppComponent.html":{}}}],["this.apiservice.getstoriesevent.subscribe(stories",{"_index":1510,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["this.apiservice.getuserdata().subscribe(user",{"_index":147,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["this.apiservice.githubcallback(params.code).subscribe(resp",{"_index":1042,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.apiservice.githublogin",{"_index":141,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{}}}],["this.apiservice.isloggedin",{"_index":426,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{}}}],["this.apiservice.logingithubtoken(login",{"_index":1055,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.apiservice.loginuser(user).topromise",{"_index":1068,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.apiservice.logoutevent.subscribe(_",{"_index":413,"title":{},"body":{"components/AppComponent.html":{}}}],["this.apiservice.logoutuser().subscribe(resp",{"_index":435,"title":{},"body":{"components/AppComponent.html":{}}}],["this.apiservice.mergeaccountgithub(userid",{"_index":1049,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.apiservice.registeruser(form.value.email",{"_index":1240,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.apiservice.requestreset(form.value.email).subscribe(res",{"_index":1407,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.apiservice.runsaveoption('run",{"_index":1441,"title":{},"body":{"components/RunTestToast.html":{}}}],["this.apiservice.runsaveoption('saverun",{"_index":1443,"title":{},"body":{"components/RunTestToast.html":{}}}],["this.cdr.detectchanges",{"_index":1054,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.changeeditor.emit",{"_index":1352,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["this.createstoryemitter",{"_index":1515,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["this.createstoryemitter.unsubscribe",{"_index":1522,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["this.daisyversion",{"_index":1514,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["this.defaulttimeout",{"_index":1879,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["this.displayedcolumns",{"_index":943,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["this.editable.toviewmode",{"_index":873,"title":{},"body":{"directives/EditableOnEnterDirective.html":{}}}],["this.editmode$.pipe",{"_index":857,"title":{},"body":{"components/EditableComponent.html":{}}}],["this.editmode.asobservable",{"_index":815,"title":{},"body":{"components/EditableComponent.html":{}}}],["this.editmode.next(true",{"_index":850,"title":{},"body":{"components/EditableComponent.html":{}}}],["this.editmodehandler",{"_index":841,"title":{},"body":{"components/EditableComponent.html":{}}}],["this.editmodetpl.tpl",{"_index":862,"title":{},"body":{"components/EditableComponent.html":{}}}],["this.element.contains(target",{"_index":855,"title":{},"body":{"components/EditableComponent.html":{}}}],["this.email",{"_index":153,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["this.error",{"_index":431,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["this.getreport(params.reportname",{"_index":1285,"title":{},"body":{"components/ReportComponent.html":{}}}],["this.getreports",{"_index":1342,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["this.getrepositories",{"_index":415,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["this.github",{"_index":155,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["this.host.nativeelement",{"_index":845,"title":{},"body":{"components/EditableComponent.html":{}}}],["this.host.nativeelement.focus",{"_index":963,"title":{},"body":{"directives/FocusableDirective.html":{}}}],["this.id",{"_index":140,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["this.iscustomstory",{"_index":1511,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["this.isloadingrepositories",{"_index":1061,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.isstoryeditoractive",{"_index":1198,"title":{},"body":{"components/ParentComponent.html":{}}}],["this.jira",{"_index":157,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["this.loadstories",{"_index":1190,"title":{},"body":{"components/ParentComponent.html":{},"components/TestAccountComponent.html":{}}}],["this.logingithubtoken(resp.login",{"_index":1052,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.logout",{"_index":414,"title":{},"body":{"components/AppComponent.html":{}}}],["this.modalcomponent.openchangejiraaccountmodal('jira",{"_index":143,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["this.modalcomponent.opencreatecustomprojectmodal",{"_index":142,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["this.modalcomponent.opendeleteaccountmodal(this.email",{"_index":144,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["this.modalcomponent.openworkgroupeditmodal(project",{"_index":145,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["this.modalscomponent.opencreatenewstorymodal",{"_index":1532,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["this.mode",{"_index":844,"title":{},"body":{"components/EditableComponent.html":{}}}],["this.remove",{"_index":780,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["this.reportreceived",{"_index":1289,"title":{},"body":{"components/ReportComponent.html":{}}}],["this.reports",{"_index":1343,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["this.reports.scenarioreports.filter((elem",{"_index":1345,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["this.repositories",{"_index":138,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["this.repositories.length",{"_index":427,"title":{},"body":{"components/AppComponent.html":{}}}],["this.route.params.subscribe((params",{"_index":1281,"title":{},"body":{"components/ReportComponent.html":{}}}],["this.route.queryparams.subscribe((params",{"_index":684,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["this.router.navigate",{"_index":179,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["this.router.navigate(['/login",{"_index":436,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.router.navigate(['/register",{"_index":166,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.router.navigate(['/testaccount",{"_index":1072,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.scenariochosen.emit(scenario",{"_index":1526,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["this.selectedscenario",{"_index":933,"title":{},"body":{"components/ExampleTableComponent.html":{},"components/ParentComponent.html":{},"components/StoriesBarComponent.html":{}}}],["this.selectedscenario.saved",{"_index":935,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["this.selectedscenario.stepdefinitions.example[0].values",{"_index":941,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["this.selectedscenario.stepdefinitions.example[0].values.filter(item",{"_index":937,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["this.selectedstory",{"_index":1197,"title":{},"body":{"components/ParentComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{}}}],["this.selectedstory.title",{"_index":1369,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["this.selectscenario(this.stories[storyindex].scenarios[0",{"_index":1531,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["this.showimpressum",{"_index":418,"title":{},"body":{"components/AppComponent.html":{}}}],["this.showterms",{"_index":419,"title":{},"body":{"components/AppComponent.html":{}}}],["this.stories",{"_index":1196,"title":{},"body":{"components/ParentComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["this.stories.indexof(this.selectedstory",{"_index":1529,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["this.stories.sort(function(a",{"_index":1523,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["this.stories[storyindex].scenarios[0",{"_index":1530,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["this.storychosen.emit(story",{"_index":1527,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["this.toastr.error(response.error.message",{"_index":1245,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.toastr.success('successfully",{"_index":1246,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.toviewmode",{"_index":860,"title":{},"body":{"components/EditableComponent.html":{}}}],["this.update.emit",{"_index":843,"title":{},"body":{"components/EditableComponent.html":{}}}],["this.updatesite('successful",{"_index":136,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["this.updatetable",{"_index":934,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["this.uuid",{"_index":686,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{}}}],["this.viewmodehandler",{"_index":840,"title":{},"body":{"components/EditableComponent.html":{}}}],["this.viewmodetpl.tpl",{"_index":861,"title":{},"body":{"components/EditableComponent.html":{}}}],["through",{"_index":1663,"title":{},"body":{"components/TermsComponent.html":{}}}],["ththe",{"_index":895,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["thus",{"_index":1750,"title":{},"body":{"components/TermsComponent.html":{}}}],["time",{"_index":1267,"title":{},"body":{"interfaces/Report.html":{},"components/ReportHistoryComponent.html":{},"interfaces/Scenario.html":{},"components/TermsComponent.html":{},"interceptors/TimeoutInterceptor.html":{}}}],["timeout",{"_index":626,"title":{},"body":{"modules/AppModule.html":{},"interceptors/TimeoutInterceptor.html":{},"miscellaneous/variables.html":{}}}],["timeoutinterceptor",{"_index":617,"title":{"interceptors/TimeoutInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/TimeoutInterceptor.html":{},"coverage.html":{}}}],["timeoutvalue",{"_index":1877,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["timeoutvaluenumeric",{"_index":1880,"title":{},"body":{"interceptors/TimeoutInterceptor.html":{}}}],["title",{"_index":722,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{}}}],["title.uk",{"_index":1583,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["titlecase",{"_index":1550,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["toast",{"_index":327,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["toast.ts",{"_index":714,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{},"coverage.html":{}}}],["toast.ts:118",{"_index":1440,"title":{},"body":{"components/RunTestToast.html":{}}}],["toast.ts:121",{"_index":742,"title":{},"body":{"components/DeleteScenarioToast.html":{}}}],["toast.ts:123",{"_index":1439,"title":{},"body":{"components/RunTestToast.html":{}}}],["toast.ts:125",{"_index":731,"title":{},"body":{"components/DeleteScenarioToast.html":{}}}],["toast.ts:136",{"_index":743,"title":{},"body":{"components/DeleteScenarioToast.html":{}}}],["toast.ts:137",{"_index":739,"title":{},"body":{"components/DeleteScenarioToast.html":{}}}],["toast.ts:141",{"_index":1433,"title":{},"body":{"components/RunTestToast.html":{}}}],["toast.ts:146",{"_index":736,"title":{},"body":{"components/DeleteScenarioToast.html":{}}}],["toast.ts:152",{"_index":1436,"title":{},"body":{"components/RunTestToast.html":{}}}],["toastpackage",{"_index":727,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["toastr",{"_index":605,"title":{},"body":{"modules/AppModule.html":{},"components/DeleteScenarioToast.html":{},"components/RegistrationComponent.html":{},"components/RunTestToast.html":{},"dependencies.html":{}}}],["toastrmodule",{"_index":604,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrmodule.forroot",{"_index":625,"title":{},"body":{"modules/AppModule.html":{}}}],["toastrservice",{"_index":730,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RegistrationComponent.html":{},"components/RunTestToast.html":{}}}],["toasts",{"_index":715,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["token",{"_index":993,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/User.html":{}}}],["top",{"_index":227,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{}}}],["topnav",{"_index":461,"title":{},"body":{"components/AppComponent.html":{}}}],["topnavcenter",{"_index":473,"title":{},"body":{"components/AppComponent.html":{}}}],["topnavright",{"_index":470,"title":{},"body":{"components/AppComponent.html":{}}}],["toviewmode",{"_index":798,"title":{},"body":{"components/EditableComponent.html":{}}}],["tpl",{"_index":788,"title":{},"body":{"directives/EditModeDirective.html":{},"directives/ViewModeDirective.html":{}}}],["tracking",{"_index":1704,"title":{},"body":{"components/TermsComponent.html":{}}}],["transfer",{"_index":1799,"title":{},"body":{"components/TermsComponent.html":{}}}],["transform",{"_index":530,"title":{},"body":{"components/AppComponent.html":{},"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["transition",{"_index":289,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/DeleteScenarioToast.html":{},"components/LoginComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{}}}],["transition('active",{"_index":773,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["transition('inactive",{"_index":765,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["translate3d(100",{"_index":768,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["translatez(0",{"_index":760,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["transparent",{"_index":299,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["trends",{"_index":1701,"title":{},"body":{"components/TermsComponent.html":{}}}],["trigger",{"_index":747,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["trigger('flyinout",{"_index":762,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["true",{"_index":631,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":1094,"title":{},"body":{"components/LoginComponent.html":{}}}],["trying",{"_index":1096,"title":{},"body":{"components/LoginComponent.html":{}}}],["tutorial",{"_index":442,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["type",{"_index":59,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/Background.html":{},"interfaces/Block.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"directives/PasswordConfirmedValidatorDirective.html":{},"components/RegistrationComponent.html":{},"interfaces/Report.html":{},"components/ReportComponent.html":{},"interfaces/ReportContainer.html":{},"components/ReportHistoryComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"interfaces/Scenario.html":{},"interfaces/StepDefinition.html":{},"interfaces/StepDefinitionBackground.html":{},"interfaces/StepType.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"interceptors/TimeoutInterceptor.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":150,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{}}}],["types",{"_index":1612,"title":{},"body":{"components/TermsComponent.html":{}}}],["uikit",{"_index":1982,"title":{},"body":{"dependencies.html":{}}}],["uk",{"_index":286,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{}}}],["undefined",{"_index":152,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["under",{"_index":453,"title":{},"body":{"components/AppComponent.html":{},"components/TermsComponent.html":{}}}],["underline",{"_index":485,"title":{},"body":{"components/AppComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["understand",{"_index":1655,"title":{},"body":{"components/TermsComponent.html":{}}}],["unit",{"_index":2011,"title":{},"body":{"index.html":{}}}],["unsavereport",{"_index":1308,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["unsavereport(report",{"_index":1334,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["unsavereport(report._id",{"_index":1367,"title":{},"body":{"components/ReportHistoryComponent.html":{}}}],["until",{"_index":838,"title":{},"body":{"components/EditableComponent.html":{},"dependencies.html":{}}}],["untildestroyed",{"_index":837,"title":{},"body":{"components/EditableComponent.html":{}}}],["untildestroyed(this",{"_index":848,"title":{},"body":{"components/EditableComponent.html":{}}}],["update",{"_index":801,"title":{},"body":{"components/EditableComponent.html":{}}}],["updatefield",{"_index":886,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["updatefield(columnindex",{"_index":914,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["updates",{"_index":916,"title":{},"body":{"components/ExampleTableComponent.html":{},"components/TermsComponent.html":{}}}],["updatesite",{"_index":50,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["updatesite(report",{"_index":99,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["updatetable",{"_index":887,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["url",{"_index":65,"title":{},"body":{"components/AccountManagementComponent.html":{},"interfaces/Story.html":{}}}],["use",{"_index":1109,"title":{},"body":{"components/LoginComponent.html":{},"components/TermsComponent.html":{},"index.html":{}}}],["useclass",{"_index":629,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":85,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ReportHistoryComponent.html":{},"interfaces/StepType.html":{},"interfaces/Story.html":{},"components/TermsComponent.html":{},"interfaces/User.html":{}}}],["useexisting",{"_index":1210,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{}}}],["user",{"_index":79,"title":{"interfaces/User.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/ResetPasswordComponent.html":{},"interfaces/StepType.html":{},"components/StoriesBarComponent.html":{},"interfaces/Story.html":{},"components/TermsComponent.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["user's",{"_index":1219,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{},"miscellaneous/variables.html":{}}}],["user._id",{"_index":148,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["user['email",{"_index":151,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["user['github",{"_index":154,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["user['jira",{"_index":156,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["userid",{"_index":1045,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["userid).topromise",{"_index":1241,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["userrepository",{"_index":98,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["userrepository._id",{"_index":178,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["userrepository.source",{"_index":176,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["userrepository.value",{"_index":173,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/LoginComponent.html":{}}}],["users",{"_index":1705,"title":{},"body":{"components/TermsComponent.html":{}}}],["uses",{"_index":1713,"title":{},"body":{"components/TermsComponent.html":{}}}],["usevalue",{"_index":632,"title":{},"body":{"modules/AppModule.html":{}}}],["using",{"_index":733,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/LoginComponent.html":{},"components/RunTestToast.html":{},"components/TermsComponent.html":{}}}],["usually",{"_index":1885,"title":{},"body":{"interfaces/User.html":{}}}],["uuid",{"_index":671,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{}}}],["valid",{"_index":1249,"title":{},"body":{"components/RegistrationComponent.html":{},"components/TermsComponent.html":{}}}],["valid.required",{"_index":701,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{}}}],["valid[required",{"_index":700,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{}}}],["validate",{"_index":1212,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{}}}],["validate(control",{"_index":1213,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{}}}],["validation",{"_index":705,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/RegistrationComponent.html":{}}}],["validationerrors",{"_index":1217,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":1208,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{}}}],["validatorfn",{"_index":1218,"title":{},"body":{"directives/PasswordConfirmedValidatorDirective.html":{},"miscellaneous/variables.html":{}}}],["value",{"_index":408,"title":{},"body":{"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"interfaces/RepositoryContainer.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["valuerow",{"_index":948,"title":{},"body":{"components/ExampleTableComponent.html":{}}}],["values",{"_index":1464,"title":{},"body":{"interfaces/StepType.html":{}}}],["var",{"_index":216,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["variable",{"_index":1901,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2025,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":1647,"title":{},"body":{"components/TermsComponent.html":{}}}],["version",{"_index":438,"title":{},"body":{"components/AppComponent.html":{},"components/StoriesBarComponent.html":{},"index.html":{}}}],["very",{"_index":1595,"title":{},"body":{"interfaces/Story.html":{}}}],["via",{"_index":188,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/LoginComponent.html":{},"components/TermsComponent.html":{},"index.html":{}}}],["view",{"_index":809,"title":{},"body":{"components/EditableComponent.html":{},"directives/EditableOnEnterDirective.html":{},"components/StoriesBarComponent.html":{}}}],["viewable",{"_index":1892,"title":{},"body":{"directives/ViewModeDirective.html":{}}}],["viewchild",{"_index":117,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/RegistrationComponent.html":{},"components/StoriesBarComponent.html":{}}}],["viewchild('modalcomponent",{"_index":115,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["viewchild('modalscomponent",{"_index":1504,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["viewmode",{"_index":369,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"directives/ViewModeDirective.html":{}}}],["viewmodedirective",{"_index":368,"title":{"directives/ViewModeDirective.html":{}},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"components/FeedbackComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{},"directives/ViewModeDirective.html":{},"coverage.html":{},"overview.html":{}}}],["viewmodehandler",{"_index":799,"title":{},"body":{"components/EditableComponent.html":{}}}],["viewmodetpl",{"_index":796,"title":{},"body":{"components/EditableComponent.html":{}}}],["visibility",{"_index":759,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["visit",{"_index":1678,"title":{},"body":{"components/TermsComponent.html":{}}}],["visited",{"_index":1718,"title":{},"body":{"components/TermsComponent.html":{}}}],["visitor",{"_index":1716,"title":{},"body":{"components/TermsComponent.html":{}}}],["visitors",{"_index":1609,"title":{},"body":{"components/TermsComponent.html":{}}}],["void",{"_index":74,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/DeleteScenarioToast.html":{},"components/EditableComponent.html":{},"components/ExampleTableComponent.html":{},"directives/FocusableDirective.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/ReportComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TestAccountComponent.html":{}}}],["wait",{"_index":1452,"title":{},"body":{"interfaces/Scenario.html":{}}}],["want",{"_index":1118,"title":{},"body":{"components/LoginComponent.html":{},"components/ReportHistoryComponent.html":{},"components/StoriesBarComponent.html":{}}}],["ways",{"_index":1648,"title":{},"body":{"components/TermsComponent.html":{}}}],["web",{"_index":1711,"title":{},"body":{"components/TermsComponent.html":{}}}],["webkit",{"_index":757,"title":{},"body":{"components/DeleteScenarioToast.html":{},"components/RunTestToast.html":{}}}],["website",{"_index":1119,"title":{},"body":{"components/LoginComponent.html":{},"components/TermsComponent.html":{}}}],["websites",{"_index":1679,"title":{},"body":{"components/TermsComponent.html":{}}}],["webste",{"_index":1651,"title":{},"body":{"components/TermsComponent.html":{}}}],["weight",{"_index":250,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["welcome",{"_index":1092,"title":{},"body":{"components/LoginComponent.html":{}}}],["welcomeslide",{"_index":1135,"title":{},"body":{"components/LoginComponent.html":{}}}],["white",{"_index":254,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/StoriesBarComponent.html":{}}}],["width",{"_index":274,"title":{},"body":{"components/AccountManagementComponent.html":{},"components/AppComponent.html":{},"components/DeleteScenarioToast.html":{},"components/ExampleTableComponent.html":{},"components/LoginComponent.html":{},"components/ParentComponent.html":{},"components/RegistrationComponent.html":{},"components/ReportHistoryComponent.html":{},"components/ResetPasswordComponent.html":{},"components/RunTestToast.html":{},"components/StoriesBarComponent.html":{},"components/TermsComponent.html":{},"components/TestAccountComponent.html":{}}}],["window.location.reload",{"_index":165,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["wird",{"_index":954,"title":{},"body":{"components/FeedbackComponent.html":{}}}],["without",{"_index":1095,"title":{},"body":{"components/LoginComponent.html":{},"components/RunTestToast.html":{}}}],["words",{"_index":1542,"title":{},"body":{"components/StoriesBarComponent.html":{}}}],["workgroup",{"_index":107,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["workgroupedit",{"_index":51,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["workgroupedit(project",{"_index":104,"title":{},"body":{"components/AccountManagementComponent.html":{}}}],["wronglogin",{"_index":710,"title":{},"body":{"components/ConfirmResetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["x",{"_index":488,"title":{},"body":{"components/AppComponent.html":{}}}],["y",{"_index":520,"title":{},"body":{"components/AppComponent.html":{}}}],["yourself",{"_index":1097,"title":{},"body":{"components/LoginComponent.html":{}}}],["z",{"_index":518,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/StoriesBarComponent.html":{}}}],["zone.js",{"_index":1984,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":543,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AccountManagementComponent.html":{"url":"components/AccountManagementComponent.html","title":"component - AccountManagementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AccountManagementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/account-management/account-management.component.ts\n\n\n    \n        Description\n    \n    \n        Component to show all account data including the projects of Github, Jira and custom sources\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-account-management\n            \n\n            \n                styleUrls\n                ./account-management.component.css\n            \n\n\n\n            \n                templateUrl\n                ./account-management.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiService\n                            \n                            \n                                email\n                            \n                            \n                                github\n                            \n                            \n                                id\n                            \n                            \n                                jira\n                            \n                            \n                                modalComponent\n                            \n                            \n                                repositories\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteAccount\n                            \n                            \n                                disconnectGithub\n                            \n                            \n                                jiraLogin\n                            \n                            \n                                login\n                            \n                            \n                                navToRegistration\n                            \n                            \n                                newRepository\n                            \n                            \n                                selectRepository\n                            \n                            \n                                updateSite\n                            \n                            \n                                workGroupEdit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/account-management/account-management.component.ts:46\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Connection to the api service\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                router to handle url changes\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteAccount\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteAccount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/account-management/account-management.component.ts:89\n                \n            \n\n\n            \n                \n                    Opens Modal to delete the Seed-Test account\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            disconnectGithub\n                        \n                        \n                    \n                \n            \n            \n                \ndisconnectGithub()\n                \n            \n\n\n            \n                \n                    Defined in src/app/account-management/account-management.component.ts:138\n                \n            \n\n\n            \n                \n                    Removes Github connection from Seed-Test Account\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            jiraLogin\n                        \n                        \n                    \n                \n            \n            \n                \njiraLogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/account-management/account-management.component.ts:82\n                \n            \n\n\n            \n                \n                    Loggs in the user to Jira\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/account-management/account-management.component.ts:67\n                \n            \n\n\n            \n                \n                    Loggs in the user to Github\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navToRegistration\n                        \n                        \n                    \n                \n            \n            \n                \nnavToRegistration()\n                \n            \n\n\n            \n                \n                    Defined in src/app/account-management/account-management.component.ts:147\n                \n            \n\n\n            \n                \n                    Redirects user to Register page if the user only used a Github account and now wants to create a Seed-Test account\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            newRepository\n                        \n                        \n                    \n                \n            \n            \n                \nnewRepository()\n                \n            \n\n\n            \n                \n                    Defined in src/app/account-management/account-management.component.ts:75\n                \n            \n\n\n            \n                \n                    Opens Modal to create a new custom project\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectRepository\n                        \n                        \n                    \n                \n            \n            \n                \nselectRepository(userRepository: RepositoryContainer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/account-management/account-management.component.ts:156\n                \n            \n\n\n            \n                \n                    Selects the repository and redirects the user to the story editor\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userRepository\n                                    \n                                                RepositoryContainer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateSite\n                        \n                        \n                    \n                \n            \n            \n                \nupdateSite(report: String)\n                \n            \n\n\n            \n                \n                    Defined in src/app/account-management/account-management.component.ts:105\n                \n            \n\n\n            \n                \n                    Fills the Account data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    report\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            workGroupEdit\n                        \n                        \n                    \n                \n            \n            \n                \nworkGroupEdit(project: RepositoryContainer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/account-management/account-management.component.ts:97\n                \n            \n\n\n            \n                \n                    Opens Modal to edit the workgroup\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    project\n                                    \n                                                RepositoryContainer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApiService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/account-management/account-management.component.ts:53\n                            \n                        \n\n                \n                    \n                        Connection to the api service\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/account-management/account-management.component.ts:31\n                            \n                        \n\n                \n                    \n                        Email of the user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            github\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/account-management/account-management.component.ts:36\n                            \n                        \n\n                \n                    \n                        Github object of the user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/account-management/account-management.component.ts:46\n                            \n                        \n\n                \n                    \n                        User id\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            jira\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/account-management/account-management.component.ts:41\n                            \n                        \n\n                \n                    \n                        Jira object of the user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalsComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('modalComponent')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/account-management/account-management.component.ts:21\n                            \n                        \n\n                \n                    \n                        Viewchild to create the modals\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            repositories\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RepositoryContainer[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/account-management/account-management.component.ts:26\n                            \n                        \n\n                \n                    \n                        Repositories or projects of this user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/account-management/account-management.component.ts:53\n                            \n                        \n\n                \n                    \n                        router to handle url changes\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ApiService} from '../Services/api.service';\nimport {NavigationEnd, Router} from '@angular/router';\nimport { RepositoryContainer } from '../model/RepositoryContainer';\nimport { ModalsComponent } from \"../modals/modals.component\";\n\n/**\n * Component to show all account data including the projects of Github, Jira and custom sources\n */\n@Component({\n    selector: 'app-account-management',\n    templateUrl: './account-management.component.html',\n    styleUrls: ['./account-management.component.css']\n})\n\n\nexport class AccountManagementComponent implements OnInit {\n    /**\n     * Viewchild to create the modals\n     */\n    @ViewChild('modalComponent') modalComponent: ModalsComponent;\n\n    /**\n     * Repositories or projects of this user\n     */\n    repositories: RepositoryContainer[];\n\n    /**\n     * Email of the user\n     */\n    email: string;\n\n    /**\n     * Github object of the user\n     */\n    github: any;\n\n    /**\n     * Jira object of the user\n     */\n    jira: any;\n\n    /**\n     * User id\n     */\n    id: string;\n\n    /**\n     * Constructor\n     * @param apiService Connection to the api service\n     * @param router router to handle url changes\n     */\n    constructor(public apiService: ApiService, public router: Router) {\n        router.events.forEach((event) => {\n            if (event instanceof NavigationEnd && router.url === '/accountManagement') {\n                this.updateSite('Successful');\n            }\n        });\n        this.apiService.getRepositoriesEvent.subscribe((repositories) => {\n            this.repositories = repositories;\n        });\n    }\n\n    /**\n     * Loggs in the user to Github\n     */\n    login() {\n        localStorage.setItem('userId', this.id);\n        this.apiService.githubLogin();\n    }\n    \n    /**\n     * Opens Modal to create a new custom project\n     */\n    newRepository() {\n        this.modalComponent.openCreateCustomProjectModal();\n    }\n\n    /**\n     * Loggs in the user to Jira\n     */\n    jiraLogin() {\n        this.modalComponent.openChangeJiraAccountModal('Jira');\n    }\n \n    /**\n     * Opens Modal to delete the Seed-Test account\n     */\n    deleteAccount() {\n        this.modalComponent.openDeleteAccountModal(this.email);\n    }\n\n    /**\n     * Opens Modal to edit the workgroup\n     * @param project\n     */\n    workGroupEdit(project: RepositoryContainer){\n        this.modalComponent.openWorkgroupEditModal(project);\n    }\n    \n    /**\n     * Fills the Account data\n     * @param report \n     */\n    updateSite(report: String) {\n        if (report === 'Successful') {\n            this.apiService.getUserData().subscribe(user => {\n                this.id = user._id;\n                console.log(user)\n                if (typeof user['email'] !== 'undefined') {\n                    this.email = user['email'];\n                }\n                if (typeof user['github'] !== 'undefined') {\n                    this.github = user['github'];\n                }\n                if (typeof user['jira'] !== 'undefined') {\n                    this.jira = user['jira'];\n                    (document.getElementById('change-jira') as HTMLButtonElement).innerHTML = 'Change Jira-Account';\n                }\n            });\n\n            this.apiService.getRepositories().subscribe((repositories) => {\n                this.repositories = repositories;\n            });\n        }\n    }\n\n   \n    /**\n     * @ignore\n     */\n    ngOnInit() {\n    }\n\n    /**\n     * Removes Github connection from Seed-Test Account\n     */\n    disconnectGithub() {\n        this.apiService.disconnectGithub().subscribe((resp) => {\n            window.location.reload();\n        });\n    }\n\n    /**\n     * Redirects user to Register page if the user only used a Github account and now wants to create a Seed-Test account\n     */\n    navToRegistration() {\n        localStorage.setItem('userId', this.id);\n        this.router.navigate(['/register']);\n    }\n\n    /**\n     * Selects the repository and redirects the user to the story editor\n     * @param userRepository \n     */\n    selectRepository(userRepository: RepositoryContainer) {\n        const ref: HTMLLinkElement = document.getElementById('githubHref') as HTMLLinkElement;\n        ref.href = 'https://github.com/' + userRepository.value;\n        localStorage.setItem('repository', userRepository.value)\n        localStorage.setItem('source', userRepository.source)\n        localStorage.setItem('id', userRepository._id)\n        this.router.navigate(['']);\n    }\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n            \n        \n    \n    \n        Account Settings\n    \n    \n        Seed-Test Account\n        \n            Email: \n            {{email}}\n            \n            Need a new Custom Project?\n            Create Custom Project\n        \n        \n            - no email deposited -\n            Register\n        \n        \n        \n            \n                Custom Projects:\n                \n                    \n                        \n                            \n                                \n                                    \n                                        \n                                        {{repository.value}}\n                                    \n                                    Manage Team\n                                \n                            \n                        \n                    \n                \n            \n        \n        \n        \n            \n                Delete Seed-Test Account\n            \n        \n    \n    \n    \n    \n        Github\n        \n            Github-Account: \n            {{github['login']}}\n            \n                \n                    \n                       \n                       Disconnect GitHub\n                    \n                 \n            \n        \n        \n            \n                \n                   \n                   Login via GitHub\n                \n             \n        \n        \n        \n            \n                Github Projects:\n                \n                    \n                        \n                            \n                                \n                                {{repository.value}}\n                            \n                        \n                    \n                \n            \n        \n     \n    \n    \n        Jira\n        \n            \n                \n                    Jira-Name: \n                    {{jira['AccountName']}}\n                \n                \n                    Jira-Server: \n                    {{jira['Host']}}\n                \n            \n            \n                Login to Jira\n            \n          \n        \n        \n            \n                Jira Projects:\n                \n                    \n                        \n                            \n                                \n                                {{repository.value}}\n                            \n                        \n                    \n                \n            \n        \n        \n    \n\n\n\n    \n\n    \n                \n                    ./account-management.component.css\n                \n                * {\n    padding: 0px;\n    margin: 0px;\n}\n\n.grid-container {\n    display: grid;\n    grid-template-rows: auto;\n    grid-template-columns: 1fr 1fr 1fr;\n    grid-column-gap: 20px;\n    background-color: rgb(255, 255, 255);\n    padding-bottom: 100px;\n    border: 1px solid #999;\n}\n\n#noEmail{\n    color: var(--ocean-blue);\n}\n\n.grid_seedTest{\n    grid-row: 2 / 3;\n    grid-column: 1 / 2;\n    text-align: center;\n    margin-top: 10px;\n    margin-left: 20px;\n}\n\n.grid_customRepos {\n    grid-row: 3 / 4;\n    grid-column: 1 / 2;\n}\n\n.grid_eraseAccount {\n    grid-row: 5 / 6;\n    grid-column: 1 / 2;\n}\n\n.grid_github{\n    grid-row: 2 / 3;\n    grid-column: 2 / 3;\n    text-align: center;\n    align-items: center;\n    margin-top: 10px;\n}\n\n.grid_githubRepos {\n    grid-row: 3 / 4;\n    grid-column: 2 / 3;\n}\n\n.grid_jira{\n    grid-row: 2 / 3;\n    grid-column: 3 / 4;\n    text-align: center;\n    margin-top: 10px;\n    margin-right: 20px;\n}\n\n.grid_jiraRepos {\n    grid-row: 3 / 4;\n    grid-column: 3 / 4;\n}\n\n.active{\n    color: var(--ocean-blue);\n}\n\n#emailLabel{\n    margin-bottom: 25px;\n}\n\n#needCustomRepo{\n    margin-top: 25px;\n}\n\nh1{\n    color:var(--ocean-blue);\n    font-size: 22pt;\n    font-weight: bold;\n    text-align: center;\n    margin-top: 40px;\n    margin-bottom: 20px;\n}\n\nh2{\n    padding-top: 10px;\n    color: var(--white);\n    font-size: 20px;\n    /*background-color: rgba(153, 153, 153, 0.63);*/\n    background-color: var(--dark-grey);\n    padding-bottom: 10px;\n    margin-bottom: 30px;\n}\n\nlabel{\n    text-align: center;\n    font-weight: bold;\n}\n\n.githubLogin{\n    color: var(--white);\n    padding: 5px 10px;\n    background-color: black;\n    border: none;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n}\n\n.githubLoginContainer{\n    margin: 10px;\n    display:inline-block;\n}\n\n.githubLogin img{\n    margin-right: 5px;\n    width: 17px;\n    height: 17px;\n}\n\n.backButton{\n    background: none;\n    width: 50px;\n    height: 50px;\n    margin-top: 30px;\n    margin-left: 20px;\n    font-size: 15px;\n    cursor: pointer;\n    border: none;\n}\n\n.backButton:focus {\n    outline:0 !important;\n}\n\n\n#backImage{\n    width: 40px;\n}\n\n#change-jira{\n    margin-top: 30px;\n}\n\n.uk-card{\n    border: 1px solid grey;\n}\n\na.repoLink{\n    color: var(--ocean-blue);\n    transition: 0.2s;\n}\n\na.repoLink:hover{\n    color: var(--marine-blue);\n}\n\nh2, h1{\n    font-family: Klavika, sans-serif;\n}\n\n.repositories{\n    width: 90%;\n    text-align: center;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 60px;\n    margin-top: 60px;\n    padding: 15px;\n    background-color: transparent;\n    border-top: 1px solid #999;\n}\n\n.repo_img{\n    margin-left: 5px;\n    margin-right: 5px;\n    max-height: 18px;\n}\n\n.editRepoButton{\n    margin-left: 5px;;\n}\n\n.customRepoContainer{\n    display: flex;\n    justify-content: space-between;\n}\n\n@media screen and (max-width: 600px) {\n    .grid{\n        display: grid;\n        grid-template-rows: auto;\n        grid-template-columns: 1fr;\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                            Account Settings                Seed-Test Account                    Email:             {{email}}                        Need a new Custom Project?            Create Custom Project                            - no email deposited -            Register                                                    Custom Projects:                                                                                                                                                                                                                                            {{repository.value}}                                                                        Manage Team                                                                                                                                                                                        Delete Seed-Test Account                                            Github                    Github-Account:             {{github[\\'login\\']}}                                                                                              Disconnect GitHub                                                                                                                                   Login via GitHub                                                                                 Github Projects:                                                                                                                                                        {{repository.value}}                                                                                                                                 Jira                                                        Jira-Name:                     {{jira[\\'AccountName\\']}}                                                    Jira-Server:                     {{jira[\\'Host\\']}}                                                        Login to Jira                                                                  Jira Projects:                                                                                                                                                        {{repository.value}}                                                                                                                        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmResetPasswordComponent', 'selector': 'app-confirm-reset-password'},{'name': 'DeleteScenarioToast', 'selector': '[pink-toast-component]'},{'name': 'EditableComponent', 'selector': 'editable'},{'name': 'ExampleTableComponent', 'selector': 'app-example-table'},{'name': 'FeedbackComponent', 'selector': 'app-feedback'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalsComponent', 'selector': 'app-modals'},{'name': 'ParentComponent', 'selector': 'app-parent'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'ReportHistoryComponent', 'selector': 'app-report-history'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RunTestToast', 'selector': '[pink-toast-component]'},{'name': 'ScenarioEditorComponent', 'selector': 'app-scenario-editor'},{'name': 'StoriesBarComponent', 'selector': 'app-stories-bar'},{'name': 'StoryEditorComponent', 'selector': 'app-story-editor'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'TestAccountComponent', 'selector': 'app-test-account'}];\n    var DIRECTIVES = [{'name': 'EditableOnEnterDirective', 'selector': '[editableOnEnter]'},{'name': 'EditModeDirective', 'selector': '[editMode]'},{'name': 'FocusableDirective', 'selector': '[focusable]'},{'name': 'PasswordConfirmedValidatorDirective', 'selector': '[appPasswordConfirmed]'},{'name': 'ViewModeDirective', 'selector': '[viewMode]'}];\n    var ACTUAL_COMPONENT = {'name': 'AccountManagementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Master Component\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiService\n                            \n                            \n                                error\n                            \n                            \n                                repositories\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                showImpressum\n                            \n                            \n                                showTerms\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRepositories\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openImpressum\n                            \n                            \n                                openTerms\n                            \n                            \n                                selectRepository\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:34\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRepositories\n                        \n                        \n                    \n                \n            \n            \n                \ngetRepositories()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:87\n                \n            \n\n\n            \n                \n                    Gets the repositories\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:119\n                \n            \n\n\n            \n                \n                    Loggs out the user and redirects it to the login page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:53\n                \n            \n\n\n            \n                \n                    Retrieves Repositories\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openImpressum\n                        \n                        \n                    \n                \n            \n            \n                \nopenImpressum()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:75\n                \n            \n\n\n            \n                \n                    Opens the impressum section\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openTerms\n                        \n                        \n                    \n                \n            \n            \n                \nopenTerms()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:63\n                \n            \n\n\n            \n                \n                    Opens the terms section\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectRepository\n                        \n                        \n                    \n                \n            \n            \n                \nselectRepository(userRepository: RepositoryContainer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:102\n                \n            \n\n\n            \n                \n                    Selects a project from the project list\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userRepository\n                                    \n                                                RepositoryContainer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApiService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:34\n                            \n                        \n\n                \n                    \n                        Error during retrieving the projects\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            repositories\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RepositoryContainer[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:19\n                            \n                        \n\n                \n                    \n                        Currently retrieved projects\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showImpressum\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:24\n                            \n                        \n\n                \n                    \n                        If the impressum is shown\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showTerms\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:29\n                            \n                        \n\n                \n                    \n                        If the terms are shown\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {ApiService} from './Services/api.service';\nimport { Router } from '@angular/router';\nimport { RepositoryContainer } from './model/RepositoryContainer';\n\n/**\n * Master Component\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  /**\n   * Currently retrieved projects\n   */\n  repositories: RepositoryContainer[];\n\n  /**\n   * If the impressum is shown\n   */\n  showImpressum: boolean = false;\n\n  /**\n   * If the terms are shown\n   */\n  showTerms: boolean = false;\n\n  /**\n   * Error during retrieving the projects\n   */\n  error: string;\n\n  /**\n   * Constructor\n   * @param apiService \n   * @param router \n   */\n  constructor(public apiService: ApiService, public router: Router) {\n    this.apiService.getRepositoriesEvent.subscribe((repositories) => {\n      this.repositories = repositories;\n    });\n    this.apiService.logoutEvent.subscribe(_ => {\n      this.logout();\n  });\n  }\n\n  /**\n   * Retrieves Repositories\n   */\n  ngOnInit() {\n    this.getRepositories();\n    if(!this.apiService.urlReceived) {\n      this.apiService.getBackendInfo()\n    }\n  }\n\n  /**\n   * Opens the terms section\n   */\n  openTerms(){\n    this.showImpressum = false;\n    this.showTerms = !this.showTerms;\n    if(this.showTerms) {\n      const footer: HTMLElement = document.getElementById('footer');\n      footer.scrollIntoView();\n    }\n  }\n\n  /**\n   * Opens the impressum section\n   */\n  openImpressum(){\n    this.showTerms = false;\n    this.showImpressum = !this.showImpressum;\n    if(this.showImpressum) {\n      const footer: HTMLElement = document.getElementById('footer');\n      footer.scrollIntoView();\n    }\n  }\n\n  /**\n   * Gets the repositories\n   */\n  getRepositories() {\n    if (this.apiService.isLoggedIn() && (typeof this.repositories === 'undefined' || this.repositories.length  {\n        this.repositories = resp;\n        console.log('repositories', this.repositories);\n      }, (err) => {\n        this.error = err.error;\n      });\n    }\n  }\n\n  /**\n   * Selects a project from the project list\n   * @param userRepository \n   */\n  selectRepository(userRepository: RepositoryContainer) {\n    const ref: HTMLLinkElement = document.getElementById('githubHref') as HTMLLinkElement;\n    ref.href = 'https://github.com/' + userRepository.value;\n    localStorage.setItem('repository', userRepository.value)\n    localStorage.setItem('source', userRepository.source)\n    localStorage.setItem('id', userRepository._id)\n    if(this.router.url !== '/'){\n      this.router.navigate(['']);\n    } else {\n      this.apiService.getStories(userRepository).subscribe((resp) => {\n      });\n    }\n  }\n\n  /**\n   * Loggs out the user and redirects it to the login page\n   */\n  logout() {\n    this.repositories = undefined;\n    this.apiService.logoutUser().subscribe(resp => {\n    });\n    this.router.navigate(['/login']);\n  }\n  \n}\n    \n\n    \n        \n  \n    \n    \n      menu\n      \n        \n          \n            \n              Projects\n                \n                  \n                   \n                     \n                     \n                     \n                     {{repository.value}}\n                   \n                  \n                \n            \n          \n          \n            Account Settings\n          \n          \n            Logout\n          \n        \n      \n      Version 1.3.2\n    \n\n\n    \n    \n      \n        \n          \n        \n      \n    \n    \n    \n      \n        \n          Feedback\n        \n        \n          Help\n            \n              Tutorial (german)\n              Tutorial (english)\n            \n        \n        \n      \n    \n  \n\n  \n    \n  \n\n  \n    \n      Impressum\n      Terms\n    \n    \n      \n        \n      \n    -->\n    \n      \n        Seed-Test\n        Email: seed-test@adesso.de\n        https://github.com/adessoAG/Seed-Test\n      \n      \n        This is only a demo version of an open source application\n        The maker of this service is not liable for the user and its data\n        It is licenced under the MIT Licence\n        For more information\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                *{\n  padding: 0px;\n  margin: 0px;\n}\n/* Refactor this*/\n.grid{\n  background-color: var(--light-grey);\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: auto 1fr auto;\n  grid-template-areas:\n  \"topnav\"\n  \"router\"\n  \"footer\";\n\n  /*Below provides sticky footer*/\n  min-height: 100vh;\n}\n\n.router{\n  grid-area: router;\n  background-color: var(--light-grey);\n}\n\n\n.topnav{\n  /*background-color: #999;*/\n  background-color: var(--dark-grey);\n  grid-area: topnav;\n  display: grid;\n  grid-template-columns: 3fr auto 1fr auto 3fr;\n  grid-template-areas:\n  \"left . center . right\";\n}\n\n.topnav a {\n  text-align: center;\n  text-decoration: none;\n  font-size: 17px;\n}\n\n.topnavRight{\n  grid-area: right;\n  align-self: center;\n  justify-self: right;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  align-content: center;\n}\n\n.topnavCenter{\n  grid-area: center;\n  align-self: center;\n}\n\n.topnavRight a{\n  padding: 12px;\n}\n\n\n#version {\n  color: var(--light-grey);\n  padding: 17px;\n}\n\n.impressum, .terms {\n  text-align: center;\n  color: var(--white);\n  font-size: small;\n  padding: 4px;\n  position: center;\n\n}\n\n.footer{\n  grid-area: footer;\n  display: grid;\n  background-color: var(--dark-grey);\n  grid-template-rows: auto auto;\n  grid-template-columns: 1fr auto 1fr;\n  grid-template-areas:\n  \". footerCenter adessoLogo\"\n  \"expendable expendable expendable\";\n  justify-items: center;\n}\n\n.footerCenter{\n  grid-area: footerCenter;\n  grid-column-start: 2;\n  margin-left: auto;\n  display: flex;\n  flex-direction: row;\n}\n\n.expendable {\n  grid-area: expendable;\n}\n\n.footerCenter > p {\n  padding: 0px 15px;\n  align-self: center;\n  justify-content: center;\n\n}\n\n.adessoLogo{\n  grid-area: adessoLogo;\n  justify-self: flex-end;\n}\n\n.impressum:hover,\n.terms:hover{\n  text-decoration: underline;\n  cursor: pointer;\n}\n\n.impressumContent,\n.termsContent{\n  display: block;\n  text-align: center;\n}\n\n.impressumContent p,\n.impressumContent a,\n.termsContent a,\n.termsContent p{\n  color: var(--white);\n  text-align: center;\n  font-size: x-small;\n}\n\n#adesso-logo {\n  padding: 5px;\n  height: 40px;\n}\n\n.rightButton {\n  background-color: transparent;\n  color: var(--white);\n  padding: 13px;\n  font-size: 15px;\n  border: none;\n  cursor: pointer;\n  transition: 0.3s;\n  outline: none;\n}\n\n.rightButton:hover, .menuButton:hover {\n  color: var(--light-grey);\n}\n\na:hover{\n  color: var(--ocean-blue);\n}\n\n#logo {\n  height: 51px;\n}\n\n.menuButton{\n  color: var(--white);\n  outline: none;\n  font-style: inherit;\n  padding: 12px 20px;\n  border: 0px;\n  background: transparent;\n  float: left;\n  transition: 0.3s;\n}\n\n.menuSelection{\n  font-size: 100%;\n  font-style: inherit;\n  padding: 12px 16px;\n  border: 0px;\n  background-color: transparent;\n  color: var(--black);\n  outline: none;\n}\n\n.menuSelection:hover{\n  color: var(--ocean-blue);\n}\n\n.menuSelection#logout:hover{\n  color: var(--grape);\n}\n\n/*dropdown general*/\n\n.dropdown{\n  position: relative;\n  display: inline-block;\n}\n\n.dropdown-list{\n  display: none;\n  position: fixed;\n  background-color: var(--light-grey);\n  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\n  z-index: 1;\n  list-style-type: none;\n  overflow-y: auto;\n  max-height: 70%;\n  height: auto;\n}\n\n.dropdown-list a{\n  overflow: auto;\n  color: var(--black);\n  padding: 12px 16px;\n  display: block;\n  list-style-type: none;\n  text-decoration: none;\n  margin-left: auto;\n  margin-right: auto;\n  font-size: 14px;\n}\n.dropdown-list li{\n  text-align: center;\n}\n\n.dropdown-list a:hover{\n  color: var(--ocean-blue);\n}\n\n.dropdown:hover .dropdown-list{\n  display: block;\n}\n\n.list-item{\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.repo_img{\n  margin-left: 10px;\n  margin-right: 5px;\n  max-height: 20px;\n}\n.repoButton{\n  margin-right: 10px;\n  margin-left: 5px;\n  outline: none;\n}\n\n#githubHref{\n  color: var(--white);\n  transition: 0.3s;\n}\n\n#githubHref:hover{\n  color: var(--light-grey);\n}\n\n@media screen and (max-width: 600px) {\n  .topnav a, .topnavRight {\n    float: none;\n    display: block;\n  }\n\n  .topnavCenter a {\n    position: relative;\n    top: 0;\n    left: 0;\n    transform: none;\n  }\n\n  .topnavRight{\n    text-align: center;\n  }\n\n  .topnavRight{\n    text-align: center;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                menu                                                  Projects                                                                                                                                         {{repository.value}}                                                                                                 Account Settings                                Logout                              Version 1.3.2                                                                                      Feedback                          Help                          Tutorial (german)              Tutorial (english)                                                            Impressum      Terms                                -->                  Seed-Test        Email: seed-test@adesso.de        https://github.com/adessoAG/Seed-Test                    This is only a demo version of an open source application        The maker of this service is not liable for the user and its data        It is licenced under the MIT Licence        For more information            '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmResetPasswordComponent', 'selector': 'app-confirm-reset-password'},{'name': 'DeleteScenarioToast', 'selector': '[pink-toast-component]'},{'name': 'EditableComponent', 'selector': 'editable'},{'name': 'ExampleTableComponent', 'selector': 'app-example-table'},{'name': 'FeedbackComponent', 'selector': 'app-feedback'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalsComponent', 'selector': 'app-modals'},{'name': 'ParentComponent', 'selector': 'app-parent'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'ReportHistoryComponent', 'selector': 'app-report-history'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RunTestToast', 'selector': '[pink-toast-component]'},{'name': 'ScenarioEditorComponent', 'selector': 'app-scenario-editor'},{'name': 'StoriesBarComponent', 'selector': 'app-stories-bar'},{'name': 'StoryEditorComponent', 'selector': 'app-story-editor'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'TestAccountComponent', 'selector': 'app-test-account'}];\n    var DIRECTIVES = [{'name': 'EditableOnEnterDirective', 'selector': '[editableOnEnter]'},{'name': 'EditModeDirective', 'selector': '[editMode]'},{'name': 'FocusableDirective', 'selector': '[focusable]'},{'name': 'PasswordConfirmedValidatorDirective', 'selector': '[appPasswordConfirmed]'},{'name': 'ViewModeDirective', 'selector': '[viewMode]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAccountManagementComponent\n\nAccountManagementComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccountManagementComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nConfirmResetPasswordComponent\n\nConfirmResetPasswordComponent\n\nAppModule -->\n\nConfirmResetPasswordComponent->AppModule\n\n\n\n\n\nDeleteScenarioToast\n\nDeleteScenarioToast\n\nAppModule -->\n\nDeleteScenarioToast->AppModule\n\n\n\n\n\nEditModeDirective\n\nEditModeDirective\n\nAppModule -->\n\nEditModeDirective->AppModule\n\n\n\n\n\nEditableComponent\n\nEditableComponent\n\nAppModule -->\n\nEditableComponent->AppModule\n\n\n\n\n\nEditableOnEnterDirective\n\nEditableOnEnterDirective\n\nAppModule -->\n\nEditableOnEnterDirective->AppModule\n\n\n\n\n\nExampleTableComponent\n\nExampleTableComponent\n\nAppModule -->\n\nExampleTableComponent->AppModule\n\n\n\n\n\nFeedbackComponent\n\nFeedbackComponent\n\nAppModule -->\n\nFeedbackComponent->AppModule\n\n\n\n\n\nFocusableDirective\n\nFocusableDirective\n\nAppModule -->\n\nFocusableDirective->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nModalsComponent\n\nModalsComponent\n\nAppModule -->\n\nModalsComponent->AppModule\n\n\n\n\n\nParentComponent\n\nParentComponent\n\nAppModule -->\n\nParentComponent->AppModule\n\n\n\n\n\nPasswordConfirmedValidatorDirective\n\nPasswordConfirmedValidatorDirective\n\nAppModule -->\n\nPasswordConfirmedValidatorDirective->AppModule\n\n\n\n\n\nRegistrationComponent\n\nRegistrationComponent\n\nAppModule -->\n\nRegistrationComponent->AppModule\n\n\n\nAppModule -->\n\nRegistrationComponent->AppModule\n\n\n\n\n\nReportComponent\n\nReportComponent\n\nAppModule -->\n\nReportComponent->AppModule\n\n\n\n\n\nReportHistoryComponent\n\nReportHistoryComponent\n\nAppModule -->\n\nReportHistoryComponent->AppModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAppModule -->\n\nResetPasswordComponent->AppModule\n\n\n\n\n\nRunTestToast\n\nRunTestToast\n\nAppModule -->\n\nRunTestToast->AppModule\n\n\n\n\n\nScenarioEditorComponent\n\nScenarioEditorComponent\n\nAppModule -->\n\nScenarioEditorComponent->AppModule\n\n\n\n\n\nStoriesBarComponent\n\nStoriesBarComponent\n\nAppModule -->\n\nStoriesBarComponent->AppModule\n\n\n\n\n\nStoryEditorComponent\n\nStoryEditorComponent\n\nAppModule -->\n\nStoryEditorComponent->AppModule\n\n\n\n\n\nTermsComponent\n\nTermsComponent\n\nAppModule -->\n\nTermsComponent->AppModule\n\n\n\n\n\nTestAccountComponent\n\nTestAccountComponent\n\nAppModule -->\n\nTestAccountComponent->AppModule\n\n\n\n\n\nViewModeDirective\n\nViewModeDirective\n\nAppModule -->\n\nViewModeDirective->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nApiService\n\nApiService\n\nAppModule -->\n\nApiService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AccountManagementComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            ConfirmResetPasswordComponent\n                        \n                        \n                            DeleteScenarioToast\n                        \n                        \n                            EditModeDirective\n                        \n                        \n                            EditableComponent\n                        \n                        \n                            EditableOnEnterDirective\n                        \n                        \n                            ExampleTableComponent\n                        \n                        \n                            FeedbackComponent\n                        \n                        \n                            FocusableDirective\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            ModalsComponent\n                        \n                        \n                            ParentComponent\n                        \n                        \n                            PasswordConfirmedValidatorDirective\n                        \n                        \n                            RegistrationComponent\n                        \n                        \n                            RegistrationComponent\n                        \n                        \n                            ReportComponent\n                        \n                        \n                            ReportHistoryComponent\n                        \n                        \n                            ResetPasswordComponent\n                        \n                        \n                            RunTestToast\n                        \n                        \n                            ScenarioEditorComponent\n                        \n                        \n                            StoriesBarComponent\n                        \n                        \n                            StoryEditorComponent\n                        \n                        \n                            TermsComponent\n                        \n                        \n                            TestAccountComponent\n                        \n                        \n                            ViewModeDirective\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            RunTestToast\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ApiService\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule, CUSTOM_ELEMENTS_SCHEMA} from '@angular/core';\nimport {RouterModule} from '@angular/router';\nimport {ROUTES} from '../app/routes/routes';\nimport {AppComponent} from './app.component';\nimport {ScenarioEditorComponent} from './scenario-editor/scenario-editor.component';\nimport {HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\nimport {ApiService} from './Services/api.service';\nimport {StoriesBarComponent} from './stories-bar/stories-bar.component';\nimport {ParentComponent} from './parent/parent.component';\nimport {LoginComponent} from './login/login.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {AuthGuard} from './guards/auth.guard';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatListModule} from '@angular/material/list'\nimport {ExampleTableComponent} from './example-table/example-table.component';\nimport {EditableComponent} from './editable/editable.component';\nimport {ViewModeDirective} from './directives/view-mode.directive';\nimport {EditModeDirective} from './directives/edit-mode.directive';\nimport {EditableOnEnterDirective} from './directives/edit-on-enter.directive';\nimport {FocusableDirective} from './editable/focusable.directive';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { FeedbackComponent } from './feedback/feedback.component';\nimport { TermsComponent } from './terms/terms.component';\nimport { StoryEditorComponent } from './story-editor/story-editor.component';\nimport { AccountManagementComponent } from './account-management/account-management.component';\nimport {CookieService } from 'ngx-cookie-service';\nimport { TestAccountComponent } from './test-account/test-account.component'\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport { ReportComponent } from './report/report.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { PasswordConfirmedValidatorDirective } from './directives/password-confirmed.directive';\nimport { ToastrModule } from \"ngx-toastr\";\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { MatCarouselModule } from '@ngbmodule/material-carousel';\nimport {RunTestToast} from './runSave-toast'\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\nimport { ConfirmResetPasswordComponent } from './confirm-reset-password/confirm-reset-password.component';\nimport { ModalsComponent } from './modals/modals.component'\nimport { DeleteScenarioToast } from './deleteScenario-toast';\nimport { DEFAULT_TIMEOUT, TimeoutInterceptor } from './Services/timeout-interceptor.interceptor';\nimport { ReportHistoryComponent } from './report-history/report-history.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ScenarioEditorComponent,\n    StoriesBarComponent,\n    ParentComponent,\n    LoginComponent,\n    ExampleTableComponent,\n    ViewModeDirective,\n    EditModeDirective,\n    EditableComponent,\n    FocusableDirective,\n    EditableOnEnterDirective,\n    FeedbackComponent,\n    TermsComponent,\n    AccountManagementComponent,\n    TestAccountComponent,\n    StoryEditorComponent,\n    RegistrationComponent,\n    RegistrationComponent,\n    PasswordConfirmedValidatorDirective,\n    ReportComponent,\n    RunTestToast,\n    DeleteScenarioToast,\n    ResetPasswordComponent,\n    ConfirmResetPasswordComponent,\n    ModalsComponent,\n    ReportHistoryComponent\n  ],\n  imports: [\n      NgbModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    MatTableModule,\n    MatListModule,\n    RouterModule.forRoot(ROUTES),\n    FormsModule,\n    DragDropModule,\n    MatProgressSpinnerModule,\n    MatCarouselModule.forRoot(),\n    ToastrModule.forRoot({\n      timeOut: 3000\n    })\n  ],\n  entryComponents: [RunTestToast],\n  providers: [ApiService, AuthGuard, CookieService,[{ provide: HTTP_INTERCEPTORS, useClass: TimeoutInterceptor, multi: true }], [{ provide: DEFAULT_TIMEOUT, useValue: 120000 }]],\n  bootstrap: [AppComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/auth.guard.ts\n            \n\n                \n                Description\n                \n                \n                    Guard to check if the user is logged in\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/auth.guard.ts:9\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/guards/auth.guard.ts:23\n                \n            \n\n\n            \n                \n                    Checks if the user is logged in\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        boolean if the user is logged in\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { ApiService } from '../Services/api.service';\n\n/**\n * Guard to check if the user is logged in\n */\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n    /**\n     * Constructor\n     * @param apiService \n     * @param router \n     */\n    constructor(private apiService: ApiService,\n                private router: Router) {}\n\n    /**\n     * Checks if the user is logged in\n     * @returns boolean if the user is logged in\n     */\n    canActivate(): boolean {\n        if (this.apiService.isLoggedIn()) { return true; }\n        this.router.navigate(['/login']);\n        return false;\n    }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Background.html":{"url":"interfaces/Background.html","title":"interface - Background","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Background\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/Background.ts\n        \n\n            \n                Description\n            \n            \n                Interface of the Background \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        saved\n                                \n                                \n                                        stepDefinitions\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Given name of the background\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        saved\n                                    \n                                \n                                \n                                    \n                                        saved:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the background is saved\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stepDefinitions\n                                    \n                                \n                                \n                                    \n                                        stepDefinitions:         StepDefinitionBackground\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StepDefinitionBackground\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Stepdefinitions included in the background\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { StepDefinitionBackground } from './StepDefinitionBackground';\n\n/**\n * Interface of the Background \n */\nexport interface Background {\n    /**\n     * Given name of the background\n     */\n    name?: string;\n\n    /**\n     * Stepdefinitions included in the background\n     */\n    stepDefinitions: StepDefinitionBackground;\n\n    /**\n     * If the background is saved\n     */\n    saved?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Block.html":{"url":"interfaces/Block.html","title":"interface - Block","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Block\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/Block.ts\n        \n\n            \n                Description\n            \n            \n                Interface of a block\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        _id\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        owner\n                                \n                                \n                                            Optional\n                                        repository\n                                \n                                \n                                            Optional\n                                        repositoryId\n                                \n                                \n                                            Optional\n                                        source\n                                \n                                \n                                        stepDefinitions\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Object id of the block from the database\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Name of the block\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                    \n                                \n                                \n                                    \n                                        owner:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Creator of the block\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        repository\n                                    \n                                \n                                \n                                    \n                                        repository:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Name of the repository which the block belongs to\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        repositoryId\n                                    \n                                \n                                \n                                    \n                                        repositoryId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Id of the repository which the block belongs to\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Source of the repository the block belongs to\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stepDefinitions\n                                    \n                                \n                                \n                                    \n                                        stepDefinitions:         StepDefinition\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StepDefinition\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Step definitions included in the block\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { StepDefinition } from \"./StepDefinition\";\n\n/**\n * Interface of a block\n */\nexport interface Block {\n    /**\n     * Object id of the block from the database\n     */\n    _id?: any;\n\n    /**\n     * Creator of the block\n     */\n    owner?: any;\n\n    /**\n     * Name of the block\n     */\n    name?: string;\n\n    /**\n     * Step definitions included in the block\n     */\n    stepDefinitions: StepDefinition;\n\n    /**\n     * Id of the repository which the block belongs to\n     */\n    repositoryId?: string;\n\n    /**\n     * Name of the repository which the block belongs to\n     */\n    repository?: string;\n\n    /**\n     * Source of the repository the block belongs to\n     */\n    source?: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmResetPasswordComponent.html":{"url":"components/ConfirmResetPasswordComponent.html","title":"component - ConfirmResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfirmResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/confirm-reset-password/confirm-reset-password.component.ts\n\n\n    \n        Description\n    \n    \n        Component to enable to reset the password\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirm-reset-password\n            \n\n            \n                styleUrls\n                ./confirm-reset-password.component.css\n            \n\n\n\n            \n                templateUrl\n                ./confirm-reset-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiService\n                            \n                            \n                                password\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmReset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/confirm-reset-password/confirm-reset-password.component.ts:25\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                api service\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            confirmReset\n                        \n                        \n                    \n                \n            \n            \n                \nconfirmReset(form: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/confirm-reset-password/confirm-reset-password.component.ts:46\n                \n            \n\n\n            \n                \n                    Confirm the reset and send new password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        form with the new password value\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApiService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/confirm-reset-password/confirm-reset-password.component.ts:34\n                            \n                        \n\n                \n                    \n                        api service\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/confirm-reset-password/confirm-reset-password.component.ts:25\n                            \n                        \n\n                \n                    \n                        New Password of the user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uuid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/confirm-reset-password/confirm-reset-password.component.ts:20\n                            \n                        \n\n                \n                    \n                        Id of the reset password request\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component} from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport {ApiService} from '../Services/api.service';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n/**\n * Component to enable to reset the password\n */\n@Component({\n  selector: 'app-confirm-reset-password',\n  templateUrl: './confirm-reset-password.component.html',\n  styleUrls: ['./confirm-reset-password.component.css']\n})\n\nexport class ConfirmResetPasswordComponent {\n \n  /**\n   * Id of the reset password request\n   */\n  uuid: string;\n\n  /**\n   * New Password of the user\n   */\n  password: string; \n\n \n  /**\n   * Constructor\n   * @param apiService api service\n   * @param router \n   * @param route \n   */\n  constructor(public apiService: ApiService, private router: Router, private route: ActivatedRoute) {\n    this.route.queryParams.subscribe((params) => {\n      if (params.uuid){\n           this.uuid = params.uuid;\n       }\n   })\n  }\n\n  /**\n   * Confirm the reset and send new password\n   * @param form form with the new password value\n   */\n  confirmReset(form : NgForm) {\n    this.apiService.confirmReset(this.uuid, form.value.password).toPromise()\n    this.router.navigate(['/login']);\n  }\n\n}\n\n    \n\n    \n        \n \n   \n    \n    Reset Your Password\n     \n      \n      \n      \n    \n      \n      \n      \n    -->\n    \n      \n      \n      Password must be at least 8 characters long\n      \n        \n      \n      \n      \n\n    \n      Confirm New Password\n    \n  \n\n    \n\n    \n                \n                    ./confirm-reset-password.component.css\n                \n                * {\n    padding: 0px;\n    margin: 0px;\n}\n\n\n#headerFont{\n    color:var(--ocean-blue);\n}\n\n.grid{\n    display: grid;\n    grid-template-rows: auto;\n    grid-template-columns: 1fr 1fr 1fr;\n    grid-template-areas: \"formular\";\n    background-color: var(--white);\n    place-items: center;\n}\n\n.formular{\n    grid-area: formular;\n    grid-column: 2 / 3;\n    text-align: center;\n    background-color: var(--white);\n    padding: 80px 50px 20px;\n    margin-bottom: 80px;\n}\n\n\n#passwordLengthInfo{\n    font-size: small;\n}\n\n#headerFont{\n    color:var(--ocean-blue);\n}\n\n.uk-form-controls{\n    border-radius: 3px;\n    padding: 5px 5px 5px 5px;\n}\n\n.ng-valid[required], .ng-valid.required  {\n    border-left: 5px solid #53d35a; \n  }\n  \n.ng-invalid:not(form)  {\n    border-left: 5px solid var(--ocean-blue); \n  }\n\n.cross-validation-error input {\n    border-left: 5px solid #d15553;\n  }\n\ninput.wrongEmail {\n  border-left: 5px solid #d15553;\n}\n\n#email, #confirmPassword{\n    margin: 25px;\n}\n\n.wrongLogin{\n    background-color: rgb(228, 92, 92);\n    text-align: center;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Reset Your Password                                                 -->                      Password must be at least 8 characters long                                          Confirm New Password      '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmResetPasswordComponent', 'selector': 'app-confirm-reset-password'},{'name': 'DeleteScenarioToast', 'selector': '[pink-toast-component]'},{'name': 'EditableComponent', 'selector': 'editable'},{'name': 'ExampleTableComponent', 'selector': 'app-example-table'},{'name': 'FeedbackComponent', 'selector': 'app-feedback'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalsComponent', 'selector': 'app-modals'},{'name': 'ParentComponent', 'selector': 'app-parent'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'ReportHistoryComponent', 'selector': 'app-report-history'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RunTestToast', 'selector': '[pink-toast-component]'},{'name': 'ScenarioEditorComponent', 'selector': 'app-scenario-editor'},{'name': 'StoriesBarComponent', 'selector': 'app-stories-bar'},{'name': 'StoryEditorComponent', 'selector': 'app-story-editor'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'TestAccountComponent', 'selector': 'app-test-account'}];\n    var DIRECTIVES = [{'name': 'EditableOnEnterDirective', 'selector': '[editableOnEnter]'},{'name': 'EditModeDirective', 'selector': '[editMode]'},{'name': 'FocusableDirective', 'selector': '[focusable]'},{'name': 'PasswordConfirmedValidatorDirective', 'selector': '[appPasswordConfirmed]'},{'name': 'ViewModeDirective', 'selector': '[viewMode]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DeleteScenarioToast.html":{"url":"components/DeleteScenarioToast.html","title":"component - DeleteScenarioToast","body":"\n                   \n\n\n\n\n\n  Components\n  DeleteScenarioToast\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/deleteScenario-toast.ts\n\n\n    \n        Description\n    \n    \n        Component of the Delete Scenario toasts\n\n    \n\n    \n        Extends\n    \n    \n            Toast\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n            \n                preserveWhitespaces\n                false\n            \n\n\n\n            \n                selector\n                [pink-toast-component]\n            \n\n\n            \n                styles\n                \n        a {\n            background: #388196;\n            margin: 2px;\n        }\n\n        .deleteButton{\n          background: darkred;\n        }\n        \n        a:hover {\n            color: black;\n        }\n    \n            \n\n            \n                template\n                \n  \n    \n      {{ title }}\n    \n    \n    \n    \n      {{ message }}\n    \n  \n  \n    \n        {{ deleteString }}\n    \n    \n    {{ cancelString }}\n    \n    \n      close\n    \n  \n\n\n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiService\n                            \n                            \n                                cancelString\n                            \n                            \n                                deleteString\n                            \n                            \n                                    Public\n                                toastPackage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteToast\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toastrService: ToastrService, toastPackage: ToastPackage, apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/deleteScenario-toast.ts:125\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toastrService\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        toastPackage\n                                                  \n                                                        \n                                                                    ToastPackage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                constructor is only necessary when not using AoT\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteToast\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteToast(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/deleteScenario-toast.ts:146\n                \n            \n\n\n            \n                \n                    Creates a toast and deltes the scenario\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApiService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/deleteScenario-toast.ts:137\n                            \n                        \n\n                \n                    \n                        constructor is only necessary when not using AoT\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cancelString\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Cancel'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/deleteScenario-toast.ts:125\n                            \n                        \n\n                \n                    \n                        Name of the cancel button\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deleteString\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Delete'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/deleteScenario-toast.ts:121\n                            \n                        \n\n                \n                    \n                        Name of the delete button\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toastPackage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ToastPackage\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/deleteScenario-toast.ts:136\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n    animate,\n    keyframes,\n    state,\n    style,\n    transition,\n    trigger\n  } from '@angular/animations';\nimport { Component} from '@angular/core';\nimport { Toast, ToastrService, ToastPackage } from 'ngx-toastr';\nimport { ApiService } from './Services/api.service';\n  \n/**\n * Component of the Delete Scenario toasts\n */\n  @Component({\n    selector: '[pink-toast-component]',\n    //styles: [`\n    //  :host {\n    //    background-color: #FF69B4;\n    //    position: relative;\n    //    overflow: hidden;\n    //    margin: 0 0 6px;\n    //    padding: 10px 10px 10px 10px;\n    //    width: 300px;\n    //    border-radius: 3px 3px 3px 3px;\n    //    color: #FFFFFF;\n    //    pointer-events: all;\n    //    cursor: pointer;\n    //  }\n    //  .btn-pink {\n    //    -webkit-backface-visibility: hidden;\n    //    -webkit-transform: translateZ(0);\n    //  }\n    //`],\n    styles:[`\n        a {\n            background: #388196;\n            margin: 2px;\n        }\n\n        .deleteButton{\n          background: darkred;\n        }\n        \n        a:hover {\n            color: black;\n        }\n    `],\n    template: `\n    \n      \n        \n          {{ title }}\n        \n        \n        \n        \n          {{ message }}\n        \n      \n      \n        \n            {{ deleteString }}\n        \n        \n        {{ cancelString }}\n        \n        \n          close\n        \n      \n    \n    \n      \n    \n    `,\n    animations: [\n      trigger('flyInOut', [\n        state('inactive', style({\n          opacity: 0,\n        })),\n        transition('inactive => active', animate('400ms ease-out', keyframes([\n          style({\n            transform: 'translate3d(100%, 0, 0) skewX(-30deg)',\n            opacity: 0,\n          }),\n          style({\n            transform: 'skewX(20deg)',\n            opacity: 1,\n          }),\n          style({\n            transform: 'skewX(-5deg)',\n            opacity: 1,\n          }),\n          style({\n            transform: 'none',\n            opacity: 1,\n          }),\n        ]))),\n        transition('active => removed', animate('400ms ease-out', keyframes([\n          style({\n            opacity: 1,\n          }),\n          style({\n            transform: 'translate3d(100%, 0, 0) skewX(30deg)',\n            opacity: 0,\n          }),\n        ]))),\n      ]),\n    ],\n    preserveWhitespaces: false,\n  })\n  export class DeleteScenarioToast extends Toast {\n    \n    /**\n     * Name of the delete button\n     */\n    deleteString = 'Delete';\n    /**\n     * Name of the cancel button\n     */\n    cancelString = 'Cancel';\n\n    /**\n     * Constructor\n     * @param toastrService \n     * @param toastPackage \n     * @param apiService \n     * constructor is only necessary when not using AoT\n     */\n    constructor(\n      protected toastrService: ToastrService,\n      public toastPackage: ToastPackage,\n      public apiService: ApiService\n    ) {\n      super(toastrService, toastPackage);\n    }\n    \n    /**\n     * Creates a toast and deltes the scenario\n     * @param event \n     */\n    deleteToast(event: Event){\n        event.stopPropagation();\n        this.apiService.deleteScenarioEmitter()\n        this.remove();\n    }\n  }\n    \n\n\n    \n            \n        a {\n            background: #388196;\n            margin: 2px;\n        }\n\n        .deleteButton{\n          background: darkred;\n        }\n        \n        a:hover {\n            color: black;\n        }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ title }}                      {{ message }}                    {{ deleteString }}            {{ cancelString }}              close        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmResetPasswordComponent', 'selector': 'app-confirm-reset-password'},{'name': 'DeleteScenarioToast', 'selector': '[pink-toast-component]'},{'name': 'EditableComponent', 'selector': 'editable'},{'name': 'ExampleTableComponent', 'selector': 'app-example-table'},{'name': 'FeedbackComponent', 'selector': 'app-feedback'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalsComponent', 'selector': 'app-modals'},{'name': 'ParentComponent', 'selector': 'app-parent'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'ReportHistoryComponent', 'selector': 'app-report-history'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RunTestToast', 'selector': '[pink-toast-component]'},{'name': 'ScenarioEditorComponent', 'selector': 'app-scenario-editor'},{'name': 'StoriesBarComponent', 'selector': 'app-stories-bar'},{'name': 'StoryEditorComponent', 'selector': 'app-story-editor'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'TestAccountComponent', 'selector': 'app-test-account'}];\n    var DIRECTIVES = [{'name': 'EditableOnEnterDirective', 'selector': '[editableOnEnter]'},{'name': 'EditModeDirective', 'selector': '[editMode]'},{'name': 'FocusableDirective', 'selector': '[focusable]'},{'name': 'PasswordConfirmedValidatorDirective', 'selector': '[appPasswordConfirmed]'},{'name': 'ViewModeDirective', 'selector': '[viewMode]'}];\n    var ACTUAL_COMPONENT = {'name': 'DeleteScenarioToast'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/EditModeDirective.html":{"url":"directives/EditModeDirective.html","title":"directive - EditModeDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  EditModeDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/directives/edit-mode.directive.ts\n        \n\n            \n                Description\n            \n            \n                Directive to activate Edit Mode for the example table\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [editMode]\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive, TemplateRef } from '@angular/core';\n\n/**\n * Directive to activate Edit Mode for the example table\n */\n\n@Directive({\n  selector: '[editMode]'\n})\n\nexport class EditModeDirective {\n  /**\n   * @ignore\n   */\n  constructor(public tpl: TemplateRef) { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditableComponent.html":{"url":"components/EditableComponent.html","title":"component - EditableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EditableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/editable/editable.component.ts\n\n\n    \n        Description\n    \n    \n        Component to enable editable cells in the example table\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                editable\n            \n\n            \n                styleUrls\n                ./editable.component.css\n            \n\n\n\n            \n                templateUrl\n                ./editable.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editMode\n                            \n                            \n                                editMode$\n                            \n                            \n                                editModeTpl\n                            \n                            \n                                mode\n                            \n                            \n                                viewModeTpl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                editModeHandler\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toViewMode\n                            \n                            \n                                    Private\n                                viewModeHandler\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    element\n                                \n                                \n                                    currentView\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        update\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/editable/editable.component.ts:21\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            editModeHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editModeHandler()\n                \n            \n\n\n            \n                \n                    Defined in src/app/editable/editable.component.ts:76\n                \n            \n\n\n            \n                \n                    Handles the edit mode\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/editable/editable.component.ts:36\n                \n            \n\n\n            \n                \n                    handles the edit and view mode on init\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toViewMode\n                        \n                        \n                    \n                \n            \n            \n                \ntoViewMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/editable/editable.component.ts:49\n                \n            \n\n\n            \n                \n                    Changes to the view mode\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            viewModeHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    viewModeHandler()\n                \n            \n\n\n            \n                \n                    Defined in src/app/editable/editable.component.ts:64\n                \n            \n\n\n            \n                \n                    handles the view mode\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editMode\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/editable/editable.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editMode$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.editMode.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/editable/editable.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editModeTpl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EditModeDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChild(EditModeDirective)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/editable/editable.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"view\" | \"edit\"\n\n                        \n                    \n                    \n                        \n                            Default value : 'view'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/editable/editable.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            viewModeTpl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ViewModeDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChild(ViewModeDirective)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/editable/editable.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        element\n                    \n                \n\n                \n                    \n                        getelement()\n                    \n                \n                            \n                                \n                                    Defined in src/app/editable/editable.component.ts:57\n                                \n                            \n                    \n                        \n                                Gets the native element\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        currentView\n                    \n                \n\n                \n                    \n                        getcurrentView()\n                    \n                \n                            \n                                \n                                    Defined in src/app/editable/editable.component.ts:90\n                                \n                            \n                    \n                        \n                                Gets the current mode\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, ContentChild, ElementRef, EventEmitter,\n   Output, OnInit, OnDestroy } from '@angular/core';\nimport { ViewModeDirective } from '../directives/view-mode.directive';\nimport { EditModeDirective } from '../directives/edit-mode.directive';\nimport { fromEvent, Subject } from 'rxjs';\nimport { filter, take, switchMapTo } from 'rxjs/operators';\nimport { untilDestroyed } from 'ngx-take-until-destroy';\n\n/**\n * Component to enable editable cells in the example table\n */\n@Component({\n  selector: 'editable',\n  templateUrl: './editable.component.html',\n  styleUrls: ['./editable.component.css']\n})\n\nexport class EditableComponent implements OnInit, OnDestroy {\n  @ContentChild(ViewModeDirective) viewModeTpl: ViewModeDirective;\n  @ContentChild(EditModeDirective) editModeTpl: EditModeDirective;\n  @Output() update = new EventEmitter();\n\n  editMode = new Subject();\n  editMode$ = this.editMode.asObservable();\n\n  mode: 'view' | 'edit' = 'view';\n\n  /**\n   * @ignore\n   */\n  constructor(private host: ElementRef) {}\n\n  /**\n   * handles the edit and view mode on init\n   */\n  ngOnInit() {\n    this.viewModeHandler();\n    this.editModeHandler();\n  }\n\n  /**\n   * @ignore\n   */\n  ngOnDestroy() {}\n\n  /**\n   * Changes to the view mode\n   */\n  toViewMode() {\n    this.update.emit();\n    this.mode = 'view';\n  }\n\n  /**\n   * Gets the native element\n   */\n  private get element() {\n    return this.host.nativeElement;\n  }\n\n  /**\n   * handles the view mode\n   */\n  private viewModeHandler() {\n    fromEvent(this.element, 'dblclick').pipe(\n      untilDestroyed(this)\n    ).subscribe(() => {\n      this.mode = 'edit';\n      this.editMode.next(true);\n    });\n  }\n\n  /**\n   * Handles the edit mode\n   */\n  private editModeHandler() {\n    const clickOutside$ = fromEvent(document, 'click').pipe(\n      filter(({ target }) => this.element.contains(target) === false),\n      take(1)\n    );\n    this.editMode$.pipe(\n      switchMapTo(clickOutside$),\n      untilDestroyed(this)\n    ).subscribe(event => this.toViewMode());\n  }\n\n  /**\n   * Gets the current mode\n   */\n  get currentView() {\n    return this.mode === 'view' ? this.viewModeTpl.tpl : this.editModeTpl.tpl;\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./editable.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmResetPasswordComponent', 'selector': 'app-confirm-reset-password'},{'name': 'DeleteScenarioToast', 'selector': '[pink-toast-component]'},{'name': 'EditableComponent', 'selector': 'editable'},{'name': 'ExampleTableComponent', 'selector': 'app-example-table'},{'name': 'FeedbackComponent', 'selector': 'app-feedback'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalsComponent', 'selector': 'app-modals'},{'name': 'ParentComponent', 'selector': 'app-parent'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'ReportHistoryComponent', 'selector': 'app-report-history'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RunTestToast', 'selector': '[pink-toast-component]'},{'name': 'ScenarioEditorComponent', 'selector': 'app-scenario-editor'},{'name': 'StoriesBarComponent', 'selector': 'app-stories-bar'},{'name': 'StoryEditorComponent', 'selector': 'app-story-editor'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'TestAccountComponent', 'selector': 'app-test-account'}];\n    var DIRECTIVES = [{'name': 'EditableOnEnterDirective', 'selector': '[editableOnEnter]'},{'name': 'EditModeDirective', 'selector': '[editMode]'},{'name': 'FocusableDirective', 'selector': '[focusable]'},{'name': 'PasswordConfirmedValidatorDirective', 'selector': '[appPasswordConfirmed]'},{'name': 'ViewModeDirective', 'selector': '[viewMode]'}];\n    var ACTUAL_COMPONENT = {'name': 'EditableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/EditableOnEnterDirective.html":{"url":"directives/EditableOnEnterDirective.html","title":"directive - EditableOnEnterDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  EditableOnEnterDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/directives/edit-on-enter.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [editableOnEnter]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                keyup.enter\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            keyup.enter\n                        \n                        \n                    \n                \n            \n            \n                \nkeyup.enter()\n                \n            \n\n\n            \n                \n                    Defined in src/app/directives/edit-on-enter.directive.ts:21\n                \n            \n\n\n            \n                \n                    Enters the view mode\n\n\n                \n            \n        \n    \n\n\n\n\n    \n\n\n    \n        import { Directive, HostListener } from '@angular/core';\nimport { EditableComponent } from '../editable/editable.component';\n\n@Directive({\n  selector: '[editableOnEnter]'\n})\n\n/**\n * Directive to activate change the editable field for the example table\n */\nexport class EditableOnEnterDirective {\n  /**\n   * @ignore\n   */\n  constructor(private editable: EditableComponent) {}\n\n  /**\n   * Enters the view mode\n   */\n  @HostListener('keyup.enter')\n  onEnter() {\n    this.editable.toViewMode();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExampleTableComponent.html":{"url":"components/ExampleTableComponent.html","title":"component - ExampleTableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ExampleTableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/example-table/example-table.component.ts\n\n\n    \n        Description\n    \n    \n        Component of for the Example Table\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-example-table\n            \n\n            \n                styleUrls\n                ./example-table.component.css\n            \n\n\n\n            \n                templateUrl\n                ./example-table.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                controls\n                            \n                            \n                                data\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                exampleThere\n                            \n                            \n                                selectedScenario\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkExample\n                            \n                            \n                                getControl\n                            \n                            \n                                initializeTable\n                            \n                            \n                                initializeTableControls\n                            \n                            \n                                inputChange\n                            \n                            \n                                updateField\n                            \n                            \n                                updateTable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                newSelectedScenario\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                checkRowIndex\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    newSelectedScenario\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        newSelectedScenario\n                    \n                \n                        \n                            \n                                    Defined in src/app/example-table/example-table.component.ts:59\n                            \n                        \n                \n                    \n                        Sets the new scenario\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        checkRowIndex\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/example-table/example-table.component.ts:43\n                            \n                        \n                \n                    \n                        Event emitter to check if ththe example table should be removed or added to\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkExample\n                        \n                        \n                    \n                \n            \n            \n                \ncheckExample(event, rowIndex)\n                \n            \n\n\n            \n                \n                    Defined in src/app/example-table/example-table.component.ts:154\n                \n            \n\n\n            \n                \n                    Emits an event to check if the example table should be removed\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        change event\n\n                                    \n                                \n                                \n                                    rowIndex\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        row index of the changed cell\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getControl\n                        \n                        \n                    \n                \n            \n            \n                \ngetControl(rowIndex: number, fieldName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/example-table/example-table.component.ts:132\n                \n            \n\n\n            \n                \n                    Get the controls of a specific cell\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    rowIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        index of the row\n\n                                    \n                                \n                                \n                                    fieldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        name of the cell column\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        FormControl of the cell\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeTable\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/example-table/example-table.component.ts:99\n                \n            \n\n\n            \n                \n                    Initializes the data of the table\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initializeTableControls\n                        \n                        \n                    \n                \n            \n            \n                \ninitializeTableControls()\n                \n            \n\n\n            \n                \n                    Defined in src/app/example-table/example-table.component.ts:74\n                \n            \n\n\n            \n                \n                    Initializes the controls of the table\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            inputChange\n                        \n                        \n                    \n                \n            \n            \n                \ninputChange()\n                \n            \n\n\n            \n                \n                    Defined in src/app/example-table/example-table.component.ts:67\n                \n            \n\n\n            \n                \n                    Sets the status of the scenario to not saved\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateField\n                        \n                        \n                    \n                \n            \n            \n                \nupdateField(columnIndex: number, rowIndex: number, field: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/example-table/example-table.component.ts:116\n                \n            \n\n\n            \n                \n                    Updates a field of the table\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    columnIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        index of the column of the changed value\n\n                                    \n                                \n                                \n                                    rowIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        index of the row of the changed value\n\n                                    \n                                \n                                \n                                    field\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        name of the changed value column\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateTable\n                        \n                        \n                    \n                \n            \n            \n                \nupdateTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/example-table/example-table.component.ts:139\n                \n            \n\n\n            \n                \n                    Updates the table controls and data\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            controls\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormArray\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/example-table/example-table.component.ts:27\n                            \n                        \n\n                \n                    \n                        Controls of the table\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/example-table/example-table.component.ts:22\n                            \n                        \n\n                \n                    \n                        Data of the table entries\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/example-table/example-table.component.ts:18\n                            \n                        \n\n                \n                    \n                        Columns which are displayed in the table\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            exampleThere\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/example-table/example-table.component.ts:37\n                            \n                        \n\n                \n                    \n                        Boolean if the example table should be shown or not\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedScenario\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Scenario\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/example-table/example-table.component.ts:32\n                            \n                        \n\n                \n                    \n                        selected Scenario\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        newSelectedScenario\n                    \n                \n\n\n                \n                    \n                        setnewSelectedScenario(scenario)\n                    \n                \n                            \n                                \n                                    Defined in src/app/example-table/example-table.component.ts:59\n                                \n                            \n                    \n                        \n                                Sets the new scenario\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            scenario\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormArray, FormControl } from '@angular/forms';\nimport { Scenario } from '../model/Scenario';\n\n/**\n * Component of for the Example Table\n */\n@Component({\n  selector: 'app-example-table',\n  templateUrl: './example-table.component.html',\n  styleUrls: ['./example-table.component.css']\n})\nexport class ExampleTableComponent implements OnInit {\n\n  /**\n   * Columns which are displayed in the table\n   */\n  displayedColumns: string[] = [];\n  /**\n   * Data of the table entries\n   */\n  data = [];\n\n  /**\n   * Controls of the table\n   */\n  controls: FormArray;\n\n  /**\n   * selected Scenario\n   */\n  selectedScenario: Scenario;\n\n  /**\n   * Boolean if the example table should be shown or not\n   */\n  exampleThere: boolean = false;\n\n  /**\n   * Event emitter to check if ththe example table should be removed or added to\n   */\n  @Output()\n  checkRowIndex: EventEmitter = new EventEmitter();\n\n  /**\n   * @ignore\n   */\n  constructor() {}\n\n    /**\n   * @ignore\n   */\n  ngOnInit() {}\n\n  /**\n   * Sets the new scenario\n   */\n  @Input()\n  set newSelectedScenario(scenario: Scenario) {\n    this.selectedScenario = scenario;\n    this.updateTable();\n  }\n\n  /**\n   * Sets the status of the scenario to not saved\n   */\n  inputChange(){\n    this.selectedScenario.saved = false;\n  }\n\n  /**\n   * Initializes the controls of the table\n   */\n  initializeTableControls() {\n    //let seen = new Set();\n    //this.selectedScenario.stepDefinitions.example[0].values.filter(item => {\n    //    let k = item;\n    //    return seen.has(k) ? false : seen.add(k);\n    //});\n    //this.selectedScenario.stepDefinitions.example[0].values = Array.from(seen);\n    this.displayedColumns = this.selectedScenario.stepDefinitions.example[0].values;\n    const formArray: FormGroup[] = [];\n    for (let i = 1 ; i \n    \n\n    \n        \n\n\t\n\n\n\t \n\t\t\t {{column}}\n\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t{{element[column]}}\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t \n\t\t\t\n\t\t\t\t\n\t\n\t\n\t\n\n\n\n\n    \n\n    \n                \n                    ./example-table.component.css\n                \n                table {\n    margin-top: 5px;\n    width: 100%;\n}\n\n.deactivated{\n  color: gray;\n  font-style: italic;\n}\n\n.valueRow{\n  font-weight: normal;\n}\n\n.mat-table{\n  font-family: Klavika, sans-serif;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t \t\t\t {{column}}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{element[column]}}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmResetPasswordComponent', 'selector': 'app-confirm-reset-password'},{'name': 'DeleteScenarioToast', 'selector': '[pink-toast-component]'},{'name': 'EditableComponent', 'selector': 'editable'},{'name': 'ExampleTableComponent', 'selector': 'app-example-table'},{'name': 'FeedbackComponent', 'selector': 'app-feedback'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalsComponent', 'selector': 'app-modals'},{'name': 'ParentComponent', 'selector': 'app-parent'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'ReportHistoryComponent', 'selector': 'app-report-history'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RunTestToast', 'selector': '[pink-toast-component]'},{'name': 'ScenarioEditorComponent', 'selector': 'app-scenario-editor'},{'name': 'StoriesBarComponent', 'selector': 'app-stories-bar'},{'name': 'StoryEditorComponent', 'selector': 'app-story-editor'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'TestAccountComponent', 'selector': 'app-test-account'}];\n    var DIRECTIVES = [{'name': 'EditableOnEnterDirective', 'selector': '[editableOnEnter]'},{'name': 'EditModeDirective', 'selector': '[editMode]'},{'name': 'FocusableDirective', 'selector': '[focusable]'},{'name': 'PasswordConfirmedValidatorDirective', 'selector': '[appPasswordConfirmed]'},{'name': 'ViewModeDirective', 'selector': '[viewMode]'}];\n    var ACTUAL_COMPONENT = {'name': 'ExampleTableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FeedbackComponent.html":{"url":"components/FeedbackComponent.html","title":"component - FeedbackComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FeedbackComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/feedback/feedback.component.ts\n\n\n    \n        Description\n    \n    \n        Component for the feedback of the user\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-feedback\n            \n\n            \n                styleUrls\n                ./feedback.component.css\n            \n\n\n\n            \n                templateUrl\n                ./feedback.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Component for the feedback of the user\n */\n@Component({\n  selector: 'app-feedback',\n  templateUrl: './feedback.component.html',\n  styleUrls: ['./feedback.component.css']\n})\nexport class FeedbackComponent implements OnInit {\n  /**\n   * @ignore\n   */\n  constructor() {\n   }\n  /**\n   * @ignore\n   */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n         \n  Wird geladen…\n\n\n\n    \n\n    \n                \n                    ./feedback.component.css\n                \n                iframe{\n    display: block;\n    margin: 0 auto;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   Wird geladen…'\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmResetPasswordComponent', 'selector': 'app-confirm-reset-password'},{'name': 'DeleteScenarioToast', 'selector': '[pink-toast-component]'},{'name': 'EditableComponent', 'selector': 'editable'},{'name': 'ExampleTableComponent', 'selector': 'app-example-table'},{'name': 'FeedbackComponent', 'selector': 'app-feedback'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalsComponent', 'selector': 'app-modals'},{'name': 'ParentComponent', 'selector': 'app-parent'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'ReportHistoryComponent', 'selector': 'app-report-history'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RunTestToast', 'selector': '[pink-toast-component]'},{'name': 'ScenarioEditorComponent', 'selector': 'app-scenario-editor'},{'name': 'StoriesBarComponent', 'selector': 'app-stories-bar'},{'name': 'StoryEditorComponent', 'selector': 'app-story-editor'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'TestAccountComponent', 'selector': 'app-test-account'}];\n    var DIRECTIVES = [{'name': 'EditableOnEnterDirective', 'selector': '[editableOnEnter]'},{'name': 'EditModeDirective', 'selector': '[editMode]'},{'name': 'FocusableDirective', 'selector': '[focusable]'},{'name': 'PasswordConfirmedValidatorDirective', 'selector': '[appPasswordConfirmed]'},{'name': 'ViewModeDirective', 'selector': '[viewMode]'}];\n    var ACTUAL_COMPONENT = {'name': 'FeedbackComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/FocusableDirective.html":{"url":"directives/FocusableDirective.html","title":"directive - FocusableDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  FocusableDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/editable/focusable.directive.ts\n        \n\n            \n                Description\n            \n            \n                Directive for an table cell to be focusable\n\n            \n\n            \n                Implements\n            \n            \n                            AfterViewInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [focusable]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/editable/focusable.directive.ts:19\n                \n            \n\n\n            \n                \n                    focues the native element\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, AfterViewInit } from '@angular/core';\n\n/**\n * Directive for an table cell to be focusable\n */\n@Directive({\n  selector: '[focusable]'\n})\nexport class FocusableDirective implements AfterViewInit {\n\n  /**\n   * @ignore\n   */\n  constructor(private host: ElementRef) { }\n\n  /**\n   * focues the native element\n   */\n  ngAfterViewInit() {\n    this.host.nativeElement.focus();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        Component to handle the client login\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiService\n                            \n                            \n                                error\n                            \n                            \n                                isLoadingRepositories\n                            \n                            \n                                repositories\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                slide0\n                            \n                            \n                                slide01\n                            \n                            \n                                slide02\n                            \n                            \n                                slide03\n                            \n                            \n                                slide04\n                            \n                            \n                                slide05\n                            \n                            \n                                slide06\n                            \n                            \n                                slide07\n                            \n                            \n                                slide08\n                            \n                            \n                                slide09\n                            \n                            \n                                slide10\n                            \n                            \n                                slide11\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRepositories\n                            \n                            \n                                githubLogin\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                loginGithubToken\n                            \n                            \n                                    Async\n                                loginTestAccount\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                selectRepository\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, router: Router, route: ActivatedRoute, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:46\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRepositories\n                        \n                        \n                    \n                \n            \n            \n                \ngetRepositories()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:148\n                \n            \n\n\n            \n                \n                    Retrieves the repositories / projects of the user\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            githubLogin\n                        \n                        \n                    \n                \n            \n            \n                \ngithubLogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:200\n                \n            \n\n\n            \n                \n                    Loggs in the user with Github\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(form: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:117\n                \n            \n\n\n            \n                \n                    Loggs in the user with a Seed-Test account\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loginGithubToken\n                        \n                        \n                    \n                \n            \n            \n                \nloginGithubToken(login: string, id: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:97\n                \n            \n\n\n            \n                \n                    Loggs in the user with github after retrieving the github token\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    login\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            loginTestAccount\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loginTestAccount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:139\n                \n            \n\n\n            \n                \n                    Redirects the user to the Test account\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:82\n                \n            \n\n\n            \n                \n                    Needed for ExpressionChangedAfterItHasBeenCheckedError mat-carousel error\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectRepository\n                        \n                        \n                    \n                \n            \n            \n                \nselectRepository(userRepository: RepositoryContainer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:188\n                \n            \n\n\n            \n                \n                    Selects a repository and redirects the user to the story editor\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    userRepository\n                                    \n                                                RepositoryContainer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        selected repository\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApiService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:25\n                            \n                        \n\n                \n                    \n                        Login error\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoadingRepositories\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:30\n                            \n                        \n\n                \n                    \n                        Boolean to see if the repository is loading\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            repositories\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RepositoryContainer[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:20\n                            \n                        \n\n                \n                    \n                        Repositories / projects of the user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slide0\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{'image0': '/assets//slide0.png'}]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:35\n                            \n                        \n\n                \n                    \n                        Tutorial slides\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slide01\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{'image01': '/assets//slide01.PNG'}]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slide02\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{'image02': '/assets//slide02.png'}]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slide03\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{'image03': '/assets//slide03.PNG'}]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slide04\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{'image04': '/assets//slide04.PNG'}]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slide05\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{'image05': '/assets//slide05.PNG'}]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slide06\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{'image06': '/assets//slide06.PNG'}]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slide07\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{'image07': '/assets//slide07.png'}]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slide08\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{'image08': '/assets//slide08.PNG'}]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slide09\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{'image09': '/assets//slide09.PNG'}]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slide10\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{'image10': '/assets//slide10.PNG'}]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slide11\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [{'image11': '/assets//slide11.png'}]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:46\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {AfterViewInit, ChangeDetectorRef, Component, OnInit} from '@angular/core';\nimport {ApiService} from '../Services/api.service';\nimport {Router, ActivatedRoute} from '@angular/router';\nimport {NgForm} from '@angular/forms';\nimport { RepositoryContainer } from '../model/RepositoryContainer';\n\n/**\n * Component to handle the client login\n */\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit, AfterViewInit {\n\n    /**\n     * Repositories / projects of the user\n     */\n    repositories: RepositoryContainer[];\n    \n    /**\n     * Login error\n     */\n    error: string;\n\n    /**\n     * Boolean to see if the repository is loading\n     */\n    isLoadingRepositories: boolean;\n\n    /**\n     * Tutorial slides\n     */\n    slide0 = [{'image0': '/assets//slide0.png'}];\n    slide01 = [{'image01': '/assets//slide01.PNG'}];\n    slide02 = [{'image02': '/assets//slide02.png'}];\n    slide03 = [{'image03': '/assets//slide03.PNG'}];\n    slide04 = [{'image04': '/assets//slide04.PNG'}];\n    slide05 = [{'image05': '/assets//slide05.PNG'}];\n    slide06 = [{'image06': '/assets//slide06.PNG'}];\n    slide07 = [{'image07': '/assets//slide07.png'}];\n    slide08 = [{'image08': '/assets//slide08.PNG'}];\n    slide09 = [{'image09': '/assets//slide09.PNG'}];\n    slide10 = [{'image10': '/assets//slide10.PNG'}];\n    slide11 = [{'image11': '/assets//slide11.png'}];\n\n\n    /**\n     * Constructor\n     * @param apiService \n     * @param router \n     * @param route \n     * @param cdr \n     */\n    constructor(public apiService: ApiService, public router: Router, private route: ActivatedRoute, private cdr: ChangeDetectorRef) {\n        this.error = undefined;\n        this.route.queryParams.subscribe((params) => {\n           if (params.code){\n                this.apiService.githubCallback(params.code).subscribe(resp => {\n                    if (resp.error){\n                        this.error = resp.error\n                    }else{\n                        localStorage.setItem('login', 'true')\n                        this.getRepositories()\n                        let userId = localStorage.getItem('userId');\n                        localStorage.removeItem('userId');\n                        if(userId){\n                            this.apiService.mergeAccountGithub(userId, resp.login, resp.id).subscribe((respo) => {\n                                this.loginGithubToken(resp.login, resp.id);\n                            })\n                        }\n                    }\n                })\n            }\n        })\n    }\n\n    /**\n     * Needed for ExpressionChangedAfterItHasBeenCheckedError mat-carousel error\n     */\n    ngAfterViewInit(): void {\n        this.cdr.detectChanges();\n    }\n\n    /**\n     * @ignore\n     */\n    ngOnInit() {\n    }\n\n    /**\n     * Loggs in the user with github after retrieving the github token\n     * @param login \n     * @param id \n     */\n    loginGithubToken(login: string, id: any){\n        this.apiService.loginGithubToken(login, id).subscribe((resp) => {\n            if (resp.status === 'error') {\n                this.error = resp.message;\n            } else if (resp.message === 'repository') {\n                let repository = resp.repository;\n                localStorage.setItem('repositoryType', 'github');\n                localStorage.setItem('repository', repository);\n                this.isLoadingRepositories = false;\n                this.router.navigate(['/']);\n            } else {\n                this.getRepositories()\n            }\n        })\n    }\n\n    /**\n     * Loggs in the user with a Seed-Test account\n     * @param form \n     */\n    async login(form: NgForm) {\n        this.isLoadingRepositories = true;\n        this.error = undefined;\n        let user ={\n            email: form.value.email,\n            password: form.value.password,\n            stayLoggedIn: form.value.stayLoggedIn\n        };\n        const response = await this.apiService.loginUser(user).toPromise()\n        if (response.status === 'error') {\n            this.isLoadingRepositories = false;\n            this.error = response.message;\n        } else {\n            localStorage.setItem('login', 'true');\n            this.getRepositories();\n        }\n    }\n\n\n    /**\n     * Redirects the user to the Test account\n     */\n    async loginTestAccount() {\n        localStorage.setItem('repository', 'adessoCucumber/Cucumber')\n        localStorage.setItem('source', 'github')\n        this.router.navigate(['/testaccount']);\n    }\n\n    /**\n     * Retrieves the repositories / projects of the user\n     */\n     getRepositories() {\n        let value = localStorage.getItem('repository')\n        let source = localStorage.getItem('source')\n        let _id = localStorage.getItem('id');\n        let repository: RepositoryContainer = {value, source, _id}\n        this.isLoadingRepositories = true;\n        const loadingSpinner: HTMLElement = document.getElementById('loadingSpinner');\n        if (loadingSpinner){\n            loadingSpinner.scrollIntoView();\n        }\n        this.apiService.getRepositories().subscribe((resp: RepositoryContainer[]) => {\n            console.log(resp)\n            if(resp.length  {\n                if(elem.value == repository.value && elem.source == repository.source && elem._id == repository._id){\n                    this.router.navigate(['']);\n                }\n            })\n            this.repositories = resp;\n            this.isLoadingRepositories = false;\n            setTimeout(() => {\n                const repositoriesList: HTMLElement = document.getElementById('repositoriesList');\n                if (repositoriesList){\n                    repositoriesList.scrollIntoView();\n                }\n            }, 500)\n\n        }, (err) => {\n            this.error = err.error;\n            this.isLoadingRepositories = false;\n        });\n    }\n\n    /**\n     * Selects a repository and redirects the user to the story editor\n     * @param userRepository selected repository\n     */\n    selectRepository(userRepository: RepositoryContainer) {\n        const ref: HTMLLinkElement = document.getElementById('githubHref') as HTMLLinkElement;\n        ref.href = 'https://github.com/' + userRepository.value;\n        localStorage.setItem('repository', userRepository.value)\n        localStorage.setItem('source', userRepository.source)\n        localStorage.setItem('id', userRepository._id)\n        this.router.navigate(['']);\n    }\n\n    /**\n     * Loggs in the user with Github\n     */\n    githubLogin() {\n        this.error = undefined;\n        this.isLoadingRepositories = true;\n        this.apiService.githubLogin();\n    }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n            \n              Welcome to seed-test!\n              HOW TO START\n              \n            \n        -->\n        \n        \n        \n          Login to Seed-Test via GitHub or create a new Seed-Test Account by registering.Alternatively you can try Seed-Test without an account, by trying our Demo.\n        \n        \n            After the login via GitHub you can see your repositories.\n        \n        \n            Else you can just register yourself using your E-Mail.\n        \n        \n          After the first Login of your Seed-Test account, you can create your own custom Repositories or connect an existing GitHub Account or Jira Server.\n        \n        \n          Name your custom Project and save it.\n        \n        \n          Select your newly created Project to continue.\n        \n        \n          With a new Custom Project you can create your own stories.If you use a Github or Jira repository, you have to create an issue with the tag or label „story“, to make it appear in Seed-Test.\n        \n        \n          Enter a name and description for your new story.\n        \n        \n          Now you can add steps to create your first Test!Usually you want to start by using the Given-Step: \"Website\".\n        \n        \n          Run your Test by clickling on \"Run Scenario\".\n        \n        \n          For help and further information click on Help and check out our Tutorial.\n        \n      \n    \n  \n  \n    {{error}}\n    \n    Login\n    \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      Login\n      \n        \n      \n    \n    \n      Forgot Password?\n    \n    or\n    \n    No account?\n      Register here.\n    -->\n    Login via Github-->\n    \n      \n         \n         Login via GitHub\n      \n   \n   \n   \n    No account yet? \n    Register\n    or\n    Try Our Demo\n       (no account required)\n    \n    \n\n   \n  \n  \n  \n    \n      Select Your Project:\n      \n      \n        \n          \n          \n          \n          {{repository.value}}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                * {\n    padding: 0px;\n    margin: 0px;\n}\n\nh1{\n    margin: 5px;\n}\n\n\n.loginGrid{\n    display: grid;\n    grid-template:\n    \"howToStart formular\"\n    \"howToStart repositories\"\n    / 1fr 1fr;\n    background-color: var(--white);\n    place-items: center;\n}\n\n.formular{\n    grid-area: formular;\n    grid-row: 2 / 3;\n    grid-column: 3 / 4;\n    text-align: center;\n    background-color: var(--white);\n    margin-top: auto;\n    margin-right: auto;\n    margin-left: 10%;\n    margin-bottom: auto;\n    text-align: center;\n    padding: 40px 20px 40px 40px;\n}\n\n.repositories{\n    grid-area: repositories;\n    grid-row: 3 / 4;\n    grid-column: 3 / 4;\n    /*width: 400px;*/\n    text-align: center;\n    margin-right: auto;\n    margin-bottom: 5%;\n    margin-left: auto;\n    padding: 25px;\n    background-color:rgb(224, 224, 224);\n    border: 1px solid #999;\n}\n\n\n.howToStart {\n    grid-area: howToStart;\n    grid-row: 2 / 3;\n    grid-column: 2 / 3;\n    background-color: var(--white);\n    text-align: center;\n    font-size: small;\n    margin-top: auto;\n    margin-bottom: 10%;\n    margin-right: auto;\n    margin-left: auto;\n    width: 830px;\n    height: 500px;\n    position: relative;\n}\n\n.welcomeSlide{\n    background-color: var(--white);\n    height: 100%;\n    text-align: center;\n    margin: auto;\n    padding: 70px;\n}\n\n.welcomeSlide h1{\n    margin-bottom: 50px;\n}\n\n.mat-carousel{\n    z-index: auto;\n    position: absolute;\n    width: 100%; \n    height: 100px;\n}\n\n.mat{\n    width: 850px;\n    margin-top: 70px;\n    border: 12px solid #999;\n}\n\n.slideDescription{\n    margin-top: 340px;\n    background-color: #999;\n    color: var(--white);\n    height: 88px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.repo_img{\n    margin-left: 5px;\n    margin-right: 5px;\n    max-height: 18px;\n}\n\n/*\n#info{\n    color: #0099CC;\n    font-weight: bold;\n}*/\n.repositoryList{\n    list-style: none;\n}\n\na.repoLink{\n    color: var(--ocean-blue);\n    transition: 0.2s;\n}\n\na.repoLink:hover{\n    color: var(--marine-blue);\n}\n\n.wrongLogin{\n    background-color: var(--grape);\n    text-align: center;\n}\n\n.loginFont{\n    color:var(--ocean-blue);\n}\n\n.noAccount{\n    font-size: 13px;\n    padding: 5px;\n}\n\n.githubLogin{\n    color: var(--white);\n    padding: 5px 10px;\n    background-color: black;\n    border: none;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n}\n\n.githubLoginContainer{\n    margin: 10px;\n    display:inline-block;\n}\n\n.githubLogin img{\n    margin-right: 5px;\n    width: 17px;\n    height: 17px;\n}\n\n.uk-form-controls{\n    border-radius: 3px;\n    padding: 5px 5px 5px 5px;\n}\n\n.linkButton{\n    font-style: inherit;\n    border: none;\n    background-color: transparent;\n    color: var(--ocean-blue);\n    transition: 0.2s;\n    font-size: 10pt;\n}\n\n.linkButton:hover{\n    color: var(--marine-blue);\n}\n\n#noAccountDiv{\n    margin-top: 30px;\n    border: 0.25px solid #999;\n    padding: 10px;\n    background-color: rgb(247, 247, 247);\n  }\n\n#loadingSpinner{\n    margin-left:38%;\n}\n\n:host ::ng-deep .loadingSpinner circle{\n    stroke: var(--marine-blue);\n}\n\n@media screen and (max-width: 600px) {\n    .grid{\n        display: grid;\n        grid-template-rows: auto;\n        grid-template-areas: \"formular\" \"repositories\";\n    }\n}\n\n@media screen and (min-width: 1600px) {\n    .howToStart {\n        grid-area: howToStart;\n        grid-row: 2 / 3;\n        grid-column: 2 / 3;\n        background-color: var(--white);\n        text-align: center;\n        font-size: small;\n        margin-top: 80px;\n        margin-bottom: 180px;\n        margin-right: 150px;\n        margin-left: 100px;\n        width: 830px;\n        height: 500px;\n        position: relative;\n    }\n\n    .formular{\n        grid-area: formular;\n        grid-row: 2 / 3;\n        grid-column: 3 / 4;\n        text-align: center;\n        background-color: var(--white);\n        margin-top: 80px;\n        margin-right: 100px;\n        margin-bottom: 100px;\n        text-align: center;\n        padding: 40px;\n    }\n    \n    .repositories{\n        grid-area: repositories;\n        grid-row: 3 / 4;\n        grid-column: 3 / 4;\n        width: 400px;\n        text-align: center;\n        margin-right: 100px;\n        margin-bottom: 80px;\n        padding: 15px;\n        background-color:rgb(224, 224, 224);\n        border: 1px solid #999;\n    }\n    \n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              Welcome to seed-test!              HOW TO START                                  -->                                  Login to Seed-Test via GitHub or create a new Seed-Test Account by registering.Alternatively you can try Seed-Test without an account, by trying our Demo.                            After the login via GitHub you can see your repositories.                            Else you can just register yourself using your E-Mail.                          After the first Login of your Seed-Test account, you can create your own custom Repositories or connect an existing GitHub Account or Jira Server.                          Name your custom Project and save it.                          Select your newly created Project to continue.                          With a new Custom Project you can create your own stories.If you use a Github or Jira repository, you have to create an issue with the tag or label „story“, to make it appear in Seed-Test.                          Enter a name and description for your new story.                          Now you can add steps to create your first Test!Usually you want to start by using the Given-Step: \"Website\".                          Run your Test by clickling on \"Run Scenario\".                          For help and further information click on Help and check out our Tutorial.                          {{error}}        Login                                                                                              Login                                  Forgot Password?        or        No account?      Register here.    -->    Login via Github-->                            Login via GitHub                   No account yet?     Register    or    Try Our Demo       (no account required)                           Select Your Project:                                                            {{repository.value}}                    '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmResetPasswordComponent', 'selector': 'app-confirm-reset-password'},{'name': 'DeleteScenarioToast', 'selector': '[pink-toast-component]'},{'name': 'EditableComponent', 'selector': 'editable'},{'name': 'ExampleTableComponent', 'selector': 'app-example-table'},{'name': 'FeedbackComponent', 'selector': 'app-feedback'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalsComponent', 'selector': 'app-modals'},{'name': 'ParentComponent', 'selector': 'app-parent'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'ReportHistoryComponent', 'selector': 'app-report-history'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RunTestToast', 'selector': '[pink-toast-component]'},{'name': 'ScenarioEditorComponent', 'selector': 'app-scenario-editor'},{'name': 'StoriesBarComponent', 'selector': 'app-stories-bar'},{'name': 'StoryEditorComponent', 'selector': 'app-story-editor'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'TestAccountComponent', 'selector': 'app-test-account'}];\n    var DIRECTIVES = [{'name': 'EditableOnEnterDirective', 'selector': '[editableOnEnter]'},{'name': 'EditModeDirective', 'selector': '[editMode]'},{'name': 'FocusableDirective', 'selector': '[focusable]'},{'name': 'PasswordConfirmedValidatorDirective', 'selector': '[appPasswordConfirmed]'},{'name': 'ViewModeDirective', 'selector': '[viewMode]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ParentComponent.html":{"url":"components/ParentComponent.html","title":"component - ParentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ParentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/parent/parent.component.ts\n\n\n    \n        Description\n    \n    \n        Component containing the Story-Bar and Story Editor\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-parent\n            \n\n            \n                styleUrls\n                ./parent.component.css\n            \n\n\n\n            \n                templateUrl\n                ./parent.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiService\n                            \n                            \n                                isStoryEditorActive\n                            \n                            \n                                selectedScenario\n                            \n                            \n                                selectedStory\n                            \n                            \n                                stories\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadStories\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setEditor\n                            \n                            \n                                setSelectedScenario\n                            \n                            \n                                setSelectedStory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/parent/parent.component.ts:35\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadStories\n                        \n                        \n                    \n                \n            \n            \n                \nloadStories()\n                \n            \n\n\n            \n                \n                    Defined in src/app/parent/parent.component.ts:62\n                \n            \n\n\n            \n                \n                    Leads the stories of the current selected repository\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/parent/parent.component.ts:55\n                \n            \n\n\n            \n                \n                    Requests the repositories on init\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setEditor\n                        \n                        \n                    \n                \n            \n            \n                \nsetEditor(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/parent/parent.component.ts:94\n                \n            \n\n\n            \n                \n                    Change the editor to report history or story editor\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSelectedScenario\n                        \n                        \n                    \n                \n            \n            \n                \nsetSelectedScenario(scenario: Scenario)\n                \n            \n\n\n            \n                \n                    Defined in src/app/parent/parent.component.ts:86\n                \n            \n\n\n            \n                \n                    Sets the currently selected scenario\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scenario\n                                    \n                                                Scenario\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSelectedStory\n                        \n                        \n                    \n                \n            \n            \n                \nsetSelectedStory(story: Story)\n                \n            \n\n\n            \n                \n                    Defined in src/app/parent/parent.component.ts:78\n                \n            \n\n\n            \n                \n                    Sets the currently selected story\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    story\n                                    \n                                                Story\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApiService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/parent/parent.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isStoryEditorActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/parent/parent.component.ts:35\n                            \n                        \n\n                \n                    \n                        If the story Editor is shown or the report history\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedScenario\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Scenario\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/parent/parent.component.ts:30\n                            \n                        \n\n                \n                    \n                        Currently selected Scenario\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedStory\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Story\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/parent/parent.component.ts:25\n                            \n                        \n\n                \n                    \n                        Currently selected story\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stories\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Story[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/parent/parent.component.ts:20\n                            \n                        \n\n                \n                    \n                        Stories in the selected project\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../Services/api.service';\nimport { Story } from '../model/Story';\nimport { Scenario } from '../model/Scenario';\nimport { RepositoryContainer } from '../model/RepositoryContainer';\n\n/**\n * Component containing the Story-Bar and Story Editor\n */\n@Component({\n  selector: 'app-parent',\n  templateUrl: './parent.component.html',\n  styleUrls: ['./parent.component.css']\n})\nexport class ParentComponent implements OnInit {\n\n  /**\n   * Stories in the selected project\n   */\n  stories: Story[];\n\n  /**\n   * Currently selected story\n   */\n  selectedStory: Story;\n\n  /**\n   * Currently selected Scenario\n   */\n  selectedScenario: Scenario;\n\n  /**\n   * If the story Editor is shown or the report history\n   */\n  isStoryEditorActive = true;\n\n  /**\n   * Constructor\n   * @param apiService \n   */\n  constructor(public apiService: ApiService) {\n    this.apiService.getBackendUrlEvent.subscribe(() => {\n      this.loadStories();\n    });\n    if(this.apiService.urlReceived) {\n      this.loadStories();\n    }else {\n      this.apiService.getBackendInfo()\n    }\n   }\n\n  /**\n   * Requests the repositories on init\n   */\n  ngOnInit() {\n    this.apiService.getRepositories().subscribe();\n  }\n\n  /**\n   * Leads the stories of the current selected repository\n   */\n  loadStories() {\n    let value: string = localStorage.getItem('repository');\n    let source: string = localStorage.getItem('source');\n    let _id: string = localStorage.getItem('id');\n    let repository: RepositoryContainer = {value, source, _id};\n    this.apiService\n      .getStories(repository)\n      .subscribe((resp: Story[]) => {\n        this.stories = resp;\n    });\n  }\n\n  /**\n   * Sets the currently selected story\n   * @param story \n   */\n  setSelectedStory(story: Story){\n    this.selectedStory = story;\n  }\n\n  /**\n   * Sets the currently selected scenario\n   * @param scenario \n   */\n  setSelectedScenario(scenario: Scenario){\n    this.selectedScenario = scenario;\n  }\n\n  /**\n   * Change the editor to report history or story editor\n   * @param event event\n   */\n  setEditor(event){\n    this.isStoryEditorActive = !this.isStoryEditorActive;\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        \n        \n    \n\n\n    \n\n    \n                \n                    ./parent.component.css\n                \n                * {\n    padding: 0px;\n    margin: 0px;\n}\n\n.grid{\n    background-color: var(--light-grey);\n    display: grid;\n    grid-template-columns: repeat(4, minmax(0, 1fr));\n    grid-template-rows: auto;\n    grid-template-areas:\n    \"storiesBar storyEditor storyEditor storyEditor\";\n    grid-column-gap: 10px;\n    padding-bottom: 5px;\n}\n\n.storiesBar{\n    grid-area: storiesBar;\n}\n\n.storyEditor{\n    grid-area: storyEditor;\n}\n\n\n\n@media screen and (max-width: 600px) {\n    .grid{\n        display: grid;\n        grid-template-columns: 94%;\n        grid-template-rows: auto auto;\n        grid-template-areas:\n        \"storiesBar\"\n        \"storyEditor\";\n        justify-content: center;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmResetPasswordComponent', 'selector': 'app-confirm-reset-password'},{'name': 'DeleteScenarioToast', 'selector': '[pink-toast-component]'},{'name': 'EditableComponent', 'selector': 'editable'},{'name': 'ExampleTableComponent', 'selector': 'app-example-table'},{'name': 'FeedbackComponent', 'selector': 'app-feedback'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalsComponent', 'selector': 'app-modals'},{'name': 'ParentComponent', 'selector': 'app-parent'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'ReportHistoryComponent', 'selector': 'app-report-history'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RunTestToast', 'selector': '[pink-toast-component]'},{'name': 'ScenarioEditorComponent', 'selector': 'app-scenario-editor'},{'name': 'StoriesBarComponent', 'selector': 'app-stories-bar'},{'name': 'StoryEditorComponent', 'selector': 'app-story-editor'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'TestAccountComponent', 'selector': 'app-test-account'}];\n    var DIRECTIVES = [{'name': 'EditableOnEnterDirective', 'selector': '[editableOnEnter]'},{'name': 'EditModeDirective', 'selector': '[editMode]'},{'name': 'FocusableDirective', 'selector': '[focusable]'},{'name': 'PasswordConfirmedValidatorDirective', 'selector': '[appPasswordConfirmed]'},{'name': 'ViewModeDirective', 'selector': '[viewMode]'}];\n    var ACTUAL_COMPONENT = {'name': 'ParentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/PasswordConfirmedValidatorDirective.html":{"url":"directives/PasswordConfirmedValidatorDirective.html","title":"directive - PasswordConfirmedValidatorDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  PasswordConfirmedValidatorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/directives/password-confirmed.directive.ts\n        \n\n            \n                Description\n            \n            \n                Directive to check if the passwords are the same\n\n            \n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: PasswordConfirmedValidatorDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [appPasswordConfirmed]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/directives/password-confirmed.directive.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidationErrors\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { AbstractControl, FormGroup, NG_VALIDATORS, ValidationErrors, Validator, ValidatorFn } from '@angular/forms';\n\n/** \n * A user's password has to match the user's confirmed password \n*/\nexport const passwordConfirmedValidator: ValidatorFn = (control: FormGroup): ValidationErrors | null => {\n  const password = control.get('password');\n  const confirmPassword = control.get('confirmPassword');\n  return password && confirmPassword && password.value !== confirmPassword.value ? { 'passwordConfirmed': true } : null;\n};\n\n/**\n * Directive to check if the passwords are the same\n */\n@Directive({\n  selector: '[appPasswordConfirmed]',\n  providers: [{ provide: NG_VALIDATORS, useExisting: PasswordConfirmedValidatorDirective, multi: true }]\n})\nexport class PasswordConfirmedValidatorDirective implements Validator {\n  validate(control: AbstractControl): ValidationErrors {\n    return passwordConfirmedValidator(control)\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegistrationComponent.html":{"url":"components/RegistrationComponent.html","title":"component - RegistrationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegistrationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/registration/registration.component.ts\n\n\n    \n        Description\n    \n    \n        Component to register a new user\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-registration\n            \n\n            \n                styleUrls\n                ./registration.component.css\n            \n\n\n\n            \n                templateUrl\n                ./registration.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                registerUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            registerUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerUser(form: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/registration/registration.component.ts:38\n                \n            \n\n\n            \n                \n                    Registers a user to Seed-Test\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user form\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/registration/registration.component.ts:21\n                            \n                        \n\n                \n                    \n                        Error during user creation\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ApiService} from '../Services/api.service';\nimport {NavigationEnd, Router} from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\n\n/**\n * Component to register a new user\n */\n@Component({\n    selector: 'app-registration',\n    templateUrl: './registration.component.html',\n    styleUrls: ['./registration.component.css']\n})\n\nexport class RegistrationComponent implements OnInit {\n\n    /**\n     * Error during user creation\n     */\n    error: string;\n\n    /**\n     * @ignore\n     */\n    constructor(public apiService: ApiService, private router: Router, private toastr: ToastrService) {}\n\n    /**\n     * @ignore\n     */\n    ngOnInit() {\n    }\n\n    /**\n     * Registers a user to Seed-Test\n     * @param form user form\n     */\n    async registerUser(form: NgForm){\n        let userId = localStorage.getItem('userId');\n        localStorage.removeItem('userId')\n        this.error = undefined;\n        let response = await this.apiService.registerUser(form.value.email, form.value.password, userId).toPromise()\n        if (response.error && response.error.status === 'error') {\n            this.error = response.error.message;\n            //this.toastr.error(response.error.message, 'Registration')\n        } else {\n            this.toastr.success('successfully registered', 'Registration')\n            this.router.navigate([\"/\"]);\n        } \n    }\n}\n\n    \n\n    \n        \n  \n    Registration\n     \n    \n    \n     \n      \n      {{error}}\n      \n      \n      \n\n      \n        \n          \n            \n            \n              \n              Password must be at least 8 characters long\n          \n            \n                  \n          \n          \n              Password and Confirm Password do not match.\n          \n          \n            Please enter a valid Email address.\n        \n        \n        Register\n    \n  \n\n    \n    \n\n    \n                \n                    ./registration.component.css\n                \n                .grid{\n    display: grid;\n    grid-template-rows: 1;\n    grid-template-columns: 3;\n    grid-template-areas: \"formular\";\n    background-color: var(--white);\n}\n\n.formular{\n    grid-area: formular;\n    grid-column: 2;\n    text-align: center;\n    width: 500px;\n    background-color: var(--white);\n    padding: 80px 50px;\n}\n\n#infoIcon{\n    color: #999;\n    padding: 5px;\n  }\n\n#passwordLengthInfo{\n    font-size: small;\n}\n\n#headerFont{\n    color:var(--ocean-blue);\n}\n\n.uk-form-controls{\n    border-radius: 3px;\n    padding: 5px 5px 5px 5px;\n}\n\n.ng-valid[required], .ng-valid.required  {\n    border-left: 5px solid #53d35a; \n  }\n  \n.ng-invalid:not(form)  {\n    border-left: 5px solid var(--ocean-blue); \n  }\n\n.cross-validation-error input {\n    border-left: 5px solid #d15553;\n  }\n\ninput.wrongEmail {\n  border-left: 5px solid #d15553;\n}\n\n#email, #confirmPassword{\n    margin: 25px;\n}\n\n.wrongLogin{\n    background-color: rgb(228, 92, 92);\n    text-align: center;\n}\n\n\n@media screen and (max-width: 600px) {\n    .grid{\n        display: grid;\n        grid-template-rows: auto;\n        grid-template-areas: \"formular\";\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Registration                              {{error}}                                                                                              Password must be at least 8 characters long                                                                          Password and Confirm Password do not match.                                Please enter a valid Email address.                        Register          '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmResetPasswordComponent', 'selector': 'app-confirm-reset-password'},{'name': 'DeleteScenarioToast', 'selector': '[pink-toast-component]'},{'name': 'EditableComponent', 'selector': 'editable'},{'name': 'ExampleTableComponent', 'selector': 'app-example-table'},{'name': 'FeedbackComponent', 'selector': 'app-feedback'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalsComponent', 'selector': 'app-modals'},{'name': 'ParentComponent', 'selector': 'app-parent'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'ReportHistoryComponent', 'selector': 'app-report-history'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RunTestToast', 'selector': '[pink-toast-component]'},{'name': 'ScenarioEditorComponent', 'selector': 'app-scenario-editor'},{'name': 'StoriesBarComponent', 'selector': 'app-stories-bar'},{'name': 'StoryEditorComponent', 'selector': 'app-story-editor'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'TestAccountComponent', 'selector': 'app-test-account'}];\n    var DIRECTIVES = [{'name': 'EditableOnEnterDirective', 'selector': '[editableOnEnter]'},{'name': 'EditModeDirective', 'selector': '[editMode]'},{'name': 'FocusableDirective', 'selector': '[focusable]'},{'name': 'PasswordConfirmedValidatorDirective', 'selector': '[appPasswordConfirmed]'},{'name': 'ViewModeDirective', 'selector': '[viewMode]'}];\n    var ACTUAL_COMPONENT = {'name': 'RegistrationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Report.html":{"url":"interfaces/Report.html","title":"interface - Report","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Report\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/Report.ts\n        \n\n            \n                Description\n            \n            \n                Interface of a report\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        _id\n                                \n                                \n                                            Optional\n                                        isSaved\n                                \n                                \n                                        jsonReport\n                                \n                                \n                                        mode\n                                \n                                \n                                        options\n                                \n                                \n                                        reportName\n                                \n                                \n                                        reportTime\n                                \n                                \n                                            Optional\n                                        scenarioId\n                                \n                                \n                                        storyId\n                                \n                                \n                                        testStatus\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Object id of the report of the databse\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isSaved\n                                    \n                                \n                                \n                                    \n                                        isSaved:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Status of the report if it is marked as saved or not\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jsonReport\n                                    \n                                \n                                \n                                    \n                                        jsonReport:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Cucumber report in json format\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                    \n                                \n                                \n                                    \n                                        mode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Mode: either feature, scenario\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    included options to create html\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reportName\n                                    \n                                \n                                \n                                    \n                                        reportName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the report\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reportTime\n                                    \n                                \n                                \n                                    \n                                        reportTime:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Time of the run test in milliseconds since 1970\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenarioId\n                                    \n                                \n                                \n                                    \n                                        scenarioId:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    scenario id of the executed test\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        storyId\n                                    \n                                \n                                \n                                    \n                                        storyId:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Story id of the executed test\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        testStatus\n                                    \n                                \n                                \n                                    \n                                        testStatus:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Status if the test was successfull or not\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Report {\n\n    /**\n     * Object id of the report of the databse\n     */\n    _id?: any,\n\n    /**\n     * Time of the run test in milliseconds since 1970\n     */\n    reportTime: number;\n\n    /**\n     * Name of the report\n     */\n    reportName: string;\n\n    /**\n     * Cucumber report in json format\n     */\n    jsonReport: any;\n\n    /**\n     * included options to create html\n     */\n    options: any;\n\n    /**\n     * Story id of the executed test\n     */\n    storyId: any;\n\n    /**\n     * Mode: either feature, scenario\n     */\n    mode: string;\n\n    /**\n     * scenario id of the executed test\n     */\n    scenarioId?: any;\n\n    /**\n     * Status if the test was successfull or not\n     */\n    testStatus: boolean;\n\n    /**\n     * Status of the report if it is marked as saved or not\n     */\n    isSaved?: boolean;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReportComponent.html":{"url":"components/ReportComponent.html","title":"component - ReportComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ReportComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/report/report.component.ts\n\n\n    \n        Description\n    \n    \n        Component to show the report\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-report\n            \n\n            \n                styleUrls\n                ./report.component.css\n            \n\n\n\n            \n                templateUrl\n                ./report.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiService\n                            \n                            \n                                reportReceived\n                            \n                            \n                                    Public\n                                route\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getReport\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/report/report.component.ts:14\n                            \n                        \n\n                \n                    \n                            Retrieves the report\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getReport\n                        \n                        \n                    \n                \n            \n            \n                \ngetReport(reportName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/report/report.component.ts:46\n                \n            \n\n\n            \n                \n                    Gets the report and sets the iframe to it\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    reportName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        name of the report\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApiService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/report/report.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reportReceived\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/report/report.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ActivatedRoute\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/report/report.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../Services/api.service';\nimport { ActivatedRoute } from '@angular/router';\n\n/**\n * Component to show the report\n */\n@Component({\n  selector: 'app-report',\n  templateUrl: './report.component.html',\n  styleUrls: ['./report.component.css']\n})\nexport class ReportComponent implements OnInit {\n  reportReceived: Boolean = false;\n\n\n  /**\n   * Retrieves the report\n   * @param apiService \n   * @param route \n   */\n  constructor(public apiService: ApiService, public route: ActivatedRoute) { \n    this.route.params.subscribe((params) => {\n      if(params.reportName){\n        if(!localStorage.getItem('url_backend')){\n          this.apiService.getBackendInfo().then((value) => {\n            this.getReport(params.reportName);\n          })\n        }else {\n          this.getReport(params.reportName);\n        }\n      }\n    });\n  }\n\n  /**\n   * @ignore\n   */\n  ngOnInit() {\n  }\n\n  /**\n   * Gets the report and sets the iframe to it\n   * @param reportName name of the report\n   */\n  getReport(reportName: string){\n    this.apiService.getReport(reportName).subscribe((resp) => {\n      const iframe: HTMLIFrameElement = document.getElementById('testFrame') as HTMLIFrameElement;\n      this.reportReceived = true;\n      iframe.srcdoc = resp;\n    })\n  }\n\n}\n\n    \n\n    \n        \n    \n\n\n\n    \n\n    \n                \n                    ./report.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmResetPasswordComponent', 'selector': 'app-confirm-reset-password'},{'name': 'DeleteScenarioToast', 'selector': '[pink-toast-component]'},{'name': 'EditableComponent', 'selector': 'editable'},{'name': 'ExampleTableComponent', 'selector': 'app-example-table'},{'name': 'FeedbackComponent', 'selector': 'app-feedback'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalsComponent', 'selector': 'app-modals'},{'name': 'ParentComponent', 'selector': 'app-parent'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'ReportHistoryComponent', 'selector': 'app-report-history'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RunTestToast', 'selector': '[pink-toast-component]'},{'name': 'ScenarioEditorComponent', 'selector': 'app-scenario-editor'},{'name': 'StoriesBarComponent', 'selector': 'app-stories-bar'},{'name': 'StoryEditorComponent', 'selector': 'app-story-editor'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'TestAccountComponent', 'selector': 'app-test-account'}];\n    var DIRECTIVES = [{'name': 'EditableOnEnterDirective', 'selector': '[editableOnEnter]'},{'name': 'EditModeDirective', 'selector': '[editMode]'},{'name': 'FocusableDirective', 'selector': '[focusable]'},{'name': 'PasswordConfirmedValidatorDirective', 'selector': '[appPasswordConfirmed]'},{'name': 'ViewModeDirective', 'selector': '[viewMode]'}];\n    var ACTUAL_COMPONENT = {'name': 'ReportComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReportContainer.html":{"url":"interfaces/ReportContainer.html","title":"interface - ReportContainer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ReportContainer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/ReportContainer.ts\n        \n\n            \n                Description\n            \n            \n                Interface of a Report container for the report history\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        scenarioReports\n                                \n                                \n                                        storyReports\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        scenarioReports\n                                    \n                                \n                                \n                                    \n                                        scenarioReports:         Report[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Report[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Reports of the scenarios included in the story\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        storyReports\n                                    \n                                \n                                \n                                    \n                                        storyReports:         Report[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Report[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Reports of the story\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Report } from \"./Report\";\n\n/**\n * Interface of a Report container for the report history\n */\nexport interface ReportContainer {\n    /**\n     * Reports of the story\n     */\n    storyReports: Report[],\n\n    /**\n     * Reports of the scenarios included in the story\n     */\n    scenarioReports: Report[]\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReportHistoryComponent.html":{"url":"components/ReportHistoryComponent.html","title":"component - ReportHistoryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ReportHistoryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/report-history/report-history.component.ts\n\n\n    \n        Description\n    \n    \n        Component of the report history\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-report-history\n            \n\n            \n                styleUrls\n                ./report-history.component.css\n            \n\n\n\n            \n                templateUrl\n                ./report-history.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                reports\n                            \n                            \n                                selectedStory\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteReport\n                            \n                            \n                                filterScenarioReports\n                            \n                            \n                                getReports\n                            \n                            \n                                goBackToStoryEditor\n                            \n                            \n                                saveReport\n                            \n                            \n                                sortReportsTime\n                            \n                            \n                                stringifyReportTime\n                            \n                            \n                                unsaveReport\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                newSelectedStory\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changeEditor\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    newSelectedStory\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        newSelectedStory\n                    \n                \n                        \n                            \n                                    Defined in src/app/report-history/report-history.component.ts:48\n                            \n                        \n                \n                    \n                        Sets a new currently used story\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changeEditor\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/report-history/report-history.component.ts:32\n                            \n                        \n                \n                    \n                        Event emiter to change the editor to story editor\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteReport\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteReport(report: Report)\n                \n            \n\n\n            \n                \n                    Defined in src/app/report-history/report-history.component.ts:105\n                \n            \n\n\n            \n                \n                    Deletes a report of the list\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    report\n                                    \n                                                Report\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        report to be deleted\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filterScenarioReports\n                        \n                        \n                    \n                \n            \n            \n                \nfilterScenarioReports(scenario: Scenario)\n                \n            \n\n\n            \n                \n                    Defined in src/app/report-history/report-history.component.ts:70\n                \n            \n\n\n            \n                \n                    Filters the scenario reports to only the reports of the current scenario\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    scenario\n                                    \n                                                Scenario\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        currently regarded scenario\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        list of reports of this scenario\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getReports\n                        \n                        \n                    \n                \n            \n            \n                \ngetReports()\n                \n            \n\n\n            \n                \n                    Defined in src/app/report-history/report-history.component.ts:58\n                \n            \n\n\n            \n                \n                    Retrieves the reports of the story\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            goBackToStoryEditor\n                        \n                        \n                    \n                \n            \n            \n                \ngoBackToStoryEditor()\n                \n            \n\n\n            \n                \n                    Defined in src/app/report-history/report-history.component.ts:86\n                \n            \n\n\n            \n                \n                    Returns to story editor\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveReport\n                        \n                        \n                    \n                \n            \n            \n                \nsaveReport(report: Report)\n                \n            \n\n\n            \n                \n                    Defined in src/app/report-history/report-history.component.ts:132\n                \n            \n\n\n            \n                \n                    Sets the report to be saved\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    report\n                                    \n                                                Report\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortReportsTime\n                        \n                        \n                    \n                \n            \n            \n                \nsortReportsTime(reps)\n                \n            \n\n\n            \n                \n                    Defined in src/app/report-history/report-history.component.ts:79\n                \n            \n\n\n            \n                \n                    Sorts the reports depending on their report time\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    reps\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        reports\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            stringifyReportTime\n                        \n                        \n                    \n                \n            \n            \n                \nstringifyReportTime(time: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/report-history/report-history.component.ts:95\n                \n            \n\n\n            \n                \n                    Creates a date out of the report time\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    time\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        report time\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Name of the report with the date\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unsaveReport\n                        \n                        \n                    \n                \n            \n            \n                \nunsaveReport(report: Report)\n                \n            \n\n\n            \n                \n                    Defined in src/app/report-history/report-history.component.ts:120\n                \n            \n\n\n            \n                \n                    Set the report to not be saved\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    report\n                                    \n                                                Report\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reports\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ReportContainer\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/report-history/report-history.component.ts:26\n                            \n                        \n\n                \n                    \n                        Reports of the selected story\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedStory\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Story\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/app/report-history/report-history.component.ts:21\n                            \n                        \n\n                \n                    \n                        Currently selected story\n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        newSelectedStory\n                    \n                \n\n\n                \n                    \n                        setnewSelectedStory(story)\n                    \n                \n                            \n                                \n                                    Defined in src/app/report-history/report-history.component.ts:48\n                                \n                            \n                    \n                        \n                                Sets a new currently used story\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            story\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Report } from '../model/Report';\nimport { ReportContainer } from '../model/ReportContainer';\nimport { Scenario } from '../model/Scenario';\nimport { Story } from '../model/Story';\nimport { ApiService } from '../Services/api.service';\n\n/**\n * Component of the report history\n */\n@Component({\n  selector: 'app-report-history',\n  templateUrl: './report-history.component.html',\n  styleUrls: ['./report-history.component.css']\n})\n\nexport class ReportHistoryComponent implements OnInit {\n  /**\n   * Currently selected story\n   */\n  selectedStory: Story = null;\n\n  /**\n   * Reports of the selected story\n   */\n  reports: ReportContainer = null;\n\n  /**\n   * Event emiter to change the editor to story editor\n   */\n  @Output()\n  changeEditor: EventEmitter = new EventEmitter();\n\n  /**\n   * @ignore\n   */\n  constructor(public apiService: ApiService) { }\n\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {}\n\n  /**\n   * Sets a new currently used story\n   */\n  @Input()\n  set newSelectedStory(story: Story) {\n      this.selectedStory = story;\n      if (this.selectedStory){\n        this.getReports();\n      }\n  }\n\n  /**\n   * Retrieves the reports of the story\n   */\n  getReports(){\n    this.reports = null;\n    this.apiService.getReportHistory(this.selectedStory._id).subscribe(resp => {\n        this.reports = resp;\n    });\n  }\n\n  /**\n   * Filters the scenario reports to only the reports of the current scenario\n   * @param scenario currently regarded scenario\n   * @returns list of reports of this scenario\n   */\n   filterScenarioReports(scenario: Scenario){\n    return this.reports.scenarioReports.filter((elem) => parseInt(elem.scenarioId) == scenario.scenario_id)\n  }\n\n  /**\n   * Sorts the reports depending on their report time\n   * @param reps reports\n   * @returns \n   */\n  sortReportsTime(reps){\n    return reps.sort((a, b) => a.reportTime > b.reportTime)\n  }\n\n  /**\n   * Returns to story editor\n   */\n  goBackToStoryEditor(){\n    this.changeEditor.emit();\n  }\n\n  /**\n   * Creates a date out of the report time\n   * @param time report time\n   * @returns Name of the report with the date\n   */\n  stringifyReportTime(time: number){\n    let date = new Date(time).toLocaleDateString(\"de\")\n    let t = new Date(time).toLocaleTimeString(\"de\")\n    return \"Report: \" + date + \" \" + t\n  }\n\n  /**\n   * Deletes a report of the list\n   * @param report report to be deleted\n   */\n  deleteReport(report: Report){\n    this.apiService\n      .deleteReport(report._id)\n      .subscribe(_resp => {\n          let newReports = JSON.parse(JSON.stringify(this.reports));\n          newReports.storyReports = newReports.storyReports.filter((rep) => rep._id != report._id);\n          newReports.scenarioReports = newReports.scenarioReports.filter((rep) => rep._id != report._id);\n          this.reports = newReports;\n      });\n  }\n\n  /**\n   * Set the report to not be saved\n   * @param report \n   */\n  unsaveReport(report: Report){\n    report.isSaved = false;\n    this.apiService\n      .unsaveReport(report._id)\n      .subscribe(_resp => {\n      });\n  }\n\n  /**\n   * Sets the report to be saved\n   * @param report \n   */\n  saveReport(report: Report){\n    report.isSaved = true;\n    this.apiService\n      .saveReport(report._id)\n      .subscribe(_resp => {\n      });\n  }\n\n}\n\n    \n\n    \n        \n\n    \n        \n            \n                \n                    \n                \n            \n        \n        \n            Reports: {{this.selectedStory.title}}\n        \n    \n    \n        Disclaimer: Currently only the last 1 report per scenario and story will be saved. If you want to keep the reports longer, you have to download the report or mark it as saved.\n    \n    \n        \n            Story Reports:\n        \n        \n            \n                {{stringifyReportTime(rep.reportTime)}}\n                \n                    \n                      delete\n                    \n                    \n                      star\n                    \n                    \n                      star_border\n                    \n                \n            \n        \n    \n    \n        \n            \n                Scenario {{i + 1}} Reports: {{scen.name}}\n            \n            \n                \n                    {{stringifyReportTime(reps.reportTime)}}\n                    \n                        \n                          delete\n                        \n                        \n                          star\n                        \n                        \n                          star_border\n                        \n                    \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./report-history.component.css\n                \n                * {\n  padding: 0px;\n  margin: 0px;\n}\n\n.reportHistoryContainer{\n  border-left: 1px solid #999;\n  border-top: 1px solid #999;\n  border-bottom: 1px solid #999;\n  background: var(--white);\n}\n\na.passed{\n    color: green;\n  }\n\n  a.notPassed{\n    color: red;\n  }\n\n  .backButton{\n    background: none;\n    width: 50px;\n    height: 50px;\n    margin-left: 20px;\n    margin-right: 20px;\n    font-size: 15px;\n    cursor: pointer;\n    border: none;\n}\n\n.sectionHeader {\n  background-color: lightgrey;\n  margin: 5px;\n}\n\n.report{\n  display: flex;\n  justify-content: space-between;\n  margin: 3px 30px;\n  align-items: center;\n}\n\n.reportButtons{\n  margin-right: 10px;\n}\n\n.actionButton{\n  margin-left: 10px;\n  background: none;\n  border: none;\n}\n\n.actionButton > em{\n  color: var(--ocean-blue);\n  font-size: 22px;\n\n}\n\n.headline{\n  color: var(--charcoal-grey);\n}\n\n.reportHistoryTitleContainer{\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  margin: 10px;\n}\n\n.disclaimerContainer{\n  margin: 20px;\n  padding: 5px;\n  border: 1px solid var(--grape);\n  text-align: center;\n}\n\n.reportsHeader{\n  padding:  2px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                    Reports: {{this.selectedStory.title}}                        Disclaimer: Currently only the last 1 report per scenario and story will be saved. If you want to keep the reports longer, you have to download the report or mark it as saved.                            Story Reports:                                            {{stringifyReportTime(rep.reportTime)}}                                                          delete                                                              star                                                              star_border                                                                                                    Scenario {{i + 1}} Reports: {{scen.name}}                                                            {{stringifyReportTime(reps.reportTime)}}                                                                      delete                                                                          star                                                                          star_border                                                                                    '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmResetPasswordComponent', 'selector': 'app-confirm-reset-password'},{'name': 'DeleteScenarioToast', 'selector': '[pink-toast-component]'},{'name': 'EditableComponent', 'selector': 'editable'},{'name': 'ExampleTableComponent', 'selector': 'app-example-table'},{'name': 'FeedbackComponent', 'selector': 'app-feedback'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalsComponent', 'selector': 'app-modals'},{'name': 'ParentComponent', 'selector': 'app-parent'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'ReportHistoryComponent', 'selector': 'app-report-history'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RunTestToast', 'selector': '[pink-toast-component]'},{'name': 'ScenarioEditorComponent', 'selector': 'app-scenario-editor'},{'name': 'StoriesBarComponent', 'selector': 'app-stories-bar'},{'name': 'StoryEditorComponent', 'selector': 'app-story-editor'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'TestAccountComponent', 'selector': 'app-test-account'}];\n    var DIRECTIVES = [{'name': 'EditableOnEnterDirective', 'selector': '[editableOnEnter]'},{'name': 'EditModeDirective', 'selector': '[editMode]'},{'name': 'FocusableDirective', 'selector': '[focusable]'},{'name': 'PasswordConfirmedValidatorDirective', 'selector': '[appPasswordConfirmed]'},{'name': 'ViewModeDirective', 'selector': '[viewMode]'}];\n    var ACTUAL_COMPONENT = {'name': 'ReportHistoryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RepositoryContainer.html":{"url":"interfaces/RepositoryContainer.html","title":"interface - RepositoryContainer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RepositoryContainer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/RepositoryContainer.ts\n        \n\n            \n                Description\n            \n            \n                Interface of the repository container\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        _id\n                                \n                                \n                                            Optional\n                                        canEdit\n                                \n                                \n                                        source\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Object id of the repository container from the database\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        canEdit\n                                    \n                                \n                                \n                                    \n                                        canEdit:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the user can edit the repository\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Source of the repository\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the repository\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface RepositoryContainer {\n    /**\n     * Object id of the repository container from the database\n     */\n    _id?: any;\n\n    /**\n     * Name of the repository\n     */\n    value: string;\n\n    /**\n     * Source of the repository\n     */\n    source: string;\n\n    /**\n     * If the user can edit the repository\n     */\n    canEdit?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/reset-password/reset-password.component.ts\n\n\n    \n        Description\n    \n    \n        Component to reset the password\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-password\n            \n\n            \n                styleUrls\n                ./reset-password.component.css\n            \n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                redirectToRegister\n                            \n                            \n                                requestReset\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            redirectToRegister\n                        \n                        \n                    \n                \n            \n            \n                \nredirectToRegister()\n                \n            \n\n\n            \n                \n                    Defined in src/app/reset-password/reset-password.component.ts:43\n                \n            \n\n\n            \n                \n                    Redirects the user to the register component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            requestReset\n                        \n                        \n                    \n                \n            \n            \n                \nrequestReset(form: NgForm)\n                \n            \n\n\n            \n                \n                    Defined in src/app/reset-password/reset-password.component.ts:33\n                \n            \n\n\n            \n                \n                    Request a reset of the password\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                NgForm\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/reset-password/reset-password.component.ts:21\n                            \n                        \n\n                \n                    \n                        Error during reset password\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport {ApiService} from '../Services/api.service';\nimport {Router} from '@angular/router';\nimport { RepositoryContainer } from '../model/RepositoryContainer';\n\n/**\n * Component to reset the password\n */\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\n\nexport class ResetPasswordComponent{\n\n  /**\n   * Error during reset password\n   */\n  error: string;\n\n  /**\n   * @ignore\n   */\n  constructor(public apiService: ApiService, private router: Router) {    \n  }\n\n  /**\n   * Request a reset of the password\n   * @param form \n   */\n  requestReset(form : NgForm) {\n    this.apiService.requestReset(form.value.email).subscribe(res => {\n      //console.log('test')\n    })\n    this.router.navigate(['/login']);\n  }\n\n  /**\n   * Redirects the user to the register component\n   */\n  redirectToRegister(){\n    this.router.navigate(['/register']);\n  }\n}\n\n    \n\n    \n        \n \n  \n    \n        Can't log in?\n        \n        \n        \n        1.Don't have an account yet?\n        If you don't have an account yet you can register an new account \n        here.\n        \n        \n        2. Reset password for an existing account\n        If you already have an account but forgot your password you can reset your password here.\n        \n        \n        1. Type in the e-mail address connected to your account.\n        \n        2. Choose a new password of miminum 8 characters.\n        \n        3. Press the 'reset' button and you will receive an automated e-mail with a reset-token.\n        \n    \n  \n\n   \n    \n    Reset Your Password\n     \n      \n      \n      \n    \n      \n      \n      \n      \n    \n    \n      Reset Password\n    \n  \n\n  \n    \n\n    \n                \n                    ./reset-password.component.css\n                \n                * {\n    padding: 0px;\n    margin: 0px;\n    font-family: Klavika, sans-serif;\n}\n\nh1{\n    margin: 5px;\n}\n\n.grid{\n    display: grid;\n    grid-template-rows: auto;\n    grid-template-columns: 1fr 1fr 1fr 1fr;\n    grid-template-areas: \"howToStart\" \"formular\";\n    background-color: var(--white);\n    place-items: center;\n}\n\n.formular{\n    grid-area: formular;\n    grid-row: 2 / 3;\n    grid-column: 3 / 4;\n    text-align: center;\n    background-color: var(--white);\n    padding: 80px 50px 20px;\n    margin-bottom: 80px;\n}\n\n.howToStart {\n    grid-area: howToStart;\n    grid-row: 2 / 3;\n    grid-column: 2 / 3;\n    background-color: var(--white);\n    padding: 50px 10px 50px;\n    text-align: center;\n    font-size: small;\n}\n\n.instructionText{\n    width: 350px;\n    border: double 5px var(--dark-grey);\n    padding: 30px;\n}\n\n.req{\n    text-decoration: underline;\n}\n\n#headerFont{\n    color:var(--ocean-blue);\n}\n\n.uk-form-controls{\n    border-radius: 3px;\n    padding: 5px 5px 5px 5px;\n}\n\n.linkButton{\n    font-style: inherit;\n    border: 0px;\n    background-color: transparent;\n    color:var(--ocean-blue);\n    font-size: 10pt;\n    font-weight: bold;\n    outline: none;\n}\n\n@media screen and (max-width: 600px) {\n    .grid{\n        display: grid;\n        grid-template-rows: auto;\n        grid-template-areas: \"howToStart\" \"formular\";\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '               Can\\'t log in?                                1.Don\\'t have an account yet?        If you don\\'t have an account yet you can register an new account         here.                        2. Reset password for an existing account        If you already have an account but forgot your password you can reset your password here.                        1. Type in the e-mail address connected to your account.                2. Choose a new password of miminum 8 characters.                3. Press the \\'reset\\' button and you will receive an automated e-mail with a reset-token.                         Reset Your Password                                                                 Reset Password        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmResetPasswordComponent', 'selector': 'app-confirm-reset-password'},{'name': 'DeleteScenarioToast', 'selector': '[pink-toast-component]'},{'name': 'EditableComponent', 'selector': 'editable'},{'name': 'ExampleTableComponent', 'selector': 'app-example-table'},{'name': 'FeedbackComponent', 'selector': 'app-feedback'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalsComponent', 'selector': 'app-modals'},{'name': 'ParentComponent', 'selector': 'app-parent'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'ReportHistoryComponent', 'selector': 'app-report-history'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RunTestToast', 'selector': '[pink-toast-component]'},{'name': 'ScenarioEditorComponent', 'selector': 'app-scenario-editor'},{'name': 'StoriesBarComponent', 'selector': 'app-stories-bar'},{'name': 'StoryEditorComponent', 'selector': 'app-story-editor'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'TestAccountComponent', 'selector': 'app-test-account'}];\n    var DIRECTIVES = [{'name': 'EditableOnEnterDirective', 'selector': '[editableOnEnter]'},{'name': 'EditModeDirective', 'selector': '[editMode]'},{'name': 'FocusableDirective', 'selector': '[focusable]'},{'name': 'PasswordConfirmedValidatorDirective', 'selector': '[appPasswordConfirmed]'},{'name': 'ViewModeDirective', 'selector': '[viewMode]'}];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RunTestToast.html":{"url":"components/RunTestToast.html","title":"component - RunTestToast","body":"\n                   \n\n\n\n\n\n  Components\n  RunTestToast\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/runSave-toast.ts\n\n\n    \n        Description\n    \n    \n        Component of the run save toasts\n\n    \n\n    \n        Extends\n    \n    \n            Toast\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n            \n                preserveWhitespaces\n                false\n            \n\n\n\n            \n                selector\n                [pink-toast-component]\n            \n\n\n            \n                styles\n                \n        a {\n            background: #388196;\n            margin: 2px;\n        }\n\n        a:hover {\n            color: black;\n        }\n    \n            \n\n            \n                template\n                \n  \n    \n      {{ title }}\n    \n    \n    \n    \n      {{ message }}\n    \n  \n  \n    \n      {{ saveRunString }}\n    \n    \n        {{ runString }}\n    \n    \n      close\n    \n  \n\n\n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                runString\n                            \n                            \n                                saveRunString\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                runTest\n                            \n                            \n                                saveAndRunTest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            runTest\n                        \n                        \n                    \n                \n            \n            \n                \nrunTest(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/runSave-toast.ts:141\n                \n            \n\n\n            \n                \n                    Run test without saving it\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveAndRunTest\n                        \n                        \n                    \n                \n            \n            \n                \nsaveAndRunTest(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/runSave-toast.ts:152\n                \n            \n\n\n            \n                \n                    Saves the scenario and then runs the test\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            runString\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Run Test'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/runSave-toast.ts:123\n                            \n                        \n\n                \n                    \n                        Name for the run test button\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveRunString\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Save and Run'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/runSave-toast.ts:118\n                            \n                        \n\n                \n                    \n                        Name for the save run button\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n    animate,\n    keyframes,\n    state,\n    style,\n    transition,\n    trigger\n  } from '@angular/animations';\nimport { Component} from '@angular/core';  \nimport { Toast, ToastrService, ToastPackage } from 'ngx-toastr';\nimport { ApiService } from './Services/api.service';\n  \n  /**\n   * Component of the run save toasts\n   */\n  @Component({\n    selector: '[pink-toast-component]',\n    //styles: [`\n    //  :host {\n    //    background-color: #FF69B4;\n    //    position: relative;\n    //    overflow: hidden;\n    //    margin: 0 0 6px;\n    //    padding: 10px 10px 10px 10px;\n    //    width: 300px;\n    //    border-radius: 3px 3px 3px 3px;\n    //    color: #FFFFFF;\n    //    pointer-events: all;\n    //    cursor: pointer;\n    //  }\n    //  .btn-pink {\n    //    -webkit-backface-visibility: hidden;\n    //    -webkit-transform: translateZ(0);\n    //  }\n    //`],\n    styles:[`\n        a {\n            background: #388196;\n            margin: 2px;\n        }\n\n        a:hover {\n            color: black;\n        }\n    `],\n    template: `\n    \n      \n        \n          {{ title }}\n        \n        \n        \n        \n          {{ message }}\n        \n      \n      \n        \n          {{ saveRunString }}\n        \n        \n            {{ runString }}\n        \n        \n          close\n        \n      \n    \n    \n      \n    \n    `,\n    animations: [\n      trigger('flyInOut', [\n        state('inactive', style({\n          opacity: 0,\n        })),\n        transition('inactive => active', animate('400ms ease-out', keyframes([\n          style({\n            transform: 'translate3d(100%, 0, 0) skewX(-30deg)',\n            opacity: 0,\n          }),\n          style({\n            transform: 'skewX(20deg)',\n            opacity: 1,\n          }),\n          style({\n            transform: 'skewX(-5deg)',\n            opacity: 1,\n          }),\n          style({\n            transform: 'none',\n            opacity: 1,\n          }),\n        ]))),\n        transition('active => removed', animate('400ms ease-out', keyframes([\n          style({\n            opacity: 1,\n          }),\n          style({\n            transform: 'translate3d(100%, 0, 0) skewX(30deg)',\n            opacity: 0,\n          }),\n        ]))),\n      ]),\n    ],\n    preserveWhitespaces: false,\n  })\n\n  export class RunTestToast extends Toast {\n    \n    /**\n     * Name for the save run button\n     */\n    saveRunString = 'Save and Run';\n\n    /**\n     * Name for the run test button\n     */\n    runString = 'Run Test'\n    // constructor is only necessary when not using AoT\n\n    /**\n     * @ignore\n     */\n    constructor(\n      protected toastrService: ToastrService,\n      public toastPackage: ToastPackage,\n      public apiService: ApiService\n    ) {\n      super(toastrService, toastPackage);\n    }\n  \n    /**\n     * Run test without saving it\n     * @param event \n     */\n    runTest(event: Event){\n        event.stopPropagation();\n        this.apiService.runSaveOption('run')\n        this.remove();\n\n    }\n\n    /**\n     * Saves the scenario and then runs the test\n     * @param event \n     */\n    saveAndRunTest(event: Event){\n        console.log('Save and Run Test')\n        event.stopPropagation();\n        this.apiService.runSaveOption('saveRun')\n        this.remove();\n    }\n  }\n    \n\n\n    \n            \n        a {\n            background: #388196;\n            margin: 2px;\n        }\n\n        a:hover {\n            color: black;\n        }\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ title }}                      {{ message }}                  {{ saveRunString }}                {{ runString }}              close        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmResetPasswordComponent', 'selector': 'app-confirm-reset-password'},{'name': 'DeleteScenarioToast', 'selector': '[pink-toast-component]'},{'name': 'EditableComponent', 'selector': 'editable'},{'name': 'ExampleTableComponent', 'selector': 'app-example-table'},{'name': 'FeedbackComponent', 'selector': 'app-feedback'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalsComponent', 'selector': 'app-modals'},{'name': 'ParentComponent', 'selector': 'app-parent'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'ReportHistoryComponent', 'selector': 'app-report-history'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RunTestToast', 'selector': '[pink-toast-component]'},{'name': 'ScenarioEditorComponent', 'selector': 'app-scenario-editor'},{'name': 'StoriesBarComponent', 'selector': 'app-stories-bar'},{'name': 'StoryEditorComponent', 'selector': 'app-story-editor'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'TestAccountComponent', 'selector': 'app-test-account'}];\n    var DIRECTIVES = [{'name': 'EditableOnEnterDirective', 'selector': '[editableOnEnter]'},{'name': 'EditModeDirective', 'selector': '[editMode]'},{'name': 'FocusableDirective', 'selector': '[focusable]'},{'name': 'PasswordConfirmedValidatorDirective', 'selector': '[appPasswordConfirmed]'},{'name': 'ViewModeDirective', 'selector': '[viewMode]'}];\n    var ACTUAL_COMPONENT = {'name': 'RunTestToast'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Scenario.html":{"url":"interfaces/Scenario.html","title":"interface - Scenario","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Scenario\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/Scenario.ts\n        \n\n            \n                Description\n            \n            \n                Interface of the Scenario\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        browser\n                                \n                                \n                                        comment\n                                \n                                \n                                            Optional\n                                        daisyAutoLogout\n                                \n                                \n                                            Optional\n                                        lastTestPassed\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        saved\n                                \n                                \n                                        scenario_id\n                                \n                                \n                                        stepDefinitions\n                                \n                                \n                                            Optional\n                                        stepWaitTime\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        browser\n                                    \n                                \n                                \n                                    \n                                        browser:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Selected browser to execute the test on\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                    \n                                \n                                \n                                    \n                                        comment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Comment in this scenario\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        daisyAutoLogout\n                                    \n                                \n                                \n                                    \n                                        daisyAutoLogout:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the daisy Auto Logout is active\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastTestPassed\n                                    \n                                \n                                \n                                    \n                                        lastTestPassed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the last test was successfull or not\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the scenario\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        saved\n                                    \n                                \n                                \n                                    \n                                        saved:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the scenario got saved\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenario_id\n                                    \n                                \n                                \n                                    \n                                        scenario_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Number of scenario created in the story\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stepDefinitions\n                                    \n                                \n                                \n                                    \n                                        stepDefinitions:         StepDefinition\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StepDefinition\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Step definitions in the scenario\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stepWaitTime\n                                    \n                                \n                                \n                                    \n                                        stepWaitTime:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Wait time between the steps\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {StepDefinition} from './StepDefinition';\n\n/**\n * Interface of the Scenario\n */\nexport interface Scenario {\n\n    /**\n     * Number of scenario created in the story\n     */\n    scenario_id: number;\n\n    /**\n     * Name of the scenario\n     */\n    name: string;\n\n    /**\n     * Step definitions in the scenario\n     */\n    stepDefinitions: StepDefinition;\n\n    /**\n     * Comment in this scenario\n     */\n    comment: string;\n\n    /**\n     * If the last test was successfull or not\n     */\n    lastTestPassed?: boolean;\n\n    /**\n     * If the scenario got saved\n     */\n    saved?: boolean;\n\n    /**\n     * If the daisy Auto Logout is active\n     */\n    daisyAutoLogout?: boolean;\n\n    /**\n     * Wait time between the steps\n     */\n    stepWaitTime?: number;\n\n    /**\n     * Selected browser to execute the test on\n     */\n    browser?: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StepDefinition.html":{"url":"interfaces/StepDefinition.html","title":"interface - StepDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StepDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/StepDefinition.ts\n        \n\n            \n                Description\n            \n            \n                Interface of a Step definition\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        example\n                                \n                                \n                                        given\n                                \n                                \n                                        then\n                                \n                                \n                                        when\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        example\n                                    \n                                \n                                \n                                    \n                                        example:         StepType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StepType[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Examples\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        given\n                                    \n                                \n                                \n                                    \n                                        given:         StepType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StepType[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Given Steps\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        then\n                                    \n                                \n                                \n                                    \n                                        then:         StepType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StepType[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Then Steps\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        when\n                                    \n                                \n                                \n                                    \n                                        when:         StepType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StepType[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    When Steps\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { StepType } from \"./StepType\";\n\n/**\n * Interface of a Step definition\n */\nexport interface StepDefinition {\n    /**\n     * Given Steps\n     */\n    given: StepType[];\n\n    /**\n     * When Steps\n     */\n    when: StepType[];\n\n    /**\n     * Then Steps\n     */\n    then: StepType[];\n\n    /**\n     * Examples\n     */\n    example: StepType[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StepDefinitionBackground.html":{"url":"interfaces/StepDefinitionBackground.html","title":"interface - StepDefinitionBackground","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StepDefinitionBackground\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/StepDefinitionBackground.ts\n        \n\n            \n                Description\n            \n            \n                Interface of the Step definition of the background\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        when\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        when\n                                    \n                                \n                                \n                                    \n                                        when:         StepType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StepType[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    When Steps\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { StepType } from \"./StepType\";\n\n/**\n * Interface of the Step definition of the background\n */\nexport interface StepDefinitionBackground {\n    /**\n     * When Steps\n     */\n    when: StepType[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StepType.html":{"url":"interfaces/StepType.html","title":"interface - StepType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StepType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/StepType.ts\n        \n\n            \n                Description\n            \n            \n                Interface of the step type\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        _id\n                                \n                                \n                                            Optional\n                                        checked\n                                \n                                \n                                            Optional\n                                        deactivated\n                                \n                                \n                                        id\n                                \n                                \n                                        mid\n                                \n                                \n                                            Optional\n                                        outdated\n                                \n                                \n                                        pre\n                                \n                                \n                                            Optional\n                                        selection\n                                \n                                \n                                        stepType\n                                \n                                \n                                        type\n                                \n                                \n                                        values\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Object id of the step type in the database\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        checked\n                                    \n                                \n                                \n                                    \n                                        checked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    checked currently not used\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deactivated\n                                    \n                                \n                                \n                                    \n                                        deactivated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    deactivated currently not used\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Importance of the step type, the lower, the higher the importance -> the higher the step is the higher ordered it is in the list of available steps\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mid\n                                    \n                                \n                                \n                                    \n                                        mid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Text after the first input field\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outdated\n                                    \n                                \n                                \n                                    \n                                        outdated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Outdated currently not used\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pre\n                                    \n                                \n                                \n                                    \n                                        pre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Text before the first input field\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selection\n                                    \n                                \n                                \n                                    \n                                        selection:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Selection currently not used\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stepType\n                                    \n                                \n                                \n                                    \n                                        stepType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the type to which this step belongs to: given, when, then\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name shown to the user in the available steps list\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        values\n                                    \n                                \n                                \n                                    \n                                        values:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of values to fill the input fields\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface StepType {\n    /**\n     * Object id of the step type in the database\n     */\n    _id?: string;\n\n    /**\n     * Importance of the step type, the lower, the higher the importance -> the higher the step is the higher ordered it is in the list of available steps\n     */\n    id: number;\n\n    /**\n     * Text before the first input field\n     */\n    pre: string\n\n    /**\n     * Text after the first input field\n     */\n    mid: string;\n\n    /**\n     * Selection currently not used\n     */\n    selection?: string[];\n\n    /**\n     * Name of the type to which this step belongs to: given, when, then\n     */\n    stepType: string;\n\n    /**\n     * Name shown to the user in the available steps list\n     */\n    type: string;\n\n    /**\n     * List of values to fill the input fields\n     */\n    values: string[];\n\n    /**\n     * Outdated currently not used\n     */\n    outdated?: boolean;\n\n    /**\n     * checked currently not used\n     */\n    checked?: boolean;\n\n    /**\n     * deactivated currently not used\n     */\n    deactivated?: boolean;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StoriesBarComponent.html":{"url":"components/StoriesBarComponent.html","title":"component - StoriesBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StoriesBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/stories-bar/stories-bar.component.ts\n\n\n    \n        Description\n    \n    \n        Component of the Stories bar\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-stories-bar\n            \n\n            \n                styleUrls\n                ./stories-bar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./stories-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiService\n                            \n                            \n                                createStoryEmitter\n                            \n                            \n                                daisyVersion\n                            \n                            \n                                isCustomStory\n                            \n                            \n                                modalsComponent\n                            \n                            \n                                selectedScenario\n                            \n                            \n                                selectedStory\n                            \n                            \n                                stories\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getSortedStories\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openCreateNewScenarioModal\n                            \n                            \n                                selectScenario\n                            \n                            \n                                selectStoryScenario\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                scenarioChosen\n                            \n                            \n                                storyChosen\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/stories-bar/stories-bar.component.ts:62\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        scenarioChosen\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/stories-bar/stories-bar.component.ts:57\n                            \n                        \n                \n                    \n                        Emits a new chosen scenario\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        storyChosen\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/stories-bar/stories-bar.component.ts:51\n                            \n                        \n                \n                    \n                        Emits a new chosen story\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSortedStories\n                        \n                        \n                    \n                \n            \n            \n                \ngetSortedStories()\n                \n            \n\n\n            \n                \n                    Defined in src/app/stories-bar/stories-bar.component.ts:108\n                \n            \n\n\n            \n                \n                    Sorts the stories after issue_number\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/stories-bar/stories-bar.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/stories-bar/stories-bar.component.ts:80\n                \n            \n\n\n            \n                \n                    Checks if this is the daisy version\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openCreateNewScenarioModal\n                        \n                        \n                    \n                \n            \n            \n                \nopenCreateNewScenarioModal()\n                \n            \n\n\n            \n                \n                    Defined in src/app/stories-bar/stories-bar.component.ts:143\n                \n            \n\n\n            \n                \n                    Opens a create New scenario Modal\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectScenario\n                        \n                        \n                    \n                \n            \n            \n                \nselectScenario(scenario: Scenario)\n                \n            \n\n\n            \n                \n                    Defined in src/app/stories-bar/stories-bar.component.ts:122\n                \n            \n\n\n            \n                \n                    Selects a new scenario\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scenario\n                                    \n                                                Scenario\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectStoryScenario\n                        \n                        \n                    \n                \n            \n            \n                \nselectStoryScenario(story: Story)\n                \n            \n\n\n            \n                \n                    Defined in src/app/stories-bar/stories-bar.component.ts:131\n                \n            \n\n\n            \n                \n                    Selects a new Story and with it a new scenario\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    story\n                                    \n                                                Story\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApiService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/stories-bar/stories-bar.component.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createStoryEmitter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/stories-bar/stories-bar.component.ts:45\n                            \n                        \n\n                \n                    \n                        Subscription element if a custom story should be created\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            daisyVersion\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/stories-bar/stories-bar.component.ts:40\n                            \n                        \n\n                \n                    \n                        If it is the daisy version\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isCustomStory\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/stories-bar/stories-bar.component.ts:35\n                            \n                        \n\n                \n                    \n                        If it is a custom story\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modalsComponent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ModalsComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('modalsComponent')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/stories-bar/stories-bar.component.ts:62\n                            \n                        \n\n                \n                    \n                        View Child Modals\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedScenario\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Scenario\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/stories-bar/stories-bar.component.ts:30\n                            \n                        \n\n                \n                    \n                        Currently selected scenario\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedStory\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Story\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/stories-bar/stories-bar.component.ts:25\n                            \n                        \n\n                \n                    \n                        Currently selected story\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stories\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Story[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/stories-bar/stories-bar.component.ts:20\n                            \n                        \n\n                \n                    \n                        Stories in the project\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, EventEmitter, Output, ViewChild, OnDestroy } from '@angular/core';\nimport {ApiService} from '../Services/api.service';\nimport { Story } from '../model/Story';\nimport { Scenario } from '../model/Scenario';\nimport { ModalsComponent } from '../modals/modals.component';\nimport { Subscription } from 'rxjs/internal/Subscription';\n\n/**\n * Component of the Stories bar\n */\n@Component({\n  selector: 'app-stories-bar',\n  templateUrl: './stories-bar.component.html',\n  styleUrls: ['./stories-bar.component.css']\n})\nexport class StoriesBarComponent implements OnInit, OnDestroy {\n  /**\n   * Stories in the project\n   */\n  stories: Story[];\n\n  /**\n   * Currently selected story\n   */\n  selectedStory: Story;\n\n  /**\n   * Currently selected scenario\n   */\n  selectedScenario: Scenario;\n\n  /**\n   * If it is a custom story\n   */\n  isCustomStory: boolean = false;\n\n  /**\n   * If it is the daisy version\n   */\n  daisyVersion: boolean = true;\n\n  /**\n   * Subscription element if a custom story should be created\n   */\n  createStoryEmitter: Subscription;\n\n  /**\n   * Emits a new chosen story\n   */\n  @Output()\n  storyChosen: EventEmitter = new EventEmitter();\n\n  /**\n   * Emits a new chosen scenario\n   */\n  @Output()\n  scenarioChosen: EventEmitter = new EventEmitter();\n\n  /**\n   * View Child Modals\n   */\n  @ViewChild('modalsComponent') modalsComponent: ModalsComponent;\n  \n  /**\n   * Constructor\n   * @param apiService \n   */\n  constructor(public apiService: ApiService) {\n    this.apiService.getStoriesEvent.subscribe(stories => {\n      this.stories = stories;\n      this.isCustomStory = localStorage.getItem('source') === 'db' ;\n    } );\n\n\n  }\n\n  /**\n   * Checks if this is the daisy version\n   */\n  ngOnInit() {\n    let version = localStorage.getItem('version')\n    if (version == 'DAISY' || !version) {\n      this.daisyVersion = true;\n    } else {\n      this.daisyVersion = false;\n    }\n\n    this.createStoryEmitter = this.apiService.createCustomStoryEmitter.subscribe(custom => {\n       this.apiService.createStory(custom.story.title, custom.story.description, custom.repositoryContainer.value, custom.repositoryContainer._id).subscribe(respp => {\n        this.apiService.getStories(custom.repositoryContainer).subscribe((resp: Story[]) => {\n          this.stories = resp;\n        });\n      });\n    })\n  }\n\n  ngOnDestroy() {\n    if (this.createStoryEmitter) {\n       this.createStoryEmitter.unsubscribe()\n    }\n }\n\n\n  /**\n   * Sorts the stories after issue_number\n   * @returns \n   */\n  getSortedStories() {\n    if (this.stories) {\n      return this.stories.sort(function(a, b) { \n        if(a.issue_number  b.issue_number) { return 1; }\n        return 0;\n      });\n    }\n  }\n\n  /**\n   * Selects a new scenario\n   * @param scenario \n   */\n  selectScenario(scenario: Scenario) {\n    this.selectedScenario = scenario;\n    this.scenarioChosen.emit(scenario);\n  }\n\n  /**\n   * Selects a new Story and with it a new scenario\n   * @param story \n   */\n  selectStoryScenario(story: Story) {\n    this.selectedStory = story;\n    this.storyChosen.emit(story);\n    const storyIndex = this.stories.indexOf(this.selectedStory);\n    if (this.stories[storyIndex].scenarios[0]) {\n      this.selectScenario(this.stories[storyIndex].scenarios[0]);\n    }\n  }\n\n  /**\n   * Opens a create New scenario Modal\n   */\n  openCreateNewScenarioModal(){\n    this.modalsComponent.openCreateNewStoryModal()\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      Stories\n      \n        A user story describes requirements for a software system.\n          It is consciously kept in short sentences and simple words.\n          A story includes several scenarios.\n          The following template is recommended:\n          As a , I want  so that \n        \n    \n    \n    \n      \n        \n            \n              {{s.issue_number}}. {{s.title}}\n            \n          \n            -->\n            \n            \n          \n        \n\n        \n          \n            #{{s.issue_number}}.{{c+1}} {{scen.name | titlecase}}\n          \n        \n      \n    \n    \n      Create New Story\n    \n  \n\n\n\n    \n\n    \n                \n                    ./stories-bar.component.css\n                \n                  .grid {\n    /*display: grid;\n    grid-template-columns: 100%;\n    grid-template-rows: auto;\n    grid-template-areas: \"storyHeader\" \"storyList\";*/\n    margin-top: 24px;\n    border: 1px solid #999;\n    padding-left: 10px;\n    padding-right: 10px;\n    padding-bottom: 1px;\n    box-shadow: 0px 5px 15px rgba(0,0,0,0.08);\n    background-color: var(--white);\n  }\n\n\n  #storyHeader{\n    grid-area: storyHeader;\n  }\n\n  #infoIcon{\n    grid-area: storyHeader;\n    color: #999;\n    padding-top: 3px;\n    margin-left: 7px;\n  }\n\n  .def {\n    color: #999;\n    cursor: help;\n    position: relative;\n    z-index: 2;\n    top: -2px;\n  }\n  \n  .def span[rel=def] {\n    display: none;\n  }\n  \n  .def:hover span[rel=def] {\n    font-size: small;\n    color: white;\n    background-color: rgb(109, 109, 109);\n    position: absolute;\n    bottom: 2em;\n    left: 2em;\n    width: 30em;\n    padding: 0.5em;\n    display: block;\n  }\n\n \n\n\n  #createNewStoryDiv{\n    text-align: right;\n  }\n\n  .modal-title{\n    color: var(--white);\n  }\n  .modal-header{\n    background-color: var(--ocean-blue);\n  }\n\n  .modal-body{\n    text-align: center;\n    padding-top: 30px;\n    padding-left: 30px;\n    padding-right: 30px;\n    padding-bottom: 15px;\n  }\n\n  .modal-footer{\n    height: 60px;\n  }\n\n  .close{\n    color: white;\n    outline: none;\n  }\n\n  .github-avatar{\n    float: right;\n  }\n\n  a.storyListLink {\n    transition: 0.2s;\n    display: inline-block;\n    max-width: 80%;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n\n  .normalButton{\n    margin-bottom: 10px;\n  }\n\n  a.storyListLink:hover{\n    color: var(--dark-grey);\n  }\n\n  #storyList{\n    grid-area: storyList;\n    font-size: smaller;\n    transition: 0.1s;\n  }\n\n  #storyList:hover{\n    cursor: pointer;\n    background-color: #f1f1f1;\n  }\n  .scenarioListItem{\n    display: block;\n  }\n  .scenarioListItem:hover{\n    background-color: #f1f1f1;\n  }\n\n  .uk-accordion{\n    width: 100%;\n  }\n  \n  .uk-accordion-content {\n    font-size: small;\n  }\n\n  .uk-accordion-content a{\n    color: #56595e;\n  }\n\n  .uk-accordion-content .passed,\n  .uk-accordion-title.uk-background-muted .passed{\n    color: green;\n  }\n  \n  .uk-accordion-content .notPassed,\n  .uk-accordion-title.uk-background-muted .notPassed{\n    color: red;\n  }\n\n  .uk-accordion-title.uk-background-muted span.passed{\n    background-color: green;\n  }\n\n  .uk-accordion-title.uk-background-muted span.notPassed{\n    background-color: red;\n  }\n  \n@media screen and (max-width: 600px) {\n  .grid{\n      display: grid;\n      grid-template-areas:\n      \"storyHeader\"\n      \"storyList\";\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Stories              A user story describes requirements for a software system.          It is consciously kept in short sentences and simple words.          A story includes several scenarios.          The following template is recommended:          As a , I want  so that                                                             {{s.issue_number}}. {{s.title}}                                  -->                                                                        #{{s.issue_number}}.{{c+1}} {{scen.name | titlecase}}                                      Create New Story      '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmResetPasswordComponent', 'selector': 'app-confirm-reset-password'},{'name': 'DeleteScenarioToast', 'selector': '[pink-toast-component]'},{'name': 'EditableComponent', 'selector': 'editable'},{'name': 'ExampleTableComponent', 'selector': 'app-example-table'},{'name': 'FeedbackComponent', 'selector': 'app-feedback'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalsComponent', 'selector': 'app-modals'},{'name': 'ParentComponent', 'selector': 'app-parent'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'ReportHistoryComponent', 'selector': 'app-report-history'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RunTestToast', 'selector': '[pink-toast-component]'},{'name': 'ScenarioEditorComponent', 'selector': 'app-scenario-editor'},{'name': 'StoriesBarComponent', 'selector': 'app-stories-bar'},{'name': 'StoryEditorComponent', 'selector': 'app-story-editor'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'TestAccountComponent', 'selector': 'app-test-account'}];\n    var DIRECTIVES = [{'name': 'EditableOnEnterDirective', 'selector': '[editableOnEnter]'},{'name': 'EditModeDirective', 'selector': '[editMode]'},{'name': 'FocusableDirective', 'selector': '[focusable]'},{'name': 'PasswordConfirmedValidatorDirective', 'selector': '[appPasswordConfirmed]'},{'name': 'ViewModeDirective', 'selector': '[viewMode]'}];\n    var ACTUAL_COMPONENT = {'name': 'StoriesBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Story.html":{"url":"interfaces/Story.html","title":"interface - Story","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Story\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/Story.ts\n        \n\n            \n                Description\n            \n            \n                Interface of the story\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        assignee\n                                \n                                \n                                        assignee_avatar_url\n                                \n                                \n                                        background\n                                \n                                \n                                        body\n                                \n                                \n                                        issue_number\n                                \n                                \n                                            Optional\n                                        lastTestPassed\n                                \n                                \n                                        scenarios\n                                \n                                \n                                        state\n                                \n                                \n                                        story_id\n                                \n                                \n                                        storySource\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Object id of the story in the database\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        assignee\n                                    \n                                \n                                \n                                    \n                                        assignee:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Github user assigned to this issue\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        assignee_avatar_url\n                                    \n                                \n                                \n                                    \n                                        assignee_avatar_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Url of the assignee avatar\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        background\n                                    \n                                \n                                \n                                    \n                                        background:         Background\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Background\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Background of the story\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Description of the story\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issue_number\n                                    \n                                \n                                \n                                    \n                                        issue_number:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Id of the story received from github\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastTestPassed\n                                    \n                                \n                                \n                                    \n                                        lastTestPassed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If the last test was successful or not\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scenarios\n                                    \n                                \n                                \n                                    \n                                        scenarios:         Scenario[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Scenario[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Scenarios in the story\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                    \n                                \n                                \n                                    \n                                        state:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    State of the github issue\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        story_id\n                                    \n                                \n                                \n                                    \n                                        story_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Id of the story received from github\nvery similar to issue_number but is currently not used anymore\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        storySource\n                                    \n                                \n                                \n                                    \n                                        storySource:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Source of the story\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Title of the story\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {Scenario} from './Scenario';\nimport { Background } from './Background';\n\n/**\n * Interface of the story\n */\nexport interface Story {\n    /**\n     * Object id of the story in the database\n     */\n    _id: any;\n\n    /**\n     * Id of the story received from github\n     */\n    issue_number: any;\n\n    /**\n     * Id of the story received from github\n     * very similar to issue_number but is currently not used anymore\n     */\n    story_id: number;\n\n    /**\n     * Source of the story\n     */\n    storySource: string;\n\n    /**\n     * Background of the story\n     */\n    background: Background;\n\n    /**\n     * Scenarios in the story\n     */\n    scenarios: Scenario[];\n\n    /**\n     * Title of the story\n     */\n    title: string;\n\n    /**\n     * Description of the story\n     */\n    body: string;\n\n    /**\n     * State of the github issue\n     */\n    state: string;\n\n    /**\n     * Github user assigned to this issue\n     */\n    assignee: string;\n\n    /**\n     * Url of the assignee avatar\n     */\n    assignee_avatar_url: string;\n\n    /**\n     * If the last test was successful or not\n     */\n    lastTestPassed?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TermsComponent.html":{"url":"components/TermsComponent.html","title":"component - TermsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TermsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/terms/terms.component.ts\n\n\n    \n        Description\n    \n    \n        Component of the terms\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-terms\n            \n\n            \n                styleUrls\n                ./terms.component.css\n            \n\n\n\n            \n                templateUrl\n                ./terms.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Component of the terms\n */\n@Component({\n  selector: 'app-terms',\n  templateUrl: './terms.component.html',\n  styleUrls: ['./terms.component.css']\n})\nexport class TermsComponent implements OnInit {\n\n  /**\n   * @ignore\n   */\n  constructor() { }\n\n  /**\n   * @ignore\n   */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  Privacy Policy for Seed-Test\n\n  At Seed-Test, accessible from https://seed-test-frontend.herokuapp.com/, one of our main priorities is the privacy of our visitors. This Privacy Policy document contains types of information that is collected and recorded by Seed-Test and how we use it.\n  \n  If you have additional questions or require more information about our Privacy Policy, do not hesitate to contact us.\n  \n  This Privacy Policy applies only to our online activities and is valid for visitors to our website with regards to the information that they shared and/or collect in Seed-Test. This policy is not applicable to any information collected offline or via channels other than this website.\n  \n  Consent\n  \n  By using our website, you hereby consent to our Privacy Policy and agree to its terms.\n  \n  Information we collect\n  \n  The personal information that you are asked to provide, and the reasons why you are asked to provide it, will be made clear to you at the point we ask you to provide your personal information.\n  If you contact us directly, we may receive additional information about you such as your name, email address, phone number, the contents of the message and/or attachments you may send us, and any other information you may choose to provide.\n  When you register for an Account, we may ask for your contact information, including items such as name, company name, address, email address, and telephone number.\n  \n  How we use your information\n  \n  We use the information we collect in various ways, including to:\n  \n  \n  Provide, operate, and maintain our webste\n  Improve, personalize, and expand our webste\n  Understand and analyze how you use our webste\n  Develop new products, services, features, and functionality\n  Communicate with you, either directly or through one of our partners, including for customer service, to provide you with updates and other information relating to the webste, and for marketing and promotional purposes\n  Send you emails\n  Find and prevent fraud\n  \n  \n  Log Files\n  \n  Seed-Test follows a standard procedure of using log files. These files log visitors when they visit websites. All hosting companies do this and a part of hosting services' analytics. The information collected by log files include internet protocol (IP) addresses, browser type, Internet Service Provider (ISP), date and time stamp, referring/exit pages, and possibly the number of clicks. These are not linked to any information that is personally identifiable. The purpose of the information is for analyzing trends, administering the site, tracking users' movement on the website, and gathering demographic information. Our Privacy Policy was created with the help of the Privacy Policy Generator and the Disclaimer Generator.\n  \n  Cookies and Web Beacons\n  \n  Like any other website, Seed-Test uses 'cookies'. These cookies are used to store information including visitors' preferences, and the pages on the website that the visitor accessed or visited. The information is used to optimize the users' experience by customizing our web page content based on visitors' browser type and/or other information.\n  \n  For more general information on cookies, please read \"What Are Cookies\".\n  \n  \n  \n  Advertising Partners Privacy Policies\n  \n  You may consult this list to find the Privacy Policy for each of the advertising partners of Seed-Test.\n  \n  Third-party ad servers or ad networks uses technologies like cookies, JavaScript, or Web Beacons that are used in their respective advertisements and links that appear on Seed-Test, which are sent directly to users' browser. They automatically receive your IP address when this occurs. These technologies are used to measure the effectiveness of their advertising campaigns and/or to personalize the advertising content that you see on websites that you visit.\n  \n  Note that Seed-Test has no access to or control over these cookies that are used by third-party advertisers.\n  \n  Third Party Privacy Policies\n  \n  Seed-Test's Privacy Policy does not apply to other advertisers or websites. Thus, we are advising you to consult the respective Privacy Policies of these third-party ad servers for more detailed information. It may include their practices and instructions about how to opt-out of certain options. \n  \n  You can choose to disable cookies through your individual browser options. To know more detailed information about cookie management with specific web browsers, it can be found at the browsers' respective websites.\n  \n  CCPA Privacy Rights (Do Not Sell My Personal Information)\n  \n  Under the CCPA, among other rights, California consumers have the right to:\n  Request that a business that collects a consumer's personal data disclose the categories and specific pieces of personal data that a business has collected about consumers.\n  Request that a business delete any personal data about the consumer that a business has collected.\n  Request that a business that sells a consumer's personal data, not sell the consumer's personal data.\n  If you make a request, we have one month to respond to you. If you would like to exercise any of these rights, please contact us.\n  \n  GDPR Data Protection Rights\n  \n  We would like to make sure you are fully aware of all of your data protection rights. Every user is entitled to the following:\n  The right to access – You have the right to request copies of your personal data. We may charge you a small fee for this service.\n  The right to rectification – You have the right to request that we correct any information you believe is inaccurate. You also have the right to request that we complete the information you believe is incomplete.\n  The right to erasure – You have the right to request that we erase your personal data, under certain conditions.\n  The right to restrict processing – You have the right to request that we restrict the processing of your personal data, under certain conditions.\n  The right to object to processing – You have the right to object to our processing of your personal data, under certain conditions.\n  The right to data portability – You have the right to request that we transfer the data that we have collected to another organization, or directly to you, under certain conditions.\n  If you make a request, we have one month to respond to you. If you would like to exercise any of these rights, please contact us.\n  \n  Children's Information\n  \n  Another part of our priority is adding protection for children while using the internet. We encourage parents and guardians to observe, participate in, and/or monitor and guide their online activity.\n  \n  Seed-Test does not knowingly collect any Personal Identifiable Information from children under the age of 13. If you think that your child provided this kind of information on our website, we strongly encourage you to contact us immediately and we will do our best efforts to promptly remove such information from our records.\n\n\n\n\n\n\n    \n\n    \n                \n                    ./terms.component.css\n                \n                *{\n    font-family: Klavika, sans-serif;\n}\n\n.container{\n    margin: 20px;\n}\n\na {\n    color: #212529;\n}\n\n@media screen and (max-width: 600px) {\n    .container{\n        width: 94%;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Privacy Policy for Seed-Test  At Seed-Test, accessible from https://seed-test-frontend.herokuapp.com/, one of our main priorities is the privacy of our visitors. This Privacy Policy document contains types of information that is collected and recorded by Seed-Test and how we use it.    If you have additional questions or require more information about our Privacy Policy, do not hesitate to contact us.    This Privacy Policy applies only to our online activities and is valid for visitors to our website with regards to the information that they shared and/or collect in Seed-Test. This policy is not applicable to any information collected offline or via channels other than this website.    Consent    By using our website, you hereby consent to our Privacy Policy and agree to its terms.    Information we collect    The personal information that you are asked to provide, and the reasons why you are asked to provide it, will be made clear to you at the point we ask you to provide your personal information.  If you contact us directly, we may receive additional information about you such as your name, email address, phone number, the contents of the message and/or attachments you may send us, and any other information you may choose to provide.  When you register for an Account, we may ask for your contact information, including items such as name, company name, address, email address, and telephone number.    How we use your information    We use the information we collect in various ways, including to:      Provide, operate, and maintain our webste  Improve, personalize, and expand our webste  Understand and analyze how you use our webste  Develop new products, services, features, and functionality  Communicate with you, either directly or through one of our partners, including for customer service, to provide you with updates and other information relating to the webste, and for marketing and promotional purposes  Send you emails  Find and prevent fraud      Log Files    Seed-Test follows a standard procedure of using log files. These files log visitors when they visit websites. All hosting companies do this and a part of hosting services\\' analytics. The information collected by log files include internet protocol (IP) addresses, browser type, Internet Service Provider (ISP), date and time stamp, referring/exit pages, and possibly the number of clicks. These are not linked to any information that is personally identifiable. The purpose of the information is for analyzing trends, administering the site, tracking users\\' movement on the website, and gathering demographic information. Our Privacy Policy was created with the help of the Privacy Policy Generator and the Disclaimer Generator.    Cookies and Web Beacons    Like any other website, Seed-Test uses \\'cookies\\'. These cookies are used to store information including visitors\\' preferences, and the pages on the website that the visitor accessed or visited. The information is used to optimize the users\\' experience by customizing our web page content based on visitors\\' browser type and/or other information.    For more general information on cookies, please read \"What Are Cookies\".        Advertising Partners Privacy Policies    You may consult this list to find the Privacy Policy for each of the advertising partners of Seed-Test.    Third-party ad servers or ad networks uses technologies like cookies, JavaScript, or Web Beacons that are used in their respective advertisements and links that appear on Seed-Test, which are sent directly to users\\' browser. They automatically receive your IP address when this occurs. These technologies are used to measure the effectiveness of their advertising campaigns and/or to personalize the advertising content that you see on websites that you visit.    Note that Seed-Test has no access to or control over these cookies that are used by third-party advertisers.    Third Party Privacy Policies    Seed-Test\\'s Privacy Policy does not apply to other advertisers or websites. Thus, we are advising you to consult the respective Privacy Policies of these third-party ad servers for more detailed information. It may include their practices and instructions about how to opt-out of certain options.     You can choose to disable cookies through your individual browser options. To know more detailed information about cookie management with specific web browsers, it can be found at the browsers\\' respective websites.    CCPA Privacy Rights (Do Not Sell My Personal Information)    Under the CCPA, among other rights, California consumers have the right to:  Request that a business that collects a consumer\\'s personal data disclose the categories and specific pieces of personal data that a business has collected about consumers.  Request that a business delete any personal data about the consumer that a business has collected.  Request that a business that sells a consumer\\'s personal data, not sell the consumer\\'s personal data.  If you make a request, we have one month to respond to you. If you would like to exercise any of these rights, please contact us.    GDPR Data Protection Rights    We would like to make sure you are fully aware of all of your data protection rights. Every user is entitled to the following:  The right to access – You have the right to request copies of your personal data. We may charge you a small fee for this service.  The right to rectification – You have the right to request that we correct any information you believe is inaccurate. You also have the right to request that we complete the information you believe is incomplete.  The right to erasure – You have the right to request that we erase your personal data, under certain conditions.  The right to restrict processing – You have the right to request that we restrict the processing of your personal data, under certain conditions.  The right to object to processing – You have the right to object to our processing of your personal data, under certain conditions.  The right to data portability – You have the right to request that we transfer the data that we have collected to another organization, or directly to you, under certain conditions.  If you make a request, we have one month to respond to you. If you would like to exercise any of these rights, please contact us.    Children\\'s Information    Another part of our priority is adding protection for children while using the internet. We encourage parents and guardians to observe, participate in, and/or monitor and guide their online activity.    Seed-Test does not knowingly collect any Personal Identifiable Information from children under the age of 13. If you think that your child provided this kind of information on our website, we strongly encourage you to contact us immediately and we will do our best efforts to promptly remove such information from our records.'\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmResetPasswordComponent', 'selector': 'app-confirm-reset-password'},{'name': 'DeleteScenarioToast', 'selector': '[pink-toast-component]'},{'name': 'EditableComponent', 'selector': 'editable'},{'name': 'ExampleTableComponent', 'selector': 'app-example-table'},{'name': 'FeedbackComponent', 'selector': 'app-feedback'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalsComponent', 'selector': 'app-modals'},{'name': 'ParentComponent', 'selector': 'app-parent'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'ReportHistoryComponent', 'selector': 'app-report-history'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RunTestToast', 'selector': '[pink-toast-component]'},{'name': 'ScenarioEditorComponent', 'selector': 'app-scenario-editor'},{'name': 'StoriesBarComponent', 'selector': 'app-stories-bar'},{'name': 'StoryEditorComponent', 'selector': 'app-story-editor'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'TestAccountComponent', 'selector': 'app-test-account'}];\n    var DIRECTIVES = [{'name': 'EditableOnEnterDirective', 'selector': '[editableOnEnter]'},{'name': 'EditModeDirective', 'selector': '[editMode]'},{'name': 'FocusableDirective', 'selector': '[focusable]'},{'name': 'PasswordConfirmedValidatorDirective', 'selector': '[appPasswordConfirmed]'},{'name': 'ViewModeDirective', 'selector': '[viewMode]'}];\n    var ACTUAL_COMPONENT = {'name': 'TermsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TestAccountComponent.html":{"url":"components/TestAccountComponent.html","title":"component - TestAccountComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TestAccountComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/test-account/test-account.component.ts\n\n\n    \n        Description\n    \n    \n        Component of the TestAccountComponent\n\n    \n\n    \n        Extends\n    \n    \n                ParentComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-test-account\n            \n\n            \n                styleUrls\n                ../parent/parent.component.css\n            \n\n\n\n            \n                templateUrl\n                ../parent/parent.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiService\n                            \n                            \n                                    Public\n                                apiService\n                            \n                            \n                                isStoryEditorActive\n                            \n                            \n                                selectedScenario\n                            \n                            \n                                selectedStory\n                            \n                            \n                                stories\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadStories\n                            \n                            \n                                loadStories\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setEditor\n                            \n                            \n                                setSelectedScenario\n                            \n                            \n                                setSelectedStory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/test-account/test-account.component.ts:16\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadStories\n                        \n                        \n                    \n                \n            \n            \n                \nloadStories()\n                \n            \n\n\n            \n                \n                    Defined in src/app/test-account/test-account.component.ts:35\n                \n            \n\n\n            \n                \n                    Loads the stories from the test account\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadStories\n                        \n                        \n                    \n                \n            \n            \n                \nloadStories()\n                \n            \n\n\n            \n                \n                    Inherited from         ParentComponent\n\n                \n            \n            \n                \n                        Defined in         ParentComponent:62\n\n                \n            \n\n\n            \n                \n                    Leads the stories of the current selected repository\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         ParentComponent\n\n                \n            \n            \n                \n                        Defined in         ParentComponent:55\n\n                \n            \n\n\n            \n                \n                    Requests the repositories on init\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setEditor\n                        \n                        \n                    \n                \n            \n            \n                \nsetEditor(event)\n                \n            \n\n\n            \n                \n                    Inherited from         ParentComponent\n\n                \n            \n            \n                \n                        Defined in         ParentComponent:94\n\n                \n            \n\n\n            \n                \n                    Change the editor to report history or story editor\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSelectedScenario\n                        \n                        \n                    \n                \n            \n            \n                \nsetSelectedScenario(scenario: Scenario)\n                \n            \n\n\n            \n                \n                    Inherited from         ParentComponent\n\n                \n            \n            \n                \n                        Defined in         ParentComponent:86\n\n                \n            \n\n\n            \n                \n                    Sets the currently selected scenario\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scenario\n                                    \n                                                Scenario\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSelectedStory\n                        \n                        \n                    \n                \n            \n            \n                \nsetSelectedStory(story: Story)\n                \n            \n\n\n            \n                \n                    Inherited from         ParentComponent\n\n                \n            \n            \n                \n                        Defined in         ParentComponent:78\n\n                \n            \n\n\n            \n                \n                    Sets the currently selected story\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    story\n                                    \n                                                Story\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApiService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/test-account/test-account.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApiService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ParentComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         ParentComponent:41\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isStoryEditorActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                            \n                                \n                                    Inherited from         ParentComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         ParentComponent:35\n\n                            \n                        \n\n                \n                    \n                        If the story Editor is shown or the report history\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedScenario\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Scenario\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ParentComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         ParentComponent:30\n\n                            \n                        \n\n                \n                    \n                        Currently selected Scenario\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedStory\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Story\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ParentComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         ParentComponent:25\n\n                            \n                        \n\n                \n                    \n                        Currently selected story\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stories\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Story[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ParentComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         ParentComponent:20\n\n                            \n                        \n\n                \n                    \n                        Stories in the selected project\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ParentComponent } from '../parent/parent.component';\nimport { ApiService } from '../Services/api.service';\nimport { Story } from '../model/Story';\nimport { RepositoryContainer } from '../model/RepositoryContainer';\n\n\n/**\n * Component of the TestAccountComponent\n */\n@Component({\n  selector: 'app-test-account',\n  templateUrl: '../parent/parent.component.html',\n  styleUrls: ['../parent/parent.component.css']\n})\nexport class TestAccountComponent extends ParentComponent implements OnInit {\n\n  /**\n   * Constructor\n   * @param apiService \n   */\n  constructor(public apiService: ApiService) {\n    super(apiService);\n    this.loadStories()\n  }\n\n  /**\n   * @ignore\n   */\n  ngOnInit() {}\n\n  /**\n   * Loads the stories from the test account\n   */\n  loadStories() {\n    let repository: RepositoryContainer = {value: '', source: 'testaccount'}\n    this.apiService\n        .getStories(repository)\n        .subscribe((resp: Story[]) => {\n          this.stories = resp;\n          console.log(resp);\n    });\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        \n        \n    \n\n\n    \n\n    \n                \n                    ../parent/parent.component.css\n                \n                * {\n    padding: 0px;\n    margin: 0px;\n}\n\n.grid{\n    background-color: var(--light-grey);\n    display: grid;\n    grid-template-columns: repeat(4, minmax(0, 1fr));\n    grid-template-rows: auto;\n    grid-template-areas:\n    \"storiesBar storyEditor storyEditor storyEditor\";\n    grid-column-gap: 10px;\n    padding-bottom: 5px;\n}\n\n.storiesBar{\n    grid-area: storiesBar;\n}\n\n.storyEditor{\n    grid-area: storyEditor;\n}\n\n\n\n@media screen and (max-width: 600px) {\n    .grid{\n        display: grid;\n        grid-template-columns: 94%;\n        grid-template-rows: auto auto;\n        grid-template-areas:\n        \"storiesBar\"\n        \"storyEditor\";\n        justify-content: center;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        '\n    var COMPONENTS = [{'name': 'AccountManagementComponent', 'selector': 'app-account-management'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmResetPasswordComponent', 'selector': 'app-confirm-reset-password'},{'name': 'DeleteScenarioToast', 'selector': '[pink-toast-component]'},{'name': 'EditableComponent', 'selector': 'editable'},{'name': 'ExampleTableComponent', 'selector': 'app-example-table'},{'name': 'FeedbackComponent', 'selector': 'app-feedback'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'ModalsComponent', 'selector': 'app-modals'},{'name': 'ParentComponent', 'selector': 'app-parent'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'ReportComponent', 'selector': 'app-report'},{'name': 'ReportHistoryComponent', 'selector': 'app-report-history'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'RunTestToast', 'selector': '[pink-toast-component]'},{'name': 'ScenarioEditorComponent', 'selector': 'app-scenario-editor'},{'name': 'StoriesBarComponent', 'selector': 'app-stories-bar'},{'name': 'StoryEditorComponent', 'selector': 'app-story-editor'},{'name': 'TermsComponent', 'selector': 'app-terms'},{'name': 'TestAccountComponent', 'selector': 'app-test-account'}];\n    var DIRECTIVES = [{'name': 'EditableOnEnterDirective', 'selector': '[editableOnEnter]'},{'name': 'EditModeDirective', 'selector': '[editMode]'},{'name': 'FocusableDirective', 'selector': '[focusable]'},{'name': 'PasswordConfirmedValidatorDirective', 'selector': '[appPasswordConfirmed]'},{'name': 'ViewModeDirective', 'selector': '[viewMode]'}];\n    var ACTUAL_COMPONENT = {'name': 'TestAccountComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/TimeoutInterceptor.html":{"url":"interceptors/TimeoutInterceptor.html","title":"interceptor - TimeoutInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  TimeoutInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/Services/timeout-interceptor.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Interceptor to make run requests last for as long as we specify in the header\nfrom https://stackoverflow.com/questions/45938931/default-and-specific-request-timeout\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(defaultTimeout: number)\n                    \n                \n                        \n                            \n                                Defined in src/app/Services/timeout-interceptor.interceptor.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        defaultTimeout\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/Services/timeout-interceptor.interceptor.ts:26\n                \n            \n\n\n            \n                \n                    Intercepts the request and makes the timeout to the specified time\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken } from '@angular/core';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { timeout } from 'rxjs/operators';\n\n/**\n * Default request timeout specified in the app module\n */\nexport const DEFAULT_TIMEOUT = new InjectionToken('defaultTimeout');\n\n/**\n * Interceptor to make run requests last for as long as we specify in the header\n * from https://stackoverflow.com/questions/45938931/default-and-specific-request-timeout\n */\n@Injectable()\nexport class TimeoutInterceptor implements HttpInterceptor {\n  constructor(@Inject(DEFAULT_TIMEOUT) protected defaultTimeout: number) {\n  }\n\n  /**\n   * Intercepts the request and makes the timeout to the specified time\n   * @param req \n   * @param next \n   * @returns \n   */\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const timeoutValue = req.headers.get('timeout') || this.defaultTimeout;\n    const timeoutValueNumeric = Number(timeoutValue);\n\n    return next.handle(req).pipe(timeout(timeoutValueNumeric));\n  }\n}\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/User.ts\n        \n\n            \n                Description\n            \n            \n                Interface of a user\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        email\n                                \n                                \n                                        github\n                                \n                                \n                                        jira\n                                \n                                \n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Object id of the user in the database\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Email of the user\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        github\n                                    \n                                \n                                \n                                    \n                                        github:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Github object of the user if it is connected to github\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jira\n                                    \n                                \n                                \n                                    \n                                        jira:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Jira object of the user if it is connected to jira\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Password of the user usually hashed\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n    /**\n     * Object id of the user in the database\n     */\n    _id: any;\n\n    /**\n     * Email of the user\n     */\n    email: string;\n\n    /**\n     * Password of the user usually hashed\n     */\n    password: string;\n\n    /**\n     * Github object of the user if it is connected to github\n     */\n    github: {\n        /** \n         * Token to access the github data of the user\n        */\n        githubToken: string;\n\n        /**\n         * Name of the user in github\n         */\n        githubAccountName: string;\n\n        /** \n         * Last used github repository\n        */\n        githubRepo: string;\n    };\n\n    /**\n     * Jira object of the user if it is connected to jira\n     */\n    jira: {\n        /**\n         * Account name of the user\n         */\n        AccountName: string;\n\n        /**\n         * Password of the user usually hashed\n         */\n        Password: string;\n\n        /**\n         * Address of the jira host\n         */\n        Host: string;\n    };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ViewModeDirective.html":{"url":"directives/ViewModeDirective.html","title":"directive - ViewModeDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ViewModeDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/directives/view-mode.directive.ts\n        \n\n            \n                Description\n            \n            \n                Directive of table cell if it is only viewable for the example table\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [viewMode]\n                    \n\n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Directive, TemplateRef } from '@angular/core';\n\n/**\n * Directive of table cell if it is only viewable for the example table\n */\n@Directive({\n  selector: '[viewMode]'\n})\nexport class ViewModeDirective {\n\n  /**\n   * @ignore\n   */\n  constructor(public tpl: TemplateRef) { }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/Services/api.service.ts\n            \n            injectable\n            ApiService\n            \n                100 %\n                (65/65)\n            \n        \n        \n            \n                \n                src/app/Services/timeout-interceptor.interceptor.ts\n            \n            interceptor\n            TimeoutInterceptor\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/Services/timeout-interceptor.interceptor.ts\n            \n            variable\n            DEFAULT_TIMEOUT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/account-management/account-management.component.ts\n            \n            component\n            AccountManagementComponent\n            \n                100 %\n                (19/19)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                85 %\n                (12/14)\n            \n        \n        \n            \n                \n                src/app/confirm-reset-password/confirm-reset-password.component.ts\n            \n            component\n            ConfirmResetPasswordComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/deleteScenario-toast.ts\n            \n            component\n            DeleteScenarioToast\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/directives/edit-mode.directive.ts\n            \n            directive\n            EditModeDirective\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/directives/edit-on-enter.directive.ts\n            \n            directive\n            EditableOnEnterDirective\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/directives/password-confirmed.directive.ts\n            \n            directive\n            PasswordConfirmedValidatorDirective\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/directives/password-confirmed.directive.ts\n            \n            variable\n            passwordConfirmedValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/directives/view-mode.directive.ts\n            \n            directive\n            ViewModeDirective\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/editable/editable.component.ts\n            \n            component\n            EditableComponent\n            \n                45 %\n                (5/11)\n            \n        \n        \n            \n                \n                src/app/editable/focusable.directive.ts\n            \n            directive\n            FocusableDirective\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/example-table/example-table.component.ts\n            \n            component\n            ExampleTableComponent\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                src/app/feedback/feedback.component.ts\n            \n            component\n            FeedbackComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                50 %\n                (13/26)\n            \n        \n        \n            \n                \n                src/app/modals/modals.component.ts\n            \n            component\n            ModalsComponent\n            \n                86 %\n                (51/59)\n            \n        \n        \n            \n                \n                src/app/model/Background.ts\n            \n            interface\n            Background\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/model/Block.ts\n            \n            interface\n            Block\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/model/Report.ts\n            \n            interface\n            Report\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/model/ReportContainer.ts\n            \n            interface\n            ReportContainer\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/model/RepositoryContainer.ts\n            \n            interface\n            RepositoryContainer\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/model/Scenario.ts\n            \n            interface\n            Scenario\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/app/model/StepDefinition.ts\n            \n            interface\n            StepDefinition\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/model/StepDefinitionBackground.ts\n            \n            interface\n            StepDefinitionBackground\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/model/StepType.ts\n            \n            interface\n            StepType\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/model/Story.ts\n            \n            interface\n            Story\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/model/User.ts\n            \n            interface\n            User\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/parent/parent.component.ts\n            \n            component\n            ParentComponent\n            \n                91 %\n                (11/12)\n            \n        \n        \n            \n                \n                src/app/registration/registration.component.ts\n            \n            component\n            RegistrationComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/report-history/report-history.component.ts\n            \n            component\n            ReportHistoryComponent\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/report/report.component.ts\n            \n            component\n            ReportComponent\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/reset-password/reset-password.component.ts\n            \n            component\n            ResetPasswordComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/routes/routes.ts\n            \n            variable\n            ROUTES\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/runSave-toast.ts\n            \n            component\n            RunTestToast\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/scenario-editor/scenario-editor.component.ts\n            \n            component\n            ScenarioEditorComponent\n            \n                98 %\n                (77/78)\n            \n        \n        \n            \n                \n                src/app/stories-bar/stories-bar.component.ts\n            \n            component\n            StoriesBarComponent\n            \n                88 %\n                (16/18)\n            \n        \n        \n            \n                \n                src/app/story-editor/story-editor.component.ts\n            \n            component\n            StoryEditorComponent\n            \n                98 %\n                (76/77)\n            \n        \n        \n            \n                \n                src/app/story-editor/story-editor.component.ts\n            \n            variable\n            emptyBackground\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/terms/terms.component.ts\n            \n            component\n            TermsComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/test-account/test-account.component.ts\n            \n            component\n            TestAccountComponent\n            \n                85 %\n                (12/14)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^10.2.3\n        \n            @angular/common : ^10.2.3\n        \n            @angular/compiler : ^10.2.3\n        \n            @angular/core : ^10.2.3\n        \n            @angular/forms : ^10.2.3\n        \n            @angular/http : ^7.2.16\n        \n            @angular/platform-browser : ^10.2.3\n        \n            @angular/platform-browser-dynamic : ^10.2.3\n        \n            @angular/router : ^10.2.3\n        \n            @ng-bootstrap/ng-bootstrap : ^8.0.0\n        \n            @ngbmodule/material-carousel : ^0.7.1\n        \n            angular : ^1.8.2\n        \n            core-js : ^3.7.0\n        \n            cors : ^2.8.5\n        \n            dotenv : ^8.2.0\n        \n            express : ^4.16.4\n        \n            file-saver : ^2.0.1\n        \n            hammerjs : ^2.0.8\n        \n            invert-kv : ^3.0.1\n        \n            jquery : ^3.5.1\n        \n            ngx-cookie-service : 10.1.1\n        \n            ngx-take-until-destroy : ^5.4.0\n        \n            ngx-toastr : 13.1.0\n        \n            node-fetch : ^2.6.1\n        \n            node-sass : ^4.14.1\n        \n            request : ^2.88.2\n        \n            set-value : 3.0.2\n        \n            uikit : ^3.5.9\n        \n            zone.js : ~0.11.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCucumberFrontend\nThis project was generated with Angular CLI version 6.2.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAccountManagementComponent\n\nAccountManagementComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccountManagementComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nConfirmResetPasswordComponent\n\nConfirmResetPasswordComponent\n\nAppModule -->\n\nConfirmResetPasswordComponent->AppModule\n\n\n\n\n\nDeleteScenarioToast\n\nDeleteScenarioToast\n\nAppModule -->\n\nDeleteScenarioToast->AppModule\n\n\n\n\n\nEditModeDirective\n\nEditModeDirective\n\nAppModule -->\n\nEditModeDirective->AppModule\n\n\n\n\n\nEditableComponent\n\nEditableComponent\n\nAppModule -->\n\nEditableComponent->AppModule\n\n\n\n\n\nEditableOnEnterDirective\n\nEditableOnEnterDirective\n\nAppModule -->\n\nEditableOnEnterDirective->AppModule\n\n\n\n\n\nExampleTableComponent\n\nExampleTableComponent\n\nAppModule -->\n\nExampleTableComponent->AppModule\n\n\n\n\n\nFeedbackComponent\n\nFeedbackComponent\n\nAppModule -->\n\nFeedbackComponent->AppModule\n\n\n\n\n\nFocusableDirective\n\nFocusableDirective\n\nAppModule -->\n\nFocusableDirective->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nModalsComponent\n\nModalsComponent\n\nAppModule -->\n\nModalsComponent->AppModule\n\n\n\n\n\nParentComponent\n\nParentComponent\n\nAppModule -->\n\nParentComponent->AppModule\n\n\n\n\n\nPasswordConfirmedValidatorDirective\n\nPasswordConfirmedValidatorDirective\n\nAppModule -->\n\nPasswordConfirmedValidatorDirective->AppModule\n\n\n\n\n\nRegistrationComponent\n\nRegistrationComponent\n\nAppModule -->\n\nRegistrationComponent->AppModule\n\n\n\nAppModule -->\n\nRegistrationComponent->AppModule\n\n\n\n\n\nReportComponent\n\nReportComponent\n\nAppModule -->\n\nReportComponent->AppModule\n\n\n\n\n\nReportHistoryComponent\n\nReportHistoryComponent\n\nAppModule -->\n\nReportHistoryComponent->AppModule\n\n\n\n\n\nResetPasswordComponent\n\nResetPasswordComponent\n\nAppModule -->\n\nResetPasswordComponent->AppModule\n\n\n\n\n\nRunTestToast\n\nRunTestToast\n\nAppModule -->\n\nRunTestToast->AppModule\n\n\n\n\n\nScenarioEditorComponent\n\nScenarioEditorComponent\n\nAppModule -->\n\nScenarioEditorComponent->AppModule\n\n\n\n\n\nStoriesBarComponent\n\nStoriesBarComponent\n\nAppModule -->\n\nStoriesBarComponent->AppModule\n\n\n\n\n\nStoryEditorComponent\n\nStoryEditorComponent\n\nAppModule -->\n\nStoryEditorComponent->AppModule\n\n\n\n\n\nTermsComponent\n\nTermsComponent\n\nAppModule -->\n\nTermsComponent->AppModule\n\n\n\n\n\nTestAccountComponent\n\nTestAccountComponent\n\nAppModule -->\n\nTestAccountComponent->AppModule\n\n\n\n\n\nViewModeDirective\n\nViewModeDirective\n\nAppModule -->\n\nViewModeDirective->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nApiService\n\nApiService\n\nAppModule -->\n\nApiService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    20 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    11 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DEFAULT_TIMEOUT   (src/.../timeout-interceptor.interceptor.ts)\n                        \n                        \n                            emptyBackground   (src/.../story-editor.component.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            passwordConfirmedValidator   (src/.../password-confirmed.directive.ts)\n                        \n                        \n                            ROUTES   (src/.../routes.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/Services/timeout-interceptor.interceptor.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_TIMEOUT\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('defaultTimeout')\n                        \n                    \n\n                \n                    \n                        Default request timeout specified in the app module\n\n                    \n                \n\n            \n        \n\n    src/app/story-editor/story-editor.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            emptyBackground\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Background\n\n                        \n                    \n                    \n                        \n                            Default value : {stepDefinitions: {when: []}}\n                        \n                    \n\n                \n                    \n                        Empty background\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n}\n                        \n                    \n\n                \n                    \n                        Environment parameters for production\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n}\n                        \n                    \n\n                \n                    \n                        Environment parameters for dev\n\n                    \n                \n\n            \n        \n\n    src/app/directives/password-confirmed.directive.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            passwordConfirmedValidator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ValidatorFn\n\n                        \n                    \n                    \n                        \n                            Default value : (control: FormGroup): ValidationErrors | null => {\n  const password = control.get('password');\n  const confirmPassword = control.get('confirmPassword');\n  return password && confirmPassword && password.value !== confirmPassword.value ? { 'passwordConfirmed': true } : null;\n}\n                        \n                    \n\n                \n                    \n                        A user's password has to match the user's confirmed password \n\n                    \n                \n\n            \n        \n\n    src/app/routes/routes.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ROUTES\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    /**\n     * Login\n     */\n    {\n        path: 'login',\n        component: LoginComponent\n    },\n\n    /**\n     * Account Management\n     */\n    {\n        path: 'accountManagement',\n        component: AccountManagementComponent\n    },\n\n    /**\n     * Parent Component with Story editor\n     */\n    {\n        path: '',\n        component: ParentComponent,\n        canActivate: [AuthGuard]\n    },\n\n    /**\n     * Reports\n     */\n    {\n        path: 'report/:reportName',\n        component: ReportComponent\n    },\n\n    /**\n     * Testaccount\n     */\n    {\n        path: 'testaccount',\n        component: TestAccountComponent\n    },\n\n    /**\n     * Feedback\n     */\n    {\n        path: 'feedback',\n        component: FeedbackComponent\n    },\n\n    /**\n     * Terms\n     */\n    {\n        path: 'terms',\n        component: TermsComponent\n    },\n\n    /**\n     * Register\n     */\n    {\n        path: 'register',\n        component: RegistrationComponent\n    },\n\n    /**\n     * Reset password\n     */\n    {\n        path: 'resetpassword',\n        component: ResetPasswordComponent\n    },\n\n    /**\n     * Confirm the new password\n     */\n    {\n        path: 'resetpasswordconfirm',\n        component: ConfirmResetPasswordComponent\n    },\n]\n                        \n                    \n\n                \n                    \n                        All routs of the system\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
